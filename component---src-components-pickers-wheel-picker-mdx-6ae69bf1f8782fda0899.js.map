{"version":3,"sources":["webpack:///../src/components/Pickers/WheelPickerCommon.tsx","webpack:///../src/components/Pickers/WheelPicker.web.tsx","webpack:///../src/components/Pickers/WheelPicker.mdx","webpack:///../src/components/Helpers/State.tsx"],"names":["SCROLL_PICKER_HEIGHT","ITEM_HEIGHT","makePaddedOptions","data","value","label","getOptionFromOptions","scrollPosition","index","Math","round","finalIndex","abs","length","useWheelPicker","props","onValueChange","initialValue","scrollContainer","ref","optionsWithClones","React","useState","setValue","getOption","useMemo","timeout","useRef","scrollToValue","useCallback","toValue","animated","findIndex","o","scrollTo","offset","handleChange","newValue","handleScroll","current","clearTimeout","setTimeout","selectedOption","handleEndDrag","useImperativeHandle","selectValue","handlePressUp","currentIndex","handlePressDown","StyledRoot","children","style","viewProps","View","alignItems","flex","width","StyledListWrapper","height","StyledBottomOverlay","theme","useTheme","backgroundColor","borderColor","colors","border","default","borderStyle","borderTopWidth","position","top","StyledUpperOverlay","borderBottomWidth","Arrow","direction","touchableProps","TouchableOpacity","justifyContent","color","size","name","StyledArrowUp","StyledArrowDown","StyledWheelPickerItem","option","paddingHorizontal","scrollSnapAlign","Text","align","WheelPicker","forwardRef","overrides","listRef","behavior","useLayoutEffect","getOverrides","dlv","Root","rootProps","onPress","ArrowUp","arrowUpProps","ArrowDown","arrowDownProps","pointerEvents","UpperOverlay","upperOverlayProps","BottomOverlay","bottomOverlayProps","ListWrapper","listWrapperProps","onScroll","event","currentTarget","scrollTop","overflowY","scrollSnapType","map","Item","itemProps","key","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","__position","__code","__scope","Playground","Props","Box","State","initial","month","day","year","state","setState","flexDirection","console","log","Array","fill","v","i","of","isMDXComponent","newState"],"mappings":"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","file":"component---src-components-pickers-wheel-picker-mdx-6ae69bf1f8782fda0899.js","sourcesContent":["import React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\n\nexport interface WheelPickerRef<TValue extends any> {\n  selectValue: (value: TValue) => void;\n}\n\nexport const ITEM_HEIGHT = 40;\nexport const ITEM_COUNT = 3;\nexport const SCROLL_PICKER_HEIGHT = ITEM_HEIGHT * ITEM_COUNT;\n\nconst DEBOUNCE_TIME = 300;\n\nexport const makePaddedOptions = <TValue extends any>(\n  data: WheelPickerOption<TValue>[],\n) => {\n  return [\n    { value: 'emptyStart', label: '' },\n    ...data,\n    { value: 'emptyEnd', label: '' },\n  ] as WheelPickerOption<TValue>[];\n};\n\nexport const getOptionFromOptions = <TValue extends any>(\n  data: WheelPickerOption<TValue>[],\n) => (scrollPosition: number) => {\n  const index = Math.round(scrollPosition / ITEM_HEIGHT);\n\n  const finalIndex = Math.abs(\n    index >= data.length ? data.length - index : index,\n  );\n\n  return data[finalIndex];\n};\n\nexport interface ScrollContainer {\n  scrollTo: (params: { animated?: boolean; offset: number }) => void;\n}\n\nexport interface UseWheelPickerProps<TValue extends any> {\n  /**\n   * List of data to show.\n   */\n  data: WheelPickerOption<TValue>[];\n\n  /**\n   * Initial value of the picker.\n   *\n   * *This is not a controlled component*; you don't need to update the\n   * value during dragging.\n   */\n  value?: TValue;\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: (value: TValue) => void;\n\n  /**\n   * Scroll container\n   */\n  scrollContainer: ScrollContainer | null;\n\n  /**\n   * Methods of the WheelPicker\n   */\n  ref: React.Ref<WheelPickerRef<TValue>>;\n}\n\nexport const useWheelPicker = <TValue extends any>(\n  props: UseWheelPickerProps<TValue>,\n) => {\n  const {\n    data,\n    onValueChange = () => {\n      return;\n    },\n    value: initialValue = data[0].value,\n    scrollContainer,\n    ref,\n  } = props;\n  const optionsWithClones = makePaddedOptions(data);\n  const [value, setValue] = React.useState<TValue>(initialValue);\n  const getOption = React.useMemo(() => getOptionFromOptions(data), [data]);\n  const timeout = React.useRef<number | null>(null);\n\n  const scrollToValue = React.useCallback(\n    (toValue: TValue, animated = true) => {\n      if (!scrollContainer) return;\n\n      const index = optionsWithClones.findIndex(o => o.value === toValue);\n\n      scrollContainer.scrollTo({\n        animated,\n        offset: index * ITEM_HEIGHT - ITEM_HEIGHT,\n      });\n    },\n    [scrollContainer, optionsWithClones],\n  );\n\n  const handleChange = React.useCallback(\n    (newValue: TValue) => {\n      if (newValue !== value) {\n        onValueChange(newValue);\n        setValue(newValue);\n      }\n    },\n    [onValueChange, value],\n  );\n\n  const handleScroll = React.useCallback(\n    (offset: number) => {\n      if (!scrollContainer) return;\n\n      if (timeout.current) clearTimeout(timeout.current);\n\n      // @ts-ignore\n      timeout.current = setTimeout(() => {\n        const selectedOption = getOption(offset);\n        handleChange(selectedOption.value);\n      }, DEBOUNCE_TIME);\n    },\n    [scrollContainer, getOption, handleChange],\n  );\n\n  const handleEndDrag = React.useCallback(\n    (offset: number) => {\n      if (!scrollContainer) return;\n\n      const scrollPosition = Math.round(offset / ITEM_HEIGHT) * ITEM_HEIGHT;\n\n      scrollContainer.scrollTo({\n        offset: scrollPosition,\n      });\n\n      const selectedOption = getOption(scrollPosition);\n\n      handleChange(selectedOption.value);\n    },\n    [scrollContainer, getOption, handleChange],\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      selectValue: (newValue: TValue) => scrollToValue(newValue),\n    }),\n    [scrollToValue],\n  );\n\n  const handlePressUp = React.useCallback(() => {\n    if (!scrollContainer) return;\n    const currentIndex = data.findIndex(o => o.value === value);\n\n    if (currentIndex <= 0) return;\n    scrollToValue(data[currentIndex - 1].value);\n  }, [data, scrollContainer, scrollToValue, value]);\n\n  const handlePressDown = React.useCallback(() => {\n    if (!scrollContainer) return;\n\n    const currentIndex = data.findIndex(o => o.value === value);\n\n    if (currentIndex >= data.length - 1) return;\n    scrollToValue(data[currentIndex + 1].value);\n  }, [data, scrollContainer, scrollToValue, value]);\n\n  return {\n    handleEndDrag,\n    handlePressDown,\n    handlePressUp,\n    handleScroll,\n    optionsWithClones,\n    scrollToValue,\n  };\n};\n\nexport interface RootProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[{ alignItems: 'center', flex: 1, width: '100%' }, style]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface ListWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledListWrapper = (props: ListWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[{ flex: 1, height: SCROLL_PICKER_HEIGHT, width: '100%' }, style]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface OverlayProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledBottomOverlay = (props: OverlayProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          borderColor: theme.colors.border.default,\n          borderStyle: 'solid',\n          borderTopWidth: 1,\n          height: ITEM_HEIGHT,\n          position: 'absolute',\n          top: ITEM_HEIGHT * 2,\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const StyledUpperOverlay = (props: OverlayProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          borderBottomWidth: 1,\n          borderColor: theme.colors.border.default,\n          borderStyle: 'solid',\n          height: ITEM_HEIGHT,\n          position: 'absolute',\n          top: 0,\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface ArrowProps extends TouchableOpacityProps {}\n\nconst Arrow = (props: ArrowProps & { direction: 'up' | 'down' }) => {\n  const { direction, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          height: 48,\n          justifyContent: 'center',\n          width: 48,\n        },\n      ]}\n      {...touchableProps}\n    >\n      <Icon\n        color=\"link\"\n        size=\"large\"\n        name={direction === 'up' ? 'chevron-up' : 'chevron-down'}\n      />\n    </TouchableOpacity>\n  );\n};\n\nexport const StyledArrowUp = (props: ArrowProps) => (\n  <Arrow {...props} direction=\"up\" />\n);\nexport const StyledArrowDown = (props: ArrowProps) => (\n  <Arrow {...props} direction=\"down\" />\n);\n\nexport interface WheelPickerOption<TValue extends any> {\n  label: string;\n  value: TValue;\n}\n\nexport interface WheelPickerItemProps<TValue extends any> {\n  option: WheelPickerOption<TValue>;\n}\n\nexport const StyledWheelPickerItem = <TValue extends any>(\n  props: WheelPickerItemProps<TValue>,\n) => {\n  const { option } = props;\n  const { label } = option;\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        height: ITEM_HEIGHT,\n        justifyContent: 'center',\n        paddingHorizontal: 4,\n        // @ts-ignore\n        scrollSnapAlign: 'start',\n      }}\n    >\n      <Text align=\"center\">{label}</Text>\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides } from '../../utils/Overrides';\n\nimport { WheelPickerProps } from './WheelPicker';\nimport {\n  WheelPickerRef,\n  SCROLL_PICKER_HEIGHT,\n  StyledArrowDown,\n  StyledArrowUp,\n  StyledBottomOverlay,\n  StyledListWrapper,\n  StyledRoot,\n  StyledUpperOverlay,\n  StyledWheelPickerItem,\n  useWheelPicker,\n} from './WheelPickerCommon';\n\nexport const WheelPicker = React.forwardRef(\n  <TValue extends any>(\n    props: WheelPickerProps<TValue>,\n    ref: React.Ref<WheelPickerRef<TValue>>,\n  ) => {\n    const {\n      value,\n      data = [],\n      onValueChange = () => {\n        return;\n      },\n      overrides = {},\n    } = props;\n    const theme = useTheme();\n\n    const listRef = React.useRef<HTMLDivElement>(null);\n\n    const {\n      optionsWithClones,\n      handlePressDown,\n      handlePressUp,\n      handleScroll,\n      scrollToValue,\n    } = useWheelPicker({\n      onValueChange,\n      data,\n      ref,\n      scrollContainer: {\n        scrollTo: ({ animated, offset }) =>\n          listRef.current &&\n          listRef.current.scrollTo({\n            behavior: animated ? 'smooth' : 'auto',\n            top: offset,\n          }),\n      },\n      value,\n    });\n\n    React.useLayoutEffect(() => {\n      setTimeout(() => {\n        if (listRef.current && value) scrollToValue(value, false);\n      }, 50);\n    }, [scrollToValue, value]);\n\n    const [Root, rootProps] = getOverrides(\n      StyledRoot,\n      props,\n      {},\n      dlv(theme, 'overrides.WheelPicker.Root'),\n      overrides.Root,\n    );\n    const [ArrowUp, arrowUpProps] = getOverrides(\n      StyledArrowUp,\n      props,\n      { onPress: handlePressUp },\n      dlv(theme, 'overrides.WheelPicker.ArrowUp'),\n      overrides.ArrowUp,\n    );\n    const [ArrowDown, arrowDownProps] = getOverrides(\n      StyledArrowDown,\n      props,\n      { onPress: handlePressDown },\n      dlv(theme, 'overrides.WheelPicker.ArrowDown'),\n      overrides.ArrowDown,\n    );\n    const [UpperOverlay, upperOverlayProps] = getOverrides(\n      StyledUpperOverlay,\n      props,\n      { pointerEvents: 'none' },\n      dlv(theme, 'overrides.WheelPicker.UpperOverlay'),\n      overrides.UpperOverlay,\n    );\n    const [BottomOverlay, bottomOverlayProps] = getOverrides(\n      StyledBottomOverlay,\n      props,\n      { pointerEvents: 'none' },\n      dlv(theme, 'overrides.WheelPicker.BottomOverlay'),\n      overrides.BottomOverlay,\n    );\n    const [ListWrapper, listWrapperProps] = getOverrides(\n      StyledListWrapper,\n      props,\n      {},\n      dlv(theme, 'overrides.WheelPicker.ListWrapper'),\n      overrides.ListWrapper,\n    );\n\n    return (\n      <Root {...rootProps}>\n        <ArrowUp onPress={handlePressUp} {...arrowUpProps} />\n        <ListWrapper {...listWrapperProps}>\n          <div\n            ref={listRef}\n            onScroll={event => handleScroll(event.currentTarget.scrollTop)}\n            style={{\n              height: SCROLL_PICKER_HEIGHT,\n              overflowY: 'scroll' as const,\n              scrollSnapType: 'y mandatory',\n              width: '100%',\n            }}\n          >\n            {optionsWithClones.map(option => {\n              const [Item, itemProps] = getOverrides(\n                StyledWheelPickerItem,\n                props,\n                { option },\n                dlv(theme, 'overrides.WheelPicker.Item'),\n                overrides.Item,\n              );\n\n              return <Item key={`${option.value}`} {...itemProps} />;\n            })}\n          </div>\n          <UpperOverlay pointerEvents=\"none\" {...upperOverlayProps} />\n          <BottomOverlay pointerEvents=\"none\" {...bottomOverlayProps} />\n        </ListWrapper>\n        <ArrowDown onPress={handlePressDown} {...arrowDownProps} />\n      </Root>\n    );\n  },\n);\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/WeTrustPlatform/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { WheelPicker } from './WheelPicker';\nimport { Box } from '../Box';\nimport { State } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"wheelpicker-experimental\"\n    }}>{`WheelPicker (Experimental)`}</h1>\n    <Playground __position={0} __code={'<State initial={{ month: \\'March\\', day: \\'15\\', year: \\'2019\\' }}>\\n  {({ state, setState }) => (\\n    <Box flexDirection=\\\"row\\\">\\n      <WheelPicker\\n        value={state.month}\\n        data={[\\n          { label: \\'January\\', value: \\'January\\' },\\n          { label: \\'February\\', value: \\'February\\' },\\n          { label: \\'March\\', value: \\'March\\' },\\n          { label: \\'April\\', value: \\'April\\' },\\n          { label: \\'May\\', value: \\'May\\' },\\n          { label: \\'June\\', value: \\'June\\' },\\n          { label: \\'July\\', value: \\'July\\' },\\n          { label: \\'August\\', value: \\'August\\' },\\n          { label: \\'September\\', value: \\'September\\' },\\n          { label: \\'October\\', value: \\'October\\' },\\n          { label: \\'November\\', value: \\'November\\' },\\n          { label: \\'December\\', value: \\'December\\' },\\n        ]}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ month: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.day}\\n        data={new Array(31)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${i + 1}`, value: `${i + 1}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ day: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.year}\\n        data={new Array(50)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${2000 + i}`, value: `${2000 + i}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ year: value })\\n        }}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      WheelPicker,\n      Box,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        month: 'March',\n        day: '15',\n        year: '2019'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box flexDirection=\"row\" mdxType=\"Box\">\n        <WheelPicker value={state.month} data={[{\n            label: 'January',\n            value: 'January'\n          }, {\n            label: 'February',\n            value: 'February'\n          }, {\n            label: 'March',\n            value: 'March'\n          }, {\n            label: 'April',\n            value: 'April'\n          }, {\n            label: 'May',\n            value: 'May'\n          }, {\n            label: 'June',\n            value: 'June'\n          }, {\n            label: 'July',\n            value: 'July'\n          }, {\n            label: 'August',\n            value: 'August'\n          }, {\n            label: 'September',\n            value: 'September'\n          }, {\n            label: 'October',\n            value: 'October'\n          }, {\n            label: 'November',\n            value: 'November'\n          }, {\n            label: 'December',\n            value: 'December'\n          }]} onValueChange={value => {\n            console.log(value);\n            setState({\n              month: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.day} data={new Array(31).fill(0).map((v, i) => ({\n            label: `${i + 1}`,\n            value: `${i + 1}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              day: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.year} data={new Array(50).fill(0).map((v, i) => ({\n            label: `${2000 + i}`,\n            value: `${2000 + i}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              year: value\n            });\n          }} mdxType=\"WheelPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={WheelPicker} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n"],"sourceRoot":""}