{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","Toggle","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","on","toggle","set","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Switch","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_6__","value","onValueChange","of","isMDXComponent","AnimatedView","animated","_props$value","_props$isDisabled","isDisabled","_props$onValueChange","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","touchableProps","_getOverrides3","StyledBackground","Background","_getOverrides4","backgroundProps","_getOverrides5","StyledCircle","Circle","_getOverrides6","circleProps","react__WEBPACK_IMPORTED_MODULE_4__","onPress","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","activeOpacity","disabled","alignSelf","flexDirection","flexWrap","getCircleSize","isControlSize","controlHeights","getContainerSize","useSpring","config","springDefaultConfig","greyDefault","primaryDefault","circleSize","containerSize","alignItems","greyLight","borderRadius","_useSpring2","circleColor","content","circlePosition","display","justifyContent","transform","translateX","_Icon__WEBPACK_IMPORTED_MODULE_12__","name","text","white","primary","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/13.c0b6bad1.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Switch, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Toggle initial={true}>\\n    {({ on, toggle, set }) => <Switch value={on} onValueChange={set} />}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Switch,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Toggle initial={true} mdxType=\"Toggle\">\n      {({\n            on,\n            toggle,\n            set\n          }) => <Switch value={on} onValueChange={set} mdxType=\"Switch\" />}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Switch} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\nconst AnimatedView = animated(View);\n\ninterface SwitchBaseProps {\n  /**\n   * The size of the switch.\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as switched on.\n   * @default false\n   */\n  value?: boolean;\n\n  /**\n   * When true, the switch is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface SwitchOverrides {\n  Touchable: TouchableProps;\n  Background: BackgroundProps;\n  Circle: CircleProps;\n}\n\nexport interface SwitchProps\n  extends WithOverrides<SwitchBaseProps, SwitchOverrides> {}\n\nexport const Switch = (props: SwitchProps) => {\n  const {\n    size = 'medium',\n    value = false,\n    isDisabled = false,\n    onValueChange = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Switch.Touchable'),\n    overrides.Touchable,\n  );\n  const [Background, backgroundProps] = getOverrides(\n    StyledBackground,\n    props,\n    dlv(theme, 'overrides.Switch.Background'),\n    overrides.Background,\n  );\n  const [Circle, circleProps] = getOverrides(\n    StyledCircle,\n    props,\n    dlv(theme, 'overrides.Switch.Circle'),\n    overrides.Circle,\n  );\n\n  return (\n    <Touchable\n      isDisabled={isDisabled}\n      size={size}\n      onPress={() => onValueChange(!value)}\n      {...touchableProps}\n    >\n      <Background\n        isDisabled={isDisabled}\n        size={size}\n        value={value}\n        {...backgroundProps}\n      >\n        <Circle\n          isDisabled={isDisabled}\n          size={size}\n          value={value}\n          {...circleProps}\n        />\n      </Background>\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { size, isDisabled, children, style, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      activeOpacity={1}\n      disabled={isDisabled}\n      style={[\n        {\n          alignSelf: 'flex-start',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface BackgroundProps extends ViewProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  value: boolean;\n}\n\nconst getCircleSize = (size: ControlSize | number, theme: Theme) => {\n  return isControlSize(size) ? theme.controlHeights[size] - 8 : size;\n};\n\nconst getContainerSize = (size: ControlSize | number, theme: Theme) => {\n  return getCircleSize(size, theme) * 2;\n};\n\nconst StyledBackground = (props: BackgroundProps) => {\n  const { size, isDisabled, children, value, style, ...viewProps } = props;\n  const theme = useTheme();\n  const { backgroundColor } = useSpring({\n    config: springDefaultConfig,\n\n    backgroundColor: value\n      ? isDisabled\n        ? theme.colors.background.greyDefault\n        : theme.colors.background.primaryDefault\n      : theme.colors.background.greyDefault,\n  });\n\n  const circleSize = getCircleSize(size, theme);\n  const containerSize = getContainerSize(size, theme);\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.greyLight,\n          borderRadius: 24,\n          flexDirection: 'row',\n          height: circleSize + 8,\n          padding: 3,\n          width: containerSize,\n        },\n        { backgroundColor },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </AnimatedView>\n  );\n};\n\ninterface CircleProps extends ViewProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  value: boolean;\n}\n\nconst StyledCircle = (props: CircleProps) => {\n  const { size, isDisabled, value, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const circleSize = getCircleSize(size, theme);\n  const containerSize = getContainerSize(size, theme);\n\n  const { circleColor, circlePosition } = useSpring({\n    config: springDefaultConfig,\n\n    circleColor: theme.colors.background.content,\n    circlePosition: value ? containerSize - (circleSize + 6) : 0,\n  });\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderRadius: 24,\n          display: 'flex',\n          height: circleSize,\n          justifyContent: 'center',\n          padding: 0,\n          width: circleSize,\n        },\n        { backgroundColor: circleColor },\n        { transform: [{ translateX: circlePosition }] },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon\n          name=\"check\"\n          size=\"xsmall\"\n          color={\n            isDisabled ? theme.colors.text.white : theme.colors.text.primary\n          }\n        />\n      ) : (\n        <Icon\n          name=\"x\"\n          size=\"xsmall\"\n          color={\n            isDisabled ? theme.colors.text.white : theme.colors.text.default\n          }\n        />\n      )}\n    </AnimatedView>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}