{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["initialMeasurements","height","pageX","pageY","width","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","props","onMeasure","ref","_React$useState","React","useState","_React$useState2","Object","slicedToArray","measurements","setMeasurements","handleMeasure","useCallback","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","objectSpread","handleLayout","e","nativeEvent","handleResize","useEffect","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","children","viewProps","objectWithoutProperties","isRenderProp","useRef","_useMeasure","react_default","a","createElement","View","esm_extends","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Slider","___WEBPACK_IMPORTED_MODULE_5__","size","value","onValueChange","console","log","onSlidingComplete","onSlidingStart","parentName","step","minimumValue","maximumValue","of","isMDXComponent","usePrevious","getBoundedValueBase","isRangeValue","Array","isArray","getLeftValue","getRightValue","_props$value","initialValue","_props$onSlidingStart","_props$onSlidingCompl","_props$onValueChange","_props$minimumValue","_props$maximumValue","_props$step","_props$size","_props$isRange","isRange","_props$overrides","overrides","theme","useTheme","finalInitialValue","setValue","_React$useState3","_React$useState4","isSliding","setIsSliding","_React$useState5","_React$useState6","trackMeasurements","setTrackMeasurements","prevIsSliding","valuePerPixel","pixelPerValue","isRangeSlider","handleLeftSlide","dx","leftValue","roundedLeftValue","Math","round","finalLeftValue","updatedValue","previousValue","setLeftValue","handleRightSlide","rightValue","roundedRightValue","finalRightValue","setRightValue","makeThumbRef","handler","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","_","_ref2","onPanResponderRelease","leftThumbRef","rightThumbRef","left","right","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledUnselectedTrack","UnselectedTrack","_getOverrides4","unselectedTrackProps","_getOverrides5","StyledSelectedTrack","SelectedTrack","_getOverrides6","selectedTrackProps","_getOverrides7","StyledThumb","position","panHandlers","LeftThumb","_getOverrides8","leftThumbProps","_getOverrides9","RightThumb","_getOverrides10","rightThumbProps","style","viewMeasureProps","controlSize","isControlSize","controlHeights","justifyContent","backgroundColor","colors","background","greyDark","borderRadius","_props$left","_props$right","primaryDefault","_props$isSliding","_props$position","cursor","accessible","content","borderColor","border","primary","borderWidth","zIndex","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","medium","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/26.f3f9e3b9.js","sourcesContent":["import React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements, onMeasure, ref],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [handleResize, measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children?: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View ref={ref} onLayout={onLayout} {...viewProps}>\n      {/*\n      //\n      // @ts-ignore */}\n      {isRenderProp ? children(measurements) : children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Slider } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Slider\\n  size=\\\"small\\\"\\n  value={0.3}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider size=\"small\" value={0.3} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} mdxType=\"Slider\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-range\"\n    }}>{`With Range`}</h3>\n    <p>{`By using `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` as an array of `}<inlineCode parentName=\"p\">{`[number, number]`}</inlineCode>{`, it will automatically transform into a range slider. The minimum range is the value of the step`}</p>\n    <Playground __position={1} __code={'<Slider\\n  value={[30, 60]}\\n  step={5}\\n  minimumValue={0}\\n  maximumValue={100}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider value={[30, 60]} step={5} minimumValue={0} maximumValue={100} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} mdxType=\"Slider\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Slider} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>(value);\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { PanResponder, View, ViewProps } from 'react-native';\n\nimport { usePrevious } from '../../hooks';\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { ViewMeasure, ViewMeasureProps } from '../Helpers';\n\ntype RangeValue = [number, number];\ntype SliderValue = number | RangeValue;\ntype Value<TIsRange extends boolean> = TIsRange extends true\n  ? [number, number]\n  : number;\n\ninterface SliderBaseProps<TIsRange extends boolean> {\n  /**\n   * Set whether it should slide a range. You should specify the value to get proper type-checking.\n   * However, if initialValue is set, it will take precedence over this prop\n   * @default false\n   */\n  isRange?: TIsRange;\n\n  /**\n   * Size of the thumb, and thus the whole slider\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue; which default to 0 and 1 respectively.\n   *\n   * *This is not a controlled component*; you don't need to update the\n   * value during dragging.\n   * @default 0\n   */\n  value?: Value<TIsRange>;\n\n  /**\n   * Step value of the slider. The value should be\n   * between 0 and (maximumValue - minimumValue).\n   * @default 0\n   */\n  step?: number;\n\n  /**\n   * Initial minimum value of the slider.\n   * @default 0\n   */\n  minimumValue?: number;\n\n  /**\n   * Initial maximum value of the slider.\n   * @default 1\n   */\n  maximumValue?: number;\n\n  /**\n   * If true the user won't be able to move the slider.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: (value: Value<TIsRange>) => void;\n\n  /**\n   * Callback that is called when the user releases the slider;\n   * regardless if the value has changed. The current value is passed\n   * as an argument to the callback handler.\n   */\n  onSlidingComplete?: (value: Value<TIsRange>) => void;\n\n  /**\n   * Callback called when the user starts changing the value.\n   */\n  onSlidingStart?: (value: Value<TIsRange>) => void;\n\n  testID?: string;\n}\n\nexport interface SliderOverrides {\n  Root: RootProps;\n  UnselectedTrack: UnselectedTrackProps;\n  SelectedTrack: SelectedTrackProps;\n  LeftThumb: ThumbProps;\n  RightThumb: ThumbProps;\n}\n\nexport interface SliderProps<TIsRange extends boolean>\n  extends WithOverrides<SliderBaseProps<TIsRange>, SliderOverrides> {}\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst getBoundedValueBase = ({\n  maximumValue,\n  minimumValue,\n}: {\n  maximumValue: number;\n  minimumValue: number;\n}) => (value: number) =>\n  value > maximumValue\n    ? maximumValue\n    : value < minimumValue\n    ? minimumValue\n    : value;\n\nconst isRangeValue = (value: SliderValue): value is [number, number] =>\n  Array.isArray(value);\n\nconst getLeftValue = (value: SliderValue): number => {\n  if (isRangeValue(value)) return value[0];\n  return value;\n};\n\nconst getRightValue = (value: SliderValue): number => {\n  if (isRangeValue(value)) return value[1];\n  return value;\n};\n\nconst setLeftValue = (\n  previousValue: SliderValue,\n  leftValue: number,\n): SliderValue => {\n  return isRangeValue(previousValue)\n    ? [leftValue, previousValue[1]]\n    : leftValue;\n};\n\nconst setRightValue = (\n  previousValue: SliderValue,\n  rightValue: number,\n): SliderValue => {\n  return isRangeValue(previousValue)\n    ? [previousValue[0], rightValue]\n    : rightValue;\n};\n\nexport const Slider = <TIsRange extends boolean>(\n  props: SliderProps<TIsRange>,\n) => {\n  const {\n    value: initialValue = 0,\n    onSlidingStart = () => undefined,\n    onSlidingComplete = () => undefined,\n    onValueChange = () => undefined,\n    minimumValue = 0,\n    maximumValue = 1,\n    step = 0,\n    size = 'medium' as const,\n    isRange = false,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const finalInitialValue =\n    initialValue || (isRange ? [minimumValue, maximumValue] : minimumValue);\n\n  const [value, setValue] = React.useState(finalInitialValue);\n  const [isSliding, setIsSliding] = React.useState(false);\n  const [trackMeasurements, setTrackMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const prevIsSliding = usePrevious(isSliding);\n  const valuePerPixel = (maximumValue - minimumValue) / trackMeasurements.width;\n  const pixelPerValue = trackMeasurements.width / (maximumValue - minimumValue);\n  const isRangeSlider = isRangeValue(value);\n\n  const handleLeftSlide = React.useCallback(\n    (dx: number) => {\n      const leftValue = getLeftValue(value) + dx * valuePerPixel;\n      const roundedLeftValue = step\n        ? Math.round(leftValue / step) * step\n        : leftValue;\n\n      const finalLeftValue = getBoundedValueBase({\n        maximumValue: isRangeSlider\n          ? getRightValue(value) - step\n          : maximumValue,\n        minimumValue,\n      })(getLeftValue(roundedLeftValue));\n      const updatedValue = setLeftValue(value, finalLeftValue);\n\n      setValue(updatedValue);\n      onValueChange(updatedValue as Value<TIsRange>);\n    },\n    [\n      isRangeSlider,\n      maximumValue,\n      minimumValue,\n      onValueChange,\n      step,\n      value,\n      valuePerPixel,\n    ],\n  );\n\n  const handleRightSlide = React.useCallback(\n    (dx: number) => {\n      const rightValue = getRightValue(value) + dx * valuePerPixel;\n      const roundedRightValue = step\n        ? Math.round(rightValue / step) * step\n        : rightValue;\n\n      const finalRightValue = getBoundedValueBase({\n        maximumValue,\n        minimumValue: getLeftValue(value) + step,\n      })(getRightValue(roundedRightValue));\n\n      const updatedValue = setRightValue(value, finalRightValue);\n\n      setValue(updatedValue);\n      onValueChange(updatedValue as Value<TIsRange>);\n    },\n    [maximumValue, onValueChange, step, value, valuePerPixel],\n  );\n\n  const makeThumbRef = React.useCallback(\n    (handler: (dx: number) => void) =>\n      PanResponder.create({\n        onStartShouldSetPanResponder: () => {\n          onSlidingStart(value as Value<TIsRange>);\n          return true;\n        },\n\n        onPanResponderGrant: () => {\n          setIsSliding(true);\n        },\n\n        onPanResponderMove: (_, { dx }) => handler(dx),\n\n        onPanResponderRelease: () => {\n          setIsSliding(false);\n        },\n      }),\n    [onSlidingStart, value],\n  );\n\n  const leftThumbRef = React.useRef(makeThumbRef(handleLeftSlide));\n  const rightThumbRef = React.useRef(makeThumbRef(handleRightSlide));\n\n  React.useEffect(() => {\n    // We need to update the callback `onPanResponderMove` because it uses memoized `value`\n    leftThumbRef.current = makeThumbRef(handleLeftSlide);\n    rightThumbRef.current = makeThumbRef(handleRightSlide);\n\n    // We need to callback here because we need latest value instead of memoized one\n    if (prevIsSliding && !isSliding) {\n      onSlidingComplete(value as Value<TIsRange>);\n    }\n\n    // We diff valuePerPixel because on loading the component it may be NaN as it is calculating the measurements of the track\n  }, [\n    handleLeftSlide,\n    handleRightSlide,\n    isSliding,\n    makeThumbRef,\n    onSlidingComplete,\n    prevIsSliding,\n    value,\n    valuePerPixel,\n  ]);\n\n  const left = getLeftValue(value) * pixelPerValue;\n  const right = getRightValue(value) * pixelPerValue;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { size, onMeasure: setTrackMeasurements },\n    dlv(theme, 'overrides.Slider.Root'),\n    overrides.Root,\n  );\n  const [UnselectedTrack, unselectedTrackProps] = getOverrides(\n    StyledUnselectedTrack,\n    props,\n    { size },\n    dlv(theme, 'overrides.Slider.UnselectedTrack'),\n    overrides.UnselectedTrack,\n  );\n  const [SelectedTrack, selectedTrackProps] = getOverrides(\n    StyledSelectedTrack,\n    props,\n    { isRangeSlider, left, right, size },\n    dlv(theme, 'overrides.Slider.SelectedTrack'),\n    overrides.SelectedTrack,\n  );\n  const [LeftThumb, leftThumbProps] = getOverrides(\n    StyledThumb,\n    props,\n    {\n      size,\n      position: left,\n      isSliding,\n      value: getLeftValue(value),\n      ...leftThumbRef.current.panHandlers,\n    },\n    dlv(theme, 'overrides.Slider.LeftThumb'),\n    overrides.LeftThumb,\n  );\n  const [RightThumb, rightThumbProps] = getOverrides(\n    StyledThumb,\n    props,\n    {\n      size,\n      position: right,\n      isSliding,\n      value: getRightValue(value),\n      ...rightThumbRef.current.panHandlers,\n    },\n    dlv(theme, 'overrides.Slider.RightThumb'),\n    overrides.RightThumb,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <UnselectedTrack {...unselectedTrackProps} />\n      <SelectedTrack {...selectedTrackProps} />\n      <LeftThumb {...leftThumbProps} />\n      {isRangeSlider && <RightThumb {...rightThumbProps} />}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewMeasureProps {\n  size: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { style, size, ...viewMeasureProps } = props;\n  const theme = useTheme();\n\n  const controlSize = isControlSize(size) ? theme.controlHeights[size] : size;\n\n  return (\n    <ViewMeasure\n      style={[\n        {\n          height: controlSize,\n          justifyContent: 'center',\n        },\n        style,\n      ]}\n      {...viewMeasureProps}\n    />\n  );\n};\n\ninterface UnselectedTrackProps extends ViewProps {\n  size: ControlSize | number;\n}\n\nconst StyledUnselectedTrack = (props: UnselectedTrackProps) => {\n  const { style, size, ...viewProps } = props;\n  const theme = useTheme();\n\n  const controlSize = isControlSize(size) ? theme.controlHeights[size] : size;\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.greyDark,\n          borderRadius: 8,\n          height: controlSize / 4,\n          position: 'absolute',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n\ninterface SelectedTrackProps extends ViewProps {\n  size: ControlSize | number;\n  left: number;\n  right: number;\n  isRangeSlider: boolean;\n}\n\nconst StyledSelectedTrack = (props: SelectedTrackProps) => {\n  const {\n    style,\n    size,\n    left = 0,\n    right = 0,\n    isRangeSlider,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  const controlSize = isControlSize(size) ? theme.controlHeights[size] : size;\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderRadius: 8,\n          height: controlSize / 4,\n          position: 'absolute',\n          width: '100%',\n          ...(isRangeSlider ? { left, width: right - left } : { width: left }),\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n\ninterface ThumbProps extends ViewProps {\n  size: ControlSize | number;\n  isSliding: boolean;\n  position: number;\n  value: number;\n}\n\nconst StyledThumb = (props: ThumbProps) => {\n  const { style, size, isSliding = false, position = 0, ...viewProps } = props;\n  const theme = useTheme();\n\n  const controlSize = isControlSize(size) ? theme.controlHeights[size] : size;\n  const cursor = isSliding ? 'grabbing' : 'grab';\n\n  return (\n    <View\n      accessible\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderRadius: 999,\n          borderWidth: 3,\n          height: controlSize,\n          position: 'absolute',\n          width: controlSize,\n          zIndex: 1,\n          left: position - controlSize / 2,\n          // @ts-ignore\n          cursor,\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}