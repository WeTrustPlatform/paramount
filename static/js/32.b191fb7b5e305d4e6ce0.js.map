{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.tsx"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Paragraph","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_6__","size","of","isMDXComponent","_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","accessibilityLabel","override","marginVertical","textSizes","medium","fontSize"],"mappings":"8nBAYA,IAAMA,EAAW,CACfC,gBAAiB,SAACC,EAAwBC,GAExC,OAAIA,EAAMC,OAAOC,WAAWH,GAEnB,CAAED,gBAAiBE,EAAMC,OAAOC,WAAWH,IAE7C,CACLD,gBAAiBC,IAGrBI,UAAW,SAACA,EAA8BH,GAA/B,OACTA,EAAMI,WAAWD,IACnBE,MAAO,SAACA,EAAuBL,GAAxB,OAAyCA,EAAMM,gBAAgBD,KAG3DE,EAAM,SAACC,GAAoB,IAC9BC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,OAAWC,EADSC,OAAAC,EAAA,EAAAD,CACMJ,EADN,uBAEhCR,EAAQc,cACRC,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQN,EACjB,GAAIM,EAAM,CAER,IAAMC,EAAUrB,EAASoB,GAEzB,GAAIC,EAAS,CAEX,IAAMC,EAAQD,EAAQP,EAAWM,GAAOjB,GAExCe,EAAkBK,KAAKD,QAGvBH,EAAWC,GAAQN,EAAWM,GAKpC,OACEI,EAAA,cAACC,EAAA,EAAD,CAAMZ,OAAQA,EAAQS,MAAO,CAACH,EAAYD,GAA1CQ,SAAA,CAAAC,mFAAAC,WAAA,KACGhB,q0BCzCDiB,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGtB,EACFI,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,gBACD,OAAOjB,OAAAmB,EAAA,EAAAnB,CAACe,EAADf,OAAAoB,EAAA,EAAApB,CAAA,GAAec,EAAiBlB,EAAhC,CAAuCsB,WAAYA,EAAYG,QAAQ,YAAvEV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAGLb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,aADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,mBAGAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gCAA+Bb,OAAAmB,EAAA,EAAAnB,CAAA,cAAYwB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aAA/B,cACAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAb,OAAAmB,EAAA,EAAAnB,CAACyB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,8OAAuPC,QAAS,CACjShC,MAAOiC,KAAOA,KAAKjC,MAAQA,EAC3BkC,eACAC,UACApC,QACAqC,eACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFb,OAAAmB,EAAA,EAAAnB,CAACiC,EAAA,EAAD,CAAKC,cAAc,SAASb,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEb,OAAAmB,EAAA,EAAAnB,CAACmC,EAAA,EAAD,CAAWC,KAAK,QAAQf,QAAQ,YAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,mCACAb,OAAAmB,EAAA,EAAAnB,CAACmC,EAAA,EAAD,CAAWC,KAAK,SAASf,QAAQ,YAAjCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,mCACAb,OAAAmB,EAAA,EAAAnB,CAACmC,EAAA,EAAD,CAAWC,KAAK,QAAQf,QAAQ,YAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,qCAGAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAb,OAAAmB,EAAA,EAAAnB,CAACyB,EAAA,EAAD,CAAOY,GAAIL,IAAWX,QAAQ,QAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oMAIJG,EAAWsB,gBAAiB,8TC7CfN,EAAY,SAACpC,GACxB,IAAMR,EAAQc,cAEd,OACEO,EAAA,cAAC8B,EAAA,EAADvC,OAAAwC,EAAA,EAAAxC,CAAA,CAEEyC,mBAAmB,IACnBC,SAAU,CACRnC,MAAO,CACLoC,eAAgBvD,EAAMwD,UAAUC,OAAOC,YAGvClD,EARN,CAAAe,SAAA,CAAAC,gGAAAC,WAAA","file":"static/js/32.4dc3ec52.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Paragraph } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"paragraph\"\n    }}>{`Paragraph`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"column\\\">\\n  <Paragraph size=\\\"small\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"medium\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"large\\\">Lorem ipsum dolar set amet</Paragraph>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Paragraph\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Paragraph size=\"small\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"medium\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"large\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Paragraph} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Text, TextProps } from './Text';\n\nexport const Paragraph = (props: TextProps) => {\n  const theme = useTheme();\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      override={{\n        style: {\n          marginVertical: theme.textSizes.medium.fontSize,\n        },\n      }}\n      {...props}\n    />\n  );\n};\n"],"sourceRoot":""}