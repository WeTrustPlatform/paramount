{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","marginLeft","marginRight","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","minHeight","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Toggle","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","initialMeasurements","pageX","pageY","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","onMeasure","ref","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","isRenderProp","_useMeasure","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Popover","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","Positioner","_props$isVisible","_props$position","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","isPositionerMeasurementsMeasured","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","StyledRoot","Root","rootProps","Target","targetProps","_props$isPositionerMe","viewMeasureProps","zIndex","restProps","StyledContent","Content","contentProps","Positioner_Positioner","Popover_jsxFileName","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/7.3ce224ae.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children?: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, managing its\\n              open and closed state is in your control\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, managing its\n                open and closed state is in your control\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { ViewStyle } from 'react-native';\n\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { ViewMeasure, ViewMeasureProps } from '../Helpers';\n\nexport const POSITION = {\n  TOP: 'top' as const,\n  TOP_LEFT: 'top-left' as const,\n  TOP_RIGHT: 'top-right' as const,\n\n  BOTTOM: 'bottom' as const,\n  BOTTOM_LEFT: 'bottom-left' as const,\n  BOTTOM_RIGHT: 'bottom-right' as const,\n\n  LEFT: 'left' as const,\n  RIGHT: 'right' as const,\n};\n\nexport type PositionerPosition =\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'right';\n\nexport interface PositionerBaseProps {\n  /**\n   * Position of the content.\n   * @default \"bottom\"\n   */\n  position?: PositionerPosition;\n\n  /**\n   * Wrapped component to open the positioner over.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Content revealed when positioner is opened.\n   */\n  content?: React.ReactNode;\n\n  /**\n   * When true, displays positioner.\n   */\n  isVisible?: boolean;\n}\n\nexport interface PositionerOverrides {\n  Root: RootProps;\n  Target: ViewMeasureProps;\n}\n\nexport interface PositionerProps\n  extends WithOverrides<PositionerBaseProps, PositionerOverrides> {}\n\ninterface GetPositionerPositionParams {\n  position: PositionerPosition;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    children,\n    content,\n    isVisible = false,\n    position = POSITION.BOTTOM,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {\n      positionStyle,\n      isPositionerMeasurementsMeasured,\n      onMeasure: setPositionerMeasurements,\n      isVisible,\n    },\n    dlv(theme, 'overrides.Positioner.Root'),\n    overrides.Root,\n  );\n  const [Target, targetProps] = getOverrides(\n    ViewMeasure,\n    props,\n    { onMeasure: setTargetMeasurements },\n    dlv(theme, 'overrides.Positioner.Target'),\n    overrides.Target,\n  );\n\n  return (\n    <>\n      <Root {...rootProps}>{content}</Root>\n      <Target {...targetProps}>{children}</Target>\n    </>\n  );\n};\n\ninterface RootProps extends ViewMeasureProps {\n  isPositionerMeasurementsMeasured?: boolean;\n  positionStyle?: ViewStyle;\n  isVisible: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    style,\n    positionStyle,\n    isPositionerMeasurementsMeasured = false,\n    isVisible,\n    ...viewMeasureProps\n  } = props;\n\n  if (!isVisible) return null;\n\n  return (\n    <ViewMeasure\n      style={[\n        {\n          opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        positionStyle,\n        style,\n      ]}\n      {...viewMeasureProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport {\n  Positioner,\n  PositionerBaseProps,\n  PositionerOverrides,\n} from '../Positioner';\n\nexport interface PopoverOverrides extends PositionerOverrides {\n  Content: ViewProps;\n}\n\nexport interface PopoverProps\n  extends WithOverrides<PositionerBaseProps, PopoverOverrides> {}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, overrides = {}, ...restProps } = props;\n  const theme = useTheme();\n\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    {},\n    dlv(theme, 'overrides.Popover.Content'),\n    overrides.Content,\n  );\n\n  return (\n    <Positioner\n      content={<Content {...contentProps}>{content}</Content>}\n      // TODO: pass overrides from theme\n      overrides={overrides}\n      {...restProps}\n    />\n  );\n};\n\nconst StyledContent = (props: ViewProps) => {\n  const { style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          padding: 16,\n          ...theme.elevations[2],\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}