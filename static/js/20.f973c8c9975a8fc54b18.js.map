{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/IconTextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/IconTextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/ClearableTextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","getIconTextInputStyles","hasLeftIcon","hasRightIcon","containerStyle","position","inputStyle","objectSpread","paddingLeft","paddingRight","leftContainerStyle","alignItems","display","height","justifyContent","left","paddingHorizontal","rightContainerStyle","right","getTextInputStyles","isDisabled","isInvalid","numberOfLines","controlHeight","controlHeights","focusedStyle","content","borderColor","border","controlBorderRadius","borderWidth","controlPaddings","width","textSizes","greyDark","danger","paddingVertical","placeholderTextColor","muted","TextInputBase","_props$isDisabled","_props$isInvalid","_props$size","getStyles","innerRef","textInputProps","objectWithoutProperties","_mergeStyles","mergeStyles","react","TextInput","esm_extends","ref","editable","_jsxFileName","TextInput_TextInputBase","IconTextInputBase","_props$leftIcon","leftIcon","_props$rightIcon","rightIcon","components","View","IconTextInput_jsxFileName","TextInput_TextInput","IconTextInput","IconTextInput_IconTextInputBase","ClearableTextInputBase","onClear","onChangeText","value","isClearable","textInputWithIconProps","TouchableOpacity","onPress","ClearableTextInput_jsxFileName","Icon_web","ClearableTextInput","ClearableTextInput_ClearableTextInputBase","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","___WEBPACK_IMPORTED_MODULE_6__","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","keyboardType","onSubmitEditing","e","console","log","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","undefined","isMDXComponent","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","flexDirection","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","overlay","greyLight","greyDefault","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","paragraphSizes","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/20.cf79f7d6.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TextInputStylesProps } from './TextInput.styles';\n\nexport interface IconTextInputStyles {\n  inputStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport interface GetIconTextInputStylesProps\n  extends Partial<TextInputStylesProps> {\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n}\n\nexport type GetIconTextInputStyles = (\n  props: GetIconTextInputStylesProps,\n  theme: Theme,\n) => IconTextInputStyles;\n\nexport const getIconTextInputStyles: GetIconTextInputStyles = (\n  props: GetIconTextInputStylesProps,\n  theme,\n) => {\n  const { hasLeftIcon, hasRightIcon } = props;\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    inputStyle: {\n      ...(hasLeftIcon && { paddingLeft: 48 }),\n      ...(hasRightIcon && { paddingRight: 48 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n    },\n  };\n};\n","import { TextStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  focusedStyle: TextStyle;\n  placeholderTextColor: string;\n}\n\nexport interface TextInputStylesProps {\n  size: ControlSize;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  numberOfLines?: number;\n}\n\nexport type GetTextInputStyles = (\n  textInputStylesProps: TextInputStylesProps,\n  theme: Theme,\n) => TextInputStyles;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  { size, isDisabled, isInvalid, numberOfLines },\n  theme,\n) => {\n  const controlHeight = theme.controlHeights[size];\n\n  return {\n    focusedStyle: {},\n    inputStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderRadius: theme.controlBorderRadius[size],\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size],\n      paddingRight: theme.controlPaddings[size],\n      width: '100%',\n      ...theme.textSizes[size],\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n      ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n      ...(numberOfLines\n        ? {\n            height: numberOfLines * controlHeight,\n            paddingVertical: 16,\n          }\n        : {}),\n    },\n    placeholderTextColor: theme.colors.text.muted,\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetTextInputStyles,\n  getTextInputStyles,\n  TextInputStyles,\n} from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  children?: React.ReactNode;\n  name?: string;\n  innerRef?: React.Ref<RNTextInput>;\n  size?: ControlSize;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles>\n  >;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    isDisabled = false,\n    isInvalid = false,\n    size = 'medium',\n    getStyles,\n    name,\n    innerRef,\n    numberOfLines,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const { inputStyle, placeholderTextColor } = mergeStyles(\n    getTextInputStyles,\n    getStyles,\n  )(\n    {\n      isDisabled,\n      isInvalid,\n      numberOfLines,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    // @ts-ignore: name prop does not exist, but on the web it is useful for browser autofill\n    <RNTextInput\n      ref={innerRef}\n      style={inputStyle}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor}\n      name={name}\n      numberOfLines={numberOfLines}\n      {...textInputProps}\n    />\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import * as React from 'react';\nimport { TextInput as RNTextInput, View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetIconTextInputStyles,\n  getIconTextInputStyles,\n  IconTextInputStyles,\n} from './IconTextInput.styles';\nimport { TextInput, TextInputProps } from './TextInput';\n\nexport interface IconTextInputProps extends Omit<TextInputProps, 'getStyles'> {\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  getStyles?: ReplaceReturnType<\n    GetIconTextInputStyles,\n    DeepPartial<IconTextInputStyles>\n  >;\n}\n\nconst IconTextInputBase = (props: IconTextInputProps) => {\n  const {\n    leftIcon = null,\n    rightIcon = null,\n    getStyles,\n    innerRef,\n    ...textInputProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n    inputStyle,\n  } = mergeStyles(\n    getIconTextInputStyles,\n    getStyles,\n    theme.components.getTextInputStyles,\n  )({ hasLeftIcon: !!leftIcon, hasRightIcon: !!rightIcon }, theme);\n\n  return (\n    <View style={containerStyle}>\n      <View style={leftContainerStyle}>{leftIcon}</View>\n      <TextInput\n        ref={innerRef}\n        getStyles={() => ({\n          inputStyle,\n        })}\n        {...textInputProps}\n      />\n      <View style={rightContainerStyle}>{rightIcon}</View>\n    </View>\n  );\n};\n\nexport const IconTextInput = React.forwardRef<RNTextInput, IconTextInputProps>(\n  (props, ref) => <IconTextInputBase {...props} innerRef={ref} />,\n);\n","import * as React from 'react';\nimport { TextInput as RNTextInput, TouchableOpacity } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Icon } from '../Icon';\nimport { IconTextInput, IconTextInputProps } from './IconTextInput';\n\nexport interface ClearableTextInputProps extends IconTextInputProps {\n  onClear?: () => void;\n  isClearable?: boolean;\n}\n\nconst ClearableTextInputBase = (props: ClearableTextInputProps) => {\n  const {\n    onClear,\n    innerRef,\n    onChangeText,\n    value,\n    isClearable,\n    rightIcon,\n    ...textInputWithIconProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <IconTextInput\n      ref={innerRef}\n      onChangeText={onChangeText}\n      value={value}\n      rightIcon={\n        value && isClearable ? (\n          <TouchableOpacity\n            onPress={() => {\n              if (onChangeText) onChangeText('');\n              if (onClear) onClear();\n            }}\n          >\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </TouchableOpacity>\n        ) : (\n          rightIcon || null\n        )\n      }\n      {...textInputWithIconProps}\n    />\n  );\n};\n\nexport const ClearableTextInput = React.forwardRef<\n  RNTextInput,\n  ClearableTextInputProps\n>((props, ref) => <ClearableTextInputBase {...props} innerRef={ref} />);\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes of React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode>{` component (i.e. you can pass its props). `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react-native/docs/textinput\"\n      }}>{`See more details`}</a></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      name=\\\"field\\\"\\n      value={state.value}\\n      placeholder=\\\"Add your own placeholder\\\"\\n      size=\\\"large\\\"\\n      isDisabled={false}\\n      isInvalid={false}\\n      keyboardType=\\\"email-address\\\"\\n      onChangeText={text => setState({ value: text })}\\n      onSubmitEditing={e => console.log(\\'Submit on enter\\')}\\n      leftIcon={\\n        <Box>\\n          <Icon name=\\\"menu\\\" size={24} />\\n        </Box>\\n      }\\n      rightIcon={undefined}\\n      isClearable={true} // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n      getStyles={(props, theme) => ({\\n        inputStyle: {},\\n        placeholderTextColor: theme.colors.text.muted,\\n      })}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput name=\"field\" value={state.value} placeholder=\"Add your own placeholder\" size=\"large\" isDisabled={false} isInvalid={false} keyboardType=\"email-address\" onChangeText={text => setState({\n          value: text\n        })} onSubmitEditing={e => console.log('Submit on enter')} leftIcon={<Box mdxType=\"Box\">\n            <Icon name=\"menu\" size={24} mdxType=\"Icon\" />\n          </Box>} rightIcon={undefined} isClearable={true} // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        getStyles={(props, theme) => ({\n          inputStyle: {},\n          placeholderTextColor: theme.colors.text.muted\n        })} mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}