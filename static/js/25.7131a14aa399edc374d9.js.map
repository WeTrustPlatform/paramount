{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","NativePicker","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_5__","onValueChange","itemValue","itemIndex","size","options","label","of","isMDXComponent","_props$size","_props$options","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledPicker","selectedValue","dlv","Picker","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","pickerProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","map","option","react_native_web_dist_exports_Picker__WEBPACK_IMPORTED_MODULE_6__","Item","key","concat","itemStyle","style","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","controlSizeStyles","isControlSize","small","borderRadius","controlBorderRadius","height","controlHeights","medium","large","textSizeStyles","textSizes","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","backgroundColor","borderColor","colors","border","borderWidth","width","color","text","__webpack_require__","d","__webpack_exports__"],"mappings":"s2BAYO,IAAMA,EAAQ,SAACC,GAAsB,IAClCC,EAA8BD,EAA9BC,SADkCC,EACJF,EAApBG,eADwB,IAAAD,KAAAE,EAEhBC,IAAMC,SAASH,GAFCI,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEnCM,EAFmCH,EAAA,GAE5BI,EAF4BJ,EAAA,GAQ1C,OAAON,EAAS,CAAES,QAAOC,SAJLN,IAAMO,YAAY,SAAAC,GACpCF,EAASE,IACR,s1BCNCC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGlB,EACFQ,OAAAW,EAAA,EAAAX,CAAAS,EAAA,gBACD,OAAOT,OAAAY,EAAA,EAAAZ,CAACO,EAADP,OAAAa,EAAA,EAAAb,CAAA,GAAeM,EAAiBd,EAAhC,CAAuCkB,WAAYA,EAAYI,QAAQ,YAAvEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGLlB,OAAAY,EAAA,EAAAZ,CAAA,KAAAA,OAAAa,EAAA,EAAAb,CAAQ,CACNmB,GAAM,gBADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,sBAGAlB,OAAAY,EAAA,EAAAZ,CAAA,KAAAA,OAAAa,EAAA,EAAAb,CAAQ,CACNmB,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAlB,OAAAY,EAAA,EAAAZ,CAAA,KAAAe,SAAA,CAAAC,SAAAC,EAAAC,WAAA,gCAA+BlB,OAAAY,EAAA,EAAAZ,CAAA,cAAYoB,WAAW,IAAvBL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,gBAC/BlB,OAAAY,EAAA,EAAAZ,CAACqB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,qkCAAopCC,QAAS,CAC9rChC,MAAOiC,KAAOA,KAAKjC,MAAQA,EAC3BkC,eACAC,UACAC,iBACArC,WACCuB,QAAQ,aANXC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAOFlB,OAAAY,EAAA,EAAAZ,CAAC6B,EAAA,EAAD,CAAOlC,QAAS,CACVmC,MAAO,MACNhB,QAAQ,QAFfC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAGG,SAAAa,GAAA,IACK7B,EADL6B,EACK7B,MACAC,EAFL4B,EAEK5B,SAFL,OAGSH,OAAAY,EAAA,EAAAZ,CAACgC,EAAA,EAAD,CAAcF,MAAO5B,EAAM4B,MAAOG,cAAe,SAACC,EAAWC,GAAZ,OAA0BhC,EAAS,CACxF2B,MAAOI,KACLE,KAAK,QAAQC,QAAS,CAAC,CACzBC,MAAO,IACPR,MAAO,KACN,CACDQ,MAAO,KACPR,MAAO,MACN,CACDQ,MAAO,MACPR,MAAO,OACN,CACDQ,MAAO,MACPR,MAAO,OACN,CACDQ,MAAO,SACPR,MAAO,UACN,CACDQ,MAAO,MACPR,MAAO,OACN,CACDQ,MAAO,SACPR,MAAO,UACN,CACDQ,MAAO,KACPR,MAAO,MACN,CACDQ,MAAO,UACPR,MAAO,WACN,CACDQ,MAAO,OACPR,MAAO,QACN,CACDQ,MAAO,OACPR,MAAO,QACN,CACDQ,MAAO,aACPR,MAAO,MACN,CACDQ,MAAO,MACPR,MAAO,OACN,CACDQ,MAAO,SACPR,MAAO,UACN,CACDQ,MAAO,IACPR,MAAO,KACN,CACDQ,MAAO,OACPR,MAAO,QACN,CACDQ,MAAO,OACPR,MAAO,QACN,CACDQ,MAAO,SACPR,MAAO,SACN,CACDQ,MAAO,aACPR,MAAO,eACLhB,QAAQ,eA3DNC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,SA8DVlB,OAAAY,EAAA,EAAAZ,CAAA,KAAAA,OAAAa,EAAA,EAAAb,CAAQ,CACNmB,GAAM,sBADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6BAGAlB,OAAAY,EAAA,EAAAZ,CAAA,KAAAe,SAAA,CAAAC,SAAAC,EAAAC,WAAA,wBAAsBlB,OAAAY,EAAA,EAAAZ,CAAA,cAAYoB,WAAW,IAAvBL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,iBACtBlB,OAAAY,EAAA,EAAAZ,CAACqB,EAAA,EAAD,CAAOkB,GAAIX,IAAcd,QAAQ,QAAjCC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,qMAIJV,EAAWgC,gBAAiB,szDCjErB,IAAMZ,EAAe,SAC1BpC,GACG,IAAAiD,EAQCjD,EANF4C,YAFC,IAAAK,EAEM,SAFNA,EAAAC,EAQClD,EALF6C,eAHC,IAAAK,EAGS,GAHTA,EAIDZ,EAIEtC,EAJFsC,MACAa,EAGEnD,EAHFmD,OACAV,EAEEzC,EAFFyC,cANCW,EAQCpD,EADFqD,iBAPC,IAAAD,EAOW,GAPXA,EASGE,EAAQC,cATXC,EAW2BC,YAC5BC,EACA1D,EACA,CACE2D,cAAerB,EACfa,SACAP,OACAH,iBAEFmB,IAAIN,EAAO,iCACXD,EAAUQ,QArBTC,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAgD,EAAA,GAWIK,EAXJC,EAAA,GAWYE,EAXZF,EAAA,GAwBH,OACEG,EAAA,cAACJ,EAADrD,OAAA0D,EAAA,EAAA1D,CAAA,GAAYwD,EAAZ,CAAAzC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACGmB,EAAQsB,IAAI,SAAAC,GAAM,OACjBH,EAAA,cAACI,EAAA,EAASC,KAAV,CACEC,IAAG,GAAAC,OAAKJ,EAAO9B,OACfA,MAAO8B,EAAO9B,MACdQ,MAAOsB,EAAOtB,MAHhBvB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,iOAeR,IAAMgC,EAAe,SAAC1D,GAAuB,IACnC4C,EAAqD5C,EAArD4C,KAAM3C,EAA+CD,EAA/CC,SAAUwE,EAAqCzE,EAArCyE,UAAWC,EAA0B1E,EAA1B0E,MAAUV,EADFxD,OAAAmE,EAAA,EAAAnE,CACkBR,EADlB,yCAErCsD,EAAQC,cAERqB,EAAoBC,YAAcjC,GACpC,CACEkC,MAAO,CACLC,aAAczB,EAAM0B,oBAAoBF,MACxCG,OAAQ3B,EAAM4B,eAAeJ,OAG/BK,OAAQ,CACNJ,aAAczB,EAAM0B,oBAAoBG,OACxCF,OAAQ3B,EAAM4B,eAAeC,QAG/BC,MAAO,CACLL,aAAczB,EAAM0B,oBAAoBI,MACxCH,OAAQ3B,EAAM4B,eAAeE,QAE/BxC,GACF,CACEmC,aAAczB,EAAM0B,oBAAoBG,OACxCF,OAAQrC,GAGRyC,EAAiBR,YAAcjC,GACjCU,EAAMgC,UAAU1C,GAChBU,EAAMgC,UAAUH,OAEpB,OACElB,EAAA,cAACI,EAAA,EAAD7D,OAAA0D,EAAA,EAAA1D,CAAA,CACEiE,UAAW,CAACjE,OAAA+E,EAAA,EAAA/E,CAAA,GAEL6E,EACAT,GAELH,GAEFC,MAAO,CAAClE,OAAA+E,EAAA,EAAA/E,CAAA,CAEJgF,gBAAiB,cACjBC,YAAanC,EAAMoC,OAAOC,OAAb,QACbC,YAAa,EACbC,MAAO,OAEPC,MAAOxC,EAAMoC,OAAOK,KAAb,SACJnB,GAELF,IAEEV,EApBN,CAAAzC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAsBGzB,+DC/IP+F,EAAAC,EAAAC,EAAA,sBAAArB,IAAO,IAAMA,EAAgB,SAC3BjC,GAEA,MAAoB,kBAATA","file":"static/js/25.63052d2b.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { NativePicker, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"nativepicker\"\n    }}>{`NativePicker`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Picker`}</inlineCode></p>\n    <Playground __position={0} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <NativePicker\\n      value={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      size=\\\"large\\\"\\n      options={[\\n        { label: \\'C\\', value: \\'c\\' },\\n        { label: \\'C#\\', value: \\'c#\\' },\\n        { label: \\'C++\\', value: \\'c++\\' },\\n        { label: \\'CSS\\', value: \\'css\\' },\\n        { label: \\'Elixir\\', value: \\'elixir\\' },\\n        { label: \\'Elm\\', value: \\'elm\\' },\\n        { label: \\'Erlang\\', value: \\'erlang\\' },\\n        { label: \\'Go\\', value: \\'go\\' },\\n        { label: \\'Haskell\\', value: \\'haskell\\' },\\n        { label: \\'HTML\\', value: \\'html\\' },\\n        { label: \\'Java\\', value: \\'java\\' },\\n        { label: \\'JavaScript\\', value: \\'js\\' },\\n        { label: \\'Lua\\', value: \\'lua\\' },\\n        { label: \\'Python\\', value: \\'python\\' },\\n        { label: \\'R\\', value: \\'r\\' },\\n        { label: \\'Ruby\\', value: \\'ruby\\' },\\n        { label: \\'Rust\\', value: \\'rust\\' },\\n        { label: \\'Switft\\', value: \\'swift\\' },\\n        { label: \\'Typescript\\', value: \\'typescript\\' },\\n      ]}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      NativePicker,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'js'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <NativePicker value={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} size=\"large\" options={[{\n          label: 'C',\n          value: 'c'\n        }, {\n          label: 'C#',\n          value: 'c#'\n        }, {\n          label: 'C++',\n          value: 'c++'\n        }, {\n          label: 'CSS',\n          value: 'css'\n        }, {\n          label: 'Elixir',\n          value: 'elixir'\n        }, {\n          label: 'Elm',\n          value: 'elm'\n        }, {\n          label: 'Erlang',\n          value: 'erlang'\n        }, {\n          label: 'Go',\n          value: 'go'\n        }, {\n          label: 'Haskell',\n          value: 'haskell'\n        }, {\n          label: 'HTML',\n          value: 'html'\n        }, {\n          label: 'Java',\n          value: 'java'\n        }, {\n          label: 'JavaScript',\n          value: 'js'\n        }, {\n          label: 'Lua',\n          value: 'lua'\n        }, {\n          label: 'Python',\n          value: 'python'\n        }, {\n          label: 'R',\n          value: 'r'\n        }, {\n          label: 'Ruby',\n          value: 'ruby'\n        }, {\n          label: 'Rust',\n          value: 'rust'\n        }, {\n          label: 'Switft',\n          value: 'swift'\n        }, {\n          label: 'Typescript',\n          value: 'typescript'\n        }]} mdxType=\"NativePicker\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"nativepicker-props\"\n    }}>{`NativePicker Props`}</h2>\n    <p>{`Extends native `}<inlineCode parentName=\"p\">{`Picker`}</inlineCode></p>\n    <Props of={NativePicker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Picker as RNPicker, PickerProps as RNPickerProps } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\n\nexport interface NativePickerOption<TValue extends string | number> {\n  label: string;\n  value: TValue;\n}\n\ninterface NativePickerBaseProps<TValue extends string | number> {\n  /**\n   * The size of the picker.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * List of NativePickerItem items.\n   */\n  options?: NativePickerOption<TValue>[];\n\n  /**\n   * Callback invoked when a item is picked\n   */\n  onValueChange?: (itemValue: TValue, itemPosition: number) => void;\n\n  /**\n   * Value of the picker\n   */\n  value?: TValue | null;\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: string;\n}\n\nexport interface NativePickerOverrides {\n  Picker: PickerProps;\n}\n\nexport interface NativePickerProps<TValue extends string | number>\n  extends WithOverrides<NativePickerBaseProps<TValue>, NativePickerOverrides> {}\n\nexport const NativePicker = <TValue extends string | number>(\n  props: NativePickerProps<TValue>,\n) => {\n  const {\n    size = 'medium',\n    options = [],\n    value,\n    testID,\n    onValueChange,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Picker, pickerProps] = getOverrides(\n    StyledPicker,\n    props,\n    {\n      selectedValue: value,\n      testID,\n      size,\n      onValueChange,\n    },\n    dlv(theme, 'overrides.NativePicker.Picker'),\n    overrides.Picker,\n  );\n\n  return (\n    <Picker {...pickerProps}>\n      {options.map(option => (\n        <RNPicker.Item\n          key={`${option.value}`}\n          value={option.value}\n          label={option.label}\n        />\n      ))}\n    </Picker>\n  );\n};\n\ninterface PickerProps extends RNPickerProps {\n  size: ControlSize | number;\n  children?: React.ReactNode;\n}\n\nconst StyledPicker = (props: PickerProps) => {\n  const { size, children, itemStyle, style, ...pickerProps } = props;\n  const theme = useTheme();\n\n  const controlSizeStyles = isControlSize(size)\n    ? {\n        small: {\n          borderRadius: theme.controlBorderRadius.small,\n          height: theme.controlHeights.small,\n        },\n\n        medium: {\n          borderRadius: theme.controlBorderRadius.medium,\n          height: theme.controlHeights.medium,\n        },\n\n        large: {\n          borderRadius: theme.controlBorderRadius.large,\n          height: theme.controlHeights.large,\n        },\n      }[size]\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n      };\n\n  const textSizeStyles = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return (\n    <RNPicker\n      itemStyle={[\n        {\n          ...textSizeStyles,\n          ...controlSizeStyles,\n        },\n        itemStyle,\n      ]}\n      style={[\n        {\n          backgroundColor: 'transparent',\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          width: '100%',\n          // @ts-ignore\n          color: theme.colors.text.default,\n          ...controlSizeStyles,\n        },\n        style,\n      ]}\n      {...pickerProps}\n    >\n      {children}\n    </RNPicker>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}