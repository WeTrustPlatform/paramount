{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ModalPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ModalPicker.tsx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_reactPowerplug","_ModalPicker","_PickerItem","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","State","ModalPicker","PickerItem","initial","value","_ref2","state","setState","useHistory","header","size","selectedValue","onValueChange","itemValue","itemIndex","getStyles","theme","pickerStyle","itemStyle","label","isMDXComponent","React","_interopRequireWildcard","_Modal","_SelectList","_PickerButton","_props$useHistory","_props$selectedValue","children","_props$size","_React$useState","useState","_React$useState2","_slicedToArray2","isModalOpen","setIsModalOpen","data","Children","toArray","map","child","selectedIndex","findIndex","d","selectedData","selectedLabel","createElement","Fragment","PickerButton","onPress","title","CloseableModal","visible","onRequestClose","onClose","SelectList","initialScrollIndex","initialNumToRender","index"],"mappings":"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","file":"static/js/36.0ad237d6.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { ModalPicker } from './ModalPicker';\nimport { PickerItem } from './PickerItem';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modalpicker\"\n    }}>{`ModalPicker`}</h1>\n    <Playground __position={0} __code={'<State initial={{ value: \\'css\\' }}>\\n  {({ state, setState }) => (\\n    <ModalPicker\\n      useHistory={false}\\n      header={null}\\n      size=\\\"large\\\"\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <PickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <PickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <PickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <PickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <PickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <PickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <PickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <PickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <PickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <PickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <PickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <PickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <PickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <PickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <PickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <PickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <PickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <PickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <PickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </ModalPicker>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      ModalPicker,\n      PickerItem\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'css'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <ModalPicker useHistory={false} header={null} size=\"large\" selectedValue={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {}\n        })} mdxType=\"ModalPicker\">\n        <PickerItem label=\"C\" value=\"c\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"C#\" value=\"c#\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"C++\" value=\"c++\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"CSS\" value=\"css\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Elixir\" value=\"elixir\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Elm\" value=\"elm\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Erlang\" value=\"erlang\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Go\" value=\"go\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Haskell\" value=\"haskell\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"HTML\" value=\"html\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Java\" value=\"java\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"JavaScript\" value=\"js\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Lua\" value=\"lua\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Python\" value=\"python\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"R\" value=\"r\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Ruby\" value=\"ruby\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Rust\" value=\"rust\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Switft\" value=\"swift\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Typescript\" value=\"typescript\" mdxType=\"PickerItem\" />\n      </ModalPicker>}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { PickerProps as RNPickerProps } from 'react-native';\n\nimport { CloseableModal } from '../Modal';\nimport { SelectList, SelectListItemBaseProps } from '../SelectList';\nimport { GetPickerButtonStylesProp, PickerButton } from './PickerButton';\nimport { PickerButtonSize } from './PickerButton.styles';\n\nexport interface ModalPickerProps extends RNPickerProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactNode;\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n}\n\nconst SELECTED_INDEX_OFFSET = 3;\n\n// REVIEW: When the window height is larger than the select list, and initial scroll index is at the bottom half, there is unscrollable blank space\n// it is a rare use case that can be solved by using ref to `scrollToIndex`\nexport const ModalPicker = (props: ModalPickerProps) => {\n  const {\n    header,\n    getStyles,\n    useHistory = false,\n    selectedValue = null,\n    onValueChange,\n    children,\n    size = 'medium',\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n  const selectedIndex = data.findIndex(d => d.value === selectedValue);\n  const selectedData = selectedIndex >= 0 ? data[selectedIndex] : null;\n  const selectedLabel = selectedData ? selectedData.label : null;\n\n  return (\n    <>\n      <PickerButton\n        onPress={() => setIsModalOpen(true)}\n        getStyles={getStyles}\n        size={size}\n        title={selectedLabel}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        {header}\n        <SelectList\n          initialScrollIndex={selectedIndex - SELECTED_INDEX_OFFSET}\n          initialNumToRender={30}\n          selectedValue={selectedValue}\n          onValueChange={(value, index) => {\n            if (onValueChange) onValueChange(value, index);\n            setIsModalOpen(false);\n          }}\n        >\n          {children}\n        </SelectList>\n      </CloseableModal>\n    </>\n  );\n};\n"],"sourceRoot":""}