{"version":3,"sources":["webpack:///./src/components/Alert/Alert.styles.ts","webpack:///./src/components/Alert/Alert.tsx","webpack:///./src/components/Alert/index.ts","webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Toast/Toast.mdx","webpack:///./src/components/Toast/Toast.styles.ts","webpack:///./src/components/Toast/Toast.tsx","webpack:///./src/components/Toast/ToastContext.ts","webpack:///./src/components/Toast/ToastProvider.tsx","webpack:///./src/components/Toast/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["alertVariables","theme","body","flex","container","_objectSpread2","default","backgroundColor","colors","background","plain","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","title","danger","borderLeftColor","border","info","success","warning","_ref","intent","_alertVariables","intentStyle","_objectWithoutProperties2","bodyStyle","containerStyle","textStyle","titleStyle","displayName","__docgenInfo","description","props","defaultValue","name","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","controlPaddings","controlHeights","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Layout","_Typography","_Alert","Alert","withTheme","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","_mergeStyles","mergeStyles","getAlertStyles","createElement","View","style","Spacing","paddingRight","justifyContent","Icon","size","color","text","resolveIcon","Text","isBold","TouchableOpacity","onPress","paddingLeft","_Button","_interopRequireDefault","_extends2","appearance","isInline","iconBefore","getButtonVariables","appearances","minimal","focusColor","tint2","primary","secondary","tint1","borderColor","loadingBackgroundColor","overlay","focus","focusLight","outline","borderWidth","disabled","muted","sizes","small","fontSize","height","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","alignSelf","flexWrap","alignItems","fontWeight","textAlign","_Loading","Button","_props$appearance","_props$color","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","LoadingDots","directionToFlexDirectionMap","horizontal","vertical","children","_props$direction","direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","cloneElement","borderBottomWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Box","_ButtonGroup","_BackButton","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","o","key","marginLeft","marginRight","opacity","width","Component","defaultProps","value","_LoadingDots","_react","_tag","_docz","_","_Toast","MDXContent","layout","components","MDXTag","id","parentName","Playground","__position","__code","__scope","ToastContext","ToastProvider","Toast","Consumer","notify","offset","_ref2","Fragment","PropsTable","of","getToastVariables","base","paddingBottom","paddingTop","backgroundDanger","textDanger","backgroundInfo","textInfo","backgroundSuccess","textSuccess","backgroundWarning","textWarning","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","DEFAULT_VALUE","ToastBase","closeTimer","state","onRemove","_this$props$duration","_this$props$offset","sequence","spring","bounciness","speed","delay","_this$props2","toastSettings","transform","translateY","defaultToastInstance","defaultToastContext","createContext","_Toast2","_ToastContext","hasCustomId","removeToast","setState","previousState","toasts","filter","toast","toastInstance","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","String","startsWith","err","return","concat","_toConsumableArray2","slice","uniqueId","idCounter","_this2","currentToast","_slicedToArray2","getToastStyles","Provider","Object","keys","forEach","prototype","hasOwnProperty","_exportNames","defineProperty","exports","enumerable","get","_ToastProvider","Feather","IconTag","result","replace","matches","toUpperCase","charAt","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/11.47d6fe57.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.plain,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    alertVariables.displayName = \"alertVariables\";\n    // @ts-ignore\n    alertVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"alertVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.styles.ts#alertVariables\"] = { docgenInfo: alertVariables.__docgenInfo, name: \"alertVariables\", path: \"src/components/Alert/Alert.styles.ts#alertVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  theme: Theme;\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent, theme: Theme) => {\n  switch (intent) {\n    case 'success':\n      return (\n        <Icon name=\"check-circle\" size={24} color={theme.colors.text.success} />\n      );\n    case 'warning':\n      return (\n        <Icon\n          name=\"alert-triangle\"\n          size={24}\n          color={theme.colors.text.warning}\n        />\n      );\n    case 'danger':\n      return (\n        <Icon name=\"alert-circle\" size={24} color={theme.colors.text.danger} />\n      );\n    default:\n      return <Icon name=\"info\" size={24} color={theme.colors.text.info} />;\n  }\n};\n\nconst AlertBase = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    theme,\n    testID,\n  } = props;\n\n  const { containerStyle, bodyStyle } = mergeStyles(getAlertStyles, getStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Spacing paddingRight={2} justifyContent=\"center\">\n          {resolveIcon(intent, theme)}\n        </Spacing>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text isBold>{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Spacing paddingLeft={2}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Spacing>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport const Alert = withTheme(AlertBase);\nexport default Alert;\n","export { default as Alert, AlertProps } from './Alert';\n","import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { withTheme } from '../../theme';\nimport Button, { ButtonProps } from './Button';\n\nconst BackButton = (props: ButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.tint1,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.danger.default,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.danger.focus,\n          loadingBackgroundColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primary.default,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primary.focus,\n          loadingBackgroundColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondary.default,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondary.focus,\n          loadingBackgroundColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nconst ButtonBase = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonBase);\nexport default Button;\n","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\n","export { default as Button, ButtonProps } from './Button';\nexport { default as ButtonGroup, ButtonGroupProps } from './ButtonGroup';\nexport { default as BackButton } from './BackButton';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { ToastContext, ToastProvider } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\nimport Toast from './Toast';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toast\"}}>{`Toast`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Alert`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{props: this ? this.props : props,ToastContext,ToastProvider,Button,Box,Toast}}>\n  <ToastProvider\n    getStyles={(props, theme) => ({\n      containerStyle: {},\n    })}\n  >\n    <ToastContext.Consumer>\n      {({ notify }) => (\n        <Button\n          onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null, // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000,\n              // ...Alert props e.g. getStyles\n            });\n          }}\n          title=\"Use\"\n        />\n      )}\n    </ToastContext.Consumer>\n  </ToastProvider>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variants\"}}>{`Variants`}</MDXTag>\n<Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{props: this ? this.props : props,ToastContext,ToastProvider,Button,Box,Toast}}>\n  <ToastProvider>\n    <ToastContext.Consumer>\n      {({ notify }) => (\n        <>\n          <Button\n            onPress={() =>\n              notify({\n                title: 'Title',\n                description: 'Description',\n                isCloseable: true,\n              })\n            }\n            title=\"Open default toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'success',\n                title: 'Title',\n              })\n            }\n            color=\"primary\"\n            title=\"Open success toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'danger',\n                title: 'Title',\n              })\n            }\n            color=\"danger\"\n            title=\"Open danger toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'warning',\n                title: 'Title',\n              })\n            }\n            color=\"secondary\"\n            title=\"Open warning toast\"\n          />\n        </>\n      )}\n    </ToastContext.Consumer>\n  </ToastProvider>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Toast} />\n           </MDXTag>\n  }\n}\n  ","import { Platform, TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants';\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ToastVariables {\n  base: ViewStyle;\n  /** The area on screen where the toast appears */\n  container: ViewStyle;\n\n  textSuccess: TextStyle;\n  backgroundSuccess: ViewStyle;\n  textDanger: TextStyle;\n  backgroundDanger: ViewStyle;\n  textWarning: TextStyle;\n  backgroundWarning: ViewStyle;\n  textInfo: TextStyle;\n  backgroundInfo: ViewStyle;\n}\n\nexport const getToastVariables = (theme: Theme): ToastVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.plain,\n      borderRadius: theme.controlBorderRadius.medium,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n      ...theme.elevations[2],\n    },\n\n    backgroundDanger: {\n      backgroundColor: theme.colors.background.danger.default,\n    },\n    textDanger: {\n      color: theme.colors.text.plain,\n    },\n\n    backgroundInfo: {\n      backgroundColor: theme.colors.background.plain,\n    },\n    textInfo: {\n      color: theme.colors.text.default,\n    },\n\n    backgroundSuccess: {\n      backgroundColor: theme.colors.background.success.default,\n    },\n    textSuccess: {\n      color: theme.colors.text.plain,\n    },\n\n    backgroundWarning: {\n      backgroundColor: theme.colors.background.warning.default,\n    },\n    textWarning: {\n      color: theme.colors.text.plain,\n    },\n\n    container: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n  };\n};\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface ToastStylesProps {\n  intent: Intent;\n}\n\nexport type GetToastStyles = (\n  toastStylesProps: ToastStylesProps,\n  theme: Theme,\n) => ToastStyles;\n\nexport const getToastStyles: GetToastStyles = ({ intent }, theme) => {\n  const toastVariables = getToastVariables(theme);\n\n  return {\n    containerStyle: toastVariables.container,\n  };\n};\ntry {\n    // @ts-ignore\n    getToastVariables.displayName = \"getToastVariables\";\n    // @ts-ignore\n    getToastVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getToastVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Toast/Toast.styles.ts#getToastVariables\"] = { docgenInfo: getToastVariables.__docgenInfo, name: \"getToastVariables\", path: \"src/components/Toast/Toast.styles.ts#getToastVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Alert, AlertProps } from '../Alert';\n\n// Animation taken from https://medium.com/@norbajunior/react-native-facebook-and-instagram-like-top-bar-notifications-with-animated-api-43c48d0443dd\nexport type ToastId = string;\n\nexport interface ToastSettings\n  extends Omit<Omit<AlertProps, 'onClose'>, 'theme'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\nexport interface ToastProps extends ToastInstance {\n  theme: Theme;\n}\n\nexport interface ToastState {\n  value: Animated.Value;\n}\n\nconst DEFAULT_VALUE = 500;\n\nclass ToastBase extends React.Component<ToastProps, ToastState> {\n  public closeTimer: number | null = null;\n\n  constructor(props: ToastProps) {\n    super(props);\n\n    this.state = {\n      value: new Animated.Value(-DEFAULT_VALUE),\n    };\n  }\n\n  public componentDidMount() {\n    const { onRemove, duration = 3000, offset = 16 } = this.props;\n    const { value } = this.state;\n\n    Animated.sequence([\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: offset,\n      }),\n      Animated.delay(duration),\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: -DEFAULT_VALUE,\n      }),\n    ]).start(() => onRemove());\n  }\n\n  public render() {\n    const {\n      component,\n      offset,\n      duration,\n      id,\n      onRemove,\n      ...toastSettings\n    } = this.props;\n\n    return (\n      <Animated.View\n        style={{\n          transform: [{ translateY: this.state.value }],\n        }}\n      >\n        {component || <Alert {...toastSettings} onClose={onRemove} />}\n      </Animated.View>\n    );\n  }\n}\n\nexport const Toast = withTheme(ToastBase);\nexport default Toast;\n","import * as React from 'react';\n\nimport { ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport Toast, { ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  theme: Theme;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nexport interface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\nexport class ToastProvider extends React.Component<\n  ToastProviderProps,\n  ToastProviderState\n> {\n  public static idCounter: number = 0;\n\n  constructor(props: ToastProviderProps) {\n    super(props);\n\n    this.state = {\n      toasts: [],\n    };\n  }\n\n  public removeToast = (id: ToastId) => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.filter(toast => toast.id !== id),\n      };\n    });\n  };\n\n  public notify = (toastSettings: ToastSettings) => {\n    const toastInstance = this.createToastInstance(toastSettings);\n\n    // If there's a custom toast D passed, close existing toasts with the same custom D\n    if (hasCustomId(toastSettings)) {\n      for (const toast of this.state.toasts) {\n        // Since unique D is still appended to a custom D, skip the unique D and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          this.removeToast(toast.id);\n        }\n      }\n    }\n\n    this.setState(previousState => {\n      return {\n        // Immediately remove the current toast\n        toasts: [...previousState.toasts.slice(1), toastInstance],\n      };\n    });\n\n    return toastInstance;\n  };\n\n  public createToastInstance = (\n    toastSettings: ToastSettings,\n  ): ToastInstance => {\n    const uniqueId = ++ToastProvider.idCounter;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () => this.removeToast(id),\n      ...toastSettings,\n    };\n  };\n\n  public render() {\n    const { children, theme, getStyles } = this.props;\n    const { toasts } = this.state;\n    const [currentToast] = toasts;\n\n    // Intent does not matter here\n    // Consider using a different style getter for toast provider\n    const { containerStyle } = mergeStyles(getToastStyles, getStyles)(\n      { intent: 'info' },\n      theme,\n    );\n\n    return (\n      <ToastContext.Provider\n        value={{\n          danger: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'danger' }),\n          notify: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings }),\n          removeToast: (id: ToastId) => this.removeToast(id),\n          success: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'success' }),\n          warning: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'warning' }),\n        }}\n      >\n        {children}\n        <View style={containerStyle}>\n          {currentToast && <Toast key={currentToast.id} {...currentToast} />}\n        </View>\n      </ToastContext.Provider>\n    );\n  }\n}\n\nexport default withTheme(ToastProvider);\ntry {\n    // @ts-ignore\n    ToastProvider.displayName = \"ToastProvider\";\n    // @ts-ignore\n    ToastProvider.__docgenInfo = { \"description\": \"\", \"displayName\": \"ToastProvider\", \"props\": { \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Toast/ToastProvider.tsx#ToastProvider\"] = { docgenInfo: ToastProvider.__docgenInfo, name: \"ToastProvider\", path: \"src/components/Toast/ToastProvider.tsx#ToastProvider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './ToastContext';\nexport { default as ToastProvider } from './ToastProvider';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}