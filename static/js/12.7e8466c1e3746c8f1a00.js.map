{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Progress/Progress.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Progress/Progress.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Progress/Progress.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","getCounterVariables","container","count","counter","width","dark","getCounterStyles","counterVariables","containerStyle","countStyle","counterStyle","disabledStyle","_Counter","Counter","component","max","min","onIncrement","onDecrement","isDecrementDisabled","isIncrementDisabled","TouchableOpacity","activeOpacity","undefined","concat","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","Component","defaultProps","_LoadingDots","_react2","_interopRequireDefault","_reactPowerplug","_docz","_Progress","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","CounterContainer","Props","Progress","Box","initial","_ref2","incBy","decBy","percent","progressStyle","of","isMDXComponent","getProgressVariables","progress","getProgressStyles","progressVariables","sizeStyle","_props$percent","Platform","OS","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/12.3bf72328.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.dark,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = theme => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)(theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Spacing paddingRight={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Spacing paddingLeft={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n    </View>\n  );\n};\n","export * from './Counter';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Progress } from './Progress';\nimport { Box } from '../Layout';\nimport { Button } from '../Button';\nimport { Counter } from '../Counter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"progress\"\n    }}>{`Progress`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, incBy, decBy }) => (\\n    <Box>\\n      <Progress\\n        percent={count}\\n        size=\\\"large\\\"\\n        getStyles={(props, theme) => ({\\n          containerStyle: {},\\n          progressStyle: {},\\n        })}\\n      />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decBy(10)}\\n        onIncrement={() => incBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Progress,\n      Box,\n      Button,\n      Counter\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={0} mdxType=\"CounterContainer\">\n    {({\n          count,\n          incBy,\n          decBy\n        }) => <Box mdxType=\"Box\">\n        <Progress percent={count} size=\"large\" getStyles={(props, theme) => ({\n            containerStyle: {},\n            progressStyle: {}\n          })} mdxType=\"Progress\" />\n        <Counter count={count} onDecrement={() => decBy(10)} onIncrement={() => incBy(10)} min={0} max={100} mdxType=\"Counter\" />\n      </Box>}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Progress} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ProgressVariables {\n  container: ViewStyle;\n  progress: ViewStyle;\n  size: ProgressSizes;\n}\n\nexport interface ProgressSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type ProgressSize = keyof ProgressSizes;\n\nexport const getProgressVariables = (theme: Theme): ProgressVariables => {\n  return {\n    container: {\n      backgroundColor: theme.colors.background.greyDefault,\n    },\n    progress: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      height: '100%',\n    },\n    size: {\n      small: {\n        borderRadius: 999,\n        height: 16,\n      },\n\n      medium: {\n        borderRadius: 999,\n        height: 24,\n      },\n\n      large: {\n        borderRadius: 999,\n        height: 32,\n      },\n    },\n  };\n};\n\nexport interface ProgressStylesProps {\n  size: ProgressSize;\n}\nexport type GetProgressStyles = (\n  progressStylesProps: ProgressStylesProps,\n  theme: Theme,\n) => ProgressStyles;\n\nexport interface ProgressStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressStyles: GetProgressStyles = ({ size }, theme) => {\n  const progressVariables = getProgressVariables(theme);\n  const sizeStyle = progressVariables.size[size];\n\n  return {\n    containerStyle: {\n      ...sizeStyle,\n      ...progressVariables.container,\n    },\n    progressStyle: {\n      ...sizeStyle,\n      ...progressVariables.progress,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetProgressStyles,\n  getProgressStyles,\n  ProgressSize,\n  ProgressStyles,\n} from './Progress.styles';\n\nexport interface ProgressProps {\n  percent?: number;\n  size?: ProgressSize;\n  getStyles?: ReplaceReturnType<GetProgressStyles, DeepPartial<ProgressStyles>>;\n  testID?: string;\n}\n\nexport const Progress = (props: ProgressProps) => {\n  const { percent = 0, size = 'medium', getStyles, testID } = props;\n  const theme = useTheme();\n\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <View\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        style={{\n          width: `${percent}%`,\n          ...progressStyle,\n        }}\n      />\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}