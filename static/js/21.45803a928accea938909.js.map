{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","Button","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","___WEBPACK_IMPORTED_MODULE_5__","title","description","intent","overrides","Action","component","___WEBPACK_IMPORTED_MODULE_7__","appearance","color","of","isMDXComponent","propToFn","backgroundColor","theme","colors","background","elevation","elevations","shape","containerShapes","children","testID","viewStyles","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","react","alignItems","flexDirection","justifyContent","map","index","key","borderRadius","height","marginLeft","marginRight","width","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","_props$overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","Dots_Dots","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/21.345dbea0.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`Give feedback to the user about an action or state`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box paddingVertical={8}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert\\n    intent=\\\"danger\\\"\\n    title=\\\"Danger\\\"\\n    description=\\\"Message\\\"\\n    overrides={{\\n      Action: {\\n        component: () => (\\n          <Button title=\\\"Action\\\" appearance=\\\"minimal\\\" color=\\\"primary\\\" />\\n        ),\\n      },\\n    }}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" overrides={{\n          Action: {\n            component: () => <Button title=\"Action\" appearance=\"minimal\" color=\"primary\" mdxType=\"Button\" />\n          }\n        }} mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}