{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Button","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","Button","Box","Spacing","color","appearance","size","isLoading","isActive","isDisabled","isInline","iconBefore","iconAfter","iconLoading","title","onPress","console","log","getStyles","theme","buttonStyle","textStyle","focusColor","flexDirection","paddingRight","height","justifyContent","parentName","of","isMDXComponent","getButtonVariables","appearances","minimal","backgroundColor","colors","background","content","text","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","controlHeights","paddingLeft","controlPaddings","medium","large","getButtonStyles","buttonStyleProps","_getButtonVariables","baseStyles","_appearances$appearan","textColor","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexWrap","alignItems","display","fontWeight","textAlign","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_props$appearance","_props$color","icon","_props$isDisabled","_props$isInline","_props$isLoading","_props$onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","map","index","key","marginLeft","marginRight","width","_LoadingDots","Object","keys","forEach","defineProperty","exports","enumerable","get"],"mappings":"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","file":"static/js/20.3093c97e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { Box, Spacing } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Button\\n  color=\\\"primary\\\"\\n  appearance=\\\"primary\\\"\\n  size=\\\"large\\\"\\n  isLoading={false}\\n  isActive={false}\\n  isDisabled={false}\\n  isInline={false}\\n  iconBefore={null}\\n  iconAfter={null}\\n  iconLoading={null}\\n  title=\\\"Usage\\\"\\n  onPress={() => console.log(\\'Pressed!\\')}\\n  getStyles={(props, theme) => ({\\n    buttonStyle: {},\\n    textStyle: {},\\n    focusColor: \\'\\',\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box,\n      Spacing\n    }} mdxType=\"Playground\">\n  <Button color=\"primary\" appearance=\"primary\" size=\"large\" isLoading={false} isActive={false} isDisabled={false} isInline={false} iconBefore={null} iconAfter={null} iconLoading={null} title=\"Usage\" onPress={() => console.log('Pressed!')} getStyles={(props, theme) => ({\n        buttonStyle: {},\n        textStyle: {},\n        focusColor: ''\n      })} mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Box flexDirection=\\\"row\\\">\\n  <Spacing paddingRight={2} height={30} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Spacing>\\n  <Spacing paddingRight={2} height={30} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Spacing>\\n  <Spacing paddingRight={2} height={30} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Spacing>\\n  <Spacing paddingRight={2} height={30} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Spacing>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box,\n      Spacing\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Spacing paddingRight={2} height={30} justifyContent=\"space-between\" mdxType=\"Spacing\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Spacing>\n    <Spacing paddingRight={2} height={30} justifyContent=\"space-between\" mdxType=\"Spacing\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Spacing>\n    <Spacing paddingRight={2} height={30} justifyContent=\"space-between\" mdxType=\"Spacing\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Spacing>\n    <Spacing paddingRight={2} height={30} justifyContent=\"space-between\" mdxType=\"Spacing\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Spacing>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"positioning-inline-button-with-different-sizes\"\n    }}>{`Positioning inline button with different sizes`}</h3>\n    <Playground __position={2} __code={'<Box flexDirection=\\\"row\\\" justifyContent=\\\"flex-start\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Left small\\\" size=\\\"small\\\" />\\n</Box>\\n<Box flexDirection=\\\"row\\\" justifyContent=\\\"center\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Center medium\\\" size=\\\"medium\\\" />\\n</Box>\\n<Box flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Right large\\\" size=\\\"large\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box,\n      Spacing\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" justifyContent=\"flex-start\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Left small\" size=\"small\" mdxType=\"Button\" />\n  </Box>\n  <Box flexDirection=\"row\" justifyContent=\"center\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Center medium\" size=\"medium\" mdxType=\"Button\" />\n  </Box>\n  <Box flexDirection=\"row\" justifyContent=\"flex-end\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Right large\" size=\"large\" mdxType=\"Button\" />\n  </Box>\n    </Playground>\n    <p>{`If `}<inlineCode parentName=\"p\">{`isInline`}</inlineCode>{` does not inline the button, try wrapping it with `}<inlineCode parentName=\"p\">{`Box`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n"],"sourceRoot":""}