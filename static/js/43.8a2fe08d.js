(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"./src/components/SelectList/SelectList.mdx":function(e,t,l){var a=l("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=a(l("./node_modules/@babel/runtime/helpers/objectSpread.js")),s=a(l("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),c=a(l("./node_modules/@babel/runtime/helpers/classCallCheck.js")),u=a(l("./node_modules/@babel/runtime/helpers/createClass.js")),i=a(l("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),m=a(l("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),o=a(l("./node_modules/@babel/runtime/helpers/inherits.js")),r=a(l("./node_modules/react/index.js")),d=l("./node_modules/@mdx-js/tag/dist/index.js"),S=l("./node_modules/countries-list/dist/index.es5.min.js"),p=l("./node_modules/docz/dist/index.m.js"),L=l("./src/components/Layout/index.ts"),b=l("./src/components/SelectList/SelectList.tsx"),f=l("./src/components/SelectList/SelectListItem.tsx"),v=l("./node_modules/react-powerplug/dist/react-powerplug.esm.js"),I=function(e){function t(e){var l;return(0,c.default)(this,t),(l=(0,i.default)(this,(0,m.default)(t).call(this,e))).layout=null,l}return(0,o.default)(t,e),(0,u.default)(t,[{key:"render",value:function(){var e=this.props,t=e.components,l=(0,s.default)(e,["components"]);return r.default.createElement(d.MDXTag,{name:"wrapper",components:t},r.default.createElement(d.MDXTag,{name:"h1",components:t,props:{id:"selectlist"}},"SelectList"),r.default.createElement(d.MDXTag,{name:"p",components:t},"SelectList that supports single value or multiple values selected at the same item. ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"SelectList")," is a compound component, which means that its children can be any component, and it will implicitly inject props such as ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"isSelected")," or ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"onSelect")," to them.\n",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"SelectListItem")," composes ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"ListItem")),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"usage"}},"Usage"),r.default.createElement(p.Playground,{__position:0,__code:'<SelectList\n  isMulti={false}\n  selectedValue="c"\n  onValueChange={(newValue, itemIndex) => {\n    console.log(newValue, itemIndex)\n  }}\n>\n  <SelectListItem\n    label="Usage"\n    value="c"\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\n    // isSelected\n    // onSelect\n    // index\n  />\n</SelectList>',__scope:{props:this?this.props:l,countryList:S.countries,Box:L.Box,SelectList:b.SelectList,SelectListItem:f.SelectListItem,State:v.State}},r.default.createElement(b.SelectList,{isMulti:!1,selectedValue:"c",onValueChange:function(e,t){console.log(e,t)}},r.default.createElement(f.SelectListItem,{label:"Usage",value:"c"}))),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"multi-select"}},"Multi select"),r.default.createElement(p.Playground,{__position:1,__code:'<State initial={{ selectedValue: [\'js\', \'go\'] }}>\n  {({ state, setState }) => (\n    <SelectList\n      isMulti\n      selectedValue={state.selectedValue}\n      onValueChange={(newValue, itemIndex) => {\n        setState({ selectedValue: newValue })\n      }}\n    >\n      <SelectListItem label="C" value="c" />\n      <SelectListItem label="C#" value="c#" />\n      <SelectListItem label="C++" value="c++" />\n      <SelectListItem label="CSS" value="css" />\n      <SelectListItem label="Elixir" value="elixir" />\n      <SelectListItem label="Elm" value="elm" />\n      <SelectListItem label="Erlang" value="erlang" />\n      <SelectListItem label="Go" value="go" />\n      <SelectListItem label="Haskell" value="haskell" />\n      <SelectListItem label="HTML" value="html" />\n      <SelectListItem label="Java" value="java" />\n      <SelectListItem label="JavaScript" value="js" />\n      <SelectListItem label="Lua" value="lua" />\n      <SelectListItem label="Python" value="python" />\n      <SelectListItem label="R" value="r" />\n      <SelectListItem label="Ruby" value="ruby" />\n      <SelectListItem label="Rust" value="rust" />\n      <SelectListItem label="Switft" value="swift" />\n      <SelectListItem label="Typescript" value="typescript" />\n    </SelectList>\n  )}\n</State>',__scope:{props:this?this.props:l,countryList:S.countries,Box:L.Box,SelectList:b.SelectList,SelectListItem:f.SelectListItem,State:v.State}},r.default.createElement(v.State,{initial:{selectedValue:["js","go"]}},function(e){var t=e.state,l=e.setState;return r.default.createElement(b.SelectList,{isMulti:!0,selectedValue:t.selectedValue,onValueChange:function(e,t){l({selectedValue:e})}},r.default.createElement(f.SelectListItem,{label:"C",value:"c"}),r.default.createElement(f.SelectListItem,{label:"C#",value:"c#"}),r.default.createElement(f.SelectListItem,{label:"C++",value:"c++"}),r.default.createElement(f.SelectListItem,{label:"CSS",value:"css"}),r.default.createElement(f.SelectListItem,{label:"Elixir",value:"elixir"}),r.default.createElement(f.SelectListItem,{label:"Elm",value:"elm"}),r.default.createElement(f.SelectListItem,{label:"Erlang",value:"erlang"}),r.default.createElement(f.SelectListItem,{label:"Go",value:"go"}),r.default.createElement(f.SelectListItem,{label:"Haskell",value:"haskell"}),r.default.createElement(f.SelectListItem,{label:"HTML",value:"html"}),r.default.createElement(f.SelectListItem,{label:"Java",value:"java"}),r.default.createElement(f.SelectListItem,{label:"JavaScript",value:"js"}),r.default.createElement(f.SelectListItem,{label:"Lua",value:"lua"}),r.default.createElement(f.SelectListItem,{label:"Python",value:"python"}),r.default.createElement(f.SelectListItem,{label:"R",value:"r"}),r.default.createElement(f.SelectListItem,{label:"Ruby",value:"ruby"}),r.default.createElement(f.SelectListItem,{label:"Rust",value:"rust"}),r.default.createElement(f.SelectListItem,{label:"Switft",value:"swift"}),r.default.createElement(f.SelectListItem,{label:"Typescript",value:"typescript"}))})),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"large-selectlist"}},"Large SelectList"),r.default.createElement(d.MDXTag,{name:"p",components:t},r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"SelectList")," composes ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"FlatList")," from ",r.default.createElement(d.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"react-native")),r.default.createElement(p.Playground,{__position:2,__code:"<State initial={{ selectedValue: ['js', 'go'] }}>\n  {({ state, setState }) => (\n    <Box height={400}>\n      <SelectList\n        isMulti\n        selectedValue={state.selectedValue}\n        onValueChange={(newValue, itemIndex) => {\n          setState({ selectedValue: newValue })\n        }}\n      >\n        {Object.keys(countryList)\n          .map(countryCode => ({\n            countryCode,\n            value: countryCode,\n            label: countryList[countryCode].name,\n            ...countryList[countryCode],\n          }))\n          .map(data => (\n            <SelectListItem\n              key={data.value}\n              label={data.label}\n              value={data.label}\n            />\n          ))}\n      </SelectList>\n    </Box>\n  )}\n</State>",__scope:{props:this?this.props:l,countryList:S.countries,Box:L.Box,SelectList:b.SelectList,SelectListItem:f.SelectListItem,State:v.State}},r.default.createElement(v.State,{initial:{selectedValue:["js","go"]}},function(e){var t=e.state,l=e.setState;return r.default.createElement(L.Box,{height:400},r.default.createElement(b.SelectList,{isMulti:!0,selectedValue:t.selectedValue,onValueChange:function(e,t){l({selectedValue:e})}},Object.keys(S.countries).map(function(e){return(0,n.default)({countryCode:e,value:e,label:S.countries[e].name},S.countries[e])}).map(function(e){return r.default.createElement(f.SelectListItem,{key:e.value,label:e.label,value:e.label})})))})),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"single-select"}},"Single select"),r.default.createElement(p.Playground,{__position:3,__code:'<State initial={{ selectedValue: \'go\' }}>\n  {({ state, setState }) => (\n    <SelectList\n      selectedValue={state.selectedValue}\n      onValueChange={(newValue, itemIndex) => {\n        setState({ selectedValue: newValue })\n      }}\n    >\n      <SelectListItem label="C" value="c" />\n      <SelectListItem label="C#" value="c#" />\n      <SelectListItem label="C++" value="c++" />\n      <SelectListItem label="CSS" value="css" />\n      <SelectListItem label="Elixir" value="elixir" />\n      <SelectListItem label="Elm" value="elm" />\n      <SelectListItem label="Erlang" value="erlang" />\n      <SelectListItem label="Go" value="go" />\n      <SelectListItem label="Haskell" value="haskell" />\n      <SelectListItem label="HTML" value="html" />\n      <SelectListItem label="Java" value="java" />\n      <SelectListItem label="JavaScript" value="js" />\n      <SelectListItem label="Lua" value="lua" />\n      <SelectListItem label="Python" value="python" />\n      <SelectListItem label="R" value="r" />\n      <SelectListItem label="Ruby" value="ruby" />\n      <SelectListItem label="Rust" value="rust" />\n      <SelectListItem label="Switft" value="swift" />\n      <SelectListItem label="Typescript" value="typescript" />\n    </SelectList>\n  )}\n</State>',__scope:{props:this?this.props:l,countryList:S.countries,Box:L.Box,SelectList:b.SelectList,SelectListItem:f.SelectListItem,State:v.State}},r.default.createElement(v.State,{initial:{selectedValue:"go"}},function(e){var t=e.state,l=e.setState;return r.default.createElement(b.SelectList,{selectedValue:t.selectedValue,onValueChange:function(e,t){l({selectedValue:e})}},r.default.createElement(f.SelectListItem,{label:"C",value:"c"}),r.default.createElement(f.SelectListItem,{label:"C#",value:"c#"}),r.default.createElement(f.SelectListItem,{label:"C++",value:"c++"}),r.default.createElement(f.SelectListItem,{label:"CSS",value:"css"}),r.default.createElement(f.SelectListItem,{label:"Elixir",value:"elixir"}),r.default.createElement(f.SelectListItem,{label:"Elm",value:"elm"}),r.default.createElement(f.SelectListItem,{label:"Erlang",value:"erlang"}),r.default.createElement(f.SelectListItem,{label:"Go",value:"go"}),r.default.createElement(f.SelectListItem,{label:"Haskell",value:"haskell"}),r.default.createElement(f.SelectListItem,{label:"HTML",value:"html"}),r.default.createElement(f.SelectListItem,{label:"Java",value:"java"}),r.default.createElement(f.SelectListItem,{label:"JavaScript",value:"js"}),r.default.createElement(f.SelectListItem,{label:"Lua",value:"lua"}),r.default.createElement(f.SelectListItem,{label:"Python",value:"python"}),r.default.createElement(f.SelectListItem,{label:"R",value:"r"}),r.default.createElement(f.SelectListItem,{label:"Ruby",value:"ruby"}),r.default.createElement(f.SelectListItem,{label:"Rust",value:"rust"}),r.default.createElement(f.SelectListItem,{label:"Switft",value:"swift"}),r.default.createElement(f.SelectListItem,{label:"Typescript",value:"typescript"}))})),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"props"}},"Props"),r.default.createElement(d.MDXTag,{name:"h3",components:t,props:{id:"select-list"}},"Select List"),r.default.createElement(p.PropsTable,{of:b.SelectList}))}}]),t}(r.default.Component);t.default=I}}]);
//# sourceMappingURL=43.9c5844844be652539b6a.js.map