{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/ArrowedPositioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/getPositionerArrow.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Intent.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/StackingOrder.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_react2","_interopRequireDefault","_docz","_","_reactPowerplug","layoutProps","MDXLayout","_ref","children","document","body","position","mdx","MDXContent","_ref2","components","mdxType","id","parentName","Playground","__position","__code","__scope","Props","Popover","Box","Toggle","isVisible","onClose","console","log","content","popoverStyle","paddingBottom","zIndex","_ref3","on","toggle","_ref4","_ref5","of","isMDXComponent","getPopoverVariables","popover","padding","elevations","getPopoverStyles","_Positioner","_Popover","getContentStyles","Positioner","params","_getPositionerArrow","ArrowedPositioned","isFullWidth","getPositionerArrowParams","targetMeasurements","arrow","getFullWidthPositionerArrow","getPositionerArrow","Fragment","getPositionerVariables","modalContainer","positioner","getPositionerStyles","positionerVariables","modalContainerStyle","positionerStyle","_constants","_Helpers","_Modal","_Overlay","resolveCorrectPosition","shouldFlipBottomToTop","shouldFlipLeftToRight","shouldFlipRightToLeft","shouldFlipTopToBottom","newPosition","includes","POSITION","BOTTOM","replace","TOP","LEFT","RIGHT","getIsOverflowing","positionerMeasurements","screenLayout","defaultProps","isDynamicContent","initialMeasurements","pageX","pageY","x","y","PositionerBase","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","hasOverflowedCounter","_props$isDynamicConte","state","childrenMeasurements","isAdjustingContent","_this2","_this$props$isDynamic","setTimeout","setState","_this3","_this$props","parentHeight","_this$props$isFullWid","_this$props$onClose","_this$props$position","_this$state","Dimensions","finalTargetMeasurements","hasPositionerMeasurementsMeasured","getPositionerPositionParams","offset","left","right","top","BOTTOM_RIGHT","getPositionerFullWidthPosition","isOverflowing","TOP_LEFT","transform","translateX","TOP_RIGHT","translateY","BOTTOM_LEFT","getPositionerPosition","correctedPosition","positionerPositionStyle","ViewMeasure","onMeasure","measurements","Modal","visible","transparent","onRequestClose","isBackgroundScrollable","Overlay","Component","withTheme","commonStyle","TopLeftArrow","borderTopColor","bottom","marginBottom","TopArrow","TopRightArrow","LeftArrow","borderLeftColor","RightArrow","borderRightColor","BottomRightArrow","_ref6","borderBottomColor","marginTop","BottomArrow","_ref7","BottomLeftArrow","_ref8","_ref9","FullWidthTopArrow","_ref10","FullWidthBottomArrow","_ref11","_ref12","_ArrowedPositioner","INTENT","info","success","warning","FOCUSED","STACKING_CONTEXT","POSITIONER","OVERLAY","TOASTER","_StackingOrder","_Intent","_Position","prototype","hasOwnProperty","_exportNames"],"mappings":"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","file":"static/js/12.fa7854cb.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Popover } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport { Toggle } from 'react-powerplug';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = ({ children }) => {\n  document.body.style.height = 'initial';\n  document.body.style.position = 'relative';\n  return <div>{children}</div>;\n}\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p><inlineCode parentName=\"p\">{`Popover`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode>{` and adds only a white box wrapping. Content that can be anything. Popover just applies some styles for the content. For more low-level usage, use `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Popover\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  position=\\\"top-right\\\"\\n  content={() => <Box width={200} height={200} />}\\n  getStyles={(props, theme) => ({\\n    popoverStyle: {},\\n  })}\\n  // ...Positioner props\\n>\\n  <Button title=\\\"Child\\\" />\\n</Popover>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Popover,\n      Button,\n      Box,\n      Spacing,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Popover isVisible={false} onClose={() => console.log('Close')} position=\"top-right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} getStyles={(props, theme) => ({\n        popoverStyle: {}\n      })} // ...Positioner props\n      mdxType=\"Popover\">\n    <Button title=\"Child\" mdxType=\"Button\" />\n  </Popover>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Spacing paddingBottom={8} zIndex={1}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-right\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-left\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Spacing>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Popover,\n      Button,\n      Box,\n      Spacing,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Spacing paddingBottom={8} zIndex={1} mdxType=\"Spacing\">\n    <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-right\" content={() => <Box width={200} height={200} mdxType=\"Box\">\n                <Text mdxType=\"Text\">\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top right\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top\" content={() => <Box width={200} height={200} mdxType=\"Box\">\n                <Text mdxType=\"Text\">\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-left\" content={() => <Box width={200} height={200} mdxType=\"Box\">\n                <Text mdxType=\"Text\">\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top left\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n    </Box>\n  </Spacing>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PopoverVariables {\n  popover: ViewStyle;\n}\n\nexport const getPopoverVariables = (theme: Theme): PopoverVariables => {\n  return {\n    popover: {\n      backgroundColor: theme.colors.background.white,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n  };\n};\n\nexport interface PopoverStyles {\n  popoverStyle: TextStyle;\n}\n\nexport type GetPopoverStyles = (theme: Theme) => PopoverStyles;\n\nexport const getPopoverStyles: GetPopoverStyles = theme => {\n  const popoverVariables = getPopoverVariables(theme);\n\n  return {\n    popoverStyle: popoverVariables.popover,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  GetPopoverStyles,\n  getPopoverStyles,\n  PopoverStyles,\n} from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  getContentStyles?: ReplaceReturnType<\n    GetPopoverStyles,\n    DeepPartial<PopoverStyles>\n  >;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getContentStyles } = props;\n  const theme = useTheme();\n  const { popoverStyle } = mergeStyles(getPopoverStyles, getContentStyles)(\n    theme,\n  );\n\n  return (\n    <Positioner\n      {...props}\n      content={params => <View style={popoverStyle}>{content(params)}</View>}\n    />\n  );\n};\n","export * from './Popover';\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  getFullWidthPositionerArrow,\n  getPositionerArrow,\n} from './getPositionerArrow';\n\nexport const ArrowedPositioned = (props: PositionerProps) => {\n  const { content, isFullWidth } = props;\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      {...props}\n      content={({ position, targetMeasurements }) => {\n        const getPositionerArrowParams = {\n          position,\n          targetMeasurements,\n          theme,\n        };\n        const arrow = isFullWidth\n          ? getFullWidthPositionerArrow(getPositionerArrowParams)\n          : getPositionerArrow(getPositionerArrowParams);\n        return (\n          <>\n            {content}\n            {arrow}\n          </>\n        );\n      }}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PositionerVariables {\n  positioner: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getPositionerVariables = (theme: Theme): PositionerVariables => {\n  return {\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    positioner: {\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetPositionerStyles = (theme: Theme) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = theme => {\n  const positionerVariables = getPositionerVariables(theme);\n\n  return {\n    modalContainerStyle: positionerVariables.modalContainer,\n    positionerStyle: positionerVariables.positioner,\n  };\n};\n","import * as React from 'react';\nimport { Dimensions, ScaledSize, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Measurements, ViewMeasure } from '../Helpers';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface ContentProps {\n  positionerMeasurements: Measurements;\n  targetMeasurements: Measurements;\n  position: Position;\n}\n\nexport interface PositionerProps {\n  theme: Theme;\n  onClose?: () => void;\n  /** For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it. This is not `true` by default because it may causes small delay for the Positioner to be properly available. @default false */\n  isDynamicContent?: boolean;\n  /** Sets the positioner to cover full width. Useful when wanting to display on mobile devices a full menu. Overrides `isDynamicContent`. Ignores `right` and `left` positions. */\n  isFullWidth?: boolean;\n  children: React.ReactNode;\n  content: (props: ContentProps) => React.ReactNode;\n  /**\n   * Positioner uses window height to calculate its position, and whether it should flip to top if it at the bottom (So that it does not pop up outside the window height).\n   * However, sometimes window.height is shorter than the parent container, unnecessarily flipping it to `top`. To fix this behavior,\n   * you can pass in height of the parent so that it will use that instead of window's height\n   */\n  parentHeight?: number;\n  isVisible?: boolean;\n  position?: Position;\n  targetMeasurements?: Measurements;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\nconst DEFAULT_MARGIN = 24;\nconst DEFAULT_OFFSET = 14;\n/** Time to allow all the calculation to be done */\nconst RENDER_CALCULATION_DURATION = 700;\n\nconst resolveCorrectPosition = (position: Position) => ({\n  shouldFlipBottomToTop,\n  shouldFlipLeftToRight,\n  shouldFlipRightToLeft,\n  shouldFlipTopToBottom,\n}: {\n  shouldFlipBottomToTop: boolean;\n  shouldFlipLeftToRight: boolean;\n  shouldFlipRightToLeft: boolean;\n  shouldFlipTopToBottom: boolean;\n}) => {\n  let newPosition = position;\n\n  if (position.includes(POSITION.BOTTOM) && shouldFlipBottomToTop) {\n    newPosition = newPosition.replace(\n      POSITION.BOTTOM,\n      POSITION.TOP,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.TOP) && shouldFlipTopToBottom) {\n    newPosition = newPosition.replace(\n      POSITION.TOP,\n      POSITION.BOTTOM,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.LEFT) && shouldFlipLeftToRight) {\n    newPosition = newPosition.replace(\n      POSITION.LEFT,\n      POSITION.RIGHT,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.RIGHT) && shouldFlipRightToLeft) {\n    newPosition = newPosition.replace(\n      POSITION.RIGHT,\n      POSITION.LEFT,\n    ) as Position;\n  }\n\n  return newPosition;\n};\n\ninterface GetPositionerPositionParams {\n  screenLayout: ScaledSize;\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n  offset: number;\n}\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight:\n      position === POSITION.LEFT\n        ? positionerMeasurements.width + offset + DEFAULT_MARGIN >\n          targetMeasurements.pageX - offset\n        : positionerMeasurements.width + offset >\n          screenLayout.width - targetMeasurements.pageX,\n    shouldFlipRightToLeft:\n      position === POSITION.RIGHT\n        ? targetMeasurements.pageX +\n            targetMeasurements.width +\n            positionerMeasurements.width +\n            offset >\n          screenLayout.width - offset\n        : targetMeasurements.pageX <\n          positionerMeasurements.width + DEFAULT_MARGIN,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  });\n\n  const isOverflowing = getIsOverflowing({\n    position,\n    positionerMeasurements,\n    screenLayout,\n  });\n\n  switch (newPosition) {\n    case POSITION.TOP_LEFT:\n      return {\n        position: POSITION.TOP_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        position: POSITION.TOP_RIGHT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width -\n                targetMeasurements.pageX -\n                targetMeasurements.width,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width +\n                targetMeasurements.width,\n            }),\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.LEFT:\n      return {\n        position: POSITION.LEFT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width - targetMeasurements.pageX + offset,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width -\n                offset,\n            }),\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.RIGHT:\n      return {\n        position: POSITION.RIGHT,\n\n        left: targetMeasurements.pageX + targetMeasurements.width + offset,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        position: POSITION.BOTTOM_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nconst getPositionerFullWidthPosition = (\n  params: GetPositionerPositionParams,\n) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight: false,\n    shouldFlipRightToLeft: false,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  })\n    .replace('-left', '')\n    .replace('-right', '');\n\n  switch (newPosition) {\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nexport const getIsOverflowing = ({\n  positionerMeasurements,\n  screenLayout,\n  position,\n}: {\n  positionerMeasurements: Measurements;\n  screenLayout: ScaledSize;\n  position: Position;\n}) => {\n  if (positionerMeasurements.width > screenLayout.width - 48) {\n    return true;\n  }\n\n  return false;\n};\n\nexport interface PositionerState {\n  /** This is the adjusted measurements of the positioner when the content is of dynamic size. It adjusts several times when its position is being calculated to account for things like window overflow, margins and other layout calculations */\n  positionerMeasurements: Measurements;\n  /** Measurements of the wrapped component */\n  childrenMeasurements: Measurements;\n  /** HACK: For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it */\n  isAdjustingContent: boolean;\n}\n\nconst defaultProps = {\n  isDynamicContent: false,\n  isFullWidth: false,\n  position: POSITION.BOTTOM,\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport class PositionerBase extends React.Component<\n  PositionerProps,\n  PositionerState\n> {\n  /** Hack to get correct position of dynamic content */\n  private hasOverflowedCounter: number = 0;\n\n  constructor(props: PositionerProps) {\n    super(props);\n    const { isDynamicContent = defaultProps.isDynamicContent } = props;\n\n    this.state = {\n      childrenMeasurements: initialMeasurements,\n      isAdjustingContent: isDynamicContent,\n      positionerMeasurements: initialMeasurements,\n    };\n  }\n\n  public componentDidMount() {\n    const { isDynamicContent = defaultProps.isDynamicContent } = this.props;\n\n    if (isDynamicContent) {\n      setTimeout(() => {\n        this.setState({ isAdjustingContent: false });\n      }, RENDER_CALCULATION_DURATION);\n    }\n  }\n\n  public render() {\n    const {\n      theme,\n      getStyles,\n      children,\n      content,\n      parentHeight,\n      isVisible,\n      isFullWidth = defaultProps.isFullWidth,\n      onClose = () => null,\n      position = defaultProps.position,\n      targetMeasurements,\n    } = this.props;\n    const {\n      positionerMeasurements,\n      childrenMeasurements,\n      isAdjustingContent,\n    } = this.state;\n\n    const { positionerStyle, modalContainerStyle } = mergeStyles(\n      getPositionerStyles,\n      getStyles,\n    )(theme);\n\n    const screenLayout = Dimensions.get('window');\n\n    const finalTargetMeasurements = targetMeasurements || childrenMeasurements;\n    const hasPositionerMeasurementsMeasured =\n      positionerMeasurements.width !== 0 && positionerMeasurements.height !== 0;\n    const getPositionerPositionParams = {\n      offset: DEFAULT_OFFSET,\n      position,\n      positionerMeasurements,\n      screenLayout: {\n        ...screenLayout,\n        height: parentHeight || screenLayout.height,\n      },\n      targetMeasurements: finalTargetMeasurements,\n    };\n\n    const {\n      position: correctedPosition,\n      ...positionerPositionStyle\n    } = isFullWidth\n      ? getPositionerFullWidthPosition(getPositionerPositionParams)\n      : getPositionerPosition(getPositionerPositionParams);\n\n    return (\n      <>\n        {targetMeasurements ? (\n          children\n        ) : (\n          <ViewMeasure\n            onMeasure={measurements => {\n              this.setState({ childrenMeasurements: measurements });\n            }}\n          >\n            {children}\n          </ViewMeasure>\n        )}\n        <Modal\n          visible={isAdjustingContent || isVisible}\n          transparent\n          onRequestClose={onClose}\n          isBackgroundScrollable\n        >\n          <View style={modalContainerStyle}>\n            <ViewMeasure\n              style={{\n                ...positionerStyle,\n                ...positionerPositionStyle,\n                // Hide flash mis-positioned content\n                opacity:\n                  hasPositionerMeasurementsMeasured && !isAdjustingContent\n                    ? 1\n                    : 0,\n              }}\n              onMeasure={measurements => {\n                const isOverflowing = getIsOverflowing({\n                  position,\n                  positionerMeasurements,\n                  screenLayout,\n                });\n                /**\n                 * Positioner usually gets expected positioning after it has overflowed once.\n                 */\n\n                if (this.hasOverflowedCounter === 0) {\n                  this.setState({ positionerMeasurements: measurements });\n                } else if (!isOverflowing) {\n                  this.setState({ positionerMeasurements: measurements });\n                }\n\n                if (isOverflowing) {\n                  this.hasOverflowedCounter++;\n                }\n              }}\n            >\n              {content({\n                position: correctedPosition,\n                positionerMeasurements,\n                targetMeasurements: finalTargetMeasurements,\n              })}\n            </ViewMeasure>\n            <Overlay transparent onPress={onClose} />\n          </View>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport const Positioner = withTheme(PositionerBase);\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Position } from '../../constants';\nimport { Theme } from '../../theme';\nimport { Measurements } from '../Helpers';\n\nconst arrowWidth = 11;\nconst commonStyle = {\n  borderColor: 'transparent',\n  borderWidth: 11,\n  height: 0,\n  position: 'absolute',\n  width: 0,\n} as ViewStyle;\n\nexport const TopLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        marginBottom: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        marginBottom: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const LeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: theme.colors.border.default,\n        marginRight: -arrowWidth * 2,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: 'white',\n        marginRight: -arrowWidth * 2 + 1,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const RightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: theme.colors.border.default,\n        left: 0,\n        marginLeft: -arrowWidth * 2,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: 'white',\n        left: 0,\n        marginLeft: -arrowWidth * 2 + 1,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const BottomRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top-left':\n      return (\n        <TopLeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'top':\n      return <TopArrow theme={theme} targetMeasurements={targetMeasurements} />;\n    case 'top-right':\n      return (\n        <TopRightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'left':\n      return (\n        <LeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'right':\n      return (\n        <RightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-right':\n      return (\n        <BottomRightArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <BottomArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-left':\n      return (\n        <BottomLeftArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n\nexport const FullWidthTopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const FullWidthBottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getFullWidthPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top':\n      return (\n        <FullWidthTopArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <FullWidthBottomArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n","export * from './Positioner';\nexport * from './ArrowedPositioner';\n","export interface Intents {\n  danger: 'danger';\n  info: 'info';\n  success: 'success';\n  warning: 'warning';\n}\n\nexport type Intent = keyof Intents;\n\nexport const INTENT: Intents = {\n  danger: 'danger',\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n};\n","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","/**\n * Stacking order contains z-index values that are used through.\n * Note that the Stack component might increase the z-index for certain components.\n */\nexport default {\n  /**\n   * Used for focused buttons and controls.\n   */\n  FOCUSED: 2,\n\n  /**\n   * Used as the default for the StackingContext.\n   */\n  STACKING_CONTEXT: 5,\n\n  /**\n   * Used as the default for the Positioner.\n   */\n  POSITIONER: 10,\n\n  /**\n   * Used for the Overlay and everything that's inside such as Dialog + SideSheet.\n   */\n  OVERLAY: 20,\n\n  /**\n   * Used for the toasts in the toaster. Appears on top of everything else.\n   */\n  TOASTER: 30,\n};\n","export { default as StackingOrder } from './StackingOrder';\nexport { Intent, Intents } from './Intent';\nexport * from './Position';\n"],"sourceRoot":""}