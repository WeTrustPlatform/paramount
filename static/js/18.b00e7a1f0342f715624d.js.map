{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Avatar","Box","___WEBPACK_IMPORTED_MODULE_5__","source","uri","width","height","name","size","of","isMDXComponent","defaultProps","_props$name","_props$size","_props$isSolid","isSolid","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","imageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4__","onError","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","_props$name2","_props$size2","_props$isSolid2","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","justifyContent","overflow","position","_props$name3","_props$size3","_props$isSolid3","textProps","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","override","fontSize","lineHeight","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","propToFn","colors","background","elevation","elevations","shape","containerShapes","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/18.3a244b09.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"avatar\"\n    }}>{`Avatar`}</h1>\n    <p>{`Display avatar image, with default for name initials`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Avatar\\n  source={{ uri: \\'https://picsum.photos/200/200\\', width: 200, height: 200 }}\\n  // Fallbacks to name if source is not provided\\n  name=\\\"Bill Gates\\\"\\n  size=\\\"large\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Box\n    }} mdxType=\"Playground\">\n  <Avatar source={{\n        uri: 'https://picsum.photos/200/200',\n        width: 200,\n        height: 200\n      }} // Fallbacks to name if source is not provided\n      name=\"Bill Gates\" size=\"large\" mdxType=\"Avatar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Avatar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Text } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   */\n  color?: FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nconst defaultProps = {\n  name: '',\n  size: 'medium' as const,\n  isSolid: false,\n};\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const imageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n  const [ImageR, imageProps] = getOverrides(\n    StyledImage,\n    props,\n    dlv(theme, 'overrides.Avatar.Image'),\n    overrides.Image,\n  );\n\n  return (\n    <Root\n      name={name}\n      size={size}\n      isSolid={isSolid}\n      color={color}\n      testID={testID}\n      {...rootProps}\n    >\n      {imageUnavailable && (\n        <Initials\n          name={name}\n          size={size}\n          isSolid={isSolid}\n          color={color}\n          {...initialsProps}\n        />\n      )}\n      {!imageUnavailable && !!source && (\n        <ImageR\n          onError={() => setHasImageFailedLoading(true)}\n          source={source}\n          {...imageProps}\n        />\n      )}\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size?: ControlSize | number;\n  name?: string;\n  isSolid?: boolean;\n  color?: FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    testID,\n    children,\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    style,\n  } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color || (keys[hashCode(name) % keys.length] as keyof FillColors)\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends ViewProps {\n  size?: ControlSize | number;\n  name?: string;\n  isSolid?: boolean;\n  color?: FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const {\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      override={{\n        style: [\n          {\n            color:\n              appearances[\n                color ||\n                  (keys[hashCode(name) % keys.length] as keyof FillColors)\n              ].color,\n            fontSize: controlSize / 2,\n            lineHeight: controlSize,\n          },\n          style,\n        ],\n      }}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}