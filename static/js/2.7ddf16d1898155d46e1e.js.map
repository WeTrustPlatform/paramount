{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","marginLeft","marginRight","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Toggle","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","useElement","id","element","rootElem","rootElement","rootContainer","document","createElement","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","ModalBase","transparent","visible","_props$shouldLockBody","shouldLockBodyScroll","onRequestClose","_props$animationType","animationType","isUnmounting","targetElement","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","createFocusTrap","initialFocus","onDeactivate","activate","_useSpring","useSpring","springDefaultConfig","y","ReactDOM","web_cjs","div","tabIndex","ref","bottom","left","position","right","top","transform","interpolate","v","concat","zIndex","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","modal","pushState","defineProperty","addEventListener","handlePopstate","event","_this$props","go","handleEscapeKey","replaceState","removeEventListener","modalProps","ModalBase_web_ModalBase","HistoryModal_web_jsxFileName","HistoryModal","_ref$useHistory","useHistory","HistoryModal_web_HistoryModalBase","Overlay","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_3__","react_native_web_dist_exports_TouchableWithoutFeedback__WEBPACK_IMPORTED_MODULE_4__","preventDefault","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/2.86718045.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype OverlayColor = 'dark' | 'light';\n\nexport interface OverlayProps extends Omit<ViewProps, 'style'> {\n  onPress?: () => void;\n\n  /**\n   * @default \"dark\"\n   */\n  color?: OverlayColor;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<OverlayProps, ViewStyle>;\n}\n\nexport type OverlayOverride = OverrideStyle<OverlayProps, ViewStyle>;\n\nexport const Overlay = (props: OverlayProps) => {\n  const {\n    onPress = () => {\n      return;\n    },\n    color = 'dark',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View\n        style={[\n          {\n            backgroundColor:\n              color === 'dark' ? 'rgba(0,0,0,0.3)' : 'rgba(255,255,255,0.3)',\n            bottom: 0,\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n          },\n          getStyle(props, style),\n          getStyle(props, dlv(theme, 'overrides.Overlay.style')),\n        ]}\n        {...viewProps}\n      />\n    </TouchableWithoutFeedback>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}