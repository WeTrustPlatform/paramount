{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","FormField","TextInput","___WEBPACK_IMPORTED_MODULE_5__","label","description","error","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","children","_props$labelPosition","labelPosition","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","Label","position","_getOverrides4","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","style","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","color","paddingBottom","getStyle","_props$size","size","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledInput","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","hasLeftIcon","LeftIcon","hasRightIcon","RightIcon","Input","inputProps","StyledLeftIconWrapper","LeftIconWrapper","leftIconWrapperProps","StyledLeftIcon","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5___default","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","minHeight","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","backgroundColor","colors","background","greyLight","content","borderColor","border","borderWidth","text","muted","width","danger","paddingVertical","editable","name","alignItems","display","height","justifyContent","left","paddingHorizontal","zIndex","right","Fragment","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/14.d6ee4397.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormField, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"formfield\"\n    }}>{`FormField`}</h1>\n    <p>{`Enriches a field in a form to contain label, description or error messages.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<FormField\\n  label=\\\"Label\\\"\\n  description=\\\"Description for the field\\\"\\n  error=\\\"Error message\\\"\\n>\\n  <TextInput />\\n</FormField>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormField,\n      TextInput\n    }} mdxType=\"Playground\">\n  <FormField label=\"Label\" description=\"Description for the field\" error=\"Error message\" mdxType=\"FormField\">\n    <TextInput mdxType=\"TextInput\" />\n  </FormField>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormField} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport {\n  Label,\n  LabelPosition,\n  LabelProps,\n  Text,\n  TextProps,\n} from '../Typography';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: LabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = 'top',\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    { label, position: labelPosition },\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description },\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    { error },\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR {...labelRProps}>{children}</LabelR>\n      <Description {...descriptionProps} />\n      <ErrorR {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        getStyle(props, style),\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[getStyle(props, style)]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    {\n      hasLeftIcon: !!overrides.LeftIcon,\n      hasRightIcon: !!(isClearable || overrides.RightIcon),\n      size,\n      isDisabled,\n      isInvalid,\n      onValueChange,\n      value,\n      onChangeText,\n      ...textInputProps,\n    },\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon {...leftIconProps} />\n      </LeftIconWrapper>\n      <Input {...inputProps} />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon {...rightIconProps} />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    minHeight,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                minHeight: numberOfLines * minHeight,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\nexport type LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}