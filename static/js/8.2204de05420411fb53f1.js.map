{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Menu/DrawerMenu.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Menu/DrawerMenu.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Menu/DropdownMenu.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Menu/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/ArrowedPositioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/getPositionerArrow.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Intent.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/StackingOrder.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","getDrawerVariables","container","position","width","zIndex","modalContainer","getDrawerStyles","drawerVariables","containerStyle","modalContainerStyle","_native","_Modal","_Overlay","_Drawer","AnimatedView","animated","Drawer","_useSpring","children","isVisible","_props$onClose","onClose","_props$position","_props$offset","offset","space","animation","useSpring","_defineProperty2","Modal","visible","transparent","onRequestClose","_objectSpread3","Overlay","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","_react","_interopRequireDefault","_react2","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","Props","Toggle","DrawerMenu","_ref2","on","toggle","Fragment","options","isMDXComponent","_props$options","padding","Box","elevation","option","paddingTop","_Helpers","_Positioner","DropdownMenu","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","targetMeasurements","setTargetMeasurements","Positioner","content","ViewMeasure","onMeasure","_DrawerMenu","_DropdownMenu","_getPositionerArrow","ArrowedPositioned","isFullWidth","getPositionerArrowParams","arrow","getFullWidthPositionerArrow","getPositionerArrow","getPositionerVariables","positioner","getPositionerStyles","positionerVariables","positionerStyle","_constants","resolveCorrectPosition","shouldFlipBottomToTop","shouldFlipLeftToRight","shouldFlipRightToLeft","shouldFlipTopToBottom","newPosition","includes","POSITION","BOTTOM","replace","TOP","LEFT","RIGHT","getIsOverflowing","positionerMeasurements","screenLayout","defaultProps","isDynamicContent","initialMeasurements","PositionerBase","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","hasOverflowedCounter","_props$isDynamicConte","state","childrenMeasurements","isAdjustingContent","_this2","_this$props$isDynamic","setTimeout","setState","_this3","_this$props","parentHeight","_this$props$isFullWid","_this$props$onClose","_this$props$position","_this$state","Dimensions","finalTargetMeasurements","hasPositionerMeasurementsMeasured","getPositionerPositionParams","_ref3","params","left","right","top","BOTTOM_RIGHT","getPositionerFullWidthPosition","isOverflowing","TOP_LEFT","transform","translateX","TOP_RIGHT","translateY","BOTTOM_LEFT","getPositionerPosition","correctedPosition","positionerPositionStyle","measurements","isBackgroundScrollable","Component","withTheme","commonStyle","TopLeftArrow","borderTopColor","bottom","marginBottom","TopArrow","TopRightArrow","LeftArrow","_ref4","borderLeftColor","RightArrow","_ref5","borderRightColor","BottomRightArrow","_ref6","borderBottomColor","marginTop","BottomArrow","_ref7","BottomLeftArrow","_ref8","_ref9","FullWidthTopArrow","_ref10","FullWidthBottomArrow","_ref11","_ref12","_ArrowedPositioner","INTENT","info","success","warning","FOCUSED","STACKING_CONTEXT","POSITIONER","OVERLAY","TOASTER","_StackingOrder","_Intent","_Position","prototype","hasOwnProperty","_exportNames"],"mappings":"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","file":"static/js/8.fe87f882.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\nconst AnimatedView = animated(View);\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  const animation = useSpring({\n    [position]: offset,\n    from: { [position]: -600 },\n    reset: true,\n  });\n\n  return (\n    <Modal visible={isVisible} transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        {/*\n        // @ts-ignore */}\n        <AnimatedView\n          style={{\n            ...containerStyle,\n            [position]: animation[position],\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </AnimatedView>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\n","export * from './Drawer';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { DrawerMenu } from '.';\nimport { Button } from '../Button';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawermenu\"\n    }}>{`DrawerMenu`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} isInline title=\\\"Open overlay menu\\\" />\\n      <DrawerMenu\\n        options={[\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 1\\',\\n            color: \\'danger\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 2\\',\\n            color: \\'primary\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 3\\',\\n            color: \\'secondary\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 4\\',\\n            appearance: \\'minimal\\',\\n          },\\n        ]}\\n        isVisible={on}\\n        onClose={toggle}\\n      />\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      DrawerMenu,\n      Button\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} isInline title=\"Open overlay menu\" mdxType=\"Button\" />\n        <DrawerMenu options={[{\n            onPress: toggle,\n            title: 'Menu Option 1',\n            color: 'danger',\n            appearance: 'minimal'\n          }, {\n            onPress: toggle,\n            title: 'Menu Option 2',\n            color: 'primary',\n            appearance: 'minimal'\n          }, {\n            onPress: toggle,\n            title: 'Menu Option 3',\n            color: 'secondary',\n            appearance: 'minimal'\n          }, {\n            onPress: toggle,\n            title: 'Menu Option 4',\n            appearance: 'minimal'\n          }]} isVisible={on} onClose={toggle} mdxType=\"DrawerMenu\" />\n      </>}\n  </Toggle>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from '../Button';\nimport { Drawer } from '../Drawer';\nimport { Box, Spacing } from '../Layout';\n\nexport interface DrawerMenuProps {\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** List of menu options, which also take `ButtonProps` */\n  options?: ButtonProps[];\n}\n\nexport const DrawerMenu = (props: DrawerMenuProps) => {\n  const { options = [], isVisible, onClose } = props;\n  const theme = useTheme();\n\n  return (\n    <Drawer isVisible={isVisible} onClose={onClose}>\n      <Spacing padding={3}>\n        <Box\n          elevation={1}\n          borderRadius={theme.controlBorderRadius.medium}\n          borderWidth={1}\n          borderColor={theme.colors.border.default}\n        >\n          {options.map(option => (\n            <Button key={option.title} {...option} />\n          ))}\n        </Box>\n        <Spacing paddingTop={3}>\n          <Button onPress={onClose} title=\"Close\" />\n        </Spacing>\n      </Spacing>\n    </Drawer>\n  );\n};\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from '../Button';\nimport { Measurements, ViewMeasure } from '../Helpers';\nimport { Box } from '../Layout';\nimport { Positioner } from '../Positioner';\n\nexport interface DropdownMenuProps {\n  children: React.ReactNode;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** List of menu options, which also take `ButtonProps` */\n  options?: ButtonProps[];\n}\n\nexport interface DropdownMenuState {\n  targetMeasurements: Measurements;\n}\n\nexport const DropdownMenu = (props: DropdownMenuProps) => {\n  const { options = [], isVisible, onClose, children } = props;\n  const [targetMeasurements, setTargetMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      position=\"bottom\"\n      content={() => (\n        <Box\n          elevation={1}\n          borderRadius={theme.controlBorderRadius.medium}\n          borderWidth={1}\n          borderColor={theme.colors.border.default}\n          width={targetMeasurements.width}\n        >\n          {options.map(option => (\n            <Button key={option.title} {...option} />\n          ))}\n        </Box>\n      )}\n      isVisible={isVisible}\n      onClose={onClose}\n    >\n      <ViewMeasure onMeasure={setTargetMeasurements}>{children}</ViewMeasure>\n    </Positioner>\n  );\n};\n","export * from './DrawerMenu';\nexport * from './DropdownMenu';\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  getFullWidthPositionerArrow,\n  getPositionerArrow,\n} from './getPositionerArrow';\n\nexport const ArrowedPositioned = (props: PositionerProps) => {\n  const { content, isFullWidth } = props;\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      {...props}\n      content={({ position, targetMeasurements }) => {\n        const getPositionerArrowParams = {\n          position,\n          targetMeasurements,\n          theme,\n        };\n        const arrow = isFullWidth\n          ? getFullWidthPositionerArrow(getPositionerArrowParams)\n          : getPositionerArrow(getPositionerArrowParams);\n        return (\n          <>\n            {content}\n            {arrow}\n          </>\n        );\n      }}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PositionerVariables {\n  positioner: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getPositionerVariables = (theme: Theme): PositionerVariables => {\n  return {\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    positioner: {\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetPositionerStyles = (theme: Theme) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = theme => {\n  const positionerVariables = getPositionerVariables(theme);\n\n  return {\n    modalContainerStyle: positionerVariables.modalContainer,\n    positionerStyle: positionerVariables.positioner,\n  };\n};\n","import * as React from 'react';\nimport { Dimensions, ScaledSize, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Measurements, ViewMeasure } from '../Helpers';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface ContentProps {\n  positionerMeasurements: Measurements;\n  targetMeasurements: Measurements;\n  position: Position;\n}\n\nexport interface PositionerProps {\n  theme: Theme;\n  onClose?: () => void;\n  /** For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it. This is not `true` by default because it may causes small delay for the Positioner to be properly available. @default false */\n  isDynamicContent?: boolean;\n  /** Sets the positioner to cover full width. Useful when wanting to display on mobile devices a full menu. Overrides `isDynamicContent`. Ignores `right` and `left` positions. */\n  isFullWidth?: boolean;\n  children: React.ReactNode;\n  content: (props: ContentProps) => React.ReactNode;\n  /**\n   * Positioner uses window height to calculate its position, and whether it should flip to top if it at the bottom (So that it does not pop up outside the window height).\n   * However, sometimes window.height is shorter than the parent container, unnecessarily flipping it to `top`. To fix this behavior,\n   * you can pass in height of the parent so that it will use that instead of window's height\n   */\n  parentHeight?: number;\n  isVisible?: boolean;\n  position?: Position;\n  targetMeasurements?: Measurements;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\nconst DEFAULT_MARGIN = 24;\nconst DEFAULT_OFFSET = 14;\n/** Time to allow all the calculation to be done */\nconst RENDER_CALCULATION_DURATION = 700;\n\nconst resolveCorrectPosition = (position: Position) => ({\n  shouldFlipBottomToTop,\n  shouldFlipLeftToRight,\n  shouldFlipRightToLeft,\n  shouldFlipTopToBottom,\n}: {\n  shouldFlipBottomToTop: boolean;\n  shouldFlipLeftToRight: boolean;\n  shouldFlipRightToLeft: boolean;\n  shouldFlipTopToBottom: boolean;\n}) => {\n  let newPosition = position;\n\n  if (position.includes(POSITION.BOTTOM) && shouldFlipBottomToTop) {\n    newPosition = newPosition.replace(\n      POSITION.BOTTOM,\n      POSITION.TOP,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.TOP) && shouldFlipTopToBottom) {\n    newPosition = newPosition.replace(\n      POSITION.TOP,\n      POSITION.BOTTOM,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.LEFT) && shouldFlipLeftToRight) {\n    newPosition = newPosition.replace(\n      POSITION.LEFT,\n      POSITION.RIGHT,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.RIGHT) && shouldFlipRightToLeft) {\n    newPosition = newPosition.replace(\n      POSITION.RIGHT,\n      POSITION.LEFT,\n    ) as Position;\n  }\n\n  return newPosition;\n};\n\ninterface GetPositionerPositionParams {\n  screenLayout: ScaledSize;\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n  offset: number;\n}\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight:\n      position === POSITION.LEFT\n        ? positionerMeasurements.width + offset + DEFAULT_MARGIN >\n          targetMeasurements.pageX - offset\n        : positionerMeasurements.width + offset >\n          screenLayout.width - targetMeasurements.pageX,\n    shouldFlipRightToLeft:\n      position === POSITION.RIGHT\n        ? targetMeasurements.pageX +\n            targetMeasurements.width +\n            positionerMeasurements.width +\n            offset >\n          screenLayout.width - offset\n        : targetMeasurements.pageX <\n          positionerMeasurements.width + DEFAULT_MARGIN,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  });\n\n  const isOverflowing = getIsOverflowing({\n    position,\n    positionerMeasurements,\n    screenLayout,\n  });\n\n  switch (newPosition) {\n    case POSITION.TOP_LEFT:\n      return {\n        position: POSITION.TOP_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        position: POSITION.TOP_RIGHT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width -\n                targetMeasurements.pageX -\n                targetMeasurements.width,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width +\n                targetMeasurements.width,\n            }),\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.LEFT:\n      return {\n        position: POSITION.LEFT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width - targetMeasurements.pageX + offset,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width -\n                offset,\n            }),\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.RIGHT:\n      return {\n        position: POSITION.RIGHT,\n\n        left: targetMeasurements.pageX + targetMeasurements.width + offset,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        position: POSITION.BOTTOM_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nconst getPositionerFullWidthPosition = (\n  params: GetPositionerPositionParams,\n) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight: false,\n    shouldFlipRightToLeft: false,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  })\n    .replace('-left', '')\n    .replace('-right', '');\n\n  switch (newPosition) {\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nexport const getIsOverflowing = ({\n  positionerMeasurements,\n  screenLayout,\n  position,\n}: {\n  positionerMeasurements: Measurements;\n  screenLayout: ScaledSize;\n  position: Position;\n}) => {\n  if (positionerMeasurements.width > screenLayout.width - 48) {\n    return true;\n  }\n\n  return false;\n};\n\nexport interface PositionerState {\n  /** This is the adjusted measurements of the positioner when the content is of dynamic size. It adjusts several times when its position is being calculated to account for things like window overflow, margins and other layout calculations */\n  positionerMeasurements: Measurements;\n  /** Measurements of the wrapped component */\n  childrenMeasurements: Measurements;\n  /** HACK: For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it */\n  isAdjustingContent: boolean;\n}\n\nconst defaultProps = {\n  isDynamicContent: false,\n  isFullWidth: false,\n  position: POSITION.BOTTOM,\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport class PositionerBase extends React.Component<\n  PositionerProps,\n  PositionerState\n> {\n  /** Hack to get correct position of dynamic content */\n  private hasOverflowedCounter: number = 0;\n\n  constructor(props: PositionerProps) {\n    super(props);\n    const { isDynamicContent = defaultProps.isDynamicContent } = props;\n\n    this.state = {\n      childrenMeasurements: initialMeasurements,\n      isAdjustingContent: isDynamicContent,\n      positionerMeasurements: initialMeasurements,\n    };\n  }\n\n  public componentDidMount() {\n    const { isDynamicContent = defaultProps.isDynamicContent } = this.props;\n\n    if (isDynamicContent) {\n      setTimeout(() => {\n        this.setState({ isAdjustingContent: false });\n      }, RENDER_CALCULATION_DURATION);\n    }\n  }\n\n  public render() {\n    const {\n      theme,\n      getStyles,\n      children,\n      content,\n      parentHeight,\n      isVisible,\n      isFullWidth = defaultProps.isFullWidth,\n      onClose = () => null,\n      position = defaultProps.position,\n      targetMeasurements,\n    } = this.props;\n    const {\n      positionerMeasurements,\n      childrenMeasurements,\n      isAdjustingContent,\n    } = this.state;\n\n    const { positionerStyle, modalContainerStyle } = mergeStyles(\n      getPositionerStyles,\n      getStyles,\n    )(theme);\n\n    const screenLayout = Dimensions.get('window');\n\n    const finalTargetMeasurements = targetMeasurements || childrenMeasurements;\n    const hasPositionerMeasurementsMeasured =\n      positionerMeasurements.width !== 0 && positionerMeasurements.height !== 0;\n    const getPositionerPositionParams = {\n      offset: DEFAULT_OFFSET,\n      position,\n      positionerMeasurements,\n      screenLayout: {\n        ...screenLayout,\n        height: parentHeight || screenLayout.height,\n      },\n      targetMeasurements: finalTargetMeasurements,\n    };\n\n    const {\n      position: correctedPosition,\n      ...positionerPositionStyle\n    } = isFullWidth\n      ? getPositionerFullWidthPosition(getPositionerPositionParams)\n      : getPositionerPosition(getPositionerPositionParams);\n\n    return (\n      <>\n        {targetMeasurements ? (\n          children\n        ) : (\n          <ViewMeasure\n            onMeasure={measurements => {\n              this.setState({ childrenMeasurements: measurements });\n            }}\n          >\n            {children}\n          </ViewMeasure>\n        )}\n        <Modal\n          visible={isAdjustingContent || isVisible}\n          transparent\n          onRequestClose={onClose}\n          isBackgroundScrollable\n        >\n          <View style={modalContainerStyle}>\n            <ViewMeasure\n              style={{\n                ...positionerStyle,\n                ...positionerPositionStyle,\n                // Hide flash mis-positioned content\n                opacity:\n                  hasPositionerMeasurementsMeasured && !isAdjustingContent\n                    ? 1\n                    : 0,\n              }}\n              onMeasure={measurements => {\n                const isOverflowing = getIsOverflowing({\n                  position,\n                  positionerMeasurements,\n                  screenLayout,\n                });\n                /**\n                 * Positioner usually gets expected positioning after it has overflowed once.\n                 */\n\n                if (this.hasOverflowedCounter === 0) {\n                  this.setState({ positionerMeasurements: measurements });\n                } else if (!isOverflowing) {\n                  this.setState({ positionerMeasurements: measurements });\n                }\n\n                if (isOverflowing) {\n                  this.hasOverflowedCounter++;\n                }\n              }}\n            >\n              {content({\n                position: correctedPosition,\n                positionerMeasurements,\n                targetMeasurements: finalTargetMeasurements,\n              })}\n            </ViewMeasure>\n            <Overlay transparent onPress={onClose} />\n          </View>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport const Positioner = withTheme(PositionerBase);\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Position } from '../../constants';\nimport { Theme } from '../../theme';\nimport { Measurements } from '../Helpers';\n\nconst arrowWidth = 11;\nconst commonStyle = {\n  borderColor: 'transparent',\n  borderWidth: 11,\n  height: 0,\n  position: 'absolute',\n  width: 0,\n} as ViewStyle;\n\nexport const TopLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        marginBottom: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        marginBottom: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const LeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: theme.colors.border.default,\n        marginRight: -arrowWidth * 2,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: 'white',\n        marginRight: -arrowWidth * 2 + 1,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const RightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: theme.colors.border.default,\n        left: 0,\n        marginLeft: -arrowWidth * 2,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: 'white',\n        left: 0,\n        marginLeft: -arrowWidth * 2 + 1,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const BottomRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top-left':\n      return (\n        <TopLeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'top':\n      return <TopArrow theme={theme} targetMeasurements={targetMeasurements} />;\n    case 'top-right':\n      return (\n        <TopRightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'left':\n      return (\n        <LeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'right':\n      return (\n        <RightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-right':\n      return (\n        <BottomRightArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <BottomArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-left':\n      return (\n        <BottomLeftArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n\nexport const FullWidthTopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const FullWidthBottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getFullWidthPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top':\n      return (\n        <FullWidthTopArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <FullWidthBottomArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n","export * from './Positioner';\nexport * from './ArrowedPositioner';\n","export interface Intents {\n  danger: 'danger';\n  info: 'info';\n  success: 'success';\n  warning: 'warning';\n}\n\nexport type Intent = keyof Intents;\n\nexport const INTENT: Intents = {\n  danger: 'danger',\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n};\n","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","/**\n * Stacking order contains z-index values that are used through.\n * Note that the Stack component might increase the z-index for certain components.\n */\nexport default {\n  /**\n   * Used for focused buttons and controls.\n   */\n  FOCUSED: 2,\n\n  /**\n   * Used as the default for the StackingContext.\n   */\n  STACKING_CONTEXT: 5,\n\n  /**\n   * Used as the default for the Positioner.\n   */\n  POSITIONER: 10,\n\n  /**\n   * Used for the Overlay and everything that's inside such as Dialog + SideSheet.\n   */\n  OVERLAY: 20,\n\n  /**\n   * Used for the toasts in the toaster. Appears on top of everything else.\n   */\n  TOASTER: 30,\n};\n","export { default as StackingOrder } from './StackingOrder';\nexport { Intent, Intents } from './Intent';\nexport * from './Position';\n"],"sourceRoot":""}