{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Svg/Svg.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Star.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["CounterState","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","count","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrement","decrementBy","increment","incrementBy","set","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Rating","___WEBPACK_IMPORTED_MODULE_5__","_ref2","rating","___WEBPACK_IMPORTED_MODULE_6__","size","onChange","of","parentName","className","isMDXComponent","getRatingStyles","theme","_ref$size","_ref$color","color","starSize","isControlSize","controlHeights","containerStyle","flexDirection","touchableStyle","paddingRight","controlPaddings","medium","starColor","getTextColor","colors","text","prepare","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","clean","objectWithoutProperties","transform","push","concat","length","join","styleProp","cleanedProps","styles","StyleSheet","Symbol","iterator","assign","apply","toConsumableArray","esm_extends","Circle","createElement","ClipPath","Defs","Ellipse","G","x","y","rest","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Text","TSpan","TextPath","Use","Mask","Pattern","Star","_props$size","_props$isFilled","isFilled","useTheme","coercedSize","String","finalColor","fills","subtle","yellow","backgroundColor","react","Svg_web_Svg","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Svg_web_Polygon","points","_props$value","_props$maxRating","maxRating","getStyles","_props$onChange","_mergeStyles","mergeStyles","View","Rating_jsxFileName","Array","map","_","index","currentValue","isWithinRating","isLast","TouchableOpacity","key","objectSpread","onPress","Star_Star","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/15.731d309d.js","sourcesContent":["import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { CounterState, Rating } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rating\"\n    }}>{`Rating`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<CounterState initial={3}>\\n  {({ count: rating, set }) => (\\n    <Rating value={rating} size=\\\"small\\\" onChange={value => set(value)} />\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      CounterState,\n      Rating\n    }} mdxType=\"Playground\">\n  <CounterState initial={3} mdxType=\"CounterState\">\n    {({\n          count: rating,\n          set\n        }) => <Rating value={rating} size=\"small\" onChange={value => set(value)} mdxType=\"Rating\" />}\n  </CounterState>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Rating} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RatingStyles {\n  touchableStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  starColor: string;\n  starSize: number;\n}\n\ngetStyles={(RatingProps, Theme) => RatingStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <TouchableOpacity touchableStyle>\n    <Star color={starColor} size={starSize} />\n  </TouchableOpacity>\n  // ...repeat\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { RatingProps } from './Rating';\n\nexport type GetRatingStyles = (\n  progressStylesProps: RatingProps,\n  theme: Theme,\n) => Partial<RatingStyles>;\n\nexport interface RatingStyles {\n  touchableStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  starColor: string;\n  starSize: number;\n}\n\nexport const getRatingStyles: GetRatingStyles = (\n  { size = 'medium', color = 'primary' },\n  theme,\n) => {\n  const starSize = isControlSize(size) ? theme.controlHeights[size] : size;\n  const padding = isControlSize(size)\n    ? theme.controlPaddings[size]\n    : theme.controlPaddings.medium;\n\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n    touchableStyle: {\n      paddingRight: padding,\n    },\n\n    starColor: getTextColor(theme.colors.text)(color),\n    starSize,\n  };\n};\n","// PORTED IMPLEMENTATION FROM https://github.com/react-native-community/react-native-svg/blob/master/index.web.js\nimport * as React from 'react';\nimport {\n  CircleProps,\n  ClipPathProps,\n  DefinitionProps,\n  EllipseProps,\n  GProps,\n  ImageProps,\n  LinearGradientProps,\n  LineProps,\n  MaskProps,\n  PathProps,\n  PatternProps,\n  PolygonProps,\n  PolylineProps,\n  RadialGradientProps,\n  RectProps,\n  StopProps,\n  SvgProps,\n  SymbolProps,\n  TextPathProps,\n  TextProps,\n  TSpanProps,\n  UseProps,\n} from 'react-native-svg';\n// @ts-ignore\nimport { createElement, StyleSheet } from 'react-native-web';\n\n// Kept in separate file, to avoid name collision with Symbol element\n// @ts-ignore\nconst resolve = (styleProp, cleanedProps) => {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      // @ts-ignore\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n};\n\nexport const prepare = (props: any) => {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    ...clean\n  } = props;\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  const styles: StyleSheet = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nexport const Circle = (props: CircleProps) => {\n  return createElement('circle', prepare(props));\n};\n\nexport const ClipPath = (props: ClipPathProps) => {\n  return createElement('clipPath', prepare(props));\n};\n\nexport const Defs = (props: DefinitionProps) => {\n  return createElement('defs', prepare(props));\n};\n\nexport const Ellipse = (props: EllipseProps) => {\n  return createElement('ellipse', prepare(props));\n};\n\nexport const G = (props: GProps) => {\n  const { x, y, ...rest } = props;\n\n  if ((x || y) && !rest.translate) {\n    rest.translate = `${x || 0}, ${y || 0}`;\n  }\n\n  return createElement('g', prepare(rest));\n};\n\nexport const Image = (props: ImageProps) => {\n  return createElement('image', prepare(props));\n};\n\nexport const Line = (props: LineProps) => {\n  return createElement('line', prepare(props));\n};\n\nexport const LinearGradient = (props: LinearGradientProps) => {\n  return createElement('linearGradient', prepare(props));\n};\n\nexport const Path = (props: PathProps) => {\n  return createElement('path', prepare(props));\n};\n\nexport const Polygon = (props: PolygonProps) => {\n  return createElement('polygon', prepare(props));\n};\n\nexport const Polyline = (props: PolylineProps) => {\n  return createElement('polyline', prepare(props));\n};\n\nexport const RadialGradient = (props: RadialGradientProps) => {\n  return createElement('radialGradient', prepare(props));\n};\n\nexport const Rect = (props: RectProps) => {\n  return createElement('rect', prepare(props));\n};\n\nexport const Stop = (props: StopProps) => {\n  return createElement('stop', prepare(props));\n};\n\nexport const Svg = (props: SvgProps) => {\n  return createElement('svg', prepare(props));\n};\n\nexport const Symbol = (props: SymbolProps) => {\n  return createElement('symbol', prepare(props));\n};\n\nexport const Text = (props: TextProps) => {\n  return createElement('text', prepare(props));\n};\n\nexport const TSpan = (props: TSpanProps) => {\n  return createElement('tspan', prepare(props));\n};\n\nexport const TextPath = (props: TextPathProps) => {\n  return createElement('textPath', prepare(props));\n};\n\nexport const Use = (props: UseProps) => {\n  return createElement('use', prepare(props));\n};\n\nexport const Mask = (props: MaskProps) => {\n  return createElement('mask', prepare(props));\n};\n\nexport const Pattern = (props: PatternProps) => {\n  return createElement('pattern', prepare(props));\n};\n\nexport default Svg;\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Polygon, Svg } from '../Svg';\n\nexport interface StarProps {\n  size?: number;\n  isFilled?: boolean;\n  color?: string;\n}\n\nexport const Star = (props: StarProps) => {\n  const { size = 24, color, isFilled = false } = props;\n  const theme = useTheme();\n\n  const coercedSize = String(size);\n\n  const finalColor = color || theme.fills.subtle.yellow.backgroundColor;\n\n  return (\n    <Svg\n      width={coercedSize}\n      height={coercedSize}\n      viewBox={`0 0 24 24`}\n      fill={isFilled ? finalColor : 'none'}\n      stroke={finalColor}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <Polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n    </Svg>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { ControlSize, TextColor, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetRatingStyles, getRatingStyles } from './Rating.styles';\nimport { Star } from './Star';\n\nexport interface RatingProps {\n  /**\n   * Rating value\n   * @default 0\n   */\n  value?: number;\n\n  /**\n   * Maximum rating from 0.\n   * @default 5\n   */\n  maxRating?: number;\n\n  /**\n   * The size of the rating star.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Called when a rating star is pressed\n   */\n  onChange?: (value: number) => void;\n\n  /**\n   * Color of the rating stars\n   */\n  color?: TextColor;\n\n  /** Callback to get element styles. */\n  getStyles?: GetRatingStyles;\n}\n\nexport const Rating = (props: RatingProps) => {\n  const {\n    value = 0,\n    maxRating = 5,\n    getStyles,\n    onChange = () => undefined,\n  } = props;\n  const theme = useTheme();\n\n  const { containerStyle, starColor, starSize, touchableStyle } = mergeStyles(\n    getRatingStyles,\n    getStyles,\n    theme.components.getRatingStyles,\n  )(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {new Array(maxRating).fill(0).map((_, index) => {\n        const currentValue = index + 1;\n        const isWithinRating = currentValue <= value;\n        const isLast = currentValue === maxRating;\n\n        return (\n          <TouchableOpacity\n            key={currentValue}\n            style={{\n              ...touchableStyle,\n              ...(isLast ? { paddingRight: 0 } : {}),\n            }}\n            onPress={() => onChange(currentValue)}\n          >\n            <Star color={starColor} size={starSize} isFilled={isWithinRating} />\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}