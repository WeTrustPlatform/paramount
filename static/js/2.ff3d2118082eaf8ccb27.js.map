{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","_interopRequireDefault","withTheme","props","theme","createElement","default","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","plain","focusColor","tint2","danger","primary","secondary","tint1","borderColor","border","loadingBackgroundColor","overlay","focus","focusLight","outline","borderWidth","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","Button","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","directionToFlexDirectionMap","horizontal","vertical","children","_props$direction","direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","cloneElement","borderBottomWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftWidth","Box","_ButtonGroup","_BackButton","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","o","key","marginLeft","marginRight","opacity","width","Component","defaultProps","value","_LoadingDots","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","useContext","ThemeContext","Modal","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModal","componentDidUpdate","previousProps","visible","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","PureComponent","_ref","_ref$useHistory","useHistory","HistoryModalweb","_HistoryModal","_focusTrap","ReactDOM","ModalBase","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","position","right","top","zIndex","ModalContent","maxWidth","_Modal","_FormModal","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/2.9d34a2d3.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { withTheme } from '../../theme';\nimport Button, { ButtonProps } from './Button';\n\nconst BackButton = (props: ButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.tint1,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.danger.default,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.danger.focus,\n          loadingBackgroundColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primary.default,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primary.focus,\n          loadingBackgroundColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondary.default,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondary.focus,\n          loadingBackgroundColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nconst ButtonBase = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonBase);\nexport default Button;\n","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\n","export { default as Button, ButtonProps } from './Button';\nexport { default as ButtonGroup, ButtonGroupProps } from './ButtonGroup';\nexport { default as BackButton } from './BackButton';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport { Box } from '../Layout';\nimport ModalContent from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nconst CloseableModalBase = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport const CloseableModal = CloseableModalBase;\n\nexport default CloseableModal;\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport CloseableModal, { CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nconst FormModalBase = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n\nexport const FormModal = FormModalBase;\n\nexport default FormModal;\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport ModalBase from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModal extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport default ({ useHistory = false, ...props }: HistoryModalProps) => {\n  if (useHistory) return <HistoryModal {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModalweb.displayName = \"HistoryModalweb\";\n    // @ts-ignore\n    HistoryModalweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModalweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\"] = { docgenInfo: HistoryModalweb.__docgenInfo, name: \"HistoryModalweb\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as HistoryModal, HistoryModalProps } from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nclass ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n\nexport default ModalBase;\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nconst ModalContentBase = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const ModalContent = ModalContentBase;\n\nexport default ModalContent;\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\nexport { default as ModalBase, ModalBaseProps } from './ModalBase';\nexport { default as HistoryModal, HistoryModalProps } from './HistoryModal';\nexport { default as FormModal, FormModalProps } from './FormModal';\nexport {\n  default as CloseableModal,\n  CloseableModalProps,\n} from './CloseableModal';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}