{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Heading","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","accessibilityLevel","_props$align","align","_props$color","weight","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","sizeStyle","getHeadingSize","headingSizes","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","accessibilityRole","Platform","OS","aria-level","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","getTextColor","text","fontFamily","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","fontSize"],"mappings":"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","file":"static/js/30.aa7c3dd9.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Heading } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"heading\"\n    }}>{`Heading`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Heading size=\\\"xxxlarge\\\">xxxlarge</Heading>\\n  <Heading size=\\\"xxlarge\\\">xxlarge</Heading>\\n  <Heading size=\\\"xlarge\\\">xlarge</Heading>\\n  <Heading size=\\\"large\\\">large</Heading>\\n  <Heading size=\\\"medium\\\">medium</Heading>\\n  <Heading size=\\\"small\\\">small</Heading>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Heading\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Heading size=\"xxxlarge\" mdxType=\"Heading\">xxxlarge</Heading>\n    <Heading size=\"xxlarge\" mdxType=\"Heading\">xxlarge</Heading>\n    <Heading size=\"xlarge\" mdxType=\"Heading\">xlarge</Heading>\n    <Heading size=\"large\" mdxType=\"Heading\">large</Heading>\n    <Heading size=\"medium\" mdxType=\"Heading\">medium</Heading>\n    <Heading size=\"small\" mdxType=\"Heading\">small</Heading>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Heading} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Platform,\n  Text as RNText,\n  TextProps as RNTextProps,\n  TextStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n} from '../../theme/Theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport { getFontWeight, getTextColor } from './Text';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends Omit<RNTextProps, 'style'> {\n  /** Text content */\n  children?: React.ReactNode;\n\n  /**\n   * Size of the heading.\n   * @default \"medium\"\n   */\n  size?: HeadingSize;\n\n  /**\n   * Alignment of the heading.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Color of the heading.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Weight of the heading.\n   * @default headingSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * Style callback or TextStyle object\n   */\n  style?: Style<HeadingProps, TextStyle>;\n\n  /**\n   * (Web only): Corresponding h1, h2, h3... levels\n   */\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\nexport type HeadingOverride = OverrideStyle<HeadingProps, TextStyle>;\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    children,\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return (\n    <RNText\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={[\n        {\n          ...sizeStyle,\n          color: getTextColor(theme.colors.text)(color),\n          fontFamily: theme.fontFamilies.heading,\n          fontWeight:\n            getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n          textAlign: align,\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Heading.style')),\n      ]}\n      {...textProps}\n    >\n      {children}\n    </RNText>\n  );\n};\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n"],"sourceRoot":""}