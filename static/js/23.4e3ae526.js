(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"./src/components/Drawer/Drawer.mdx":function(e,t,n){var r=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=x;var o=r(n("./node_modules/@babel/runtime/helpers/extends.js")),l=r(n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),s=r(n("./node_modules/react/index.js")),a=n("./node_modules/@mdx-js/react/dist/index.es.js"),i=n("./node_modules/docz/dist/index.esm.js"),d=n("./node_modules/react-powerplug/dist/react-powerplug.esm.js"),u=n("./src/components/Drawer/index.ts"),c=n("./src/components/Button/index.ts"),p=n("./src/components/Box/index.ts"),m=n("./src/components/Typography/index.ts"),y={},g="wrapper";function x(e){var t=e.components,n=(0,l.default)(e,["components"]);return(0,a.mdx)(g,(0,o.default)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"drawer"},"Drawer"),(0,a.mdx)("h3",{id:"usage"},"Usage"),(0,a.mdx)(i.Playground,{__position:0,__code:"<Drawer />\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} isInline title=\"Open drawer menu\" />\n      <Drawer\n        space={null} // px or %, null fits the content\n        offset={0}\n        position=\"bottom\"\n        isVisible={on}\n        onClose={toggle}\n        getStyles={(props, theme) => ({\n          modalContainerStyle: {},\n          containerStyle: {},\n        })}\n      >\n        <Box padding={24}>\n          <Box elevation={1} backgroundColor=\"white\" borderRadius={4}>\n            {[\n              {\n                onPress: toggle,\n                title: 'Menu Option 1',\n                color: 'danger',\n              },\n              {\n                onPress: toggle,\n                title: 'Menu Option 2',\n                color: 'primary',\n              },\n              {\n                onPress: toggle,\n                title: 'Menu Option 3',\n                color: 'secondary',\n              },\n              {\n                onPress: toggle,\n                title: 'Menu Option 4',\n              },\n            ].map(option => (\n              <Button key={option.title} appearance=\"minimal\" {...option} />\n            ))}\n          </Box>\n          <Box paddingTop={24}>\n            <Button onPress={toggle} title=\"Close\" />\n          </Box>\n        </Box>\n      </Drawer>\n    </>\n  )}\n</Toggle>",__scope:{props:this?this.props:n,Playground:i.Playground,Props:i.Props,Toggle:d.Toggle,Drawer:u.Drawer,Button:c.Button,Box:p.Box,Text:m.Text},mdxType:"Playground"},(0,a.mdx)(u.Drawer,{mdxType:"Drawer"}),(0,a.mdx)(d.Toggle,{mdxType:"Toggle"},function(e){var t=e.on,n=e.toggle;return(0,a.mdx)(s.default.Fragment,null,(0,a.mdx)(c.Button,{onPress:n,isInline:!0,title:"Open drawer menu",mdxType:"Button"}),(0,a.mdx)(u.Drawer,{space:null,offset:0,position:"bottom",isVisible:t,onClose:n,getStyles:function(e,t){return{modalContainerStyle:{},containerStyle:{}}},mdxType:"Drawer"},(0,a.mdx)(p.Box,{padding:24,mdxType:"Box"},(0,a.mdx)(p.Box,{elevation:1,backgroundColor:"white",borderRadius:4,mdxType:"Box"},[{onPress:n,title:"Menu Option 1",color:"danger"},{onPress:n,title:"Menu Option 2",color:"primary"},{onPress:n,title:"Menu Option 3",color:"secondary"},{onPress:n,title:"Menu Option 4"}].map(function(e){return(0,a.mdx)(c.Button,(0,o.default)({key:e.title,appearance:"minimal"},e,{mdxType:"Button"}))})),(0,a.mdx)(p.Box,{paddingTop:24,mdxType:"Box"},(0,a.mdx)(c.Button,{onPress:n,title:"Close",mdxType:"Button"})))))})),(0,a.mdx)("h3",{id:"variants"},"Variants"),(0,a.mdx)(i.Playground,{__position:1,__code:'<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title="Open bottom drawer" />\n      <Drawer space="30%" isVisible={on} onClose={toggle}>\n        <Box width="100%" height="100%" backgroundColor="white" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title="Open top drawer" />\n      <Drawer space="30%" position="top" isVisible={on} onClose={toggle}>\n        <Box width="100%" height="100%" backgroundColor="white" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title="Open left drawer" />\n      <Drawer space="30%" position="left" isVisible={on} onClose={toggle}>\n        <Box width="100%" height="100%" backgroundColor="white" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title="Open right drawer" />\n      <Drawer space="30%" position="right" isVisible={on} onClose={toggle}>\n        <Box width="100%" height="100%" backgroundColor="white" />\n      </Drawer>\n    </>\n  )}\n</Toggle>',__scope:{props:this?this.props:n,Playground:i.Playground,Props:i.Props,Toggle:d.Toggle,Drawer:u.Drawer,Button:c.Button,Box:p.Box,Text:m.Text},mdxType:"Playground"},(0,a.mdx)(d.Toggle,{mdxType:"Toggle"},function(e){var t=e.on,n=e.toggle;return(0,a.mdx)(s.default.Fragment,null,(0,a.mdx)(c.Button,{onPress:n,title:"Open bottom drawer",mdxType:"Button"}),(0,a.mdx)(u.Drawer,{space:"30%",isVisible:t,onClose:n,mdxType:"Drawer"},(0,a.mdx)(p.Box,{width:"100%",height:"100%",backgroundColor:"white",mdxType:"Box"})))}),(0,a.mdx)(d.Toggle,{mdxType:"Toggle"},function(e){var t=e.on,n=e.toggle;return(0,a.mdx)(s.default.Fragment,null,(0,a.mdx)(c.Button,{onPress:n,title:"Open top drawer",mdxType:"Button"}),(0,a.mdx)(u.Drawer,{space:"30%",position:"top",isVisible:t,onClose:n,mdxType:"Drawer"},(0,a.mdx)(p.Box,{width:"100%",height:"100%",backgroundColor:"white",mdxType:"Box"})))}),(0,a.mdx)(d.Toggle,{mdxType:"Toggle"},function(e){var t=e.on,n=e.toggle;return(0,a.mdx)(s.default.Fragment,null,(0,a.mdx)(c.Button,{onPress:n,title:"Open left drawer",mdxType:"Button"}),(0,a.mdx)(u.Drawer,{space:"30%",position:"left",isVisible:t,onClose:n,mdxType:"Drawer"},(0,a.mdx)(p.Box,{width:"100%",height:"100%",backgroundColor:"white",mdxType:"Box"})))}),(0,a.mdx)(d.Toggle,{mdxType:"Toggle"},function(e){var t=e.on,n=e.toggle;return(0,a.mdx)(s.default.Fragment,null,(0,a.mdx)(c.Button,{onPress:n,title:"Open right drawer",mdxType:"Button"}),(0,a.mdx)(u.Drawer,{space:"30%",position:"right",isVisible:t,onClose:n,mdxType:"Drawer"},(0,a.mdx)(p.Box,{width:"100%",height:"100%",backgroundColor:"white",mdxType:"Box"})))})))}x&&x===Object(x)&&Object.isExtensible(x)&&Object.defineProperty(x,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Drawer/Drawer.mdx"}}),x.isMDXComponent=!0},"./src/components/Drawer/Drawer.styles.ts":function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getDrawerStyles=void 0,"undefined"!==typeof DrawerStyles&&DrawerStyles&&DrawerStyles===Object(DrawerStyles)&&Object.isExtensible(DrawerStyles)&&Object.defineProperty(DrawerStyles,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"DrawerStyles",filename:"src/components/Drawer/Drawer.styles.ts"}}),"undefined"!==typeof GetDrawerStyles&&GetDrawerStyles&&GetDrawerStyles===Object(GetDrawerStyles)&&Object.isExtensible(GetDrawerStyles)&&Object.defineProperty(GetDrawerStyles,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"GetDrawerStyles",filename:"src/components/Drawer/Drawer.styles.ts"}});var n=function(e,t){return{containerStyle:{position:"absolute",width:"100%",zIndex:1},modalContainerStyle:{alignItems:"center",display:"flex",height:"100%",justifyContent:"center",width:"100%"}}};t.getDrawerStyles=n,n&&n===Object(n)&&Object.isExtensible(n)&&Object.defineProperty(n,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getDrawerStyles",filename:"src/components/Drawer/Drawer.styles.ts"}})},"./src/components/Drawer/Drawer.tsx":function(e,t,n){var r=n("./node_modules/@babel/runtime/helpers/interopRequireWildcard.js"),o=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.Drawer=void 0;var l=o(n("./node_modules/@babel/runtime/helpers/objectSpread.js")),s=o(n("./node_modules/@babel/runtime/helpers/defineProperty.js")),a=r(n("./node_modules/react/index.js")),i=n("./node_modules/react-native-web/dist/index.js"),d=n("./node_modules/react-spring/native.cjs.js"),u=n("./src/constants/Animation.ts"),c=n("./src/theme/index.ts"),p=n("./src/utils/mergeStyles.ts"),m=n("./src/components/Modal/index.ts"),y=n("./src/components/Overlay/index.ts"),g=n("./src/components/Drawer/Drawer.styles.ts"),x=(0,d.animated)(i.View);"undefined"!==typeof DrawerProps&&DrawerProps&&DrawerProps===Object(DrawerProps)&&Object.isExtensible(DrawerProps)&&Object.defineProperty(DrawerProps,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"DrawerProps",filename:"src/components/Drawer/Drawer.tsx"}});var b=function(e){var t,n=e.children,r=e.isVisible,o=e.onClose,b=void 0===o?function(){return null}:o,f=e.position,w=void 0===f?"bottom":f,O=e.offset,v=void 0===O?0:O,D=e.space,h=e.getStyles,P=(0,c.useTheme)(),_=(0,p.mergeStyles)(g.getDrawerStyles,h,P.components.getDrawerStyles)({},P),j=_.modalContainerStyle,S=_.containerStyle,T=(0,d.useSpring)((t={},(0,s.default)(t,w,v),(0,s.default)(t,"config",u.springDefaultConfig),(0,s.default)(t,"from",(0,s.default)({},w,-600)),(0,s.default)(t,"reset",!0),t));return a.createElement(m.Modal,{visible:r,transparent:!0,onRequestClose:b},a.createElement(i.View,{style:j},a.createElement(x,{style:(0,l.default)({},S,(0,s.default)({},w,T[w]),("left"===w||"right"===w)&&D&&{height:"100%",width:D},("bottom"===w||"top"===w)&&D&&{height:D,width:"100%"})},n),a.createElement(y.Overlay,{onPress:b})))};t.Drawer=b,b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Drawer",filename:"src/components/Drawer/Drawer.tsx"}})},"./src/components/Drawer/index.ts":function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./src/components/Drawer/Drawer.tsx");Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}})})},"./src/components/Overlay/Overlay.styles.ts":function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getOverlayStyles=void 0,"undefined"!==typeof OverlayStyles&&OverlayStyles&&OverlayStyles===Object(OverlayStyles)&&Object.isExtensible(OverlayStyles)&&Object.defineProperty(OverlayStyles,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"OverlayStyles",filename:"src/components/Overlay/Overlay.styles.ts"}}),"undefined"!==typeof OverlayStylesProps&&OverlayStylesProps&&OverlayStylesProps===Object(OverlayStylesProps)&&Object.isExtensible(OverlayStylesProps)&&Object.defineProperty(OverlayStylesProps,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"OverlayStylesProps",filename:"src/components/Overlay/Overlay.styles.ts"}}),"undefined"!==typeof GetOverlayStyles&&GetOverlayStyles&&GetOverlayStyles===Object(GetOverlayStyles)&&Object.isExtensible(GetOverlayStyles)&&Object.defineProperty(GetOverlayStyles,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"GetOverlayStyles",filename:"src/components/Overlay/Overlay.styles.ts"}});var n=function(e,t){return{overlayStyle:{backgroundColor:e.transparent?"transparent":t.colors.background.overlay,bottom:0,cursor:"auto",height:"100%",left:0,position:"absolute",right:0,top:0,width:"100%"}}};t.getOverlayStyles=n,n&&n===Object(n)&&Object.isExtensible(n)&&Object.defineProperty(n,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"getOverlayStyles",filename:"src/components/Overlay/Overlay.styles.ts"}})},"./src/components/Overlay/Overlay.tsx":function(e,t,n){var r=n("./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");Object.defineProperty(t,"__esModule",{value:!0}),t.Overlay=void 0;var o=r(n("./node_modules/react/index.js")),l=n("./node_modules/react-native-web/dist/index.js"),s=n("./src/theme/index.ts"),a=n("./src/utils/mergeStyles.ts"),i=n("./src/components/Overlay/Overlay.styles.ts"),d=function(e){var t=e.onPress,n=e.transparent,r=void 0!==n&&n,d=e.getStyles,u=(0,s.useTheme)(),c=(0,a.mergeStyles)(i.getOverlayStyles,d,u.components.getOverlayStyles)({transparent:r},u).overlayStyle;return o.createElement(l.TouchableWithoutFeedback,{onPress:function(e){e.preventDefault(),t()}},o.createElement(l.View,{style:c}))};t.Overlay=d,d&&d===Object(d)&&Object.isExtensible(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"Overlay",filename:"src/components/Overlay/Overlay.tsx"}})},"./src/components/Overlay/index.ts":function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n("./src/components/Overlay/Overlay.tsx");Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}})})}}]);
//# sourceMappingURL=23.091433530346a1cb9643.js.map