{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPicker.constants.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPicker.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPicker.utils.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPickerItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/WheelPicker/WheelPicker.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","_ref$size","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","getTextInputStyles","_ref$isClearable","isClearable","_ref$isDisabled","isDisabled","_ref$isInvalid","isInvalid","numberOfLines","hasLeftIcon","leftIcon","hasRightIcon","rightIcon","controlHeight","controlHeights","containerStyle","position","inputStyle","objectSpread","content","borderColor","border","borderRadius","controlBorderRadius","borderWidth","height","paddingLeft","controlPaddings","paddingRight","width","textSizes","greyDark","danger","paddingVertical","leftContainerStyle","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","placeholderTextColor","muted","rightContainerStyle","right","TextInputBase","getStyles","innerRef","_props$isClearable","_props$isDisabled","_props$onClear","onClear","value","textContentType","_props$onChangeText","onChangeText","placeholderTextColorProp","textInputProps","objectWithoutProperties","_mergeStyles","mergeStyles","react","View","_jsxFileName","TextInput","esm_extends","ref","editable","TouchableOpacity","onPress","Icon_web","TextInput_TextInputBase","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","_ref$color","_ref$align","align","weight","_ref$isItalic","isItalic","transform","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","Text","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","components","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","WheelPicker","___WEBPACK_IMPORTED_MODULE_6__","month","day","year","_ref2","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_7__","options","label","onValueChange","console","log","Array","fill","map","v","i","of","parentName","className","isMDXComponent","ITEM_HEIGHT","getWheelPickerStyles","bottomOverlayStyle","borderStyle","borderTopWidth","top","flex","listContainerStyle","Platform","OS","overflowY","scrollSnapType","upperOverlayStyle","borderBottomWidth","makePaddedOptions","toConsumableArray","getOptionFromOptions","scrollPosition","index","Math","round","finalIndex","abs","length","WheelPickerItem","option","scrollSnapAlign","initialValue","_props$onValueChange","optionsWithClones","listRef","getOption","scrollToValue","smooth","arguments","undefined","current","findIndex","o","scrollTo","behavior","handleScroll","event","selectedOption","currentTarget","scrollTop","selectValue","WheelPicker_web_jsxFileName","onScroll","key","pointerEvents","palette","lightest","light","base","dark","darkest","small","medium","large","overlay","greyLight","greyDefault","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/7.6955d756.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size = 24 }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TextInputProps } from './TextInput';\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport type GetTextInputStyles = (\n  props: TextInputProps,\n  theme: Theme,\n) => TextInputStyles;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    numberOfLines,\n    leftIcon,\n    rightIcon,\n  },\n  theme,\n) => {\n  const hasLeftIcon = !!leftIcon;\n  const hasRightIcon = !!(rightIcon || isClearable);\n  const controlHeight = theme.controlHeights[size];\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    inputStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderRadius: theme.controlBorderRadius[size],\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size],\n      paddingRight: theme.controlPaddings[size],\n      width: '100%',\n      ...theme.textSizes[size],\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n      ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n      ...(numberOfLines\n        ? {\n            height: numberOfLines * controlHeight,\n            paddingVertical: 16,\n          }\n        : {}),\n      ...(hasLeftIcon && { paddingLeft: 40 }),\n      ...(hasRightIcon && { paddingRight: 40 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n      zIndex: 1,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  GetTextInputStyles,\n  getTextInputStyles,\n  TextInputStyles,\n} from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Icon placed on the left side\n   */\n  leftIcon?: React.ReactNode;\n\n  /**\n   * Icon placed on the left side\n   */\n  rightIcon?: React.ReactNode;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n\n  /** Use `ref` instead */\n  innerRef?: React.Ref<RNTextInput>;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles>\n  >;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    getStyles,\n    innerRef,\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    leftIcon,\n    onClear = () => {\n      return;\n    },\n    rightIcon,\n    size = 'medium',\n    value,\n    textContentType,\n    onChangeText = () => {\n      return;\n    },\n    placeholderTextColor: placeholderTextColorProp,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    inputStyle,\n    placeholderTextColor,\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n  } = mergeStyles(getTextInputStyles, getStyles)(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {leftIcon && <View style={leftContainerStyle}>{leftIcon}</View>}\n      {/*\n      // @ts-ignore: name prop being passed for web */}\n      <RNTextInput\n        ref={innerRef}\n        style={inputStyle}\n        editable={!isDisabled}\n        placeholderTextColor={placeholderTextColorProp || placeholderTextColor}\n        name={textContentType}\n        value={value}\n        onChangeText={onChangeText}\n        textContentType={textContentType}\n        {...textInputProps}\n      />\n      {((value && isClearable) || rightIcon) && (\n        <View style={rightContainerStyle}>\n          {value && isClearable ? (\n            <TouchableOpacity\n              onPress={() => {\n                onChangeText('');\n                onClear();\n              }}\n            >\n              <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n            </TouchableOpacity>\n          ) : (\n            rightIcon\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, WheelPicker, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"wheelpicker-experimental\"\n    }}>{`WheelPicker (Experimental)`}</h1>\n    <Playground __position={0} __code={'<State initial={{ month: \\'March\\', day: \\'15\\', year: \\'2019\\' }}>\\n  {({ state, setState }) => (\\n    <Box flexDirection=\\\"row\\\">\\n      <WheelPicker\\n        value=\\\"May\\\"\\n        options={[\\n          { label: \\'January\\', value: \\'January\\' },\\n          { label: \\'February\\', value: \\'February\\' },\\n          { label: \\'March\\', value: \\'March\\' },\\n          { label: \\'April\\', value: \\'April\\' },\\n          { label: \\'May\\', value: \\'May\\' },\\n          { label: \\'June\\', value: \\'June\\' },\\n          { label: \\'July\\', value: \\'July\\' },\\n          { label: \\'August\\', value: \\'August\\' },\\n          { label: \\'September\\', value: \\'September\\' },\\n          { label: \\'October\\', value: \\'October\\' },\\n          { label: \\'November\\', value: \\'November\\' },\\n          { label: \\'December\\', value: \\'December\\' },\\n        ]}\\n        onValueChange={value => console.log(value)}\\n      />\\n      <WheelPicker\\n        options={new Array(31)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${i + 1}`, value: `${i + 1}` }))}\\n        onValueChange={value => console.log(value)}\\n      />\\n      <WheelPicker\\n        options={new Array(50)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${2000 + i}`, value: `${2000 + i}` }))}\\n        onValueChange={value => console.log(value)}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      WheelPicker,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        month: 'March',\n        day: '15',\n        year: '2019'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box flexDirection=\"row\" mdxType=\"Box\">\n        <WheelPicker value=\"May\" options={[{\n            label: 'January',\n            value: 'January'\n          }, {\n            label: 'February',\n            value: 'February'\n          }, {\n            label: 'March',\n            value: 'March'\n          }, {\n            label: 'April',\n            value: 'April'\n          }, {\n            label: 'May',\n            value: 'May'\n          }, {\n            label: 'June',\n            value: 'June'\n          }, {\n            label: 'July',\n            value: 'July'\n          }, {\n            label: 'August',\n            value: 'August'\n          }, {\n            label: 'September',\n            value: 'September'\n          }, {\n            label: 'October',\n            value: 'October'\n          }, {\n            label: 'November',\n            value: 'November'\n          }, {\n            label: 'December',\n            value: 'December'\n          }]} onValueChange={value => console.log(value)} mdxType=\"WheelPicker\" />\n        <WheelPicker options={new Array(31).fill(0).map((v, i) => ({\n            label: `${i + 1}`,\n            value: `${i + 1}`\n          }))} onValueChange={value => console.log(value)} mdxType=\"WheelPicker\" />\n        <WheelPicker options={new Array(50).fill(0).map((v, i) => ({\n            label: `${2000 + i}`,\n            value: `${2000 + i}`\n          }))} onValueChange={value => console.log(value)} mdxType=\"WheelPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={WheelPicker} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`WheelPickerStyles {\n  containerStyle: ViewStyle;\n  listContainerStyle: ViewStyle;\n  upperOverlayStyle: ViewStyle;\n  bottomOverlayStyle: ViewStyle;\n}\n\ngetStyles={(WheelPickerProps, Theme) => WheelPickerStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <FlatList listContainerStyle>\n    <WheelPickerItem key={option.value} option={option} />\n  </FlatList>\n  <View upperOverlayStyle />\n  <View bottomOverlayStyle />\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","export const ITEM_HEIGHT = 40;\nexport const ITEM_COUNT = 3;\nexport const SCROLL_PICKER_HEIGHT = ITEM_HEIGHT * ITEM_COUNT;\n","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { WheelPickerProps } from './WheelPicker';\nimport { ITEM_HEIGHT, SCROLL_PICKER_HEIGHT } from './WheelPicker.constants';\n\nexport interface WheelPickerStyles {\n  containerStyle: ViewStyle;\n  listContainerStyle: Omit<ViewStyle, 'transform'>;\n  upperOverlayStyle: ViewStyle;\n  bottomOverlayStyle: ViewStyle;\n}\n\nexport type GetWheelPickerStyles = (\n  props: WheelPickerProps,\n  theme: Theme,\n) => WheelPickerStyles;\n\nexport const getWheelPickerStyles: GetWheelPickerStyles = (props, theme) => {\n  return {\n    bottomOverlayStyle: {\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n      borderColor: theme.colors.border.default,\n      borderStyle: 'solid',\n      borderTopWidth: 1,\n      height: ITEM_HEIGHT,\n      position: 'absolute',\n      top: ITEM_HEIGHT * 2,\n      width: '100%',\n    },\n    containerStyle: {\n      flex: 1,\n      height: SCROLL_PICKER_HEIGHT,\n    },\n    listContainerStyle:\n      Platform.OS === 'web'\n        ? {\n            height: SCROLL_PICKER_HEIGHT,\n            overflowY: 'scroll' as const,\n            scrollSnapType: 'y mandatory',\n            width: '100%',\n          }\n        : {},\n    upperOverlayStyle: {\n      backgroundColor: 'rgba(255, 255, 255, 0.7)',\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      borderStyle: 'solid',\n      height: ITEM_HEIGHT,\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n","import { ITEM_HEIGHT } from './WheelPicker.constants';\nimport { WheelPickerOption } from './WheelPickerItem';\n\nexport const makePaddedOptions = (options: WheelPickerOption[]) => {\n  return [\n    { value: 'emptyStart', label: '' },\n    ...options,\n    { value: 'emptyEnd', label: '' },\n  ];\n};\n\nexport const getOptionFromOptions = (options: WheelPickerOption[]) => (\n  scrollPosition: number,\n) => {\n  const index = Math.round(scrollPosition / ITEM_HEIGHT);\n\n  const finalIndex = Math.abs(\n    index >= options.length ? options.length - index : index,\n  );\n\n  return options[finalIndex];\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { ITEM_HEIGHT } from './WheelPicker.constants';\n\nexport interface WheelPickerOption {\n  label: string;\n  value: string;\n}\n\nexport interface WheelPickerItemProps {\n  option: WheelPickerOption;\n}\n\nconst WheelPickerItemBase = (props: WheelPickerItemProps) => {\n  const { option } = props;\n  const { label } = option;\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        height: ITEM_HEIGHT,\n        justifyContent: 'center',\n        paddingHorizontal: 4,\n        // @ts-ignore\n        scrollSnapAlign: 'start',\n      }}\n    >\n      <Text align=\"center\">{label}</Text>\n    </View>\n  );\n};\n\nexport const WheelPickerItem = React.memo(WheelPickerItemBase);\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { WheelPicker as WheelPickerRef, WheelPickerProps } from './WheelPicker';\nimport { ITEM_HEIGHT } from './WheelPicker.constants';\nimport { getWheelPickerStyles } from './WheelPicker.styles';\nimport { getOptionFromOptions, makePaddedOptions } from './WheelPicker.utils';\nimport { WheelPickerItem } from './WheelPickerItem';\n\nconst WheelPickerBase = (\n  props: WheelPickerProps,\n  ref: React.Ref<WheelPickerRef>,\n) => {\n  const {\n    value: initialValue,\n    options,\n    onValueChange = () => {\n      return;\n    },\n    getStyles,\n  } = props;\n  const optionsWithClones = makePaddedOptions(options);\n  const theme = useTheme();\n\n  const listRef = React.useRef<HTMLDivElement>(null);\n  const getOption = React.useMemo(() => getOptionFromOptions(options), [\n    options,\n  ]);\n\n  const {\n    bottomOverlayStyle,\n    containerStyle,\n    listContainerStyle,\n    upperOverlayStyle,\n  } = mergeStyles(\n    getWheelPickerStyles,\n    getStyles,\n    theme.components.getWheelPickerStyles,\n  )(props, theme);\n\n  const scrollToValue = React.useCallback(\n    (value: string, smooth = true) => {\n      if (!listRef.current) return;\n\n      const index = optionsWithClones.findIndex(o => o.value === value);\n\n      listRef.current.scrollTo({\n        behavior: smooth ? 'smooth' : 'auto',\n        top: index * ITEM_HEIGHT - ITEM_HEIGHT,\n      });\n    },\n    [listRef, options],\n  );\n\n  React.useEffect(() => {\n    if (initialValue) scrollToValue(initialValue, false);\n  }, [options]);\n\n  const handleScroll = React.useCallback(\n    (event: React.UIEvent<HTMLDivElement>) => {\n      if (!listRef.current) return;\n\n      const selectedOption = getOption(event.currentTarget.scrollTop);\n\n      onValueChange(selectedOption.value);\n    },\n    [listRef, options],\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      selectValue: (value: string) => scrollToValue(value),\n    }),\n    [listRef, options],\n  );\n\n  return (\n    <View style={containerStyle}>\n      <div ref={listRef} onScroll={handleScroll} style={listContainerStyle}>\n        {optionsWithClones.map(option => (\n          <WheelPickerItem key={option.value} option={option} />\n        ))}\n      </div>\n      <View pointerEvents=\"none\" style={upperOverlayStyle} />\n      <View pointerEvents=\"none\" style={bottomOverlayStyle} />\n    </View>\n  );\n};\n\nexport const WheelPicker = React.forwardRef(WheelPickerBase);\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}