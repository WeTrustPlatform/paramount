{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","getButtonAppearances","minimal","default","background","content","danger","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","_props$appearance","appearance","iconAfter","iconBefore","isDisabled","isLoading","hasIconAfter","hasIconBefore","_buttonAppearances$ap","textColor","touchableStyle","objectWithoutProperties","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","textSize","textSizes","buttonContentWrapperStyle","innerButtonWrapperStyle","textStyle","objectSpread","muted","display","fontWeight","textAlign","disabled","Button","getStyles","_props$isDisabled","_props$isLoading","_props$onPress","onPress","testID","accessibilityHint","accessibilityLabel","_props$accessible","accessible","_mergeStyles","mergeStyles","components","TouchableOpacity","accessibilityRole","Button_jsxFileName","Button_ButtonContent","esm_extends","ButtonContent","iconLoading","icon","title","Dots_Dots","white","Text","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Box","ToastContext","ToastProvider","Toast","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","Consumer","_ref2","notify","___WEBPACK_IMPORTED_MODULE_6__","description","of","isMDXComponent","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/25.6a269ca8.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport type GetButtonStyles = (\n  props: ButtonProps,\n  theme: Theme,\n) => Partial<ButtonStyles>;\n\nexport const getButtonStyles: GetButtonStyles = (props, theme) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isDisabled,\n    isLoading,\n    size = 'medium',\n  } = props;\n  const hasIconAfter = !!iconAfter;\n  const hasIconBefore = !!iconBefore;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...touchableStyle\n  } = buttonAppearances[appearance][color];\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] * 2,\n        paddingRight: theme.controlPaddings[size] * 2,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      };\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    buttonContentWrapperStyle: {\n      paddingLeft: hasIconBefore ? 8 : 0,\n      paddingRight: hasIconAfter ? 8 : 0,\n    },\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n      ...textSize,\n    },\n    touchableStyle: {\n      borderRadius,\n      height,\n      paddingLeft,\n      paddingRight,\n      ...touchableStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Dots } from '../LoadingIndicators';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps {\n  /** Title of the button */\n  title?: string;\n\n  /** Icon in place of title */\n  icon?: React.ReactNode;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Sets an icon before the text. */\n  iconBefore?: React.ReactNode;\n\n  /** Sets an icon after the text. */\n  iconAfter?: React.ReactNode;\n\n  /** Sets an icon at loading state. */\n  iconLoading?: React.ReactNode;\n\n  /** Label for screen readers */\n  accessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  accessibilityHint?: string;\n\n  /**\n   * When true, indicates that the view is an accessibility element.\n   * @default true\n   */\n  accessible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetButtonStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    getStyles,\n    iconAfter,\n    iconBefore,\n    isDisabled = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    testID,\n\n    accessibilityHint,\n    accessibilityLabel,\n    accessible = true,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    textStyle,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    props,\n    theme,\n  );\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={touchableStyle}\n      testID={testID}\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessible={accessible}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle?: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <>\n        {iconLoading || (\n          <Dots color={textStyle ? textStyle.color : theme.colors.text.white} />\n        )}\n      </>\n    );\n  }\n  if (icon) return <>{icon}</>;\n  if (title) {\n    return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n  }\n\n  return <></>;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, ToastContext, ToastProvider, Toast } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Make sure to use `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` at the top-level component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<ThemeProvider>{children}</ThemeProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` you can use to create toasts from anywhere in the application.`}</p>\n    <Playground __position={0} __code={'<ToastProvider>\\n  {/*\\n    We use `ToastContext.Consumer` here due to limitations in docs\\n    Use `const { notify } = useToast()` inside your function component\\n   */}\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() =>\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            duration: 5000,\\n          })\\n        }\\n        title=\\\"Open toast\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    {\n          /*\n           We use `ToastContext.Consumer` here due to limitations in docs\n           Use `const { notify } = useToast()` inside your function component\n          */\n        }\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => notify({\n            title: 'Title',\n            description: 'Description',\n            duration: 5000\n          })} title=\"Open toast\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toast-options\"\n    }}>{`Toast Options`}</h2>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}