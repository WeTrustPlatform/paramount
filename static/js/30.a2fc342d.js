(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./docs/CustomizeTheme.mdx":function(e,t,n){var o=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),r=o(n("./node_modules/@babel/runtime/helpers/classCallCheck.js")),s=o(n("./node_modules/@babel/runtime/helpers/createClass.js")),m=o(n("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),l=o(n("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),p=o(n("./node_modules/@babel/runtime/helpers/inherits.js")),u=o(n("./node_modules/react/index.js")),c=n("./node_modules/@mdx-js/tag/dist/index.js"),d=function(e){function t(e){var n;return(0,r.default)(this,t),(n=(0,m.default)(this,(0,l.default)(t).call(this,e))).layout=null,n}return(0,p.default)(t,e),(0,s.default)(t,[{key:"render",value:function(){var e=this.props,t=e.components;(0,a.default)(e,["components"]);return u.default.createElement(c.MDXTag,{name:"wrapper",components:t},u.default.createElement(c.MDXTag,{name:"h1",components:t,props:{id:"customization"}},"Customization"),u.default.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"use-themeprovider"}},"Use ThemeProvider"),u.default.createElement(c.MDXTag,{name:"p",components:t},"You can customize the theme using the ",u.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Theme")," object ",u.default.createElement(c.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/WeTrustPlatform/paramount/blob/master/src/theme/ThemeInterface.ts"}},"See Themeinterface")," and passing it to ",u.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"ThemeProvider")),u.default.createElement(c.MDXTag,{name:"pre",components:t},u.default.createElement(c.MDXTag,{name:"code",components:t,parentName:"pre",props:{}},"import { ThemeProvider, createTheme } from 'paramount-ui'\n\nconst theme = createTheme({})\n\n// in the outmost component insert the provider and pass Theme Object as value\n<ThemeProvider value={theme}>\n  ...\n</ThemeProvider>\n")),u.default.createElement(c.MDXTag,{name:"h2",components:t,props:{id:"override-component-styles"}},"Override Component Styles"),u.default.createElement(c.MDXTag,{name:"p",components:t},"Each component exposts ",u.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"getStyles")," callback, which can be used to override component styles."),u.default.createElement(c.MDXTag,{name:"pre",components:t},u.default.createElement(c.MDXTag,{name:"code",components:t,parentName:"pre",props:{}},'import { Button } from \'paramount-ui\'\n\nconst CustomButton = () => {\n  return (\n    <Button\n      color="primary"\n      title="Example"\n      getStyles={(buttonProps, theme) => {\n        const { color } = buttonProps;\n\n        // Each Component may use multiple style objects. The API enables to override each node\'s style\n        // VSCode intellisense would autofill available style fields; however, you can view the style spec of each component in their `Component*.styles.ts`\n        return {\n          buttonStyle: { ... },\n          textStyle: { ... },\n          focusColor: color\n        }\n      }}\n    >\n  )\n}\n')))}}]),t}(u.default.Component);t.default=d}}]);
//# sourceMappingURL=30.d05a4b638700db6f632a.js.map