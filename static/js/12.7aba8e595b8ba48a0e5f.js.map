{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Counter/Counter.styles.ts","webpack:///./src/components/Counter/Counter.tsx","webpack:///./src/components/Counter/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Progress/Progress.mdx","webpack:///./src/components/Progress/Progress.styles.ts","webpack:///./src/components/Progress/Progress.tsx","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","_interopRequireDefault","withTheme","props","theme","createElement","default","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","Button","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","directionToFlexDirectionMap","horizontal","vertical","children","_props$direction","direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","cloneElement","borderBottomWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftWidth","Box","_ButtonGroup","_BackButton","getCounterVariables","container","counter","width","dark","getCounterStyles","counterVariables","containerStyle","countStyle","counterStyle","disabledStyle","_Counter","Counter","component","max","min","onIncrement","onDecrement","isDecrementDisabled","isIncrementDisabled","TouchableOpacity","activeOpacity","undefined","concat","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","nextDot","timing","duration","toValue","start","_this$props","dots","o","key","marginLeft","marginRight","opacity","Component","defaultProps","value","_LoadingDots","_react","_tag","_reactPowerplug","_docz","_Progress","MDXContent","layout","components","MDXTag","id","Playground","__position","__code","__scope","CounterContainer","Progress","initial","_ref","incBy","decBy","percent","progressStyle","PropsTable","of","getProgressVariables","progress","progressVariables","sizeStyle","_props$percent","getProgressStyles","Platform","OS","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/12.cacdc20d.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { withTheme } from '../../theme';\nimport Button, { ButtonProps } from './Button';\n\nconst BackButton = (props: ButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nconst ButtonBase = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonBase);\nexport default Button;\n","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\n","export { default as Button, ButtonProps } from './Button';\nexport { default as ButtonGroup, ButtonGroupProps } from './ButtonGroup';\nexport { default as BackButton } from './BackButton';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.dark,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = theme => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\ntry {\n    // @ts-ignore\n    getCounterVariables.displayName = \"getCounterVariables\";\n    // @ts-ignore\n    getCounterVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getCounterVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Counter/Counter.styles.ts#getCounterVariables\"] = { docgenInfo: getCounterVariables.__docgenInfo, name: \"getCounterVariables\", path: \"src/components/Counter/Counter.styles.ts#getCounterVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getCounterStyles.displayName = \"getCounterStyles\";\n    // @ts-ignore\n    getCounterStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getCounterStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Counter/Counter.styles.ts#getCounterStyles\"] = { docgenInfo: getCounterStyles.__docgenInfo, name: \"getCounterStyles\", path: \"src/components/Counter/Counter.styles.ts#getCounterStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  theme: Theme;\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nconst CounterBase = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n    theme,\n  } = props;\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)(theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Spacing paddingRight={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Spacing paddingLeft={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n    </View>\n  );\n};\n\nexport const Counter = withTheme(CounterBase);\nexport default Counter;\n","export { Counter, CounterProps } from './Counter';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, PropsTable } from 'docz';\nimport Progress from './Progress';\nimport { Box } from '../Layout';\nimport { Button } from '../Button';\nimport { Counter } from '../Counter';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"progress\"}}>{`Progress`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, incBy, decBy }) => (\\n    <Box>\\n      <Progress\\n        percent={count}\\n        size=\\\"large\\\"\\n        getStyles={(props, theme) => ({\\n          containerStyle: {},\\n          progressStyle: {},\\n        })}\\n      />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decBy(10)}\\n        onIncrement={() => incBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterContainer>'} __scope={{props: this ? this.props : props,CounterContainer,Progress,Box,Button,Counter}}>\n  <CounterContainer initial={0}>\n    {({ count, incBy, decBy }) => (\n      <Box>\n        <Progress\n          percent={count}\n          size=\"large\"\n          getStyles={(props, theme) => ({\n            containerStyle: {},\n            progressStyle: {},\n          })}\n        />\n        <Counter\n          count={count}\n          onDecrement={() => decBy(10)}\n          onIncrement={() => incBy(10)}\n          min={0}\n          max={100}\n        />\n      </Box>\n    )}\n  </CounterContainer>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Progress} />\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ProgressVariables {\n  container: ViewStyle;\n  progress: ViewStyle;\n  size: ProgressSizes;\n}\n\nexport interface ProgressSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type ProgressSize = keyof ProgressSizes;\n\nexport const getProgressVariables = (theme: Theme): ProgressVariables => {\n  return {\n    container: {\n      backgroundColor: theme.colors.background.greyDefault,\n    },\n    progress: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      height: '100%',\n    },\n    size: {\n      small: {\n        borderRadius: 999,\n        height: 16,\n      },\n\n      medium: {\n        borderRadius: 999,\n        height: 24,\n      },\n\n      large: {\n        borderRadius: 999,\n        height: 32,\n      },\n    },\n  };\n};\n\nexport interface ProgressStylesProps {\n  size: ProgressSize;\n}\nexport type GetProgressStyles = (\n  progressStylesProps: ProgressStylesProps,\n  theme: Theme,\n) => ProgressStyles;\n\nexport interface ProgressStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressStyles: GetProgressStyles = ({ size }, theme) => {\n  const progressVariables = getProgressVariables(theme);\n  const sizeStyle = progressVariables.size[size];\n\n  return {\n    containerStyle: {\n      ...sizeStyle,\n      ...progressVariables.container,\n    },\n    progressStyle: {\n      ...sizeStyle,\n      ...progressVariables.progress,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getProgressVariables.displayName = \"getProgressVariables\";\n    // @ts-ignore\n    getProgressVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getProgressVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Progress/Progress.styles.ts#getProgressVariables\"] = { docgenInfo: getProgressVariables.__docgenInfo, name: \"getProgressVariables\", path: \"src/components/Progress/Progress.styles.ts#getProgressVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetProgressStyles,\n  getProgressStyles,\n  ProgressSize,\n  ProgressStyles,\n} from './Progress.styles';\n\nexport interface ProgressProps {\n  theme: Theme;\n  percent?: number;\n  size?: ProgressSize;\n  getStyles?: ReplaceReturnType<GetProgressStyles, DeepPartial<ProgressStyles>>;\n  testID?: string;\n}\n\nconst ProgressBase = (props: ProgressProps) => {\n  const { percent = 0, size = 'medium', getStyles, theme, testID } = props;\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <View\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        style={{\n          width: `${percent}%`,\n          ...progressStyle,\n        }}\n      />\n    </View>\n  );\n};\n\nexport const Progress = withTheme(ProgressBase);\nexport default Progress;\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}