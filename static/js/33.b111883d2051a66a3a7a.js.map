{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","Button","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","___WEBPACK_IMPORTED_MODULE_5__","title","description","intent","actionNode","___WEBPACK_IMPORTED_MODULE_7__","appearance","color","of","parentName","className","isMDXComponent","getAlertStyles","theme","_ref$intent","bodyStyle","flex","containerStyle","objectSpread","alignItems","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","justifyContent","padding","elevations","descriptionStyle","leftWrapperStyle","titleStyle","icon","_props$intent","getStyles","testID","_props$actionNode","useTheme","_mergeStyles","mergeStyles","react","View","style","paddingRight","Icon_web","name","size","resolveIcon","Text","textStyle","weight","propToFn","elevation","shape","containerShapes","children","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","_ref$size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text"],"mappings":"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","file":"static/js/33.d8cc832a.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`Give feedback to the user about an action or state`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box paddingVertical={8}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert\\n    intent=\\\"danger\\\"\\n    title=\\\"Danger\\\"\\n    description=\\\"Message\\\"\\n    actionNode={\\n      <Button title=\\\"Action\\\" appearance=\\\"minimal\\\" color=\\\"primary\\\" />\\n    }\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" actionNode={<Button title=\"Action\" appearance=\"minimal\" color=\"primary\" mdxType=\"Button\" />} mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\ngetStyles={(AlertProps, Theme) => AlertStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View leftWrapperStyle>\n    {icon}\n    <View bodyStyle>\n      <Text titleStyle>{title}</Text>\n      <Text descriptionStyle>{description}</Text>\n    </View>\n  </View>\n  {action}\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme';\nimport { AlertProps } from './Alert';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\nexport type GetAlertStyles = (props: AlertProps, theme: Theme) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent = 'info' }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    descriptionStyle: {},\n    leftWrapperStyle: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport type Intent = 'danger' | 'info' | 'success' | 'warning';\n\n/**\n * Alert properties\n */\nexport interface AlertProps {\n  /** Title of the alert. */\n  title?: string;\n\n  /** Description of the alert. */\n  description?: string;\n\n  /** Replace the icon of the alert on the left. Set to null to remove icon */\n  icon?: React.ReactNode;\n\n  /**\n   * Intent of the alert.\n   * @default info\n   */\n  intent?: Intent;\n\n  /**\n   * Component displayed on the right side of the alert.\n   * @default null\n   */\n  actionNode?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\n/**\n * Alert with intent\n */\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n    actionNode = null,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    leftWrapperStyle,\n    containerStyle,\n    bodyStyle,\n    descriptionStyle,\n    titleStyle,\n  } = mergeStyles(getAlertStyles, getStyles, theme.components.getAlertStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <View style={leftWrapperStyle}>\n        {icon === null\n          ? null\n          : icon || (\n              <Box paddingRight={16} justifyContent=\"center\">\n                {resolveIcon(intent)}\n              </Box>\n            )}\n        <View style={bodyStyle}>\n          <Text getStyles={() => ({ textStyle: titleStyle })} weight=\"bold\">\n            {title}\n          </Text>\n          <Text getStyles={() => ({ textStyle: descriptionStyle })}>\n            {description}\n          </Text>\n        </View>\n      </View>\n      {actionNode}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size = 24 }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n"],"sourceRoot":""}