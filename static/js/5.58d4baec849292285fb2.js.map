{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["getAlertStyles","_ref","theme","intent","bodyStyle","flex","containerStyle","_objectSpread2","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","textStyle","titleStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Box","_Icon","_Typography","_Alert","Alert","props","title","description","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","components","createElement","View","style","Box","paddingRight","justifyContent","Icon","name","size","color","resolveIcon","Text","weight","TouchableOpacity","onPress","paddingLeft","text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_changeColor","getButtonAppearances","minimal","default","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","getButtonStyles","buttonStyleProps","appearance","isDisabled","isLoading","isInline","iconBefore","iconAfter","_buttonAppearances$ap","textColor","buttonStyle","_objectWithoutProperties2","height","controlHeights","controlPaddings","disabled","alignSelf","flexWrap","focusColor","darken","alignItems","muted","fontWeight","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","_Loading","_Button","Button","_props$appearance","_props$color","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","ButtonContent","LoadingDots","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Feather","_Text","IconTag","concat","result","matches","toUpperCase","charAt","slice","convertToPascal","getTextColor","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_react","_interopRequireDefault","_react2","_docz","_","layoutProps","MDXLayout","MDXContent","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","ToastContext","ToastProvider","Toast","Consumer","_ref2","notify","offset","_ref3","Fragment","of","isMDXComponent","getToastStyles","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","wrapperStyle","onRemove","_props$duration","toastSettings","useEffect","timer","setTimeout","clearTimeout","defaultToastInstance","defaultToastContext","removeToast","success","warning","createContext","useToast","useContext","_Animation","_Toast","_Toast2","_ToastContext","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","_toConsumableArray2","payload","toast","REMOVE_TOAST","filter","Error","children","idCounterRef","useRef","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray2","dispatch","useCallback","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","value","String","startsWith","err","transitions","useTransition","springDefaultConfig","enter","translateY","leave","Provider","item","transitionStyle","transform","_ToastProvider","friction","tension"],"mappings":"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","file":"static/js/5.904860cf.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    textStyle: {},\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(\n    getAlertStyles,\n    getStyles,\n    theme.components.getAlertStyles,\n  )({ intent }, theme);\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Box paddingRight={16} justifyContent=\"center\">\n          {resolveIcon(intent)}\n        </Box>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text weight=\"bold\">{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Box paddingLeft={16}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Box>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","export * from './Alert';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme } from '../../theme/Theme';\nimport { darken } from './changeColor';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ControlSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = buttonAppearances[appearance][color];\n\n  return {\n    buttonStyle: {\n      borderRadius: theme.controlBorderRadius[size],\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size] * 2,\n      paddingRight: theme.controlPaddings[size] * 2,\n      ...buttonStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle, size } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) {\n    return (\n      <Text size={size} getStyles={() => ({ textStyle })}>\n        {title}\n      </Text>\n    );\n  }\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { ToastContext, ToastProvider, Toast } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider getStyles={(props, theme) => ({\n        containerStyle: {}\n      })} mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null,\n              // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000 // ...Alert props e.g. getStyles\n\n            });\n          }} title=\"Use\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <>\n          <Button onPress={() => notify({\n              title: 'Title',\n              description: 'Description',\n              isCloseable: true\n            })} title=\"Open default toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'success',\n              title: 'Title'\n            })} color=\"primary\" title=\"Open success toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'danger',\n              title: 'Title'\n            })} color=\"danger\" title=\"Open danger toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'warning',\n              title: 'Title'\n            })} color=\"secondary\" title=\"Open warning toast\" mdxType=\"Button\" />\n        </>}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\nexport type GetToastStyles = (props: {}, theme: Theme) => ToastStyles;\n\n// @ts-ignore: Compat with web\nexport const getToastStyles: GetToastStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n    wrapperStyle: {\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Omit } from 'ts-essentials';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const {\n    component,\n    id,\n    onRemove,\n    duration = 3000,\n    offset = 16,\n    ...toastSettings\n  } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} onClose={onRemove} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children, getStyles } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const theme = useTheme();\n\n  const { containerStyle, wrapperStyle } = mergeStyles(\n    getToastStyles,\n    getStyles,\n    theme.components.getToastStyles,\n  )({ intent: 'info' }, theme);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(state.toasts, toast => toast.id, {\n    config: springDefaultConfig,\n\n    enter: { translateY: 10 },\n    from: { translateY: -500 },\n    leave: { translateY: -500 },\n  });\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View style={containerStyle}>\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              ...wrapperStyle,\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","export * from './Toast';\nexport * from './ToastContext';\nexport * from './ToastProvider';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}