{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","TextInput","_props$size","size","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","LeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_jsxFileName","hasLeftIcon","hasRightIcon","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","text","width","greyDark","danger","paddingVertical","editable","muted","name","alignItems","display","justifyContent","left","paddingHorizontal","position","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","label","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingBottom","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/15.d7f3abfb.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, TextInput, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label label=\\\"Lorem ipsum dolar set amet\\\">\\n    <TextInput />\\n  </Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      TextInput,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label label=\"Lorem ipsum dolar set amet\" mdxType=\"Label\">\n      <TextInput mdxType=\"TextInput\" />\n    </Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, style]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}