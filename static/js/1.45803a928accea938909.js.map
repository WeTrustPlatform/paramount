{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/overrides.ts"],"names":["Alert","props","title","description","_props$intent","intent","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledLeftWrapper","LeftWrapper","_getOverrides4","leftWrapperProps","_getOverrides5","StyledBody","Body","_getOverrides6","bodyProps","_getOverrides7","StyledAlertIcon","AlertIcon","_getOverrides8","alertIconProps","_getOverrides9","StyledTitle","Title","_getOverrides10","titleProps","_getOverrides11","StyledDescription","Description","_getOverrides12","descriptionProps","_getOverrides13","StyledAction","Action","_getOverrides14","actionProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","_jsxFileName","lineNumber","testID","children","style","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","alignItems","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","justifyContent","padding","elevations","flex","_Icon__WEBPACK_IMPORTED_MODULE_9__","name","color","paddingLeft","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_Typography__WEBPACK_IMPORTED_MODULE_10__","weight","Icon","_ref","_ref$color","_ref$size","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_getTextSize$fontSize","getTextSize","textSizes","fontSize","iconSize","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","DESC_ORDER_SCREEN_SIZES","LayoutContext","useLayout","breakpoints","small","large","xlarge","containerSizes","currentScreenSize","getResponsiveValue","values","xsmall","undefined","gridColumnCount","gutterWidth","reverse","React","getCurrentScreenSize","layout","windowScaledSize","Dimensions","get","find","screenSize","width","LayoutProvider","value","deepMerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","currentScreenSizeIndex","indexOf","nearestSize","index","deriveResponsiveValue","Toast","id","onRemove","_props$duration","duration","toastSettings","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","timer","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2__","_Alert__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ToastContext","defaultToastInstance","defaultToastContext","danger","notify","removeToast","success","warning","useToast","AnimatedView","animated","View","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","payload","toast","REMOVE_TOAST","filter","Error","ToastProvider","offset","idCounterRef","_React$useReducer","_React$useReducer2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","dispatch","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","String","startsWith","err","transitions","useTransition","config","springDefaultConfig","enter","translateY","from","leave","react__WEBPACK_IMPORTED_MODULE_4__","_ToastContext__WEBPACK_IMPORTED_MODULE_10__","left","marginBottom","marginLeft","marginRight","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","map","item","transitionStyle","key","transform","_Toast__WEBPACK_IMPORTED_MODULE_9__","Text","align","isItalic","override","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledText","TextR","textRProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","getFontWeight","fontWeights","fontWeight","textColors","textColor","_props$color","_props$size","_props$align","_props$isItalic","sizeStyle","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_6__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","friction","tension","palette","lightest","light","base","dark","darkest","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","containerShapes","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","defaultTheme","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlHeights","controlPaddings","ThemeContext","createContext","ThemeProvider","react_default","a","createElement","useContext","Component","parentProps","overrideProps","OverrideComponent","_len","arguments","length","Array","_key","forEach","isGetStyleFn","applyOverrides","component"],"mappings":"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","file":"static/js/1.de976be1.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Icon, IconProps } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\nexport type Intent = 'danger' | 'info' | 'success' | 'warning';\n\ninterface AlertBaseProps {\n  /** Title of the alert. */\n  title?: OptionalString;\n\n  /** Description of the alert. */\n  description?: OptionalString;\n\n  /**\n   * Intent of the alert.\n   * @default info\n   */\n  intent?: Intent;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AlertOverrides {\n  Root: RootProps;\n  LeftWrapper: LeftWrapperProps;\n  AlertIcon: AlertIconProps;\n  Body: BodyProps;\n  Title: TitleProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n}\n\nexport interface AlertProps\n  extends WithOverrides<AlertBaseProps, AlertOverrides> {}\n\nexport const Alert = (props: AlertProps) => {\n  const { title, description, intent = 'info', overrides = {} } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Alert.Root'),\n    overrides.Root,\n  );\n  const [LeftWrapper, leftWrapperProps] = getOverrides(\n    StyledLeftWrapper,\n    props,\n    dlv(theme, 'overrides.Alert.LeftWrapper'),\n    overrides.LeftWrapper,\n  );\n  const [Body, bodyProps] = getOverrides(\n    StyledBody,\n    props,\n    dlv(theme, 'overrides.Alert.Body'),\n    overrides.Body,\n  );\n  const [AlertIcon, alertIconProps] = getOverrides(\n    StyledAlertIcon,\n    props,\n    dlv(theme, 'overrides.Alert.AlertIcon'),\n    overrides.AlertIcon,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Alert.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.Alert.Description'),\n    overrides.Description,\n  );\n  const [Action, actionProps] = getOverrides(\n    StyledAction,\n    props,\n    dlv(theme, 'overrides.Alert.Action'),\n    overrides.Action,\n  );\n\n  return (\n    <Root intent={intent} {...rootProps}>\n      <LeftWrapper {...leftWrapperProps}>\n        <AlertIcon intent={intent} {...alertIconProps} />\n        <Body {...bodyProps}>\n          <Title intent={intent} title={title} {...titleProps} />\n          <Description\n            intent={intent}\n            description={description}\n            {...descriptionProps}\n          />\n        </Body>\n      </LeftWrapper>\n      <Action intent={intent} {...actionProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface PropsWithIntent {\n  intent: Intent;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren, PropsWithIntent {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { intent, testID, children, style } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderLeftColor: theme.colors.border[intent],\n          borderLeftWidth: 5,\n          borderRadius: theme.controlBorderRadius.medium,\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          padding: 16,\n          ...theme.elevations[2],\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface LeftWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftWrapper = (props: LeftWrapperProps) => {\n  const { children, style } = props;\n\n  return (\n    <View\n      style={[\n        {\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface AlertIconProps extends Omit<IconProps, 'name'>, PropsWithIntent {}\n\nconst StyledAlertIcon = (props: AlertIconProps) => {\n  const { intent } = props;\n\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" color=\"info\" />;\n  }\n};\n\ninterface BodyProps extends ViewProps, PropsWithChildren {}\n\nconst StyledBody = (props: BodyProps) => {\n  const { children, style } = props;\n\n  return (\n    <View\n      style={[\n        {\n          paddingLeft: 16,\n          flex: 1,\n        },\n        style,\n      ]}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TitleProps extends TextProps, PropsWithIntent {\n  title?: OptionalString;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, intent, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text weight=\"bold\" {...textProps}>\n      {title}\n    </Text>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithIntent {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { description, intent, ...textProps } = props;\n\n  if (!description) return null;\n\n  return <Text {...textProps}>{description}</Text>;\n};\n\ninterface ActionProps extends PropsWithChildren, PropsWithIntent {}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor, getTextSize } from '../Typography/Text';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({\n  name,\n  color = 'default',\n  size = 'medium',\n}: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n  const { fontSize = 16 } = getTextSize(theme.textSizes)(size);\n  const iconSize = typeof size === 'string' ? fontSize + 8 : size;\n\n  return (\n    <IconTag color={getTextColor(theme.colors.text)(color)} size={iconSize} />\n  );\n};\n","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport interface ContainerSizes {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ContainerSize = keyof ContainerSizes;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface Layout {\n  breakpoints: Breakpoints;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  containerSizes: ContainerSizes;\n}\n\nexport interface LayoutContext extends Layout {\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n}\n\nexport const defaultLayout: LayoutContext = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepMerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  Layout,\n  LayoutContext,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<Layout>;\n}\n\nexport const getCurrentScreenSize = (layout: Layout) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return values[screenSize] !== undefined && values[screenSize] !== null;\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepMerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import * as React from 'react';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends AlertProps {\n  /**\n   * Duration for how long the toast should stay active.\n   * @default 3000\n   */\n  duration?: number;\n\n  /**\n   * Assign an id to the toast so you can remove it later.\n   */\n  id?: ToastId;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  /**\n   * (Ignore) Assign an id to the toast so you can remove it later.\n   */\n  id: ToastId;\n\n  /**\n   * (Ignore) Callback invoked when the duration is up.\n   */\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const { id, onRemove, duration = 3000, ...toastSettings } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <Alert {...toastSettings} />;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport type ToastPosition = 'top' | 'bottom';\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst getTransitionConfig = (offset: number, position: ToastPosition) => {\n  if (position === 'top') {\n    return {\n      config: springDefaultConfig,\n\n      enter: { translateY: offset },\n      from: { translateY: -500 },\n      leave: { translateY: -500 },\n    };\n  }\n\n  return {\n    config: springDefaultConfig,\n\n    enter: { translateY: -offset },\n    from: { translateY: 500 },\n    leave: { translateY: 500 },\n  };\n};\n\nconst OFFSET = 16;\nconst POSITION = 'top';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n}\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(\n    state.toasts,\n    toast => toast.id,\n    getTransitionConfig(OFFSET, POSITION),\n  );\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View\n        // @ts-ignore: Compat with web\n        style={{\n          left: 32,\n          marginBottom: 0,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 0,\n          maxWidth: 560,\n          // @ts-ignore: Compat with web\n          position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n          right: 32,\n          top: 0,\n          zIndex: 100,\n        }}\n      >\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              position: 'absolute',\n              width: '100%',\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n  TextStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n} from '../../theme/Theme';\nimport { getOverrides, Override } from '../../utils/overrides';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /**\n   * Overrides\n   */\n  override?: TextOverride;\n\n  /** Text content */\n  children?: React.ReactNode;\n}\n\nexport type TextOverride = Override<TextProps, StyledTextProps>;\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color,\n    size,\n    align,\n    weight,\n    isItalic,\n    transform,\n    override,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const [TextR, textRProps] = getOverrides(\n    StyledText,\n    props,\n    dlv(theme, 'overrides.Text'),\n    override,\n  );\n\n  return (\n    <TextR\n      color={color}\n      size={size}\n      align={align}\n      weight={weight}\n      isItalic={isItalic}\n      transform={transform}\n      {...textProps}\n      {...textRProps}\n    >\n      {children}\n    </TextR>\n  );\n};\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\ninterface StyledTextProps extends RNTextProps {\n  children?: React.ReactNode;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\nconst StyledText = (props: StyledTextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return (\n    <RNText\n      style={[\n        {\n          ...sizeStyle,\n          color: getTextColor(theme.colors.text)(color),\n          fontFamily: theme.fontFamilies.text,\n          fontWeight:\n            getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n          textAlign: align,\n          ...(isItalic && {\n            fontStyle: 'italic',\n          }),\n          ...(transform && {\n            textTransform: transform,\n          }),\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {children}\n    </RNText>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport { defaultLayout } from '../components';\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.teal.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  layout: defaultLayout,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\n\nimport {\n  AlertOverrides,\n  AvatarOverrides,\n  BadgeOverrides,\n  ButtonOverrides,\n  CheckboxOverrides,\n  CollapsibleOverrides,\n  ColumnOverride,\n  ContainerOverride,\n  CounterOverrides,\n  DialogOverrides,\n  DividerOverride,\n  DrawerOverrides,\n  FormFieldOverrides,\n  HeadingOverride,\n  LabelOverrides,\n  Layout,\n  LayoutProvider,\n  ListItemOverrides,\n  ListPicker,\n  ListPickerOverrides,\n  NativePickerOverrides,\n  OverlayOverride,\n  PickerOverrides,\n  PopoverOverrides,\n  PositionerOverrides,\n  ProgressBarOverrides,\n  RatingOverrides,\n  RowOverride,\n  SliderOverrides,\n  SwitchOverrides,\n  TextInputOverrides,\n  TextOverride,\n  ToastProvider,\n  WheelPickerOverrides,\n} from '../components';\nimport { Overrides } from '../utils/overrides';\nimport { DeepPartial } from '../utils/types';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Layout\n  layout: Layout;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  overrides?: DeepPartial<ThemeOverrides>;\n}\n\nexport interface ThemeOverrides {\n  Alert: Overrides<any, AlertOverrides>;\n  Avatar: Overrides<any, AvatarOverrides>;\n  Badge: Overrides<any, BadgeOverrides>;\n  Button: Overrides<any, ButtonOverrides>;\n  Checkbox: Overrides<any, CheckboxOverrides>;\n  Collapsible: Overrides<any, CollapsibleOverrides>;\n  Column: Overrides<any, ColumnOverride>;\n  Container: Overrides<any, ContainerOverride>;\n  Counter: Overrides<any, CounterOverrides>;\n  Dialog: Overrides<any, DialogOverrides>;\n  Divider: Overrides<any, DividerOverride>;\n  Drawer: Overrides<any, DrawerOverrides>;\n  FormField: Overrides<any, FormFieldOverrides>;\n  Heading: Overrides<any, HeadingOverride>;\n  Label: Overrides<any, LabelOverrides>;\n  ListItem: Overrides<any, ListItemOverrides>;\n  ListPicker: Overrides<any, ListPickerOverrides<any>>;\n  NativePicker: Overrides<any, NativePickerOverrides>;\n  Overlay: Overrides<any, OverlayOverride>;\n  Popover: Overrides<any, PopoverOverrides>;\n  Positioner: Overrides<any, PositionerOverrides>;\n  ProgressBar: Overrides<any, ProgressBarOverrides>;\n  Rating: Overrides<any, RatingOverrides>;\n  Row: Overrides<any, RowOverride>;\n  Slider: Overrides<any, SliderOverrides>;\n  Switch: Overrides<any, SwitchOverrides>;\n  Picker: Overrides<any, PickerOverrides<any, any>>;\n  Text: Overrides<any, TextOverride>;\n  TextInput: Overrides<any, TextInputOverrides>;\n  WheelPicker: Overrides<any, WheelPickerOverrides<any>>;\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value } = props;\n\n  const theme = value\n    ? (deepMerge(defaultTheme, value) as Theme)\n    : defaultTheme;\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <LayoutProvider value={theme.layout}>\n        <ToastProvider>{children}</ToastProvider>\n      </LayoutProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import deepMerge from 'deepmerge';\n\nexport type GetProps<TProps = any, TChildProps = any> = (\n  props: TProps,\n) => Partial<TChildProps>;\n\nexport type OverrideProps<TProps = any, TChildProps = any> =\n  | GetProps<TProps, TChildProps>\n  | Partial<TChildProps>;\n\nexport type GetStyle<TProps = any, TStyle = any> = (props: TProps) => TStyle;\n\nexport type OverrideStyle<TChildProps = any, TStyle = any> =\n  | GetStyle<TChildProps, TStyle>\n  | TStyle;\n\nexport interface PropsWithStyle<TStyle = any> {\n  style?: TStyle;\n}\n\nexport interface OverrideBase<TProps = any, TChildProps = any> {\n  props?: OverrideProps<TProps, TChildProps>;\n  component?: React.ComponentType<TChildProps>;\n}\n\nexport interface OverrideWithStyle<\n  TProps = any,\n  TChildProps = any,\n  TStyle = any\n> extends OverrideBase<TProps, TChildProps> {\n  style?: OverrideStyle<TChildProps, TStyle>;\n}\n\nexport type Override<\n  TProps = any,\n  TChildProps = any\n> = TChildProps extends PropsWithStyle\n  ? OverrideWithStyle<TProps, TChildProps, TChildProps['style']>\n  : OverrideBase<TProps, TChildProps>;\n\nexport type Overrides<TProps = any, TOverrides = object> = Partial<\n  { [key in keyof TOverrides]: Override<TProps, TOverrides[key]> }\n>;\n\nexport type WithOverrides<TProps = any, TOverrides = object> = {\n  overrides?: Overrides<TProps, TOverrides>;\n} & TProps;\n\nconst isGetStyleFn = <TChildProps = any, TStyle = any>(\n  style: OverrideStyle<TChildProps, TStyle>,\n): style is GetStyle<TChildProps, TStyle> => {\n  if (typeof style === 'function') return true;\n\n  return false;\n};\n\nconst isGetPropsFn = <TProps = any, TChildProps = any>(\n  props: OverrideProps<TProps, TChildProps>,\n): props is GetProps<TProps, TChildProps> => {\n  if (typeof props === 'function') return true;\n\n  return false;\n};\n\nconst applyOverrides = <TProps = any, TChildProps = any>(\n  parentProps: TProps,\n  override?: Override<TProps, TChildProps>,\n): Partial<TChildProps> => {\n  if (!override) return {};\n\n  let overrideProps: Partial<TChildProps> = {};\n  let style = null;\n\n  if (override.props) {\n    overrideProps = isGetPropsFn<TProps, TChildProps>(override.props)\n      ? override.props(parentProps)\n      : override.props;\n  }\n\n  // @ts-ignore\n  if (override.style) {\n    // @ts-ignore\n    style = isGetStyleFn<TProps>(override.style)\n      ? //\n        // @ts-ignore\n        override.style(overrideProps)\n      : //\n        // @ts-ignore\n        override.style;\n  }\n\n  return { ...overrideProps, ...(style ? { style } : {}) };\n};\n\nexport const getOverrides = <TProps = any, TChildProps = any>(\n  Component: React.ComponentType<TChildProps>,\n  parentProps: TProps,\n  ...overrides: (Override<TProps, TChildProps> | undefined)[]\n): [React.ComponentType<TChildProps>, Partial<TChildProps>] => {\n  let overrideProps: Partial<TChildProps> = {};\n  let OverrideComponent: React.ComponentType<TChildProps> = Component;\n\n  overrides.forEach(override => {\n    overrideProps = deepMerge(\n      overrideProps,\n      applyOverrides(parentProps, override),\n    );\n\n    if (override && (override.component || override.component === null)) {\n      OverrideComponent = override.component;\n    }\n  });\n\n  return [OverrideComponent, overrideProps];\n};\n"],"sourceRoot":""}