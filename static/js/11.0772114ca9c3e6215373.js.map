{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Toggle","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","on","toggle","set","Icon","_ref","name","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Switch","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_6__","isSwitchedOn","onChange","isDisabled","onIcon","offIcon","getStyles","circleStyle","containerStyle","backgroundColorOff","backgroundColorOn","circleColorOff","circleColorOn","of","isMDXComponent","getSwitchStyles","greyDefault","primaryDefault","content","alignItems","borderRadius","display","height","justifyContent","padding","width","greyLight","flexDirection","AnimatedView","animated","View","accessibilityProps","objectWithoutProperties","_mergeStyles","mergeStyles","_useSpring","useSpring","config","springDefaultConfig","circleColor","circlePosition","react","TouchableOpacity","esm_extends","accessible","accessibilityLabel","onPress","activeOpacity","alignSelf","flexWrap","transform","translateX","Icon_web","primary","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isInline","isItalic","align","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","fontStyle","textTransform","__webpack_require__","d","__webpack_exports__","friction","tension","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","overlay","greyDark","primaryLight","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/11.f92d960d.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Switch, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box>\\n  <Toggle initial={true}>\\n    {({ on, toggle }) => (\\n      <Switch\\n        isSwitchedOn={on}\\n        onChange={toggle}\\n        isDisabled={false}\\n        onIcon={null}\\n        offIcon={null}\\n        getStyles={(props, theme) => ({\\n          circleStyle: {},\\n          containerStyle: {},\\n          backgroundColorOff: \\'#F5F6F7\\',\\n          backgroundColorOn: \\'#67c6bb\\',\\n          circleColorOff: \\'white\\',\\n          circleColorOn: \\'white\\',\\n        })}\\n      />\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Switch,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Toggle initial={true} mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Switch isSwitchedOn={on} onChange={toggle} isDisabled={false} onIcon={null} offIcon={null} getStyles={(props, theme) => ({\n            circleStyle: {},\n            containerStyle: {},\n            backgroundColorOff: '#F5F6F7',\n            backgroundColorOn: '#67c6bb',\n            circleColorOff: 'white',\n            circleColorOn: 'white'\n          })} mdxType=\"Switch\" />}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Switch} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface SwitchStylesRequired {\n  width: number;\n  padding: number;\n}\n\nexport interface SwitchStyles {\n  containerStyle: ViewStyle & SwitchStylesRequired;\n  circleStyle: ViewStyle & SwitchStylesRequired;\n  backgroundColorOff: string;\n  backgroundColorOn: string;\n  circleColorOff: string;\n  circleColorOn: string;\n}\n\nexport type GetSwitchStyles = (props: {}, theme: Theme) => SwitchStyles;\n\nexport const getSwitchStyles: GetSwitchStyles = (props, theme) => {\n  return {\n    backgroundColorOff: theme.colors.background.greyDefault,\n    backgroundColorOn: theme.colors.background.primaryDefault,\n    circleColorOff: theme.colors.background.content,\n    circleColorOn: theme.colors.background.content,\n\n    circleStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderRadius: 24,\n      display: 'flex',\n      height: 38,\n      justifyContent: 'center',\n      padding: 0,\n      width: 38,\n    },\n    containerStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.greyLight,\n      borderRadius: 24,\n      flexDirection: 'row',\n      height: 44,\n      padding: 3,\n      width: 72,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  GetSwitchStyles,\n  getSwitchStyles,\n  SwitchStyles,\n} from './Switch.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface SwitchProps extends AccessibilityProps {\n  isSwitchedOn?: boolean;\n  isDisabled?: boolean;\n  onChange?: (event: GestureResponderEvent) => void;\n  onIcon?: React.ReactNode;\n  offIcon?: React.ReactNode;\n  testID?: string;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetSwitchStyles, DeepPartial<SwitchStyles>>;\n}\n\nexport const Switch = (props: SwitchProps) => {\n  const {\n    onIcon,\n    offIcon,\n    onChange,\n    isSwitchedOn,\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n  const {\n    circleStyle,\n    containerStyle,\n    backgroundColorOff,\n    backgroundColorOn,\n    circleColorOff,\n    circleColorOn,\n  } = mergeStyles(getSwitchStyles, getStyles, theme.components.getSwitchStyles)(\n    {},\n    theme,\n  );\n\n  const { backgroundColor, circleColor, circlePosition } = useSpring({\n    config: springDefaultConfig,\n\n    backgroundColor: isSwitchedOn ? backgroundColorOn : backgroundColorOff,\n    circleColor: isSwitchedOn ? circleColorOn : circleColorOff,\n    circlePosition: isSwitchedOn\n      ? containerStyle.width - (circleStyle.width + containerStyle.padding * 2)\n      : 0,\n  });\n\n  return (\n    <TouchableOpacity\n      accessible\n      accessibilityLabel=\"switch\"\n      onPress={onChange}\n      activeOpacity={1}\n      style={{\n        alignSelf: 'flex-start',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n      }}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      {/*\n      // @ts-ignore */}\n      <AnimatedView style={[containerStyle, { backgroundColor }]}>\n        <AnimatedView\n          // @ts-ignore\n          style={[\n            circleStyle,\n            { backgroundColor: circleColor },\n            { transform: [{ translateX: circlePosition }] },\n          ]}\n        >\n          {isSwitchedOn\n            ? onIcon || (\n                <Icon\n                  name=\"check\"\n                  size={20}\n                  color={theme.colors.text.primary}\n                />\n              )\n            : offIcon || (\n                <Icon name=\"x\" size={20} color={theme.colors.text.default} />\n              )}\n        </AnimatedView>\n      </AnimatedView>\n    </TouchableOpacity>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}