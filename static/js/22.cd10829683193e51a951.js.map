{"version":3,"sources":["webpack:///./src/components/Form/Form.web.tsx","webpack:///./src/components/Form/FormField.tsx","webpack:///./src/components/Form/index.ts","webpack:///./src/components/Inputs/ClearableTextInput.tsx","webpack:///./src/components/Inputs/CopyTextInput.tsx","webpack:///./src/components/Inputs/IconTextInput.styles.ts","webpack:///./src/components/Inputs/IconTextInput.tsx","webpack:///./src/components/Inputs/PhoneNumberInputField.tsx","webpack:///./src/components/Inputs/SearchTextInput.tsx","webpack:///./src/components/Inputs/TextArea.tsx","webpack:///./src/components/Inputs/TextAreaField.tsx","webpack:///./src/components/Inputs/TextInput.mdx","webpack:///./src/components/Inputs/TextInputField.tsx","webpack:///./src/components/Inputs/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_ref","children","onSubmit","createElement","Formweb","displayName","__docgenInfo","description","props","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error","_Layout","_Typography","FormField","label","error","passThroughProps","_objectWithoutProperties2","default","Box","marginBottom","Label","cloneElement","Text","color","defaultValue","required","type","_FormField","_Form","_reactNative","_icons","_theme","_IconTextInput","_interopRequireDefault","ClearableTextInputBase","onClear","innerRef","onChangeText","value","isClearable","rightIcon","textInputWithIconProps","theme","useContext","ThemeContext","_extends2","ref","TouchableOpacity","onPress","Icon","size","colors","text","ClearableTextInput","forwardRef","key","ForwardRefExoticComponent","CopyTextInputBase","onCopy","Clipboard","setString","CopyTextInput","getIconTextInputStyles","hasLeftIcon","hasRightIcon","containerStyle","position","inputStyle","_objectSpread2","paddingLeft","paddingRight","leftContainerStyle","alignItems","display","height","justifyContent","left","paddingHorizontal","rightContainerStyle","right","_mergeStyles2","_TextInput","IconTextInputBase","_props$leftIcon","leftIcon","_props$rightIcon","getStyles","textInputProps","_mergeStyles","mergeStyles","View","style","IconTextInput","_PhoneNumberInput","PhoneNumberInputField","withTheme","isInvalid","_ClearableTextInput","SearchTextInputBase","SearchTextInput","TextArea","_props$numberOfLines","numberOfLines","_props$size","controlHeight","controlHeights","multiline","paddingBottom","paddingTop","_TextArea","TextAreaField","_react","_tag","_docz","_reactPowerplug","_","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","parentName","href","Playground","__position","__code","__scope","State","TextInput","initial","state","setState","placeholder","isDisabled","keyboardType","onSubmitEditing","e","console","log","undefined","placeholderTextColor","muted","Component","TextInputField","_TextInputField","_TextAreaField","_PhoneNumberInputField","_SearchTextInput","_CopyTextInput"],"mappings":"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","file":"static/js/22.83215518.js","sourcesContent":["import * as React from 'react';\n\nimport { FormProps } from './Form';\n\n// On the web <form> enables native behavior such as `Enter` to submit\nconst Form = ({ children, onSubmit }: FormProps) => (\n  <form onSubmit={onSubmit}>{children}</form>\n);\n\nexport default Form;\ntry {\n    // @ts-ignore\n    Formweb.displayName = \"Formweb\";\n    // @ts-ignore\n    Formweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Formweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form/Form.web.tsx#Formweb\"] = { docgenInfo: Formweb.__docgenInfo, name: \"Formweb\", path: \"src/components/Form/Form.web.tsx#Formweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Box } from '../Layout';\nimport { Label, Text } from '../Typography';\n\nexport interface FormFieldProps {\n  error?: string | null;\n  label?: string | null;\n  description?: string | null;\n  children?: React.ReactNode;\n}\n\nconst FormField = (props: FormFieldProps) => {\n  const { label, error, children, description, ...passThroughProps } = props;\n\n  return (\n    <Box>\n      {label && (\n        <Box marginBottom={4}>\n          <Label>{label}</Label>\n        </Box>\n      )}\n      <Box marginBottom={4}>\n        {/*\n        // @ts-ignore: TODO: Find right way to type this */}\n        {React.cloneElement(children, passThroughProps)}\n      </Box>\n      {error && (\n        <Box marginBottom={4}>\n          <Text color=\"danger\">{error}</Text>\n        </Box>\n      )}\n      {description && <Text>{description}</Text>}\n    </Box>\n  );\n};\n\nexport default FormField;\ntry {\n    // @ts-ignore\n    FormField.displayName = \"FormField\";\n    // @ts-ignore\n    FormField.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormField\", \"props\": { \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form/FormField.tsx#FormField\"] = { docgenInfo: FormField.__docgenInfo, name: \"FormField\", path: \"src/components/Form/FormField.tsx#FormField\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as FormField, FormFieldProps } from './FormField';\nexport { default as Form, FormProps } from './Form';\n","import * as React from 'react';\nimport { TextInput as RNTextInput, TouchableOpacity } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport IconTextInput, { IconTextInputProps } from './IconTextInput';\n\nexport interface ClearableTextInputProps extends IconTextInputProps {\n  onClear?: () => void;\n  isClearable?: boolean;\n}\n\nconst ClearableTextInputBase = (props: ClearableTextInputProps) => {\n  const {\n    onClear,\n    innerRef,\n    onChangeText,\n    value,\n    isClearable,\n    rightIcon,\n    ...textInputWithIconProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <IconTextInput\n      ref={innerRef}\n      onChangeText={onChangeText}\n      value={value}\n      rightIcon={\n        value && isClearable ? (\n          <TouchableOpacity\n            onPress={() => {\n              if (onChangeText) onChangeText('');\n              if (onClear) onClear();\n            }}\n          >\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </TouchableOpacity>\n        ) : (\n          rightIcon || null\n        )\n      }\n      {...textInputWithIconProps}\n    />\n  );\n};\n\nexport const ClearableTextInput = React.forwardRef<\n  RNTextInput,\n  ClearableTextInputProps\n>((props, ref) => <ClearableTextInputBase {...props} innerRef={ref} />);\n\nexport default ClearableTextInput;\ntry {\n    // @ts-ignore\n    ClearableTextInput.displayName = \"ClearableTextInput\";\n    // @ts-ignore\n    ClearableTextInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"ClearableTextInput\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"isClearable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isClearable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/ClearableTextInput.tsx#ClearableTextInput\"] = { docgenInfo: ClearableTextInput.__docgenInfo, name: \"ClearableTextInput\", path: \"src/components/Inputs/ClearableTextInput.tsx#ClearableTextInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"isClearable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isClearable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/ClearableTextInput.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Inputs/ClearableTextInput.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  Clipboard,\n  TextInput as RNTextInput,\n  TouchableOpacity,\n} from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport IconTextInput, { IconTextInputProps } from './IconTextInput';\n\nexport interface CopyTextInputProps extends IconTextInputProps {\n  onCopy?: (text: string) => void;\n}\n\nconst CopyTextInputBase = (props: CopyTextInputProps) => {\n  const { onCopy, innerRef, value, ...textInputWithIconProps } = props;\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <IconTextInput\n      ref={innerRef}\n      rightIcon={\n        value ? (\n          <TouchableOpacity\n            onPress={() => {\n              Clipboard.setString(value);\n              if (onCopy) {\n                onCopy(value);\n              }\n            }}\n          >\n            <Icon name=\"copy\" size={24} color={theme.colors.text.default} />\n          </TouchableOpacity>\n        ) : null\n      }\n      value={value}\n      {...textInputWithIconProps}\n    />\n  );\n};\n\nexport const CopyTextInput = React.forwardRef<RNTextInput, CopyTextInputProps>(\n  (props, ref) => <CopyTextInputBase {...props} innerRef={ref} />,\n);\n\nexport default CopyTextInput;\ntry {\n    // @ts-ignore\n    CopyTextInput.displayName = \"CopyTextInput\";\n    // @ts-ignore\n    CopyTextInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"CopyTextInput\", \"props\": { \"onCopy\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onCopy\", \"required\": false, \"type\": { \"name\": \"(text: string) => void\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/CopyTextInput.tsx#CopyTextInput\"] = { docgenInfo: CopyTextInput.__docgenInfo, name: \"CopyTextInput\", path: \"src/components/Inputs/CopyTextInput.tsx#CopyTextInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"onCopy\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onCopy\", \"required\": false, \"type\": { \"name\": \"(text: string) => void\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/CopyTextInput.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Inputs/CopyTextInput.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface IconTextInputStyles {\n  inputStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport interface GetIconTextInputStylesProps {\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n}\n\nexport type GetIconTextInputStyles = (\n  props: GetIconTextInputStylesProps,\n  theme: Theme,\n) => IconTextInputStyles;\n\nexport const getIconTextInputStyles: GetIconTextInputStyles = (\n  props: GetIconTextInputStylesProps,\n  theme,\n) => {\n  const { hasLeftIcon, hasRightIcon } = props;\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    inputStyle: {\n      ...(hasLeftIcon && { paddingLeft: 48 }),\n      ...(hasRightIcon && { paddingRight: 48 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getIconTextInputStyles.displayName = \"getIconTextInputStyles\";\n    // @ts-ignore\n    getIconTextInputStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getIconTextInputStyles\", \"props\": { \"hasLeftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hasLeftIcon\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"hasRightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hasRightIcon\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/IconTextInput.styles.ts#getIconTextInputStyles\"] = { docgenInfo: getIconTextInputStyles.__docgenInfo, name: \"getIconTextInputStyles\", path: \"src/components/Inputs/IconTextInput.styles.ts#getIconTextInputStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TextInput as RNTextInput, View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  getIconTextInputStyles,\n  IconTextInputStyles,\n} from './IconTextInput.styles';\nimport TextInput, { TextInputProps } from './TextInput';\nimport { GetTextInputStyles, TextInputStyles } from './TextInput.styles';\n\nexport interface IconTextInputProps extends Omit<TextInputProps, 'getStyles'> {\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles & IconTextInputStyles>\n  >;\n}\n\nconst IconTextInputBase = (props: IconTextInputProps) => {\n  const {\n    leftIcon = null,\n    rightIcon = null,\n    getStyles,\n    innerRef,\n    ...textInputProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n  const {\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n    inputStyle,\n  } = mergeStyles(getIconTextInputStyles, getStyles)(\n    { hasLeftIcon: !!leftIcon, hasRightIcon: !!rightIcon },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle}>\n      <View style={leftContainerStyle}>{leftIcon}</View>\n      <TextInput\n        ref={innerRef}\n        getStyles={() => ({\n          inputStyle,\n        })}\n        {...textInputProps}\n      />\n      <View style={rightContainerStyle}>{rightIcon}</View>\n    </View>\n  );\n};\n\nexport const IconTextInput = React.forwardRef<RNTextInput, IconTextInputProps>(\n  (props, ref) => <IconTextInputBase {...props} innerRef={ref} />,\n);\n\nexport default IconTextInput;\ntry {\n    // @ts-ignore\n    IconTextInput.displayName = \"IconTextInput\";\n    // @ts-ignore\n    IconTextInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"IconTextInput\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/IconTextInput.tsx#IconTextInput\"] = { docgenInfo: IconTextInput.__docgenInfo, name: \"IconTextInput\", path: \"src/components/Inputs/IconTextInput.tsx#IconTextInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/IconTextInput.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Inputs/IconTextInput.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport PhoneNumberInput, { PhoneNumberInputProps } from './PhoneNumberInput';\n\nexport interface PhoneNumberInputFieldProps\n  extends FormFieldProps,\n    PhoneNumberInputProps {}\n\nconst PhoneNumberInputFieldBase = (props: PhoneNumberInputFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <PhoneNumberInput isInvalid={!!error} {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const PhoneNumberInputField = withTheme(PhoneNumberInputFieldBase);\nexport default PhoneNumberInputField;\n","import * as React from 'react';\nimport { TextInput as RNTextInput, View } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport ClearableTextInput, {\n  ClearableTextInputProps,\n} from './ClearableTextInput';\n\n// tslint:disable-next-line\nexport interface SearchTextInputProps extends ClearableTextInputProps {}\n\nconst SearchTextInputBase = (props: SearchTextInputProps) => {\n  const { onClear, innerRef, ...textInputWithIconProps } = props;\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <ClearableTextInput\n      ref={innerRef}\n      leftIcon={\n        <View>\n          <Icon name=\"search\" size={24} color={theme.colors.text.default} />\n        </View>\n      }\n      {...textInputWithIconProps}\n    />\n  );\n};\n\nexport const SearchTextInput = React.forwardRef<\n  RNTextInput,\n  SearchTextInputProps\n>((props, ref) => <SearchTextInputBase {...props} innerRef={ref} />);\n\nexport default SearchTextInput;\ntry {\n    // @ts-ignore\n    SearchTextInput.displayName = \"SearchTextInput\";\n    // @ts-ignore\n    SearchTextInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"SearchTextInput\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/SearchTextInput.tsx#SearchTextInput\"] = { docgenInfo: SearchTextInput.__docgenInfo, name: \"SearchTextInput\", path: \"src/components/Inputs/SearchTextInput.tsx#SearchTextInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/SearchTextInput.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Inputs/SearchTextInput.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport TextInput, { TextInputProps } from './TextInput';\n\nexport interface TextAreaProps extends TextInputProps {\n  numberOfLines?: number;\n  theme: Theme;\n}\n\nconst TextAreaBase = (props: TextAreaProps) => {\n  const {\n    numberOfLines = 3,\n    size = 'medium',\n    theme,\n    ...textInputProps\n  } = props;\n  const controlHeight = theme.controlHeights[size];\n\n  return (\n    <TextInput\n      multiline\n      size={size}\n      numberOfLines={numberOfLines}\n      getStyles={() => ({\n        inputStyle: {\n          height: numberOfLines * controlHeight,\n          paddingBottom: 8,\n          paddingTop: 8,\n        },\n      })}\n      {...textInputProps}\n    />\n  );\n};\n\nexport const TextArea = withTheme(TextAreaBase);\nexport default TextArea;\n","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport TextArea, { TextAreaProps } from './TextArea';\n\nexport interface TextAreaFieldProps extends FormFieldProps, TextAreaProps {}\n\nconst TextAreaFieldBase = (props: TextAreaFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <TextArea isInvalid={!!error} {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const TextAreaField = withTheme(TextAreaFieldBase);\nexport default TextAreaField;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { State } from 'react-powerplug';\nimport { View } from 'react-native';\nimport { Icon } from '../../icons';\nimport { TextInput } from '.';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"textinput\"}}>{`TextInput`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Composes of React Native's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TextInput`}</MDXTag>{` component (i.e. you can pass its props). `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://facebook.github.io/react-native/docs/textinput\"}}>{`See more details`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      name=\\\"field\\\"\\n      value={state.value}\\n      placeholder=\\\"Add your own placeholder\\\"\\n      size=\\\"large\\\"\\n      isDisabled={false}\\n      isInvalid={false}\\n      keyboardType=\\\"email-address\\\"\\n      onChangeText={text => setState({ value: text })}\\n      onSubmitEditing={e => console.log(\\'Submit on enter\\')}\\n      leftIcon={\\n        <View>\\n          <Icon name=\\\"menu\\\" size={24} />\\n        </View>\\n      }\\n      rightIcon={undefined}\\n      isClearable={true} // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n      getStyles={(props, theme) => ({\\n        inputStyle: {},\\n        placeholderTextColor: theme.colors.text.muted,\\n      })}\\n    />\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,View,Icon,TextInput}}>\n  <State initial={{ value: '' }}>\n    {({ state, setState }) => (\n      <TextInput\n        name=\"field\"\n        value={state.value}\n        placeholder=\"Add your own placeholder\"\n        size=\"large\"\n        isDisabled={false}\n        isInvalid={false}\n        keyboardType=\"email-address\"\n        onChangeText={text => setState({ value: text })}\n        onSubmitEditing={e => console.log('Submit on enter')}\n        leftIcon={\n          <View>\n            <Icon name=\"menu\" size={24} />\n          </View>\n        }\n        rightIcon={undefined}\n        isClearable={true} // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        getStyles={(props, theme) => ({\n          inputStyle: {},\n          placeholderTextColor: theme.colors.text.muted,\n        })}\n      />\n    )}\n  </State>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport TextInput, { TextInputProps } from './TextInput';\n\nexport interface TextInputFieldProps extends FormFieldProps, TextInputProps {}\n\nconst TextInputFieldBase = (props: TextInputFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <TextInput isInvalid={!!error} {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const TextInputField = withTheme(TextInputFieldBase);\nexport default TextInputField;\n","export {\n  default as TextInputField,\n  TextInputFieldProps,\n} from './TextInputField';\nexport { default as TextArea, TextAreaProps } from './TextArea';\nexport { default as TextAreaField, TextAreaFieldProps } from './TextAreaField';\nexport {\n  default as PhoneNumberInput,\n  PhoneNumberInputProps,\n} from './PhoneNumberInput';\nexport {\n  default as PhoneNumberInputField,\n  PhoneNumberInputFieldProps,\n} from './PhoneNumberInputField';\nexport {\n  default as TextInput,\n  ClearableTextInputProps as TextInputProps,\n} from './ClearableTextInput';\nexport {\n  default as SearchTextInput,\n  SearchTextInputProps,\n} from './SearchTextInput';\nexport { default as CopyTextInput, CopyTextInputProps } from './CopyTextInput';\n"],"sourceRoot":""}