{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/RowAndColumn.mdx"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Column","override","config","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_getOverrides","getOverrides","StyledRoot","dlv","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","Root","rootProps","react__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_jsxFileName","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","viewProps","_useLayout","useLayout","currentScreenSize","gridColumnCount","gutterWidth","React","GutterWidthContext","_splitColumnConfig","splitColumnConfig","columns","offsetColumns","columnCount","getColumnCount","flexBasis","getProportion","offsetColumnCount","marginLeft","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","flex","maxWidth","paddingLeft","paddingRight","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","concat","Container","size","_props$fluid","fluid","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","containerSizes","marginRight","getMaxWidth","width","undefined","defaultLayout","Row","_props$hasGutter","hasGutter","Provider","value","flexDirection","flexWrap","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","paddingVertical","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","height","borderWidth","of","className","isMDXComponent"],"mappings":"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","file":"static/js/15.68725588.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override } from '../../utils/overrides';\nimport {\n  ColumnCount,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  /**\n   * Number of columns to span over when screen size is xsmall\n   */\n  xsmall?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is small\n   */\n  small?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is medium\n   */\n  medium?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is large\n   */\n  large?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is xlarge\n   */\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  /**\n   * Number of columns to offset when screen size is xsmall\n   */\n  offsetXsmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is small\n   */\n  offsetSmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is medium\n   */\n  offsetMedium?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is large\n   */\n  offsetLarge?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is xlarge\n   */\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  /** Content of the column. */\n  children?: React.ReactNode;\n\n  /**\n   * Overrides\n   */\n  override?: ColumnOverride;\n}\n\nexport type ColumnOverride = Override<ColumnProps, RootProps>;\n\nexport const Column = (props: ColumnProps) => {\n  const { children, override, ...config } = props;\n  const theme = useTheme();\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Column'),\n    override,\n  );\n\n  return (\n    <Root {...config} {...rootProps}>\n      {children}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps, ColumnConfig {\n  children?: React.ReactNode;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    children,\n    style,\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n    ...viewProps\n  } = props;\n  const config = {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  };\n  const { currentScreenSize, gridColumnCount } = useLayout();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const { columns, offsetColumns } = splitColumnConfig(config);\n\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return (\n    <View\n      style={[\n        {\n          flex: 1,\n          flexBasis,\n          marginLeft,\n          maxWidth: flexBasis,\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override } from '../../utils/overrides';\nimport {\n  ContainerSize,\n  ContainerSizes,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\n\nexport interface ContainerProps {\n  /** Children node */\n  children?: React.ReactNode;\n\n  /**\n   * When true, it will not contain the width and occupy fully the parent container\n   * @default false\n   */\n  fluid?: boolean;\n\n  /**\n   * The size of the container. It will override the internal responsive mechanism, and will force the\n   * containment of a particular screen size\n   */\n  size?: ContainerSize;\n\n  /**\n   * Overrides\n   */\n  override?: ContainerOverride;\n}\n\nexport type ContainerOverride = Override<ContainerProps, RootProps>;\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, size, fluid = false, override } = props;\n  const theme = useTheme();\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Container'),\n    override,\n  );\n\n  return (\n    <Root size={size} fluid={fluid} {...rootProps}>\n      {children}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  fluid: boolean;\n  size?: ContainerSize;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { size, fluid, children, style, ...viewProps } = props;\n  const { gutterWidth, containerSizes, currentScreenSize } = useLayout();\n\n  return (\n    <View\n      style={[\n        {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: fluid\n            ? '100%'\n            : size\n            ? containerSizes[size]\n            : getMaxWidth(containerSizes, currentScreenSize),\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getMaxWidth = (\n  containerSizes: ContainerSizes,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (screenSize === 'xsmall') return false;\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!containerSizes[screenSize];\n  });\n\n  if (nearestSize === 'xsmall') return undefined;\n\n  return nearestSize ? containerSizes[nearestSize] : undefined;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override } from '../../utils/overrides';\nimport { ColumnProps } from './Column';\nimport { defaultLayout, useLayout } from './LayoutContext';\n\nexport interface RowProps {\n  /**\n   * When true, there will be gutter between columns\n   * @default true\n   */\n  hasGutter?: boolean;\n\n  /**\n   * `Column` components\n   */\n  children:\n    | Array<React.ReactElement<ColumnProps>>\n    | React.ReactElement<ColumnProps>;\n\n  /**\n   * Overrides\n   */\n  override?: RowOverride;\n}\n\nexport type RowOverride = Override<RowProps, RootProps>;\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, override } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Row'),\n    override,\n  );\n\n  return (\n    <Root hasGutter={hasGutter} {...rootProps}>\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  hasGutter: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, hasGutter, ...viewProps } = props;\n  const { gutterWidth } = useLayout();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n          marginRight: hasGutter ? -gutterWidth / 2 : 0,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"row-and-column\"\n    }}>{`Row and Column`}</h1>\n    <p><inlineCode parentName=\"p\">{`Column`}</inlineCode>{` renders at the width of defined columns count. It will match nearest defined size that is smaller than or equal to current screen size.\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` wraps `}<inlineCode parentName=\"p\">{`Column`}</inlineCode>{`s to keep them horizontal`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"row-props\"\n    }}>{`Row Props`}</h2>\n    <Props of={Row} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"row-customization\"\n    }}>{`Row Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RowStyles {\n  rowStyle: ViewStyle;\n}\n\ngetStyles={(RowProps, Theme) => RowStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View rowStyle />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"column-props\"\n    }}>{`Column Props`}</h2>\n    <Props of={Column} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"column-customization\"\n    }}>{`Column Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\ngetStyles={(ColumnProps, Theme) => ColumnStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View columnStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}