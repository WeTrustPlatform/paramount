{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","height","marginLeft","marginRight","width","defaultProps","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","_props$appearance2","_props$color2","_props$isDisabled2","_props$isLoading2","_props$size2","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","_props$appearance3","_props$color3","_props$isDisabled3","_props$size3","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","_props$appearance4","_props$color4","Dots_Dots","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Drawer","Toggle","___WEBPACK_IMPORTED_MODULE_9__","_ref2","on","toggle","react__WEBPACK_IMPORTED_MODULE_2___default","Fragment","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_7__","space","isVisible","onRequestClose","___WEBPACK_IMPORTED_MODULE_5__","_ref3","position","_ref4","_ref5","of","isMDXComponent","_props$isVisible","_props$position","_props$offset","offset","_props$shouldLockBody","shouldLockBodyScroll","_props$useHistory","useHistory","_props$onRequestClose","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","rootProps","StyledContent","Content","contentProps","Overlay","OverlayR","overlayProps","react__WEBPACK_IMPORTED_MODULE_6__","_Modal__WEBPACK_IMPORTED_MODULE_12__","visible","transparent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_useSpring","_props$position2","_props$offset2","animation","useSpring","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","springDefaultConfig","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","zIndex","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","set","useElement","element","rootElem","rootElement","rootContainer","document","createElement","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","ModalBase","_props$animationType","animationType","isUnmounting","targetElement","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","createFocusTrap","initialFocus","onDeactivate","activate","y","ReactDOM","web_cjs","div","tabIndex","ref","bottom","left","right","top","transform","interpolate","v","concat","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","modal","pushState","defineProperty","addEventListener","handlePopstate","event","_this$props","go","handleEscapeKey","replaceState","removeEventListener","modalProps","ModalBase_web_ModalBase","HistoryModal_web_jsxFileName","HistoryModal","_ref$useHistory","HistoryModal_web_HistoryModalBase","override","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_TouchableWithoutFeedback__WEBPACK_IMPORTED_MODULE_5__","preventDefault","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/7.52221e59.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: string;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nconst defaultProps = {\n  appearance: 'primary' as const,\n  color: 'default' as const,\n  isDisabled: false,\n  isLoading: false,\n  size: 'medium' as const,\n};\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    size = defaultProps.size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n  } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Drawer, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <p>{`Slides a panel from defined position`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onRequestClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"top\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"left\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"right\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Drawer,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"top\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"left\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"right\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Drawer} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Modal } from '../Modal';\nimport { Overlay, OverlayProps } from '../Overlay';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nconst AnimatedView = animated(View);\n\ninterface DrawerBaseProps {\n  /**\n   * (Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that\n   * @default false\n   */\n  useHistory?: boolean;\n\n  /**\n   * (Web only) When true, the body of the document will not scroll when dialog is opened\n   * @default true\n   */\n  shouldLockBodyScroll?: boolean;\n\n  /**\n   * When true, it will display the drawer\n   * @default false\n   */\n  isVisible?: boolean;\n\n  /**\n   * Called when clicking on overlay or pressing Esc\n   */\n  onRequestClose?: () => void;\n\n  /**\n   * Amount to offset from the edge of window.\n   * @default 0\n   */\n  offset?: number;\n\n  /**\n   * Amount of % screen or px to take up.\n   */\n  space?: number | string;\n\n  /**\n   * The position to slide from.\n   * @default bottom\n   */\n  position?: Position;\n\n  /** Content of the drawer body */\n  children: React.ReactNode;\n}\n\nexport interface DrawerOverrides {\n  Root: RootProps;\n  Content: ContentProps;\n  Overlay: OverlayProps;\n}\n\nexport interface DrawerProps\n  extends WithOverrides<DrawerBaseProps, DrawerOverrides> {}\n\nconst defaultProps = {\n  shouldLockBodyScroll: true,\n  useHistory: false,\n  isVisible: false,\n  position: 'bottom' as const,\n  offset: 0,\n};\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    isVisible = defaultProps.isVisible,\n    position = defaultProps.position,\n    offset = defaultProps.offset,\n    shouldLockBodyScroll = defaultProps.shouldLockBodyScroll,\n    useHistory = defaultProps.useHistory,\n    children,\n    onRequestClose = () => null,\n    space,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Drawer.Root'),\n    overrides.Root,\n  );\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    dlv(theme, 'overrides.Drawer.Content'),\n    overrides.Content,\n  );\n  const [OverlayR, overlayProps] = getOverrides(\n    Overlay,\n    props,\n    dlv(theme, 'overrides.Drawer.Overlay'),\n    overrides.Overlay,\n  );\n\n  return (\n    <Modal\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n      shouldLockBodyScroll={shouldLockBodyScroll}\n      useHistory={useHistory}\n    >\n      <Root {...rootProps}>\n        <Content\n          position={position}\n          offset={offset}\n          space={space}\n          {...contentProps}\n        >\n          {children}\n        </Content>\n        <OverlayR onPress={onRequestClose} {...overlayProps} />\n      </Root>\n    </Modal>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ContentProps extends ViewProps, PropsWithChildren {\n  offset?: number;\n  space?: number | string;\n  position?: Position;\n}\n\nconst StyledContent = (props: ContentProps) => {\n  const {\n    position = defaultProps.position,\n    offset = defaultProps.offset,\n    children,\n    space,\n    style,\n    ...viewProps\n  } = props;\n\n  const animation = useSpring({\n    [position]: offset,\n    config: springDefaultConfig,\n    from: { [position]: -600 },\n    reset: true,\n  });\n\n  return (\n    // @ts-ignore\n    <AnimatedView\n      style={[\n        {\n          position: 'absolute',\n          width: '100%',\n          zIndex: 1,\n          [position]: animation[position],\n          ...((position === 'left' || position === 'right') &&\n            space && {\n              height: '100%',\n              width: space,\n            }),\n          ...((position === 'bottom' || position === 'top') &&\n            space && {\n              height: space,\n              width: '100%',\n            }),\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </AnimatedView>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { TouchableWithoutFeedback, View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override } from '../../utils/overrides';\n\nexport interface OverlayProps {\n  onPress?: () => void;\n  override?: OverlayOverride;\n}\n\nexport type OverlayOverride = Override<OverlayProps, RootProps>;\n\nexport const Overlay = (props: OverlayProps) => {\n  const {\n    onPress = () => {\n      return;\n    },\n    override,\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Overlay'),\n    override,\n  );\n\n  return <Root onPress={onPress} {...rootProps} />;\n};\n\ninterface RootProps extends ViewProps {\n  onPress: () => void;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { style, onPress, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View\n        style={[\n          {\n            backgroundColor: theme.colors.background.overlay,\n            bottom: 0,\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n          },\n          style,\n        ]}\n        {...viewProps}\n      />\n    </TouchableWithoutFeedback>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}