{"version":3,"sources":["webpack:///./src/components/Avatar/Avatar.mdx","webpack:///./src/components/Avatar/Avatar.tsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_Avatar","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","Playground","__position","__code","__scope","Avatar","isSolid","source","size","PropsTable","of","React","Component","_interopRequireWildcard","_reactNative","_theme","_Typography","globalGetInitials","fallback","arguments","length","undefined","replace","split","slice","map","v","toUpperCase","join","AvatarBase","theme","_props$size","_props$isSolid","hashValue","_props$getInitials","getInitials","_props$color","color","_props$forceShowIniti","forceShowInitials","_props$sizeLimitOneCh","sizeLimitOneCharacter","dangerouslySetInlineStyle","imageUnavailable","initials","substring","_theme$getAvatarStyle","getAvatarStyles","boxStyle","textStyle","imageStyle","View","style","_objectSpread2","Text","Image","uri","withTheme","displayName","__docgenInfo","description","defaultValue","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","__class"],"mappings":"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","file":"static/js/26.f5a1f0d9.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Avatar from './Avatar';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note`}</MDXTag>{` Accessibility/Interactivity is a responsibility of a wrapping component`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"automatic-default-usage\"}}>{`Automatic default usage`}</MDXTag>\n<Playground __position={0} __code={'<Avatar name=\\\"Bill Gates\\\" />'} __scope={{props: this ? this.props : props,Avatar}}>\n  <Avatar name=\"Bill Gates\" />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"automatic-solid-usage\"}}>{`Automatic solid usage`}</MDXTag>\n<Playground __position={1} __code={'<Avatar isSolid name=\\\"Eri Reis\\\" />'} __scope={{props: this ? this.props : props,Avatar}}>\n  <Avatar isSolid name=\"Eri Reis\" />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-image-source\"}}>{`Using image source`}</MDXTag>\n<Playground __position={2} __code={'<Avatar source=\\\"https://picsum.photos/200/200\\\" />'} __scope={{props: this ? this.props : props,Avatar}}>\n  <Avatar source=\"https://picsum.photos/200/200\" />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"avatar-sizes\"}}>{`Avatar sizes`}</MDXTag>\n<Playground __position={3} __code={'<Avatar name=\\\"Andy Grove\\\" />\\n<Avatar name=\\\"Bill Gates\\\" size={60} />'} __scope={{props: this ? this.props : props,Avatar}}>\n  <Avatar name=\"Andy Grove\" />\n  <Avatar name=\"Bill Gates\" size={60} />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Avatar} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport { Image, View } from 'react-native';\n\nimport { Theme, withTheme } from '../../theme';\nimport { AvatarStyles } from '../../theme/style-getters/getAvatarStyles';\nimport { FillColors } from '../../theme/ThemeInterface';\nimport { Text } from '../Typography';\n\n// https://github.com/segmentio/evergreen/blob/master/source/avatar/README.md\nexport type GetInitialsType = (name?: string, fallback?: string) => string;\n\nexport const globalGetInitials: GetInitialsType = (name, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\nexport interface AvatarProps {\n  /**\n   * The source attribute of the image.\n   * When it's not available, render initials instead.\n   */\n  source?: string;\n\n  /**\n   * The size of the avatar.\n   */\n  size?: number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * The value used for the hash function.\n   * The name is used as the hashValue by default.\n   * When dealing with anonymous users you should use the id instead.\n   */\n  hashValue?: string;\n\n  /**\n   * When true, render a solid avatar.\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * When the value is `automatic`, use the hash function to determine the color.\n   */\n  color?: 'automatic' | keyof FillColors;\n\n  /**\n   * Function to get the initials based on the name.\n   */\n  getInitials?: GetInitialsType;\n\n  /**\n   * When true, force show the initials.\n   * This is useful in some cases when using Gravatar and transparent pngs.\n   */\n  forceShowInitials?: boolean;\n\n  /**\n   * When the size is smaller than this number, use a single initial for the avatar.\n   */\n  sizeLimitOneCharacter?: number;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  dangerouslySetInlineStyle?: Partial<AvatarStyles>;\n}\n\nexport const AvatarBase = (props: AvatarProps) => {\n  const {\n    theme,\n\n    source,\n    size = 40,\n    name,\n    isSolid = false,\n    hashValue,\n    getInitials = globalGetInitials,\n    color = 'automatic',\n    forceShowInitials = false,\n    sizeLimitOneCharacter = 20,\n    dangerouslySetInlineStyle,\n  } = props;\n\n  const { imageHasFailedLoading } = { imageHasFailedLoading: false };\n  const imageUnavailable = !source || imageHasFailedLoading;\n\n  let initials = getInitials(name);\n  if (size <= sizeLimitOneCharacter) {\n    initials = initials.substring(0, 1);\n  }\n\n  const { boxStyle, textStyle, imageStyle } = theme.getAvatarStyles({\n    color,\n    hashValue,\n    isSolid,\n    name,\n    size,\n    sizeLimitOneCharacter,\n  });\n\n  return (\n    <View\n      style={{\n        ...boxStyle,\n        ...(dangerouslySetInlineStyle && dangerouslySetInlineStyle.boxStyle),\n      }}\n    >\n      {(imageUnavailable || forceShowInitials) && (\n        <Text\n          dangerouslySetInlineStyle={{\n            textStyle: {\n              ...textStyle,\n              ...(dangerouslySetInlineStyle &&\n                dangerouslySetInlineStyle.textStyle),\n            },\n          }}\n        >\n          {initials}\n        </Text>\n      )}\n      {!imageUnavailable && (\n        <Image\n          source={{\n            uri: source,\n          }}\n          style={{\n            ...imageStyle,\n            ...(dangerouslySetInlineStyle &&\n              dangerouslySetInlineStyle.imageStyle),\n          }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport const Avatar = withTheme(AvatarBase);\nexport default Avatar;\ntry {\n    // @ts-ignore\n    AvatarBase.displayName = \"AvatarBase\";\n    // @ts-ignore\n    AvatarBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"AvatarBase\", \"props\": { \"source\": { \"defaultValue\": null, \"description\": \"The source attribute of the image.\\nWhen it's not available, render initials instead.\", \"name\": \"source\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"The size of the avatar.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name used for the initials and title attribute.\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"hashValue\": { \"defaultValue\": null, \"description\": \"The value used for the hash function.\\nThe name is used as the hashValue by default.\\nWhen dealing with anonymous users you should use the id instead.\", \"name\": \"hashValue\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"When true, render a solid avatar.\", \"name\": \"isSolid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"The color used for the avatar.\\nWhen the value is `automatic`, use the hash function to determine the color.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"automatic\\\" | \\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"getInitials\": { \"defaultValue\": null, \"description\": \"Function to get the initials based on the name.\", \"name\": \"getInitials\", \"required\": false, \"type\": { \"name\": \"GetInitialsType\" } }, \"forceShowInitials\": { \"defaultValue\": null, \"description\": \"When true, force show the initials.\\nThis is useful in some cases when using Gravatar and transparent pngs.\", \"name\": \"forceShowInitials\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sizeLimitOneCharacter\": { \"defaultValue\": null, \"description\": \"When the size is smaller than this number, use a single initial for the avatar.\", \"name\": \"sizeLimitOneCharacter\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"Theme provided by ThemeProvider.\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"dangerouslySetInlineStyle\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"dangerouslySetInlineStyle\", \"required\": false, \"type\": { \"name\": \"Partial<AvatarStyles>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Avatar/Avatar.tsx#AvatarBase\"] = { docgenInfo: AvatarBase.__docgenInfo, name: \"AvatarBase\", path: \"src/components/Avatar/Avatar.tsx#AvatarBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    Avatar.displayName = \"Avatar\";\n    // @ts-ignore\n    Avatar.__docgenInfo = { \"description\": \"\", \"displayName\": \"Avatar\", \"props\": { \"source\": { \"defaultValue\": null, \"description\": \"The source attribute of the image.\\nWhen it's not available, render initials instead.\", \"name\": \"source\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"The size of the avatar.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name used for the initials and title attribute.\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"hashValue\": { \"defaultValue\": null, \"description\": \"The value used for the hash function.\\nThe name is used as the hashValue by default.\\nWhen dealing with anonymous users you should use the id instead.\", \"name\": \"hashValue\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"When true, render a solid avatar.\", \"name\": \"isSolid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"The color used for the avatar.\\nWhen the value is `automatic`, use the hash function to determine the color.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"automatic\\\" | \\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"getInitials\": { \"defaultValue\": null, \"description\": \"Function to get the initials based on the name.\", \"name\": \"getInitials\", \"required\": false, \"type\": { \"name\": \"GetInitialsType\" } }, \"forceShowInitials\": { \"defaultValue\": null, \"description\": \"When true, force show the initials.\\nThis is useful in some cases when using Gravatar and transparent pngs.\", \"name\": \"forceShowInitials\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sizeLimitOneCharacter\": { \"defaultValue\": null, \"description\": \"When the size is smaller than this number, use a single initial for the avatar.\", \"name\": \"sizeLimitOneCharacter\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dangerouslySetInlineStyle\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"dangerouslySetInlineStyle\", \"required\": false, \"type\": { \"name\": \"Partial<AvatarStyles>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Avatar/Avatar.tsx#Avatar\"] = { docgenInfo: Avatar.__docgenInfo, name: \"Avatar\", path: \"src/components/Avatar/Avatar.tsx#Avatar\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"source\": { \"defaultValue\": null, \"description\": \"The source attribute of the image.\\nWhen it's not available, render initials instead.\", \"name\": \"source\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"The size of the avatar.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name used for the initials and title attribute.\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"hashValue\": { \"defaultValue\": null, \"description\": \"The value used for the hash function.\\nThe name is used as the hashValue by default.\\nWhen dealing with anonymous users you should use the id instead.\", \"name\": \"hashValue\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"When true, render a solid avatar.\", \"name\": \"isSolid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"The color used for the avatar.\\nWhen the value is `automatic`, use the hash function to determine the color.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"automatic\\\" | \\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"getInitials\": { \"defaultValue\": null, \"description\": \"Function to get the initials based on the name.\", \"name\": \"getInitials\", \"required\": false, \"type\": { \"name\": \"GetInitialsType\" } }, \"forceShowInitials\": { \"defaultValue\": null, \"description\": \"When true, force show the initials.\\nThis is useful in some cases when using Gravatar and transparent pngs.\", \"name\": \"forceShowInitials\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sizeLimitOneCharacter\": { \"defaultValue\": null, \"description\": \"When the size is smaller than this number, use a single initial for the avatar.\", \"name\": \"sizeLimitOneCharacter\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dangerouslySetInlineStyle\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"dangerouslySetInlineStyle\", \"required\": false, \"type\": { \"name\": \"Partial<AvatarStyles>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Avatar/Avatar.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Avatar/Avatar.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}