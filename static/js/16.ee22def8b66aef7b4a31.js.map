{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["Avatar","props","source","name","_props$size","size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","isImageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","onError","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","__source","fileName","_jsxFileName","lineNumber","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Icon","ListItem","___WEBPACK_IMPORTED_MODULE_7__","onPress","console","log","uri","title","description","of","isMDXComponent","_props$isDisabled","isDisabled","getControlHeight","useControlSizeUtils","StyledTouchable","Touchable","touchableProps","StyledTextWrapper","hasAvatar","TextWrapper","textWrapperProps","_getOverrides7","StyledTitle","Title","_getOverrides8","titleProps","_getOverrides9","StyledDescription","Description","_getOverrides10","descriptionProps","_getOverrides11","StyledAction","Action","_getOverrides12","rightIconProps","_getOverrides13","StyledAvatar","_getOverrides14","AvatarR","avatarProps","viewProps","flexDirection","minHeight","colors","background","greyLight","content","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","flex","disabled","_props$hasAvatar","paddingLeft","getSmallerHeightControlSize","Fragment","_Avatar__WEBPACK_IMPORTED_MODULE_9__","__webpack_require__","d","__webpack_exports__","_theme__WEBPACK_IMPORTED_MODULE_0__","getSmallerTextSize","getTextSize","getHeightControlSize"],"mappings":"28CAwDO,IAAMA,EAAS,SAACC,GAAuB,IAE1CC,EAOED,EAPFC,OACAC,EAMEF,EANFE,KAH0CC,EASxCH,EALFI,YAJ0C,IAAAD,EAInC,SAJmCA,EAAAE,EASxCL,EAJFM,eAL0C,IAAAD,KAAAE,EASxCP,EAHFQ,aAN0C,IAAAD,EAMlC,OANkCA,EAO1CE,EAEET,EAFFS,OAP0CC,EASxCV,EADFW,iBAR0C,IAAAD,EAQ9B,GAR8BA,EAWtCE,EAAQC,cAX8BC,EAYcC,IAAMC,UAC9D,GAb0CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAYrCM,EAZqCH,EAAA,GAYdI,EAZcJ,EAAA,GAetCK,GAAsBrB,GAAUmB,EAfMG,EAiBlBC,YACxBC,EACAzB,EACA,CAAEE,OAAME,OAAME,UAASE,QAAOC,UAC9BiB,IAAId,EAAO,yBACXD,EAAUgB,MAtBgCC,EAAAV,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAiBrCI,EAjBqCC,EAAA,GAiB/BC,EAjB+BD,EAAA,GAAAE,EAwBVN,YAChCO,EACA/B,EACA,CAAEE,OAAME,OAAME,UAASE,SACvBkB,IAAId,EAAO,4BACXD,EAAUqB,UA7BgCC,EAAAf,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAwBrCE,EAxBqCC,EAAA,GAwB3BC,EAxB2BD,EAAA,GAgC5C,IAAKX,GAAwBrB,EAAQ,KAAAkC,EACNX,YAC3BY,EACApC,EACA,CACEqC,QAAS,kBAAMhB,GAAyB,IACxCpB,UAEFyB,IAAId,EAAO,0BACXD,EAAU2B,OATuBC,EAAArB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GAC5BK,EAD4BD,EAAA,GACpBE,EADoBF,EAAA,GAYnC,OACEG,EAAAC,EAAAC,cAACjB,EAADT,OAAA2B,EAAA,EAAA3B,CAAA,GAAUW,EAAV,CAAAiB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEP,EAAAC,EAAAC,cAACJ,EAADtB,OAAA2B,EAAA,EAAA3B,CAAA,GAAYuB,EAAZ,CAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,SAKN,OACEP,EAAAC,EAAAC,cAACjB,EAADT,OAAA2B,EAAA,EAAA3B,CAAA,GAAUW,EAAV,CAAAiB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEP,EAAAC,EAAAC,cAACZ,EAADd,OAAA2B,EAAA,EAAA3B,CAAA,GAAcgB,EAAd,CAAAY,SAAA,CAAAC,SAAAC,EAAAC,WAAA,oNASC,IAAMC,EAAW,SAACC,GACvB,IAAMC,EAAMC,OAAOF,GACfG,EAAO,EAEX,GAA0B,IAAtBF,EAAIG,OAAOC,OAAc,OAAOF,EACpC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAII,OAAQC,IAG9BH,GAAQA,GAAQ,GAAKA,EAFdF,EAAIM,WAAWD,GAKtBH,GAAQA,EAEV,OAAOK,KAAKC,IAAIN,mcAKlB,IAAMO,EAAiD,CACrDC,MAAO,EACPC,OAAQ,IACRC,MAAO,GAUHvC,EAAa,SAACzB,GAAqB,IAC/BS,EAAwDT,EAAxDS,OAAQwD,EAAgDjE,EAAhDiE,SAAU/D,EAAsCF,EAAtCE,KAAME,EAAgCJ,EAAhCI,KAAME,EAA0BN,EAA1BM,QAASE,EAAiBR,EAAjBQ,MAAO0D,EAAUlE,EAAVkE,MAChDtD,EAAQC,cACRsD,EAAcvD,EAAMwD,MAAM9D,EAAU,QAAU,UAC9C+D,EAAOnD,OAAOmD,KAAKF,GAEnBG,EAAcC,YAAcnE,GAC9BQ,EAAM4D,eAAepE,GAAQyD,EAAYzD,GACzCA,EAEJ,OACEsC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACEP,MAAO,CACL,CACEQ,WAAY,SACZC,gBACER,EACY,SAAV3D,EACK6D,EAAKnB,EAAShD,GAAQmE,EAAKb,QAC5BhD,GACJmE,gBACJC,aAAc,KACdC,QAAS,OACTC,OAAQR,EACRS,eAAgB,SAChBC,SAAU,SACVC,SAAU,WACVC,MAAOZ,GAETJ,GAEFzD,OAAQA,EApBVqC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAsBGgB,IAuBDlC,EAAiB,SAAC/B,GAAyB,IACvCE,EAAoDF,EAApDE,KAAME,EAA8CJ,EAA9CI,KAAME,EAAwCN,EAAxCM,QAASE,EAA+BR,EAA/BQ,MAAO0D,EAAwBlE,EAAxBkE,MAAUiB,EADCjE,OAAAkE,EAAA,EAAAlE,CACalB,EADb,2CAEzCY,EAAQC,cAERsD,EAAcvD,EAAMwD,MAAM9D,EAAU,QAAU,UAC9C+D,EAAOnD,OAAOmD,KAAKF,GAEnBG,EAAcC,YAAcnE,GAC9BQ,EAAM4D,eAAepE,GAAQyD,EAAYzD,GACzCA,EAEEiF,EA7BY,SAACnF,GAAkC,IAAnBoF,EAAmBC,UAAA/B,OAAA,QAAAgC,IAAAD,UAAA,GAAAA,UAAA,GAAR,IAC7C,OAAKrF,EAEEA,EACJuF,QAAQ,MAAO,KACfC,MAAM,KACNC,MAAM,EAAG,GACTC,IAAI,SAAAC,GAAC,OAAIA,GAAKA,EAAE,GAAGC,gBACnBC,KAAK,IAPUT,EA4BDU,CAAY9F,GAE7B,OACEwC,EAAAC,EAAAC,cAACqD,EAAA,EAAD/E,OAAA2B,EAAA,EAAA3B,CAAA,GACMiE,EADN,CAEEjB,MAAO,CACL,CACE1D,MACE2D,EACY,SAAV3D,EACK6D,EAAKnB,EAAShD,GAAQmE,EAAKb,QAC5BhD,GACJA,MACJ0F,SAAU5B,EAAc,EACxB6B,WAAY7B,GAEd8B,YAASpG,EAAOkE,IAbpBpB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAgBGoC,IAKDjD,EAAc,SAACpC,GAAsB,IACjCkE,EAAyBlE,EAAzBkE,MAAUzB,EADuBvB,OAAAkE,EAAA,EAAAlE,CACRlB,EADQ,WAGzC,OACE0C,EAAAC,EAAAC,cAACyD,EAAA,EAADnF,OAAA2B,EAAA,EAAA3B,CAAA,CACEgD,MAAO,CACL,CACEY,OAAQ,OACRI,MAAO,QAEThB,IAEEzB,EARN,CAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,grBCxOEqD,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACG1G,EACFkB,OAAAkE,EAAA,EAAAlE,CAAAuF,EAAA,gBACD,OAAOvF,OAAAyF,EAAA,EAAAzF,CAACqF,EAADrF,OAAA2B,EAAA,EAAA3B,CAAA,GAAeoF,EAAiBtG,EAAhC,CAAuC0G,WAAYA,EAAYE,QAAQ,YAAvE9D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGL/B,OAAAyF,EAAA,EAAAzF,CAAA,KAAAA,OAAA2B,EAAA,EAAA3B,CAAQ,CACN2F,GAAM,YADR,CAAA/D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kBAGA/B,OAAAyF,EAAA,EAAAzF,CAAA,KAAA4B,SAAA,CAAAC,SAAAC,EAAAC,WAAA,+BAA8B/B,OAAAyF,EAAA,EAAAzF,CAAA,cAAY4F,WAAW,IAAvBhE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAA9B,4CACA/B,OAAAyF,EAAA,EAAAzF,CAAA,KAAAA,OAAA2B,EAAA,EAAA3B,CAAQ,CACN2F,GAAM,SADR,CAAA/D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGA/B,OAAAyF,EAAA,EAAAzF,CAAC6F,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,yKAA8KC,QAAS,CACxNlH,MAAOmH,KAAOA,KAAKnH,MAAQA,EAC3BoH,eACAC,UACAtH,WACAuH,SACAC,cACCX,QAAQ,aAPX9D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAQF/B,OAAAyF,EAAA,EAAAzF,CAACsG,EAAA,EAAD,CAAUC,QAAS,kBAAMC,QAAQC,IAAI,UAAU1H,OAAQ,CACjD2H,IAAK,iCACJC,MAAM,aAAaC,YAAY,mBAAmBlB,QAAQ,WAFjE9D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAIE/B,OAAAyF,EAAA,EAAAzF,CAAA,KAAAA,OAAA2B,EAAA,EAAA3B,CAAQ,CACN2F,GAAM,SADR,CAAA/D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGA/B,OAAAyF,EAAA,EAAAzF,CAAC6F,EAAA,EAAD,CAAOgB,GAAIR,IAAUX,QAAQ,QAA7B9D,SAAA,CAAAC,SAAAC,EAAAC,WAAA,iMAIJuD,EAAWwB,gBAAiB,q/CCmBrB,IAAMT,EAAW,SAACvH,GAAyB,IAAAiI,EAU5CjI,EARFkI,kBAF8C,IAAAD,KAG9CJ,EAOE7H,EAPF6H,MACAC,EAME9H,EANF8H,YAJ8C3H,EAU5CH,EALFI,YAL8C,IAAAD,EAKvC,SALuCA,EAM9CsH,EAIEzH,EAJFyH,QACAhH,EAGET,EAHFS,OACAR,EAEED,EAFFC,OAR8CS,EAU5CV,EADFW,iBAT8C,IAAAD,EASlC,GATkCA,EAW1CE,EAAQC,cACNsH,EAAqBC,cAArBD,iBAZwC5G,EActBC,YACxBC,EACAzB,EACA,CAAEkI,aAAY9H,QACdsB,IAAId,EAAO,2BACXD,EAAUgB,MAnBoCC,EAAAV,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAczCI,EAdyCC,EAAA,GAcnCC,EAdmCD,EAAA,GAAAE,EAqBZN,YAClC6G,EACArI,EACA,CAAEyH,UAAShH,SAAQyH,cACnBxG,IAAId,EAAO,gCACXD,EAAU2H,WA1BoCrG,EAAAf,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAqBzCwG,EArByCrG,EAAA,GAqB9BsG,EArB8BtG,EAAA,GAAAE,EA4BRX,YACtCgH,EACAxI,EACA,CACEyI,YACIxI,KACAU,EAAUZ,UACV2B,IAAId,EAAO,8BAEjBc,IAAId,EAAO,kCACXD,EAAU+H,aAtCoCnG,EAAArB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,GA4BzCuG,EA5ByCnG,EAAA,GA4B5BoG,EA5B4BpG,EAAA,GAAAqG,EAwCpBpH,YAC1BqH,EACA7I,EACA,CAAE6H,QAAOzH,OAAM8H,cACfxG,IAAId,EAAO,4BACXD,EAAUmI,OA7CoCC,EAAA7H,OAAAC,EAAA,EAAAD,CAAA0H,EAAA,GAwCzCE,EAxCyCC,EAAA,GAwClCC,EAxCkCD,EAAA,GAAAE,EA+CRzH,YACtC0H,EACAlJ,EACA,CAAE8H,cAAa1H,OAAM8H,cACrBxG,IAAId,EAAO,kCACXD,EAAUwI,aApDoCC,EAAAlI,OAAAC,EAAA,EAAAD,CAAA+H,EAAA,GA+CzCE,EA/CyCC,EAAA,GA+C5BC,EA/C4BD,EAAA,GAAAE,EAsDf9H,YAC/B+H,EACAvJ,EACA,CAAEkI,cACFxG,IAAId,EAAO,6BACXD,EAAU6I,QA3DoCC,EAAAvI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAsDzCE,EAtDyCC,EAAA,GAsDjCC,EAtDiCD,EAAA,GAAAE,EA6DjBnI,YAC7BoI,EACA5J,EACA,CAAEC,SAAQG,KAAM+H,EAAiB/H,GAAQ,GACzCsB,IAAId,EAAO,6BACXD,EAAUZ,QAlEoC8J,GAAA3I,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,GA6DzCG,GA7DyCD,GAAA,GA6DhCE,GA7DgCF,GAAA,GAqEhD,OACEnH,EAAAC,EAAAC,cAACjB,EAADT,OAAA2B,EAAA,EAAA3B,CAAA,GAAUW,EAAV,CAAAiB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEP,EAAAC,EAAAC,cAAC0F,EAADpH,OAAA2B,EAAA,EAAA3B,CAAA,GAAeqH,EAAf,CAAAzF,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEP,EAAAC,EAAAC,cAACkH,GAAD5I,OAAA2B,EAAA,EAAA3B,CAAA,GAAa6I,GAAb,CAAAjH,SAAA,CAAAC,SAAAC,EAAAC,WAAA,QACAP,EAAAC,EAAAC,cAAC8F,EAADxH,OAAA2B,EAAA,EAAA3B,CAAA,GAAiByH,EAAjB,CAAA7F,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEP,EAAAC,EAAAC,cAACkG,EAAD5H,OAAA2B,EAAA,EAAA3B,CAAA,GAAW8H,EAAX,CAAAlG,SAAA,CAAAC,SAAAC,EAAAC,WAAA,QACAP,EAAAC,EAAAC,cAACuG,EAADjI,OAAA2B,EAAA,EAAA3B,CAAA,GAAiBmI,EAAjB,CAAAvG,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAGJP,EAAAC,EAAAC,cAAC4G,EAADtI,OAAA2B,EAAA,EAAA3B,CAAA,GAAYwI,EAAZ,CAAA5G,SAAA,CAAAC,SAAAC,EAAAC,WAAA,0NAWN,IAAMxB,EAAa,SAACzB,GAAqB,IAC/BiE,EAAoDjE,EAApDiE,SAAUC,EAA0ClE,EAA1CkE,MAAOgE,EAAmClI,EAAnCkI,WAAY9H,EAAuBJ,EAAvBI,KAAS4J,EADP9I,OAAAkE,EAAA,EAAAlE,CACqBlB,EADrB,0CAEjCY,EAAQC,cACNsH,EAAqBC,cAArBD,iBAER,OACEzF,EAAAC,EAAAC,cAAC6B,EAAA,EAADvD,OAAA2B,EAAA,EAAA3B,CAAA,CACEgD,MAAO,CACL,CACE+F,cAAe,MACfC,UAAW/B,EAAiB/H,GAAQ,GACpCuE,gBAAiBuD,EACbtH,EAAMuJ,OAAOC,WAAWC,UACxBzJ,EAAMuJ,OAAOC,WAAWE,SAE9BpG,IAEE8F,EAXN,CAAAlH,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAaGgB,IAUDoE,EAAkB,SAACrI,GAA0B,IACzCkE,EAAmDlE,EAAnDkE,MAAOD,EAA4CjE,EAA5CiE,SAAUiE,EAAkClI,EAAlCkI,WAAeK,EADSrH,OAAAkE,EAAA,EAAAlE,CACUlB,EADV,mCAGjD,OACE0C,EAAAC,EAAAC,cAAC2H,EAAA,EAADrJ,OAAA2B,EAAA,EAAA3B,CAAA,CACEgD,MAAO,CACL,CACEsG,KAAM,EACNP,cAAe,MACfvF,WAAY,UAEdR,GAEFuG,SAAUvC,GACNK,EAVN,CAAAzF,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAYGgB,IAWD4E,EAAc,SAAC7I,GAAsB,IACjC6H,EAAiD7H,EAAjD6H,MAAO3D,EAA0ClE,EAA1CkE,MAAO9D,EAAmCJ,EAAnCI,KAAM8H,EAA6BlI,EAA7BkI,WAAe/C,EADFjE,OAAAkE,EAAA,EAAAlE,CACgBlB,EADhB,uCAGzC,OAAK6H,EAGHnF,EAAAC,EAAAC,cAACqD,EAAA,EAAD/E,OAAA2B,EAAA,EAAA3B,CAAA,CACEd,KAAMA,EACNI,MAAO0H,EAAa,QAAU,UAC9BhE,MAAO,CAAC,GAAIkC,YAASpG,EAAOkE,KACxBiB,EAJN,CAAArC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAMG4E,GATc,MAmBfW,EAAoB,SAACxI,GAA4B,IAC7CiE,EAAqDjE,EAArDiE,SAAUC,EAA2ClE,EAA3CkE,MADmCwG,EACQ1K,EAApCyI,iBAD4B,IAAAiC,KACNV,EADM9I,OAAAkE,EAAA,EAAAlE,CACQlB,EADR,kCAGrD,OACE0C,EAAAC,EAAAC,cAAC6B,EAAA,EAADvD,OAAA2B,EAAA,EAAA3B,CAAA,CACEgD,MAAO,CACL,CAAEsG,KAAM,EAAGzF,eAAgB,SAAU4F,YAAalC,EAAY,EAAI,GAClEvE,IAEE8F,EALN,CAAAlH,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAOGgB,IAWDiF,EAAoB,SAAClJ,GAA4B,IAC7CkE,EAAuDlE,EAAvDkE,MAAO4D,EAAgD9H,EAAhD8H,YAAa1H,EAAmCJ,EAAnCI,KAAqB4J,GAAchK,EAA7BkI,WADmBhH,OAAAkE,EAAA,EAAAlE,CACUlB,EADV,8CAE7C4K,EAAgCxC,cAAhCwC,4BAER,OAAK9C,EAGHpF,EAAAC,EAAAC,cAACqD,EAAA,EAAD/E,OAAA2B,EAAA,EAAA3B,CAAA,CACEd,KAAMwK,EAA4BxK,GAClCI,MAAM,QACN0D,MAAO,CAAC,GAAIkC,YAASpG,EAAOkE,KACxB8F,EAJN,CAAAlH,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAMG6E,GAToB,MAkBrByB,EAAe,SAACvJ,GACpB,OAAO0C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkI,SAAA,OAGHjB,EAAe,SAAC5J,GAAuB,IACnCC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAEhB,OAAKD,GAAWC,EAETwC,EAAAC,EAAAC,cAACkI,EAAA,EAAD5J,OAAA2B,EAAA,EAAA3B,CAAA,GAAYlB,EAAZ,CAAA8C,SAAA,CAAAC,SAAAC,EAAAC,WAAA,QAFsB,iEC9R/B8H,EAAAC,EAAAC,EAAA,sBAAA1G,IAAAwG,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA,IAAA8C,EAAAH,EAAA,yBAEaxG,EAAgB,SAC3BnE,GAEA,MAAoB,kBAATA,4MAKN,IAAMgI,EAAsB,WACjC,IAAMxH,EAAQC,cAuDd,MAAO,CACLsH,iBAtDuB,SAAC/H,GACxB,MAAoB,kBAATA,EAA0BA,EAE9BQ,EAAM4D,eAAepE,IAoD5B+K,mBA5ByB,SAAC/K,GAC1B,OAZkB,SAACA,GACnB,GAAoB,kBAATA,EAAmB,CAC5B,GAAIA,GAAQQ,EAAM4D,eAAeV,MAAO,MAAO,QAC/C,GAAI1D,GAAQQ,EAAM4D,eAAeT,OAAQ,MAAO,SAChD,GAAI3D,GAAQQ,EAAM4D,eAAeR,MAAO,MAAO,QAC/C,GAAI5D,EAAOQ,EAAM4D,eAAeR,MAAO,MAAO,SAGhD,OAAO5D,EAICgL,CAAYhL,IAClB,IAAK,QACH,MAAO,SACT,IAAK,SACH,MAAO,QACT,IAAK,QAEL,QACE,MAAO,WAoBXwK,4BAhBkC,SAClCxK,GAEA,OArC2B,SAACA,GAC5B,GAAoB,kBAATA,EAAmB,CAC5B,GAAIA,GAAQQ,EAAM4D,eAAeV,MAAO,MAAO,QAC/C,GAAI1D,GAAQQ,EAAM4D,eAAeT,OAAQ,MAAO,SAChD,GAAI3D,EAAOQ,EAAM4D,eAAeT,OAAQ,MAAO,QAGjD,OAAO3D,EA8BCiL,CAAqBjL,IAC3B,IAAK,QACH,MAAO,SACT,IAAK,SAEL,QACE,MAAO","file":"static/js/16.97a1908b.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const isImageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { name, size, isSolid, color, testID },\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    { name, size, isSolid, color },\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n\n  if (!isImageUnavailable && !!source) {\n    const [ImageR, imageProps] = getOverrides(\n      StyledImage,\n      props,\n      {\n        onError: () => setHasImageFailedLoading(true),\n        source,\n      },\n      dlv(theme, 'overrides.Avatar.Image'),\n      overrides.Image,\n    );\n\n    return (\n      <Root {...rootProps}>\n        <ImageR {...imageProps} />\n      </Root>\n    );\n  }\n\n  return (\n    <Root {...rootProps}>\n      <Initials {...initialsProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Icon, ListItem } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"listitem\"\n    }}>{`ListItem`}</h1>\n    <p>{`For image, it composes `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{`, use overrides API to override its look`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<ListItem\\n  onPress={() => console.log(\\'Press\\')}\\n  source={{ uri: \\'https://picsum.photos/200/200\\' }}\\n  title=\\\"Some label\\\"\\n  description=\\\"Some description\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Icon,\n      ListItem\n    }} mdxType=\"Playground\">\n  <ListItem onPress={() => console.log('Press')} source={{\n        uri: 'https://picsum.photos/200/200'\n      }} title=\"Some label\" description=\"Some description\" mdxType=\"ListItem\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ListItem} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageSourcePropType,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme, ControlSize } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Text, TextProps } from '../Typography';\nimport { useControlSizeUtils } from '../../utils/ControlSize';\n\ninterface ListItemBaseProps {\n  /**\n   * Title of the list item\n   */\n  title?: OptionalString;\n\n  /**\n   * Description of the list item\n   */\n  description?: OptionalString;\n\n  /**\n   * Source of the avatar\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * When true, list item will not be able to be pressed.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Size of the ListItem.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Called when pressing list item\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ListItemOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  TextWrapper: TextWrapperProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n  Avatar: AvatarProps;\n}\n\nexport interface ListItemProps\n  extends WithOverrides<ListItemBaseProps, ListItemOverrides> {}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    isDisabled = false,\n    title,\n    description,\n    size = 'medium',\n    onPress,\n    testID,\n    source,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n  const { getControlHeight } = useControlSizeUtils();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { isDisabled, size },\n    dlv(theme, 'overrides.ListItem.Root'),\n    overrides.Root,\n  );\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    { onPress, testID, isDisabled },\n    dlv(theme, 'overrides.ListItem.Touchable'),\n    overrides.Touchable,\n  );\n  const [TextWrapper, textWrapperProps] = getOverrides(\n    StyledTextWrapper,\n    props,\n    {\n      hasAvatar:\n        !!source ||\n        !!overrides.Avatar ||\n        !!dlv(theme, 'overrides.ListItem.Avatar'),\n    },\n    dlv(theme, 'overrides.ListItem.TextWrapper'),\n    overrides.TextWrapper,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    { title, size, isDisabled },\n    dlv(theme, 'overrides.ListItem.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description, size, isDisabled },\n    dlv(theme, 'overrides.ListItem.Description'),\n    overrides.Description,\n  );\n  const [Action, rightIconProps] = getOverrides(\n    StyledAction,\n    props,\n    { isDisabled },\n    dlv(theme, 'overrides.ListItem.Action'),\n    overrides.Action,\n  );\n  const [AvatarR, avatarProps] = getOverrides(\n    StyledAvatar,\n    props,\n    { source, size: getControlHeight(size) - 8 },\n    dlv(theme, 'overrides.ListItem.Avatar'),\n    overrides.Avatar,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Touchable {...touchableProps}>\n        <AvatarR {...avatarProps} />\n        <TextWrapper {...textWrapperProps}>\n          <Title {...titleProps} />\n          <Description {...descriptionProps} />\n        </TextWrapper>\n      </Touchable>\n      <Action {...rightIconProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n  size: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, isDisabled, size, ...viewProps } = props;\n  const theme = useTheme();\n  const { getControlHeight } = useControlSizeUtils();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          minHeight: getControlHeight(size) + 16,\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { style, children, isDisabled, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: OptionalString;\n  size: ControlSize | number;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, size, isDisabled, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      size={size}\n      color={isDisabled ? 'muted' : 'default'}\n      style={[{}, getStyle(props, style)]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface TextWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n  hasAvatar: boolean;\n}\n\nconst StyledTextWrapper = (props: TextWrapperProps) => {\n  const { children, style, hasAvatar = false, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        { flex: 1, justifyContent: 'center', paddingLeft: hasAvatar ? 8 : 0 },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps {\n  description?: OptionalString;\n  size: ControlSize | number;\n  isDisabled: boolean;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { style, description, size, isDisabled, ...viewProps } = props;\n  const { getSmallerHeightControlSize } = useControlSizeUtils();\n\n  if (!description) return null;\n\n  return (\n    <Text\n      size={getSmallerHeightControlSize(size)}\n      color=\"muted\"\n      style={[{}, getStyle(props, style)]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ActionProps {\n  isDisabled: boolean;\n}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n\nconst StyledAvatar = (props: AvatarProps) => {\n  const { source, name } = props;\n\n  if (!source && !name) return null;\n\n  return <Avatar {...props} />;\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}