{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","CounterState","Rating","initial","_ref2","rating","count","set","value","size","color","onChange","getStyles","theme","containerStyle","touchableStyle","starColor","starSize","of","isMDXComponent"],"mappings":"gYAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,6BAOMG,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAR,EAAAY,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAG5E,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,UADR,WAGA,EAAAf,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAa,WAAD,CAAYC,WAAY,EAAGC,OAAQ,uaAA4aC,QAAS,CACtdT,MAAOU,KAAOA,KAAKV,MAAQA,EAC3BM,wBACAK,cACAC,4BACAC,iBACCT,QAAQ,eACb,EAAAd,EAAAY,KAACR,EAAAkB,aAAD,CAAcE,QAAS,EAAGV,QAAQ,gBAC/B,SAAAW,GAAA,IACYC,EADZD,EACKE,MACAC,EAFLH,EAEKG,IAFL,OAGS,EAAA5B,EAAAY,KAACR,EAAAmB,OAAD,CAAQM,MAAOH,EAAQI,KAAK,QAAQC,MAAM,UAAUC,SAAU,SAAAH,GAAK,OAAID,EAAIC,IAAQI,UAAW,SAACvB,EAAOwB,GAAR,MAAmB,CACrHC,eAAgB,GAChBC,eAAgB,GAChBC,UAAW,UAEXC,SAAU,KAERxB,QAAQ,eAGhB,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAkB,MAAD,CAAOkB,GAAIhB,SAAQT,QAAQ,iMAI/BP,EAAWiC,gBAAiB","file":"static/js/28.3a884f54.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { CounterState, Rating } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rating\"\n    }}>{`Rating`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterState initial={3}>\\n  {({ count: rating, set }) => (\\n    <Rating\\n      value={rating}\\n      size=\\\"small\\\"\\n      color=\\\"#67c6bb\\\"\\n      onChange={value => set(value)}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n        touchableStyle: {},\\n        starColor: \\'#67c6bb\\', // defined as color prop\\n        starSize: 40, // defined as size prop\\n      })}\\n    />\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      CounterState,\n      Rating\n    }} mdxType=\"Playground\">\n  <CounterState initial={3} mdxType=\"CounterState\">\n    {({\n          count: rating,\n          set\n        }) => <Rating value={rating} size=\"small\" color=\"#67c6bb\" onChange={value => set(value)} getStyles={(props, theme) => ({\n          containerStyle: {},\n          touchableStyle: {},\n          starColor: '#67c6bb',\n          // defined as color prop\n          starSize: 40 // defined as size prop\n\n        })} mdxType=\"Rating\" />}\n  </CounterState>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Rating} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}