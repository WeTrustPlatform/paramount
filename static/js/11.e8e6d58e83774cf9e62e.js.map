{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Checkbox","FormField","Toggle","___WEBPACK_IMPORTED_MODULE_7__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_6__","label","labelPosition","___WEBPACK_IMPORTED_MODULE_5__","shape","value","onValueChange","size","of","isMDXComponent","_props$size","_props$shape","_props$value","_props$isDisabled","isDisabled","_props$onValueChange","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledTouchable","onPress","dlv","Touchable","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","touchableProps","_getOverrides3","StyledCheck","Check","_getOverrides4","checkProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","children","style","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","containerShapes","disabled","viewProps","sizeValue","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alignItems","backgroundColor","colors","background","content","borderColor","border","borderWidth","height","justifyContent","width","primaryDefault","greyDark","_Icon__WEBPACK_IMPORTED_MODULE_11__","name","color","text","white","error","description","_props$labelPosition","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","Label","position","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","paddingBottom","getStyle","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingRight","paddingLeft","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/11.12a09e9a.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Checkbox, FormField, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Checkbox for boolean values`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <FormField label=\\\"Checkbox\\\" labelPosition=\\\"right\\\">\\n      <Checkbox\\n        shape=\\\"circle\\\"\\n        value={on}\\n        onValueChange={toggle}\\n        size=\\\"medium\\\"\\n      />\\n    </FormField>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Checkbox,\n      FormField,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <FormField label=\"Checkbox\" labelPosition=\"right\" mdxType=\"FormField\">\n        <Checkbox shape=\"circle\" value={on} onValueChange={toggle} size=\"medium\" mdxType=\"Checkbox\" />\n      </FormField>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ContainerShape, ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface CheckboxBaseProps {\n  /**\n   * The size of the checkbox.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as checked.\n   * @default false\n   */\n  value: boolean;\n\n  /**\n   * When true, the checkbox is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Shape of the checkbox.\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CheckboxOverrides {\n  Touchable: TouchableProps;\n  Check: CheckProps;\n}\n\nexport interface CheckboxProps\n  extends WithOverrides<CheckboxBaseProps, CheckboxOverrides> {}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    size = 'medium',\n    shape = 'rounded',\n    value = false,\n    isDisabled = false,\n    onValueChange = () => {\n      return;\n    },\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      size,\n      shape,\n      isDisabled,\n      testID,\n      onPress: () => onValueChange(!value),\n    },\n    dlv(theme, 'overrides.Checkbox.Touchable'),\n    overrides.Touchable,\n  );\n  const [Check, checkProps] = getOverrides(\n    StyledCheck,\n    props,\n    { value, size, shape, isDisabled },\n    dlv(theme, 'overrides.Checkbox.Check'),\n    overrides.Check,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <Check\n        value={value}\n        size={size}\n        shape={shape}\n        isDisabled={isDisabled}\n        {...checkProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { size, shape, isDisabled, children, style, ...touchableProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[theme.containerShapes[shape], style]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface CheckProps extends ViewProps {\n  size: ControlSize | number;\n  value: boolean;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledCheck = (props: CheckProps) => {\n  const { size, shape, value, isDisabled, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const sizeValue = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          height: sizeValue,\n          justifyContent: 'center',\n          width: sizeValue,\n          ...(value\n            ? {\n                backgroundColor: theme.colors.background.primaryDefault,\n                borderColor: 'transparent',\n              }\n            : {}),\n          ...(isDisabled\n            ? {\n                backgroundColor: theme.colors.background.greyDark,\n                borderColor: theme.colors.border.default,\n              }\n            : {}),\n          ...theme.containerShapes[shape],\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon name=\"check\" size=\"xsmall\" color={theme.colors.text.white} />\n      ) : null}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Label, LabelProps, Text, TextProps } from '../Typography';\n\ntype FormFieldLabelPosition = 'top' | 'left' | 'right';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: FormFieldLabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = 'top',\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    { label, position: labelPosition },\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description },\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    { error },\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR {...labelRProps}>{children}</LabelR>\n      <Description {...descriptionProps} />\n      <ErrorR {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        getStyle(props, style),\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[getStyle(props, style)]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}