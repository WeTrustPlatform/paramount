{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Avatar","Box","___WEBPACK_IMPORTED_MODULE_5__","source","uri","width","height","name","size","of","isMDXComponent","_props$size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","isImageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","onError","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","justifyContent","overflow","position","textProps","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","getSpacing","spacing","Spacing","_props$orientation","orientation","viewProps","objectWithoutProperties","react_default","View","esm_extends","propToFn","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/15.5a61da49.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"avatar\"\n    }}>{`Avatar`}</h1>\n    <p>{`Display avatar image, with default for name initials`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Avatar\\n  source={{ uri: \\'https://picsum.photos/200/200\\', width: 200, height: 200 }}\\n  // Fallbacks to name if source is not provided\\n  name=\\\"Bill Gates\\\"\\n  size=\\\"large\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Box\n    }} mdxType=\"Playground\">\n  <Avatar source={{\n        uri: 'https://picsum.photos/200/200',\n        width: 200,\n        height: 200\n      }} // Fallbacks to name if source is not provided\n      name=\"Bill Gates\" size=\"large\" mdxType=\"Avatar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Avatar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const isImageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { name, size, isSolid, color, testID },\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    { name, size, isSolid, color },\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n\n  if (!isImageUnavailable && !!source) {\n    const [ImageR, imageProps] = getOverrides(\n      StyledImage,\n      props,\n      {\n        onError: () => setHasImageFailedLoading(true),\n        source,\n      },\n      dlv(theme, 'overrides.Avatar.Image'),\n      overrides.Image,\n    );\n\n    return (\n      <Root {...rootProps}>\n        <ImageR {...imageProps} />\n      </Root>\n    );\n  }\n\n  return (\n    <Root {...rootProps}>\n      <Initials {...initialsProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}