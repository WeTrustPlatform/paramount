{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Checkbox","FormField","Toggle","___WEBPACK_IMPORTED_MODULE_7__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_5__","shape","value","onValueChange","label","size","of","isMDXComponent","_props$size","_props$shape","_props$value","_props$labelPosition","labelPosition","_props$isDisabled","isDisabled","_props$onValueChange","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledTouchable","onPress","dlv","Touchable","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","touchableProps","_getOverrides3","StyledCheck","Check","_getOverrides4","checkProps","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_Typography__WEBPACK_IMPORTED_MODULE_12__","position","children","style","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","containerShapes","disabled","viewProps","sizeValue","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alignItems","backgroundColor","colors","background","content","borderColor","border","borderWidth","height","justifyContent","width","primaryDefault","greyDark","_Icon__WEBPACK_IMPORTED_MODULE_11__","name","color","text","white","error","description","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","Label","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4___default","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","paddingBottom","getStyle","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingRight","textProps","textStyle","paddingLeft","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","medium","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/10.2d3d0dea.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Checkbox, FormField, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Checkbox for boolean values`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Checkbox\\n      shape=\\\"circle\\\"\\n      value={on}\\n      onValueChange={toggle}\\n      label=\\\"Checkbox label\\\"\\n      size=\\\"medium\\\"\\n    />\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Checkbox,\n      FormField,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Checkbox shape=\"circle\" value={on} onValueChange={toggle} label=\"Checkbox label\" size=\"medium\" mdxType=\"Checkbox\" />}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ContainerShape, ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Icon } from '../Icon';\nimport { Label, LabelPosition, LabelProps } from '../Typography';\n\ninterface CheckboxBaseProps {\n  /**\n   * The size of the checkbox.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as checked.\n   * @default false\n   */\n  value: boolean;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"right\"\n   */\n  labelPosition?: LabelPosition;\n\n  /**\n   * When true, the checkbox is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Shape of the checkbox.\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CheckboxOverrides {\n  Touchable: TouchableProps;\n  Label: LabelProps;\n  Check: CheckProps;\n}\n\nexport interface CheckboxProps\n  extends WithOverrides<CheckboxBaseProps, CheckboxOverrides> {}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    size = 'medium',\n    shape = 'rounded',\n    value = false,\n    label,\n    labelPosition = 'right',\n    isDisabled = false,\n    onValueChange = () => {\n      return;\n    },\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      size,\n      shape,\n      isDisabled,\n      testID,\n      onPress: () => onValueChange(!value),\n    },\n    dlv(theme, 'overrides.Checkbox.Touchable'),\n    overrides.Touchable,\n  );\n  const [Check, checkProps] = getOverrides(\n    StyledCheck,\n    props,\n    { value, size, shape, isDisabled },\n    dlv(theme, 'overrides.Checkbox.Check'),\n    overrides.Check,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <Label label={label} position={labelPosition}>\n        <Check\n          value={value}\n          size={size}\n          shape={shape}\n          isDisabled={isDisabled}\n          {...checkProps}\n        />\n      </Label>\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { size, shape, isDisabled, children, style, ...touchableProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[theme.containerShapes[shape], style]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface CheckProps extends ViewProps {\n  size: ControlSize | number;\n  value: boolean;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledCheck = (props: CheckProps) => {\n  const { size, shape, value, isDisabled, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const sizeValue = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          height: sizeValue,\n          justifyContent: 'center',\n          width: sizeValue,\n          ...(value\n            ? {\n                backgroundColor: theme.colors.background.primaryDefault,\n                borderColor: 'transparent',\n              }\n            : {}),\n          ...(isDisabled\n            ? {\n                backgroundColor: theme.colors.background.greyDark,\n                borderColor: theme.colors.border.default,\n              }\n            : {}),\n          ...theme.containerShapes[shape],\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon name=\"check\" size=\"xsmall\" color={theme.colors.text.white} />\n      ) : null}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport {\n  Label,\n  LabelPosition,\n  LabelProps,\n  Text,\n  TextProps,\n} from '../Typography';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: LabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = 'top',\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    { label, position: labelPosition },\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description },\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    { error },\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR {...labelRProps}>{children}</LabelR>\n      <Description {...descriptionProps} />\n      <ErrorR {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        getStyle(props, style),\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[getStyle(props, style)]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\nexport type LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}