{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Badge/Badge.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Badge/Badge.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Badge","Box","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_5__","title","color","isSolid","size","shape","of","isMDXComponent","_props$size","_props$color","_props$isSolid","_props$shape","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","children","style","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","shapeStyles","containerShapes","colors","fills","solid","subtle","isControlSize","small","minHeight","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alignItems","alignSelf","backgroundColor","display","flexDirection","justifyContent","textProps","_Typography__WEBPACK_IMPORTED_MODULE_10__","weight","textTransform","getStyle","getSpacing","spacing","Spacing","_props$orientation","orientation","objectWithoutProperties","react_default","View","esm_extends","height","width","propToFn","background","elevation","elevations","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","spaceRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/17.24fdc961.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Badge, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"badge\"\n    }}>{`Badge`}</h1>\n    <p>{`Display to indicate status or feat of service`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Badge title=\\\"Badge\\\" color=\\\"teal\\\" isSolid size=\\\"large\\\" shape=\\\"pill\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Badge,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Badge title=\"Badge\" color=\"teal\" isSolid size=\"large\" shape=\"pill\" mdxType=\"Badge\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Badge} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ContainerShape, ControlSize, FillColor } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from '../Typography';\n\ninterface BadgeBaseProps {\n  /** Title of the badge */\n  title?: OptionalString;\n\n  /**\n   * Color of the badge\n   * @default \"neutral\"\n   */\n  color?: FillColor;\n\n  /**\n   * Size of the badge\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Shape of the container\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * When true, display in solid mode\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface BadgeOverrides {\n  Root: RootProps;\n  Title: TitleProps;\n}\n\nexport interface BadgeProps\n  extends WithOverrides<BadgeBaseProps, BadgeOverrides> {}\n\nexport const Badge = (props: BadgeProps) => {\n  const {\n    size = 'medium',\n    color = 'neutral',\n    isSolid = false,\n    shape = 'rounded',\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { size, isSolid, color, shape, testID },\n    dlv(theme, 'overrides.Badge.Root'),\n    overrides.Root,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    { size, isSolid, color, title },\n    dlv(theme, 'overrides.Badge.Title'),\n    overrides.Title,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Title {...titleProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  color: FillColor;\n  size: ControlSize | number;\n  shape: ContainerShape;\n  isSolid: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { size, color, isSolid, shape, children, style, ...viewProps } = props;\n  const theme = useTheme();\n  const shapeStyles = theme.containerShapes[shape];\n  const fills = isSolid ? theme.fills.solid : theme.fills.subtle;\n\n  const colors = fills[color];\n  const { minHeight, paddingLeft, paddingRight } = isControlSize(size)\n    ? {\n        small: {\n          minHeight: theme.controlHeights.small,\n          paddingLeft: theme.controlPaddings.small,\n          paddingRight: theme.controlPaddings.small,\n        },\n\n        medium: {\n          minHeight: theme.controlHeights.medium,\n          paddingLeft: theme.controlPaddings.medium,\n          paddingRight: theme.controlPaddings.medium,\n        },\n\n        large: {\n          minHeight: theme.controlHeights.large,\n          paddingLeft: theme.controlPaddings.large,\n          paddingRight: theme.controlPaddings.large,\n        },\n      }[size]\n    : {\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      };\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          alignSelf: 'flex-start',\n          backgroundColor: colors.backgroundColor,\n          display: 'flex',\n          flexDirection: 'row',\n          minHeight,\n          justifyContent: 'center',\n          paddingLeft,\n          paddingRight,\n          ...shapeStyles,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  color: FillColor;\n  title?: OptionalString;\n  isSolid: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { size, color, isSolid, title, style, ...textProps } = props;\n  const theme = useTheme();\n  const fills = isSolid ? theme.fills.solid : theme.fills.subtle;\n\n  const colors = fills[color];\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        { color: colors.color, textTransform: 'uppercase' },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}