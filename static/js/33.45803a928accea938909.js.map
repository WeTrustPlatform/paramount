{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/WheelPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","State","WheelPicker","Icon","TextInput","___WEBPACK_IMPORTED_MODULE_6__","initial","month","day","year","_ref2","state","setState","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_7__","value","data","label","onValueChange","console","log","Array","fill","map","v","i","concat","of","isMDXComponent","__webpack_require__","d","__webpack_exports__","isControlSize","size"],"mappings":"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","file":"static/js/33.6814ad8c.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, WheelPicker, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"wheelpicker-experimental\"\n    }}>{`WheelPicker (Experimental)`}</h1>\n    <Playground __position={0} __code={'<State initial={{ month: \\'March\\', day: \\'15\\', year: \\'2019\\' }}>\\n  {({ state, setState }) => (\\n    <Box flexDirection=\\\"row\\\">\\n      <WheelPicker\\n        value={state.month}\\n        data={[\\n          { label: \\'January\\', value: \\'January\\' },\\n          { label: \\'February\\', value: \\'February\\' },\\n          { label: \\'March\\', value: \\'March\\' },\\n          { label: \\'April\\', value: \\'April\\' },\\n          { label: \\'May\\', value: \\'May\\' },\\n          { label: \\'June\\', value: \\'June\\' },\\n          { label: \\'July\\', value: \\'July\\' },\\n          { label: \\'August\\', value: \\'August\\' },\\n          { label: \\'September\\', value: \\'September\\' },\\n          { label: \\'October\\', value: \\'October\\' },\\n          { label: \\'November\\', value: \\'November\\' },\\n          { label: \\'December\\', value: \\'December\\' },\\n        ]}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ month: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.day}\\n        data={new Array(31)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${i + 1}`, value: `${i + 1}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ day: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.year}\\n        data={new Array(50)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${2000 + i}`, value: `${2000 + i}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ year: value })\\n        }}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      WheelPicker,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        month: 'March',\n        day: '15',\n        year: '2019'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box flexDirection=\"row\" mdxType=\"Box\">\n        <WheelPicker value={state.month} data={[{\n            label: 'January',\n            value: 'January'\n          }, {\n            label: 'February',\n            value: 'February'\n          }, {\n            label: 'March',\n            value: 'March'\n          }, {\n            label: 'April',\n            value: 'April'\n          }, {\n            label: 'May',\n            value: 'May'\n          }, {\n            label: 'June',\n            value: 'June'\n          }, {\n            label: 'July',\n            value: 'July'\n          }, {\n            label: 'August',\n            value: 'August'\n          }, {\n            label: 'September',\n            value: 'September'\n          }, {\n            label: 'October',\n            value: 'October'\n          }, {\n            label: 'November',\n            value: 'November'\n          }, {\n            label: 'December',\n            value: 'December'\n          }]} onValueChange={value => {\n            console.log(value);\n            setState({\n              month: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.day} data={new Array(31).fill(0).map((v, i) => ({\n            label: `${i + 1}`,\n            value: `${i + 1}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              day: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.year} data={new Array(50).fill(0).map((v, i) => ({\n            label: `${2000 + i}`,\n            value: `${2000 + i}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              year: value\n            });\n          }} mdxType=\"WheelPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={WheelPicker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}