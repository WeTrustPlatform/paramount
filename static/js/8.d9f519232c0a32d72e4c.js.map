{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Grid.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.styles.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","getColumnCount","columns","currentScreenSize","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","getProportion","columnCount","gridColumnCount","concat","getColumnStyles","_ref","gutterWidth","offsetColumns","flexBasis","offsetColumnCount","columnStyle","marginLeft","maxWidth","paddingLeft","paddingRight","splitColumnConfig","config","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","Column","getStyles","objectWithoutProperties","_useLayout","useLayout","React","GutterWidthContext","_splitColumnConfig","mergeStyles","components","react","View","getContainerStyles","containerWidth","containerStyle","marginRight","width","Container","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Row","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","paddingVertical","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","height","borderWidth","hasGutter","isMDXComponent","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","LayoutContext","react__WEBPACK_IMPORTED_MODULE_0__","breakpoints","getResponsiveValue","values","undefined","slice","reverse","getCurrentScreenSize","layout","windowScaledSize","Dimensions","get","value","deepmerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","deriveResponsiveValue","getRowStyles","rowStyle","flexDirection","flexWrap","_props$hasGutter","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","size","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","textStyle","text","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlBorderRadius","controlHeights","controlPaddings","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/8.d7723504.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ColumnConfigBase } from './Column';\nimport {\n  ColumnCount,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface ColumnStylesProps {\n  gutterWidth: number;\n  currentScreenSize: ScreenSize;\n  gridColumnCount: ColumnCount;\n  columns: ColumnConfigBase;\n  offsetColumns: ColumnConfigBase;\n}\n\nexport type GetColumnStyles = (\n  progressStylesProps: ColumnStylesProps,\n  theme: Theme,\n) => ColumnStyles;\n\nexport interface ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const getColumnStyles: GetColumnStyles = (\n  { gutterWidth, currentScreenSize, gridColumnCount, columns, offsetColumns },\n  theme,\n) => {\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return {\n    columnStyle: {\n      flexBasis,\n      marginLeft,\n      maxWidth: flexBasis,\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ColumnStyles,\n  GetColumnStyles,\n  getColumnStyles,\n} from './Column.styles';\nimport { ColumnCount, useLayout } from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  xsmall?: ColumnCount;\n  small?: ColumnCount;\n  medium?: ColumnCount;\n  large?: ColumnCount;\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  offsetXsmall?: ColumnCount;\n  offsetSmall?: ColumnCount;\n  offsetMedium?: ColumnCount;\n  offsetLarge?: ColumnCount;\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetColumnStyles, DeepPartial<ColumnStyles>>;\n}\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n\nexport const Column = (props: ColumnProps) => {\n  const { children, getStyles, ...config } = props;\n  const { currentScreenSize, gridColumnCount } = useLayout();\n  const theme = useTheme();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const { columns, offsetColumns } = splitColumnConfig(config);\n  const { columnStyle } = mergeStyles(\n    getColumnStyles,\n    getStyles,\n    theme.components.getColumnStyles,\n  )(\n    { gutterWidth, currentScreenSize, gridColumnCount, columns, offsetColumns },\n    theme,\n  );\n\n  return <View style={columnStyle}>{children}</View>;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface ContainerStylesProps {\n  maxWidth?: number;\n  containerWidth: number;\n  gutterWidth: number;\n}\nexport type GetContainerStyles = (\n  progressStylesProps: ContainerStylesProps,\n  theme: Theme,\n) => ContainerStyles;\n\nexport interface ContainerStyles {\n  containerStyle: ViewStyle;\n}\n\nexport const getContainerStyles: GetContainerStyles = (\n  { maxWidth, containerWidth, gutterWidth },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: maxWidth || containerWidth,\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ContainerStyles,\n  GetContainerStyles,\n  getContainerStyles,\n} from './Container.styles';\nimport { useLayout } from './LayoutContext';\n\nexport interface ContainerProps {\n  children: React.ReactNode;\n  maxWidth?: number;\n  getStyles?: ReplaceReturnType<\n    GetContainerStyles,\n    DeepPartial<ContainerStyles>\n  >;\n}\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, getStyles, maxWidth } = props;\n  const { maxWidth: containerWidth, gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getContainerStyles,\n    getStyles,\n    theme.components.getContainerStyles,\n  )({ maxWidth, containerWidth, gutterWidth }, theme);\n\n  return <View style={containerStyle}>{children}</View>;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  maxWidth: number;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1280,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n  maxWidth: 1440,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  LayoutContext,\n  LayoutInterface,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentScreenSize = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!values[screenSize];\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepmerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface RowStyleProps {\n  gutterWidth: number;\n  hasGutter: boolean;\n}\n\nexport type GetRowStyles = (props: RowStyleProps, theme: Theme) => RowStyles;\n\nexport interface RowStyles {\n  rowStyle: ViewStyle;\n}\n\nexport const getRowStyles: GetRowStyles = ({ hasGutter, gutterWidth }) => {\n  return {\n    rowStyle: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n      marginRight: hasGutter ? -gutterWidth / 2 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { defaultLayout, useLayout } from './LayoutContext';\nimport { GetRowStyles, getRowStyles, RowStyles } from './Row.styles';\n\nexport interface RowProps {\n  children: React.ReactNode;\n  hasGutter?: boolean;\n  getStyles?: ReplaceReturnType<GetRowStyles, DeepPartial<RowStyles>>;\n}\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, getStyles } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  const { rowStyle } = mergeStyles(\n    getRowStyles,\n    getStyles,\n    theme.components.getRowStyles,\n  )({ gutterWidth, hasGutter }, theme);\n\n  return (\n    <View style={rowStyle}>\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}