{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","Counter","_props$value","value","_props$step","step","max","min","_props$onValueChange","onValueChange","_props$overrides","overrides","isDecrementDisabled","isIncrementDisabled","handleIncrement","React","handleDecrement","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledTouchable","isDisabled","onPress","Decrement","_getOverrides4","decrementProps","_getOverrides5","Increment","_getOverrides6","incrementProps","_getOverrides7","StyledCount","Count","_getOverrides8","countProps","_getOverrides9","StyledIconPlus","IconPlus","_getOverrides10","iconPlusProps","_getOverrides11","StyledIconMinus","IconMinus","_getOverrides12","iconMinusProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_jsxFileName","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","display","flexDirection","alignItems","textProps","_Typography__WEBPACK_IMPORTED_MODULE_11__","align","minWidth","_props$isDisabled","touchableProps","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","border","primary","borderRadius","borderWidth","justifyContent","disabled","undefined","StyledIcon","name","iconProps","_Icon__WEBPACK_IMPORTED_MODULE_10__","text","muted","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","ProgressBar","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","percent","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","AnimatedView","animated","_props$percent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","StyledProgress","Progress","progressProps","react__WEBPACK_IMPORTED_MODULE_4__","minHeight","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","greyDefault","overflow","boundPercent","Math","useSpring","config","springDefaultConfig","from","accessibilityRole","Platform","OS","primaryDefault","interpolate","w","concat","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/8.46ff28d1.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { Icon, IconProps } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\ninterface CounterBaseProps {\n  /**\n   * Count to be displayed.\n   */\n  value?: number;\n\n  /**\n   * Minimum value for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum value for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Interval between counts\n   */\n  step?: number;\n\n  /**\n   * Called when either buttons are pressed.\n   */\n  onValueChange?: (value: number) => void;\n}\n\nexport interface CounterOverrides {\n  Root: RootProps;\n  Increment: TouchableProps;\n  Decrement: TouchableProps;\n  Count: CountProps;\n  IconPlus: CounterIconProps;\n  IconMinus: CounterIconProps;\n}\n\nexport interface CounterProps\n  extends WithOverrides<CounterBaseProps, CounterOverrides> {}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    value = 0,\n    step = 1,\n    max,\n    min,\n    onValueChange = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const isDecrementDisabled = min === value;\n  const isIncrementDisabled = max === value;\n\n  const handleIncrement = React.useCallback(() => {\n    onValueChange(value + step);\n  }, [value]);\n\n  const handleDecrement = React.useCallback(() => {\n    onValueChange(value - step);\n  }, [value]);\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Counter.Root'),\n    overrides.Root,\n  );\n  const [Decrement, decrementProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      isDisabled: isDecrementDisabled,\n      onPress: handleDecrement,\n    },\n    dlv(theme, 'overrides.Counter.Decrement'),\n    overrides.Decrement,\n  );\n  const [Increment, incrementProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      isDisabled: isIncrementDisabled,\n      onPress: handleIncrement,\n    },\n    dlv(theme, 'overrides.Counter.Increment'),\n    overrides.Increment,\n  );\n  const [Count, countProps] = getOverrides(\n    StyledCount,\n    props,\n    { value },\n    dlv(theme, 'overrides.Counter.Count'),\n    overrides.Count,\n  );\n  const [IconPlus, iconPlusProps] = getOverrides(\n    StyledIconPlus,\n    props,\n    { isDisabled: isIncrementDisabled },\n    dlv(theme, 'overrides.Counter.IconPlus'),\n    overrides.IconPlus,\n  );\n  const [IconMinus, iconMinusProps] = getOverrides(\n    StyledIconMinus,\n    props,\n    { isDisabled: isDecrementDisabled },\n    dlv(theme, 'overrides.Counter.IconMinus'),\n    overrides.IconMinus,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Decrement {...decrementProps}>\n        <IconMinus {...iconMinusProps} />\n      </Decrement>\n      <Count {...countProps} />\n      <Increment {...incrementProps}>\n        <IconPlus {...iconPlusProps} />\n      </Increment>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface CountProps extends TextProps {\n  value: number;\n}\n\nconst StyledCount = (props: CountProps) => {\n  const { value, style, ...textProps } = props;\n\n  return (\n    <Text\n      align=\"center\"\n      style={[{ paddingHorizontal: 16, minWidth: 56 }, getStyle(props, style)]}\n      {...textProps}\n    >\n      {value}\n    </Text>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    children,\n    style,\n    isDisabled = false,\n    onPress,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          borderColor: theme.colors.border.primary,\n          borderRadius: 999,\n          borderWidth: 1,\n          display: 'flex',\n          height: 40,\n          justifyContent: 'center',\n          width: 40,\n          ...(isDisabled && { borderColor: theme.colors.border.default }),\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      onPress={!isDisabled ? onPress : undefined}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface StyledIconProps extends IconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIcon = (props: StyledIconProps) => {\n  const { isDisabled, name, ...iconProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Icon\n      name={name}\n      size=\"xsmall\"\n      color={isDisabled ? theme.colors.text.muted : theme.colors.text.primary}\n      {...iconProps}\n    />\n  );\n};\n\ninterface CounterIconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIconPlus = (props: CounterIconProps) => (\n  <StyledIcon name=\"plus\" {...props} />\n);\nconst StyledIconMinus = (props: CounterIconProps) => (\n  <StyledIcon name=\"minus\" {...props} />\n);\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Counter, State, ProgressBar } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: 0 }}>\\n  {({ state, setState }) => (\\n    <Box>\\n      <ProgressBar percent={state.value} size=\\\"large\\\" />\\n      <Counter\\n        value={state.value}\\n        onValueChange={value => setState({ value })}\\n        min={0}\\n        max={100}\\n        step={10}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Counter,\n      State,\n      ProgressBar\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={state.value} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter value={state.value} onValueChange={value => setState({\n            value\n          })} min={0} max={100} step={10} mdxType=\"Counter\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\n\nconst AnimatedView = animated(View);\n\ninterface ProgressBarBaseProps {\n  /**\n   * Percentage of the progress bar. From 0 to 1\n   * @default 0\n   */\n  percent?: number;\n\n  /**\n   * The size of the progress bar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n}\n\nexport interface ProgressBarOverrides {\n  Root: RootProps;\n  Progress: ProgressProps;\n}\n\nexport interface ProgressBarProps\n  extends WithOverrides<ProgressBarBaseProps, ProgressBarOverrides> {}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, size = 'medium', overrides = {} } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { size },\n    dlv(theme, 'overrides.ProgressBar.Root'),\n    overrides.Root,\n  );\n  const [Progress, progressProps] = getOverrides(\n    StyledProgress,\n    props,\n    { percent },\n    dlv(theme, 'overrides.ProgressBar.Progress'),\n    overrides.Progress,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Progress {...progressProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, size, ...viewProps } = props;\n  const theme = useTheme();\n\n  const minHeight = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.greyDefault,\n          borderRadius: 999,\n          minHeight,\n          overflow: 'hidden',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ProgressProps extends ViewProps {\n  children?: React.ReactNode;\n  percent: number;\n}\n\nconst StyledProgress = (props: ProgressProps) => {\n  const { percent, children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n      // @ts-ignore\n      style={[\n        {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderRadius: 999,\n          height: '100%',\n          width: width.interpolate(w => `${w}%`),\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}