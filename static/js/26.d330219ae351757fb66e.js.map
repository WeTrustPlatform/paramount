{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_reactPowerplug","_docz","_Counter","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","CounterContainer","Props","Counter","Spacing","initial","_ref2","count","inc","dec","onDecrement","onIncrement","min","max","component","getStyles","theme","containerStyle","counterStyle","countStyle","disabledStyle","ntextStyle","of","isMDXComponent","getCounterVariables","container","display","flexDirection","justifyContent","counter","alignItems","borderColor","colors","border","primary","borderRadius","borderWidth","height","width","disabled","dark","getCounterStyles","counterVariables","textStyle","React","_interopRequireWildcard","_reactNative","_icons","_theme","_mergeStyles2","_Typography","useTheme","_mergeStyles","mergeStyles","isDecrementDisabled","isIncrementDisabled","createElement","View","style","paddingRight","TouchableOpacity","activeOpacity","_objectSpread2","onPress","undefined","Icon","name","size","color","text","muted","Text","concat","paddingLeft","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/26.bb066441.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Counter } from './Counter';\nimport { Spacing } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, inc, dec }) => (\\n    <Counter\\n      count={count}\\n      onDecrement={dec}\\n      onIncrement={inc}\\n      min={0}\\n      max={10}\\n      component={null}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n        counterStyle: {},\\n        countStyle: {},\\n        disabledStyle: {},\\n        ntextStyle: {},\\n      })}\\n    />\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Counter,\n      Spacing\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={0} mdxType=\"CounterContainer\">\n    {({\n          count,\n          inc,\n          dec\n        }) => <Counter count={count} onDecrement={dec} onIncrement={inc} min={0} max={10} component={null} getStyles={(props, theme) => ({\n          containerStyle: {},\n          counterStyle: {},\n          countStyle: {},\n          disabledStyle: {},\n          ntextStyle: {}\n        })} mdxType=\"Counter\" />}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Counter} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.dark,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = theme => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)(theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Spacing paddingRight={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Spacing paddingLeft={2}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Spacing>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}