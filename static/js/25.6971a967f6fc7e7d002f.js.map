{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Button","_Box","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","Button","Box","color","appearance","size","isLoading","isActive","isDisabled","isInline","iconBefore","iconAfter","iconLoading","title","onPress","console","log","getStyles","theme","buttonStyle","textStyle","focusColor","flexDirection","paddingRight","height","justifyContent","parentName","of","isMDXComponent","_changeColor","getButtonVariables","appearances","minimal","default","backgroundColor","colors","background","content","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","controlHeights","paddingLeft","controlPaddings","medium","large","getButtonStyles","buttonStyleProps","_getButtonVariables","baseStyles","_appearances$appearan","textColor","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexWrap","darken","alignItems","display","fontWeight","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_props$appearance","_props$color","icon","_props$isDisabled","_props$isInline","_props$isLoading","_props$onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","map","index","key","marginLeft","marginRight","width","_LoadingDots","Object","keys","forEach","defineProperty","exports","enumerable","get"],"mappings":"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","file":"static/js/25.a371205c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { Box } from '../Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Button\\n  color=\\\"primary\\\"\\n  appearance=\\\"primary\\\"\\n  size=\\\"large\\\"\\n  isLoading={false}\\n  isActive={false}\\n  isDisabled={false}\\n  isInline={false}\\n  iconBefore={null}\\n  iconAfter={null}\\n  iconLoading={null}\\n  title=\\\"Usage\\\"\\n  onPress={() => console.log(\\'Pressed!\\')}\\n  getStyles={(props, theme) => ({\\n    buttonStyle: {},\\n    textStyle: {},\\n    focusColor: \\'#5ab9ae\\',\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button color=\"primary\" appearance=\"primary\" size=\"large\" isLoading={false} isActive={false} isDisabled={false} isInline={false} iconBefore={null} iconAfter={null} iconLoading={null} title=\"Usage\" onPress={() => console.log('Pressed!')} getStyles={(props, theme) => ({\n        buttonStyle: {},\n        textStyle: {},\n        focusColor: '#5ab9ae'\n      })} mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"positioning-inline-button-with-different-sizes\"\n    }}>{`Positioning inline button with different sizes`}</h3>\n    <Playground __position={2} __code={'<Box flexDirection=\\\"row\\\" justifyContent=\\\"flex-start\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Left small\\\" size=\\\"small\\\" />\\n</Box>\\n<Box flexDirection=\\\"row\\\" justifyContent=\\\"center\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Center medium\\\" size=\\\"medium\\\" />\\n</Box>\\n<Box flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n  <Button isInline color=\\\"primary\\\" title=\\\"Right large\\\" size=\\\"large\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" justifyContent=\"flex-start\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Left small\" size=\"small\" mdxType=\"Button\" />\n  </Box>\n  <Box flexDirection=\"row\" justifyContent=\"center\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Center medium\" size=\"medium\" mdxType=\"Button\" />\n  </Box>\n  <Box flexDirection=\"row\" justifyContent=\"flex-end\" mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Right large\" size=\"large\" mdxType=\"Button\" />\n  </Box>\n    </Playground>\n    <p>{`If `}<inlineCode parentName=\"p\">{`isInline`}</inlineCode>{` does not inline the button, try wrapping it with `}<inlineCode parentName=\"p\">{`Box`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/ThemeInterface';\nimport { darken } from './changeColor';\n\nexport type ButtonColorProps = ViewStyle & {\n  backgroundColor: string;\n  color: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.button.default,\n          color: theme.colors.button.defaultText,\n\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.button.danger,\n          color: theme.colors.button.dangerText,\n\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.button.primary,\n          color: theme.colors.button.primaryText,\n\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.button.secondary,\n          color: theme.colors.button.secondaryText,\n\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.button.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n"],"sourceRoot":""}