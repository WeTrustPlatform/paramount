{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","width","Component","defaultProps","_LoadingDots","_","_ModalContent","CloseableModal","children","rightSide","onClose","modalProps","Modal","ModalContent","Box","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref","_ref$useHistory","useHistory","_react2","_interopRequireDefault","_reactPowerplug","_docz","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Toggle","Props","initial","_ref2","on","set","toggle","_ref3","outerOn","outerSet","_ref4","innerOn","innerSet","_ref5","_ref6","of","isMDXComponent","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","position","right","top","zIndex","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","_Modal","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/11.4fbef3cd.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Toggle } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Modal } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`Modal covers the full screen. For a prompt/small version of modal, use `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle, set }) => (\\n    <Box>\\n      <Modal visible={on} onRequestClose={() => set(false)}>\\n        <Box height={1800}>\\n          <Text>Put any content in the modal</Text>\\n          <Button onPress={() => set(false)} title=\\\"Close button one\\\" />\\n          <Button onPress={() => set(false)} title=\\\"Close button two\\\" />\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => set(true)} title=\\\"Open modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Toggle,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle,\n          set\n        }) => <Box mdxType=\"Box\">\n        <Modal visible={on} onRequestClose={() => set(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Put any content in the modal</Text>\n            <Button onPress={() => set(false)} title=\"Close button one\" mdxType=\"Button\" />\n            <Button onPress={() => set(false)} title=\"Close button two\" mdxType=\"Button\" />\n          </Box>\n        </Modal>\n        <Button onPress={() => set(true)} title=\"Open modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"nested\"\n    }}>{`Nested`}</h3>\n    <Playground __position={1} __code={'<Toggle initial={false}>\\n  {({ on: outerOn, set: outerSet }) => (\\n    <Box>\\n      <Modal visible={outerOn} onRequestClose={() => outerSet(false)}>\\n        <Box height={1800}>\\n          <Text>Outer modal</Text>\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button one\\\"\\n          />\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button two\\\"\\n          />\\n          <Toggle initial={false}>\\n            {({ on: innerOn, set: innerSet }) => (\\n              <Box>\\n                <Modal\\n                  visible={innerOn}\\n                  onRequestClose={() => innerSet(false)}\\n                >\\n                  <Box height={1800}>\\n                    <Text>Inner modal</Text>\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button one\\\"\\n                    />\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button two\\\"\\n                    />\\n                  </Box>\\n                </Modal>\\n                <Button\\n                  onPress={() => innerSet(true)}\\n                  title=\\\"Open inner modal\\\"\\n                />\\n              </Box>\\n            )}\\n          </Toggle>\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => outerSet(true)} title=\\\"Open outer modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Toggle,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on: outerOn,\n          set: outerSet\n        }) => <Box mdxType=\"Box\">\n        <Modal visible={outerOn} onRequestClose={() => outerSet(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Outer modal</Text>\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button one\" mdxType=\"Button\" />\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button two\" mdxType=\"Button\" />\n            <Toggle initial={false} mdxType=\"Toggle\">\n              {({\n                  on: innerOn,\n                  set: innerSet\n                }) => <Box mdxType=\"Box\">\n                  <Modal visible={innerOn} onRequestClose={() => innerSet(false)} mdxType=\"Modal\">\n                    <Box height={1800} mdxType=\"Box\">\n                      <Text mdxType=\"Text\">Inner modal</Text>\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button one\" mdxType=\"Button\" />\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button two\" mdxType=\"Button\" />\n                    </Box>\n                  </Modal>\n                  <Button onPress={() => innerSet(true)} title=\"Open inner modal\" mdxType=\"Button\" />\n                </Box>}\n            </Toggle>\n          </Box>\n        </Modal>\n        <Button onPress={() => outerSet(true)} title=\"Open outer modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"using-browser-history\"\n    }}>{`Using browser history`}</h3>\n    <p>{`By using `}<inlineCode parentName=\"p\">{`useHistory`}</inlineCode>{` prop it will mimic Android's back button behavior on web which closes modals. On RN, this will have no effect and will use a regular `}<inlineCode parentName=\"p\">{`Modal`}</inlineCode>{`. Works in nested modals as well.`}</p>\n    <p>{`Note: Uses history `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` to manipulate modal state`}</p>\n    <Playground __position={2} __code={'<Toggle initial={false}>\\n  {({ on: outerOn, set: outerSet }) => (\\n    <Box>\\n      <Modal\\n        useHistory\\n        visible={outerOn}\\n        onRequestClose={() => outerSet(false)}\\n      >\\n        <Box height={1800}>\\n          <Text>Outer modal</Text>\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button one\\\"\\n          />\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button two\\\"\\n          />\\n          <Toggle initial={false}>\\n            {({ on: innerOn, set: innerSet }) => (\\n              <Box>\\n                <Modal\\n                  visible={innerOn}\\n                  useHistory\\n                  onRequestClose={() => innerSet(false)}\\n                >\\n                  <Box height={1800}>\\n                    <Text>Inner modal</Text>\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button one\\\"\\n                    />\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button two\\\"\\n                    />\\n                  </Box>\\n                </Modal>\\n                <Button\\n                  onPress={() => innerSet(true)}\\n                  title=\\\"Open inner modal\\\"\\n                />\\n              </Box>\\n            )}\\n          </Toggle>\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => outerSet(true)} title=\\\"Open outer modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Toggle,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on: outerOn,\n          set: outerSet\n        }) => <Box mdxType=\"Box\">\n        <Modal useHistory visible={outerOn} onRequestClose={() => outerSet(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Outer modal</Text>\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button one\" mdxType=\"Button\" />\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button two\" mdxType=\"Button\" />\n            <Toggle initial={false} mdxType=\"Toggle\">\n              {({\n                  on: innerOn,\n                  set: innerSet\n                }) => <Box mdxType=\"Box\">\n                  <Modal visible={innerOn} useHistory onRequestClose={() => innerSet(false)} mdxType=\"Modal\">\n                    <Box height={1800} mdxType=\"Box\">\n                      <Text mdxType=\"Text\">Inner modal</Text>\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button one\" mdxType=\"Button\" />\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button two\" mdxType=\"Button\" />\n                    </Box>\n                  </Modal>\n                  <Button onPress={() => innerSet(true)} title=\"Open inner modal\" mdxType=\"Button\" />\n                </Box>}\n            </Toggle>\n          </Box>\n        </Modal>\n        <Button onPress={() => outerSet(true)} title=\"Open outer modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Modal} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}