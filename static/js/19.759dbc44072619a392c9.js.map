{"version":3,"sources":["webpack:///./src/components/Alert/Alert.mdx","webpack:///./src/components/Alert/Alert.styles.ts","webpack:///./src/components/Alert/Alert.tsx","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_Alert","_Layout","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","Alert","Spacing","paddingVertical","title","description","intent","isCloseable","PropsTable","of","React","Component","alertVariables","theme","body","flex","container","_objectSpread2","backgroundColor","colors","background","plain","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","danger","borderLeftColor","border","info","success","warning","_ref","_alertVariables","intentStyle","bodyStyle","containerStyle","textStyle","titleStyle","displayName","__docgenInfo","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","controlPaddings","controlHeights","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_interopRequireWildcard","_reactNative","_icons","_theme","_Typography","withTheme","component","onClose","_props$isCloseable","icon","_props$intent","_props$getStyles","getStyles","getAlertStyles","_getStyles","View","style","paddingRight","justifyContent","Icon","size","color","text","resolveIcon","Strong","Text","TouchableOpacity","onPress","paddingLeft","__class","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","allowFontScaling","ellipsizeMode","lineBreakMode","numberOfLines","onLayout","onLongPress","testID","nativeID","adjustsFontSizeToFit","minimumFontScale","suppressHighlighting","selectable","selectionColor","textBreakStrategy","accessible","accessibilityLabel","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","_Icon","icons"],"mappings":"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","file":"static/js/19.edd78ae6.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Alert from './Alert';\nimport { Spacing } from '../Layout';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"alerts\"}}>{`Alerts`}</MDXTag>\n<Playground __position={0} __code={'<Spacing paddingVertical={2}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Spacing>\\n<Spacing paddingVertical={2}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Spacing>\\n<Spacing paddingVertical={2}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Spacing>\\n<Spacing paddingVertical={2}>\\n  <Alert intent=\\\"danger\\\" title=\\\"Danger\\\" description=\\\"Message\\\" />\\n</Spacing>'} __scope={{props: this ? this.props : props,Alert,Spacing}}>\n  <Spacing paddingVertical={2}>\n    <Alert title=\"Info\" description=\"Message\" />\n  </Spacing>\n  <Spacing paddingVertical={2}>\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" />\n  </Spacing>\n  <Spacing paddingVertical={2}>\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" />\n  </Spacing>\n  <Spacing paddingVertical={2}>\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" />\n  </Spacing>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"closable-alerts\"}}>{`Closable Alerts`}</MDXTag>\n<Playground __position={1} __code={'<Alert isCloseable title=\\\"Closeable\\\" description=\\\"Message\\\" />'} __scope={{props: this ? this.props : props,Alert,Spacing}}>\n  <Alert isCloseable title=\"Closeable\" description=\"Message\" />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Alert} />\n           </MDXTag>\n  }\n}\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.plain,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    alertVariables.displayName = \"alertVariables\";\n    // @ts-ignore\n    alertVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"alertVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.styles.ts#alertVariables\"] = { docgenInfo: alertVariables.__docgenInfo, name: \"alertVariables\", path: \"src/components/Alert/Alert.styles.ts#alertVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { Spacing } from '../Layout';\nimport { Strong, Text } from '../Typography';\nimport { GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  theme: Theme;\n  title?: string;\n  description?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: GetAlertStyles;\n}\n\nconst resolveIcon = (intent: Intent, theme: Theme) => {\n  switch (intent) {\n    case 'success':\n      return (\n        <Icon name=\"check-circle\" size={24} color={theme.colors.text.success} />\n      );\n    case 'warning':\n      return (\n        <Icon\n          name=\"alert-triangle\"\n          size={24}\n          color={theme.colors.text.warning}\n        />\n      );\n    case 'danger':\n      return (\n        <Icon name=\"alert-circle\" size={24} color={theme.colors.text.danger} />\n      );\n    default:\n      return <Icon name=\"info\" size={24} color={theme.colors.text.info} />;\n  }\n};\n\nconst AlertBase = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles = getAlertStyles,\n    theme,\n  } = props;\n\n  const { containerStyle, bodyStyle } = getStyles({ intent }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {icon || (\n        <Spacing paddingRight={2} justifyContent=\"center\">\n          {resolveIcon(intent, theme)}\n        </Spacing>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Strong>{title}</Strong>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Spacing paddingLeft={2}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Spacing>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport const Alert = withTheme(AlertBase);\nexport default Alert;\ntry {\n    // @ts-ignore\n    Alert.displayName = \"Alert\";\n    // @ts-ignore\n    Alert.__docgenInfo = { \"description\": \"\", \"displayName\": \"Alert\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"component\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"isCloseable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isCloseable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"intent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"intent\", \"required\": false, \"type\": { \"name\": \"\\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"GetAlertStyles\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.tsx#Alert\"] = { docgenInfo: Alert.__docgenInfo, name: \"Alert\", path: \"src/components/Alert/Alert.tsx#Alert\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"component\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"isCloseable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isCloseable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"intent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"intent\", \"required\": false, \"type\": { \"name\": \"\\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"GetAlertStyles\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Alert/Alert.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIcon\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"image\\\" | \\\"link\\\" | \\\"search\\\" | \\\"none\\\" | \\\"button\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\ntry {\n    // @ts-ignore\n    icons.displayName = \"icons\";\n    // @ts-ignore\n    icons.__docgenInfo = { \"description\": \"\", \"displayName\": \"icons\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIcon\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"image\\\" | \\\"link\\\" | \\\"search\\\" | \\\"none\\\" | \\\"button\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/index.ts#icons\"] = { docgenInfo: icons.__docgenInfo, name: \"icons\", path: \"src/icons/index.ts#icons\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}