{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","defaultProps","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","testID","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","_props$appearance2","_props$color2","_props$isDisabled2","_props$isLoading2","_props$size2","children","objectWithoutProperties","buttonAppearances","minimal","default","background","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","_props$appearance3","_props$color3","_props$isDisabled3","_props$size3","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","_props$appearance4","_props$color4","Dots_Dots","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setState","newState","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Tabs","___WEBPACK_IMPORTED_MODULE_5__","activeTabIndex","_ref2","___WEBPACK_IMPORTED_MODULE_6__","activeTab","onChangeTab","tab","tabs","Array","fill","v","i","concat","of","isMDXComponent","_props$tabs","_props$activeTab","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","StyledTab","Tab","tabProps","react__WEBPACK_IMPORTED_MODULE_4__","isActive","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","flex","_props$isActive","buttonProps","_Button__WEBPACK_IMPORTED_MODULE_8__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/16.d5b53e1f.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: string;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nconst defaultProps = {\n  appearance: 'primary' as const,\n  color: 'default' as const,\n  isDisabled: false,\n  isLoading: false,\n  size: 'medium' as const,\n};\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    size = defaultProps.size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n  } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State, Tabs } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTab={state.activeTabIndex}\\n      onChangeTab={tab => setState({ activeTabIndex: tab })}\\n      tabs={new Array(4).fill(0).map((v, i) => ({\\n        title: `Tab ${i + 1}`,\\n      }))}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      Tabs\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTab={state.activeTabIndex} onChangeTab={tab => setState({\n          activeTabIndex: tab\n        })} tabs={new Array(4).fill(0).map((v, i) => ({\n          title: `Tab ${i + 1}`\n        }))} mdxType=\"Tabs\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tabs-props\"\n    }}>{`Tabs Props`}</h2>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Button, ButtonProps } from '../Button';\n\nexport interface TabOption {\n  title: string;\n}\n\ninterface TabsBaseProps {\n  /**\n   * Current active tab index.\n   */\n  activeTab?: number;\n\n  /**\n   * Called when a Tab is pressed\n   */\n  onChangeTab: (tab: number) => void;\n\n  /**\n   * `Tab` components\n   */\n  tabs?: TabOption[];\n}\n\nexport interface TabsOverrides {\n  Root: RootProps;\n  Tab: TabProps;\n}\n\nexport interface TabsProps\n  extends WithOverrides<TabsBaseProps, TabsOverrides> {}\n\nconst defaultProps = {\n  tabs: [],\n  activeTab: 0,\n};\n\nexport const Tabs = (props: TabsProps) => {\n  const {\n    tabs = defaultProps.tabs,\n    activeTab = defaultProps.activeTab,\n    onChangeTab,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Tabs.Root'),\n    overrides.Root,\n  );\n  const [Tab, tabProps] = getOverrides(\n    StyledTab,\n    props,\n    dlv(theme, 'overrides.Tabs.Tab'),\n    overrides.Tab,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {tabs.map((tab, index) => (\n        <Tab\n          key={tab.title}\n          index={index}\n          isActive={index === activeTab}\n          title={tab.title}\n          onPress={() => onChangeTab(index)}\n          {...tabProps}\n        />\n      ))}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          borderRadius: theme.controlBorderRadius.medium,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface TabProps extends ButtonProps {\n  index?: number;\n  isActive?: boolean;\n}\n\nexport const StyledTab = (props: TabProps) => {\n  const { isActive = false, index, ...buttonProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Button\n      color={isActive ? 'primary' : 'default'}\n      overrides={{\n        Touchable: {\n          style: {\n            backgroundColor: isActive ? 'white' : 'transparent',\n            paddingLeft: 0,\n            paddingRight: 0,\n          },\n        },\n        Title: {\n          style: {\n            color: isActive\n              ? theme.colors.text.primary\n              : theme.colors.text.muted,\n          },\n        },\n      }}\n      {...buttonProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}