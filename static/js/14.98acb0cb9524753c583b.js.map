{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","TextInput","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","LeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_jsxFileName","hasLeftIcon","hasRightIcon","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","text","greyDark","danger","paddingVertical","editable","muted","name","alignItems","display","justifyContent","left","paddingHorizontal","position","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","label","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingBottom","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/14.9a986bdf.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, TextInput, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label label=\\\"Lorem ipsum dolar set amet\\\">\\n    <TextInput />\\n  </Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      TextInput,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label label=\"Lorem ipsum dolar set amet\" mdxType=\"Label\">\n      <TextInput mdxType=\"TextInput\" />\n    </Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}