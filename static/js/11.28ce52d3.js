(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/components/Checkbox/Checkbox.mdx":function(e,o,n){var s=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(o,"__esModule",{value:!0}),o.default=m;var t=s(n("./node_modules/@babel/runtime/helpers/extends.js")),l=s(n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),i=(s(n("./node_modules/react/index.js")),n("./node_modules/@mdx-js/react/dist/index.es.js")),d=n("./node_modules/docz/dist/index.esm.js"),r=n("./src/components/index.ts"),c={},a="wrapper";function m(e){var o=e.components,n=(0,l.default)(e,["components"]);return(0,i.mdx)(a,(0,t.default)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"checkbox"},"Checkbox"),(0,i.mdx)("h3",{id:"usage"},"Usage"),(0,i.mdx)(d.Playground,{__position:0,__code:'<Toggle initial={false}>\n  {({ on, toggle }) => (\n    <FormField label="Checkbox" labelPosition="right">\n      <Checkbox\n        shape="square" // or "circle"\n        isChecked={on}\n        isDisabled={false}\n        isInteractive={true}\n        onChange={toggle}\n        size="medium"\n        getStyles={(props, theme) => ({\n          touchableStyle: {},\n          checkboxStyle: {},\n          checkColor: \'white\',\n          checkboxFocusBackgroundColor: \'\',\n        })}\n      />\n    </FormField>\n  )}\n</Toggle>',__scope:{props:this?this.props:n,Playground:d.Playground,Props:d.Props,Checkbox:r.Checkbox,FormField:r.FormField,Toggle:r.Toggle},mdxType:"Playground"},(0,i.mdx)(r.Toggle,{initial:!1,mdxType:"Toggle"},function(e){var o=e.on,n=e.toggle;return(0,i.mdx)(r.FormField,{label:"Checkbox",labelPosition:"right",mdxType:"FormField"},(0,i.mdx)(r.Checkbox,{shape:"square",isChecked:o,isDisabled:!1,isInteractive:!0,onChange:n,size:"medium",getStyles:function(e,o){return{touchableStyle:{},checkboxStyle:{},checkColor:"white",checkboxFocusBackgroundColor:""}},mdxType:"Checkbox"}))})),(0,i.mdx)("h3",{id:"props"},"Props"),(0,i.mdx)(d.Props,{of:r.Checkbox,mdxType:"Props"}))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Checkbox/Checkbox.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=11.31c10c6e2dd30b5986cb.js.map