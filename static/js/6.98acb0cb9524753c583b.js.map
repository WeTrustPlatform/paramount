{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ListPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ListPicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/usePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["Avatar","props","source","name","_props$size","size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","imageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","__source","fileName","_jsxFileName","lineNumber","onError","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","getSpacing","spacing","Spacing","_props$orientation","orientation","viewProps","objectWithoutProperties","react","View","esm_extends","propToFn","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","Checkbox","_props$shape","_props$value","value","_props$isDisabled","isDisabled","_props$onValueChange","onValueChange","StyledTouchable","Touchable","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","touchableProps","StyledCheck","Check","checkProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","onPress","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","disabled","sizeValue","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","primaryDefault","greyDark","_Icon__WEBPACK_IMPORTED_MODULE_11__","text","white","State","_props$initial","initial","useState","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","ListItem","title","description","StyledTextWrapper","TextWrapper","StyledTitle","Title","titleProps","_getOverrides7","StyledDescription","Description","_getOverrides8","descriptionProps","_getOverrides9","StyledAction","Action","_getOverrides10","rightIconProps","_getOverrides11","StyledAvatar","_getOverrides12","AvatarR","avatarProps","_getOverrides13","_getOverrides14","hasAvatar","flexDirection","greyLight","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","flex","_props$hasAvatar","paddingLeft","_Avatar__WEBPACK_IMPORTED_MODULE_9__","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","ListPicker","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","isMulti","newValue","itemIndex","data","label","of","isMDXComponent","_props$data","keyExtractor","StyledListPickerItem","ListPickerItem","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","ListPickerItemR","listPickerItemProps","StyledList","List","listProps","_usePicker","usePicker","items","handleSelect","react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","getItemLayout","_","index","offset","renderItem","item","isSelected","react_native_web_dist_exports_FlatList__WEBPACK_IMPORTED_MODULE_4__","_props$index","_props$isSelected","_props$onPress","override","ListItemR","listItemRProps","component","_Box__WEBPACK_IMPORTED_MODULE_7__","_Checkbox__WEBPACK_IMPORTED_MODULE_8__","Array","isArray","itemValue","filter","val","concat","some","selVal","key","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/6.7bc8185c.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const imageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n  const [ImageR, imageProps] = getOverrides(\n    StyledImage,\n    props,\n    dlv(theme, 'overrides.Avatar.Image'),\n    overrides.Image,\n  );\n\n  return (\n    <Root\n      name={name}\n      size={size}\n      isSolid={isSolid}\n      color={color}\n      testID={testID}\n      {...rootProps}\n    >\n      {imageUnavailable && (\n        <Initials\n          name={name}\n          size={size}\n          isSolid={isSolid}\n          color={color}\n          {...initialsProps}\n        />\n      )}\n      {!imageUnavailable && !!source && (\n        <ImageR\n          onError={() => setHasImageFailedLoading(true)}\n          source={source}\n          {...imageProps}\n        />\n      )}\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ContainerShape, ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface CheckboxBaseProps {\n  /**\n   * The size of the checkbox.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as checked.\n   * @default false\n   */\n  value: boolean;\n\n  /**\n   * When true, the checkbox is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Shape of the checkbox.\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CheckboxOverrides {\n  Touchable: TouchableProps;\n  Check: CheckProps;\n}\n\nexport interface CheckboxProps\n  extends WithOverrides<CheckboxBaseProps, CheckboxOverrides> {}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    size = 'medium',\n    shape = 'rounded',\n    value = false,\n    isDisabled = false,\n    onValueChange = () => {\n      return;\n    },\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Checkbox.Touchable'),\n    overrides.Touchable,\n  );\n  const [Check, checkProps] = getOverrides(\n    StyledCheck,\n    props,\n    dlv(theme, 'overrides.Checkbox.Check'),\n    overrides.Check,\n  );\n\n  return (\n    <Touchable\n      size={size}\n      shape={shape}\n      isDisabled={isDisabled}\n      testID={testID}\n      onPress={() => onValueChange(!value)}\n      {...touchableProps}\n    >\n      <Check\n        value={value}\n        size={size}\n        shape={shape}\n        isDisabled={isDisabled}\n        {...checkProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { size, shape, isDisabled, children, style, ...touchableProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[theme.containerShapes[shape], style]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface CheckProps extends ViewProps {\n  size: ControlSize | number;\n  value: boolean;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledCheck = (props: CheckProps) => {\n  const { size, shape, value, isDisabled, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const sizeValue = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          height: sizeValue,\n          justifyContent: 'center',\n          width: sizeValue,\n          ...(value\n            ? {\n                backgroundColor: theme.colors.background.primaryDefault,\n                borderColor: 'transparent',\n              }\n            : {}),\n          ...(isDisabled\n            ? {\n                backgroundColor: theme.colors.background.greyDark,\n                borderColor: theme.colors.border.default,\n              }\n            : {}),\n          ...theme.containerShapes[shape],\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon name=\"check\" size=\"xsmall\" color={theme.colors.text.white} />\n      ) : null}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageSourcePropType,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Text, TextProps } from '../Typography';\n\ninterface ListItemBaseProps {\n  /**\n   * Title of the list item\n   */\n  title?: OptionalString;\n\n  /**\n   * Description of the list item\n   */\n  description?: OptionalString;\n\n  /**\n   * Source of the avatar\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * When true, list item will not be able to be pressed.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Called when pressing list item\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ListItemOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  TextWrapper: TextWrapperProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n  Avatar: AvatarProps;\n}\n\nexport interface ListItemProps\n  extends WithOverrides<ListItemBaseProps, ListItemOverrides> {}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    isDisabled = false,\n    title,\n    description,\n    onPress,\n    testID,\n    source,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.ListItem.Touchable'),\n    overrides.Touchable,\n  );\n  const [TextWrapper, textProps] = getOverrides(\n    StyledTextWrapper,\n    props,\n    dlv(theme, 'overrides.ListItem.TextWrapper'),\n    overrides.TextWrapper,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.ListItem.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.ListItem.Description'),\n    overrides.Description,\n  );\n  const [Action, rightIconProps] = getOverrides(\n    StyledAction,\n    props,\n    dlv(theme, 'overrides.ListItem.Action'),\n    overrides.Action,\n  );\n  const [AvatarR, avatarProps] = getOverrides(\n    StyledAvatar,\n    props,\n    dlv(theme, 'overrides.ListItem.Avatar'),\n    overrides.Avatar,\n  );\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.ListItem.Root'),\n    overrides.Root,\n  );\n\n  return (\n    <Root isDisabled={isDisabled} {...rootProps}>\n      <Touchable\n        onPress={onPress}\n        testID={testID}\n        isDisabled={isDisabled}\n        {...touchableProps}\n      >\n        <AvatarR size=\"small\" source={source} {...avatarProps} />\n        <TextWrapper\n          hasAvatar={\n            !!source ||\n            !!overrides.Avatar ||\n            !!dlv(theme, 'overrides.ListItem.Avatar')\n          }\n          {...textProps}\n        >\n          <Title title={title} {...titleProps} />\n          <Description description={description} {...descriptionProps} />\n        </TextWrapper>\n      </Touchable>\n      <Action isDisabled={isDisabled} {...rightIconProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, isDisabled, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          height: 72,\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { style, children, isDisabled, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: OptionalString;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text size=\"large\" style={[{}, getStyle(props, style)]} {...textProps}>\n      {title}\n    </Text>\n  );\n};\n\ninterface TextWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n  hasAvatar: boolean;\n}\n\nconst StyledTextWrapper = (props: TextWrapperProps) => {\n  const { children, style, hasAvatar = false, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        { flex: 1, justifyContent: 'center', paddingLeft: hasAvatar ? 8 : 0 },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      size=\"small\"\n      color=\"muted\"\n      style={[{}, getStyle(props, style)]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ActionProps {\n  isDisabled: boolean;\n}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n\nconst StyledAvatar = (props: AvatarProps) => {\n  const { source, name } = props;\n\n  if (!source && !name) return null;\n\n  return <Avatar {...props} />;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, ListPicker, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"listpicker\"\n    }}>{`ListPicker`}</h1>\n    <p>{`ListPicker that supports single value or multiple values selected at the same item.`}</p>\n    <p><inlineCode parentName=\"p\">{`ListPicker`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`FlatList`}</inlineCode>{`. To use `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{`, import `}<inlineCode parentName=\"p\">{`ListPickerWithRef`}</inlineCode>{` instead`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: [\\'c\\', \\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <Box height={300}>\\n      <ListPicker\\n        isMulti\\n        value={state.value}\\n        onValueChange={(newValue, itemIndex) => setState({ value: newValue })}\\n        data={[\\n          {\\n            label: \\'C\\',\\n            value: \\'c\\',\\n            description:\\n              \\'C is a general-purpose, procedural computer programming language. C is a general-purpose, procedural computer programming language.\\',\\n          },\\n          {\\n            label: \\'C#\\',\\n            value: \\'c#\\',\\n            description:\\n              \\'C# is a general-purpose, multi-paradigm programming language.\\',\\n          },\\n          { label: \\'C++\\', value: \\'c++\\' },\\n          { label: \\'CSS\\', value: \\'css\\' },\\n          { label: \\'Elixir\\', value: \\'elixir\\' },\\n          { label: \\'Elm\\', value: \\'elm\\' },\\n          { label: \\'Erlang\\', value: \\'erlang\\' },\\n          { label: \\'Go\\', value: \\'go\\' },\\n          { label: \\'Haskell\\', value: \\'haskell\\' },\\n          { label: \\'HTML\\', value: \\'html\\' },\\n          { label: \\'Java\\', value: \\'java\\' },\\n          { label: \\'JavaScript\\', value: \\'js\\' },\\n          { label: \\'Lua\\', value: \\'lua\\' },\\n          { label: \\'Python\\', value: \\'python\\' },\\n          { label: \\'R\\', value: \\'r\\' },\\n          { label: \\'Ruby\\', value: \\'ruby\\' },\\n          { label: \\'Rust\\', value: \\'rust\\' },\\n          { label: \\'Switft\\', value: \\'swift\\' },\\n          { label: \\'Typescript\\', value: \\'typescript\\' },\\n        ]}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      ListPicker,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ['c', 'js', 'go']\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box height={300} mdxType=\"Box\">\n        <ListPicker isMulti value={state.value} onValueChange={(newValue, itemIndex) => setState({\n            value: newValue\n          })} data={[{\n            label: 'C',\n            value: 'c',\n            description: 'C is a general-purpose, procedural computer programming language. C is a general-purpose, procedural computer programming language.'\n          }, {\n            label: 'C#',\n            value: 'c#',\n            description: 'C# is a general-purpose, multi-paradigm programming language.'\n          }, {\n            label: 'C++',\n            value: 'c++'\n          }, {\n            label: 'CSS',\n            value: 'css'\n          }, {\n            label: 'Elixir',\n            value: 'elixir'\n          }, {\n            label: 'Elm',\n            value: 'elm'\n          }, {\n            label: 'Erlang',\n            value: 'erlang'\n          }, {\n            label: 'Go',\n            value: 'go'\n          }, {\n            label: 'Haskell',\n            value: 'haskell'\n          }, {\n            label: 'HTML',\n            value: 'html'\n          }, {\n            label: 'Java',\n            value: 'java'\n          }, {\n            label: 'JavaScript',\n            value: 'js'\n          }, {\n            label: 'Lua',\n            value: 'lua'\n          }, {\n            label: 'Python',\n            value: 'python'\n          }, {\n            label: 'R',\n            value: 'r'\n          }, {\n            label: 'Ruby',\n            value: 'ruby'\n          }, {\n            label: 'Rust',\n            value: 'rust'\n          }, {\n            label: 'Switft',\n            value: 'swift'\n          }, {\n            label: 'Typescript',\n            value: 'typescript'\n          }]} mdxType=\"ListPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"listpicker-props\"\n    }}>{`ListPicker Props`}</h2>\n    <Props of={ListPicker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Box } from '../Box';\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\nimport {\n  PickerItem,\n  PickerItemProps,\n  usePicker,\n  UsePickerProps,\n} from './usePicker';\n\nexport interface ListPickerItem<TValue extends any> extends PickerItem<TValue> {\n  label: string;\n  description?: OptionalString;\n}\n\nexport interface ListPickerOverrides<TValue extends any> {\n  List: ListProps<TValue>;\n  ListPickerItem: ListPickerItemProps<TValue>;\n}\n\nexport interface ListPickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>\n  extends WithOverrides<\n    UsePickerProps<TValue, TPickerItem & ListPickerItem<TValue>, TIsMulti>,\n    ListPickerOverrides<TValue>\n  > {}\n\nexport const ListPicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: ListPickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    data = [],\n    value,\n    onValueChange = () => {\n      return;\n    },\n    keyExtractor,\n    isMulti,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [ListPickerItemR, listPickerItemProps] = getOverrides(\n    StyledListPickerItem,\n    props,\n    dlv(theme, 'overrides.ListPicker.ListPickerItem'),\n    overrides.ListPickerItem,\n  );\n  const [List, listProps] = getOverrides(\n    StyledList,\n    props,\n    dlv(theme, 'overrides.ListPicker.List'),\n    overrides.List,\n  );\n\n  const { items, handleSelect } = usePicker({\n    value,\n    onValueChange,\n    data,\n    isMulti,\n    keyExtractor,\n  });\n\n  return (\n    <List\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={items}\n      renderItem={({ item }) => {\n        return (\n          <ListPickerItemR\n            onPress={() =>\n              handleSelect(item.value, item.index, item.isSelected)\n            }\n            {...item}\n            {...listPickerItemProps}\n          />\n        );\n      }}\n      {...listProps}\n    />\n  );\n};\n\ninterface ListProps<TValue extends any>\n  extends FlatListProps<ListPickerItem<TValue> & PickerItemProps> {}\n\nconst StyledList = <TValue extends any>(props: ListProps<TValue>) => {\n  return <FlatList {...props} />;\n};\n\ninterface ListPickerItemProps<TValue extends any> {\n  index: number;\n  isSelected: boolean;\n  onPress: (value: TValue, index: number, isSelected: boolean) => void;\n  value: TValue;\n  label: string;\n  description?: OptionalString;\n  override?: Override<ListPickerItemProps<TValue>, ListItemProps>;\n}\n\nconst StyledListPickerItem = <TValue extends any = any>(\n  props: ListPickerItemProps<TValue>,\n) => {\n  const {\n    index = 0,\n    isSelected = false,\n    label,\n    onPress = () => {\n      return;\n    },\n    value,\n    description,\n    override,\n  } = props;\n\n  const [ListItemR, listItemRProps] = getOverrides(ListItem, props, override);\n\n  return (\n    <ListItemR\n      onPress={() => onPress(value, index, isSelected)}\n      title={label}\n      description={isSelected && description}\n      overrides={{\n        Action: {\n          component: () => (\n            <Box justifyContent=\"center\" alignItems=\"center\">\n              <Checkbox\n                onValueChange={() => onPress(value, index, isSelected)}\n                shape=\"circle\"\n                value={isSelected}\n              />\n            </Box>\n          ),\n        },\n      }}\n      {...listItemRProps}\n    />\n  );\n};\n","import * as React from 'react';\n\ntype Value<\n  TValue extends any,\n  TIsMulti extends boolean = false\n> = TIsMulti extends true ? TValue[] : TValue;\n\nexport interface PickerItem<TValue extends any> {\n  value: TValue;\n  key?: string;\n}\n\nexport interface PickerItemProps {\n  key: string;\n  isSelected: boolean;\n  index: number;\n}\n\nexport interface UsePickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n> {\n  /**\n   * Set whether it should allow multiple selections. You should specify the value to get proper type-checking.\n   * @default false\n   */\n  isMulti?: TIsMulti;\n\n  /**\n   * Select item or items.\n   * For single-select use single string.\n   * For multi-select use string array\n   *\n   * *This is a controlled component*; Value will reflect selected items\n   */\n  value?: Value<TValue, TIsMulti> | null;\n\n  /**\n   * Called when a select list item is pressed\n   */\n  onValueChange?: (value: Value<TValue, TIsMulti>, index: number) => void;\n\n  /**\n   * List of data\n   */\n  data?: Array<TPickerItem>;\n\n  /**\n   * Used to extract a unique key for a given item at the specified index.\n   * Key is used for caching and as the react key to track item re-ordering.\n   * The default extractor checks item.key, then falls back to using the index, like React does.\n   */\n  keyExtractor?: (item: TPickerItem) => string;\n}\n\nconst isMulti = <TValue extends any>(\n  value: TValue | TValue[],\n): value is TValue[] => Array.isArray(value);\n\nexport const usePicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: UsePickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    value,\n    onValueChange = () => {\n      return;\n    },\n    data = [],\n    keyExtractor,\n  } = props;\n\n  const handleSelect = React.useCallback(\n    (itemValue: TValue, itemIndex: number, isSelected: boolean) => {\n      if (isMulti(value)) {\n        if (isSelected) {\n          onValueChange(\n            // @ts-ignore: TODO: make this work\n            value.filter(val => val !== itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        } else {\n          onValueChange(\n            value.concat(itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        }\n      } else {\n        onValueChange(itemValue as Value<TValue, TIsMulti>, itemIndex);\n      }\n    },\n    [value, onValueChange],\n  );\n\n  const items = data.map((item, index) => {\n    const isSelected = (isMulti(value)\n      ? //\n        // @ts-ignore: TODO: make this work\n        value.some(selVal => selVal === item.value)\n      : value === item.value) as boolean;\n\n    return {\n      ...item,\n      key: keyExtractor ? keyExtractor(item) : item.key || `${index}`,\n      index,\n      isSelected,\n    };\n  }) as (TPickerItem & PickerItemProps)[];\n\n  return {\n    handleSelect,\n    items,\n  };\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}