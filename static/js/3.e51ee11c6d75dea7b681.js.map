{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_theme","_Icon","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","default","backgroundColor","background","content","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Box","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Box","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","Feather","_ref","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_","_ModalContent","CloseableModal","children","rightSide","onClose","modalProps","Modal","ModalContent","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","weight","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","Component","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Animation","_hooks","transparent","_props$isBackgroundSc","isBackgroundScrollable","_props$animationType","animationType","isUnmounting","targetElement","useElement","_React$useState","useState","_React$useState2","_slicedToArray2","isInView","setIsInView","elementRef","useRef","focusTrapRef","useLockBodyScroll","isLocked","useEffect","deactivateFocus","current","deactivate","initialFocus","onDeactivate","activate","_useSpring","useSpring","onRest","springDefaultConfig","y","createPortal","div","tabIndex","ref","bottom","left","position","right","top","transform","interpolate","v","zIndex","maxWidth","prototype","hasOwnProperty","call","_exportNames","_FormModal","_Modal","friction","tension","_usePrevious","_useMeasure","_useElement","_useLockBodyScroll","_exenv","id","element","rootElem","rootElement","rootContainer","document","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childNodes","canUseDOM","originalStyle","getComputedStyle","overflow","unlock","initialMeasurements","pageX","pageY","x","useMeasure","undefined","forwardRef","createRef","onMeasure","measurements","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","onLayout","e","nativeEvent","usePrevious","value"],"mappings":"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","file":"static/js/3.a63effb3.js","sourcesContent":["import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Icon } from '../Icon';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Box paddingLeft={iconBefore ? 8 : 0} paddingRight={iconAfter ? 8 : 0}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Box>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text weight=\"bold\">{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    isBackgroundScrollable = false,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(!isBackgroundScrollable && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => {\n      if (!visible) setIsInView(false);\n    },\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: isBackgroundScrollable ? 'absolute' : 'fixed',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 400,\n};\n","export * from './usePrevious';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useLockBodyScroll';\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps = {}) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n"],"sourceRoot":""}