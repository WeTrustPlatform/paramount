{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","CounterContainer","Props","Counter","initial","_ref2","count","inc","dec","onDecrement","onIncrement","min","max","component","getStyles","theme","containerStyle","counterStyle","countStyle","disabledStyle","ntextStyle","of","isMDXComponent","getCounterVariables","container","display","flexDirection","justifyContent","counter","alignItems","borderColor","colors","border","primary","borderRadius","borderWidth","height","width","disabled","getCounterStyles","counterVariables","textStyle","React","_interopRequireWildcard","_reactNative","_icons","_theme","_mergeStyles2","_Layout","_Typography","_Counter","useTheme","_mergeStyles","mergeStyles","isDecrementDisabled","isIncrementDisabled","createElement","View","style","Box","paddingRight","TouchableOpacity","activeOpacity","_objectSpread2","onPress","undefined","Icon","name","size","color","text","muted","Text","concat","paddingLeft","Object","keys","forEach","key","defineProperty","exports","enumerable","get","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/18.10bbddef.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Counter } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, inc, dec }) => (\\n    <Counter\\n      count={count}\\n      onDecrement={dec}\\n      onIncrement={inc}\\n      min={0}\\n      max={10}\\n      component={null}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n        counterStyle: {},\\n        countStyle: {},\\n        disabledStyle: {},\\n        ntextStyle: {},\\n      })}\\n    />\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Counter\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={0} mdxType=\"CounterContainer\">\n    {({\n          count,\n          inc,\n          dec\n        }) => <Counter count={count} onDecrement={dec} onIncrement={inc} min={0} max={10} component={null} getStyles={(props, theme) => ({\n          containerStyle: {},\n          counterStyle: {},\n          countStyle: {},\n          disabledStyle: {},\n          ntextStyle: {}\n        })} mdxType=\"Counter\" />}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Counter} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.default,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = theme => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)(theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Box paddingRight={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Box paddingLeft={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n    </View>\n  );\n};\n","export * from './Counter';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}