{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useFreezeBody.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/PhoneNumberInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/PhoneNumberInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","isWindowAboveMinWidth","minWidth","Dimensions","width","isWindowBelowMaxWidth","maxWidth","Responsive","children","isAboveMinWidth","isBelowMaxWidth","matches","_useMeasure2","ViewMeasure","onMeasure","viewProps","isRenderProp","_useMeasure","useMeasure","forwardRef","onLayout","ref","measurements","_ViewMeasure","_Responsive","_useElement","_useFreezeBody","useElement","id","rootElemRef","useRef","useEffect","rootElem","parentElem","rootContainer","document","setAttribute","createRootElement","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","useFreezeBody","_ref","isFrozen","unfreeze","overflow","createRef","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","e","nativeEvent","getPhoneNumberInputStyles","containerStyle","_countriesList","_ListItem","_Modal","_PhoneNumberInput","_TextInput","countries","countryList","map","countryCode","PhoneNumberInputBase","_props$countryCode","phoneNumber","onChangeCountryCode","onChangePhoneNumber","header","innerRef","_props$useHistory","useHistory","textInputProps","isModalOpen","setIsModalOpen","borderBottomRightRadius","dark","borderTopRightRadius","concat","phone","CloseableModal","visible","onRequestClose","onClose","FlatList","ListHeaderComponent","keyExtractor","item","getItemLayout","data","index","offset","renderItem","country","ListItem","label","event","preventDefault","TextInput","inputStyle","borderBottomLeftRadius","borderTopLeftRadius","keyboardType","value","onChangeText","PhoneNumberInput","getTextInputVariables","base","focus","invalid","placeholderTextColor","getTextInputStyles","isInvalid","textInputVariables","sizeStyles","focusedStyle","TextInputBase","_props$isInvalid","editable","getListItemVariables","borderBottomWidth","focusBackgroundColor","selected","wrapper","getListItemStyles","isSelected","selectListVariables","imageWrapperStyle","marginRight","leftWrapperStyle","textWrapperStyle","wrapperStyle","description","_props$rightIcon","rightIcon","leftIcon","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","marginLeft","_LoadingDots","_","_ModalContent","rightSide","modalProps","Modal","ModalContent","Box","TouchableOpacity","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","Component","HistoryModal","_ref$useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Helpers","transparent","_props$isBackgroundSc","isBackgroundScrollable","_props$animationType","animationType","isUnmounting","animationTimer","targetElement","isInView","setIsInView","elementRef","focusTrapRef","animationDuration","deactivateFocus","setTimeout","deactivate","initialFocus","onDeactivate","activate","clearTimeout","_useSpring","useSpring","createPortal","div","tabIndex","bottom","left","position","right","top","transform","interpolate","v","zIndex","prototype","hasOwnProperty","call","_exportNames","_FormModal","Feather","IconTag","result","replace","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/4.54c52336.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from './useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useFreezeBody';\n","import * as React from 'react';\n\nconst createRootElement = (id: string) => {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id: string) => {\n  const rootElemRef = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const parentElem = createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(parentElem);\n\n    if (rootElemRef.current) {\n      parentElem.appendChild(rootElemRef.current);\n    }\n\n    return () => {\n      if (rootElemRef.current) rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!rootElemRef.current) {\n      // @ts-ignore\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useFreezeBody = ({ isFrozen }: { isFrozen: boolean }) => {\n  React.useEffect(() => {\n    const freeze = () => {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    };\n\n    const unfreeze = () => {\n      document.body.style.overflow = '';\n      document.body.style.height = '';\n    };\n\n    if (isFrozen) freeze();\n    else unfreeze();\n\n    return () => unfreeze();\n  }, [isFrozen]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PhoneNumberInputSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PhoneNumberInputSize = keyof PhoneNumberInputSizes;\n\nexport interface PhoneNumberInputStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface PhoneNumberInputStylesProps {\n  size: PhoneNumberInputSize;\n}\n\nexport type GetPhoneNumberInputStyles = (\n  textInputStylesProps: PhoneNumberInputStylesProps,\n  theme: Theme,\n) => PhoneNumberInputStyles;\n\nexport const getPhoneNumberInputStyles: GetPhoneNumberInputStyles = (\n  { size },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n  };\n};\n","import { countries as countryList } from 'countries-list';\nimport * as React from 'react';\nimport { FlatList, TextInput as RNTextInput, View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button } from '../Button';\nimport { ListItem } from '../ListItem';\nimport { CloseableModal } from '../Modal';\nimport {\n  getPhoneNumberInputStyles,\n  PhoneNumberInputStyles,\n} from './PhoneNumberInput.styles';\nimport { TextInput, TextInputProps } from './TextInput';\nimport { GetTextInputStyles, TextInputStyles } from './TextInput.styles';\n\nexport interface PhoneNumberInputProps\n  extends Omit<TextInputProps, 'getStyles'> {\n  countryCode?: string;\n  onChangeCountryCode?: (countryCode: string) => void;\n  phoneNumber?: string;\n  onChangePhoneNumber?: (phoneNumber: string) => void;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactElement<any>;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles & PhoneNumberInputStyles>\n  >;\n}\n\nconst countries = (() => {\n  return Object.keys(countryList).map(countryCode => ({\n    countryCode,\n    key: countryCode,\n    ...countryList[countryCode],\n  }));\n})();\n\nconst PhoneNumberInputBase = (props: PhoneNumberInputProps) => {\n  const {\n    countryCode = 'US',\n    phoneNumber,\n    onChangeCountryCode,\n    onChangePhoneNumber,\n    header,\n    getStyles,\n    innerRef,\n    useHistory = false,\n    ...textInputProps\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(getPhoneNumberInputStyles, getStyles)(\n    {},\n    theme,\n  );\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        onPress={() => setIsModalOpen(true)}\n        appearance=\"outline\"\n        getStyles={() => ({\n          buttonStyle: {\n            borderBottomRightRadius: 0,\n            borderColor: theme.colors.border.dark,\n            borderTopRightRadius: 0,\n            borderWidth: 1,\n          },\n        })}\n        iconAfter={\n          <Icon\n            size={20}\n            color={theme.colors.text.default}\n            name=\"chevron-down\"\n          />\n        }\n        title={`+${countryList[countryCode].phone}`}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        <FlatList\n          ListHeaderComponent={header}\n          keyExtractor={item => item.key}\n          getItemLayout={(data, index) => ({\n            index,\n            length: theme.controlHeights.medium,\n            offset: theme.controlHeights.medium * index,\n          })}\n          data={countries}\n          renderItem={({ item: country }) => {\n            return (\n              <ListItem\n                key={country.countryCode}\n                label={country.name}\n                onPress={event => {\n                  event.preventDefault();\n                  if (onChangeCountryCode) {\n                    onChangeCountryCode(country.countryCode);\n                  }\n                  setIsModalOpen(false);\n                }}\n              />\n            );\n          }}\n        />\n      </CloseableModal>\n      <TextInput\n        ref={innerRef}\n        name=\"phone\"\n        getStyles={() => ({\n          inputStyle: {\n            borderBottomLeftRadius: 0,\n            borderTopLeftRadius: 0,\n          },\n        })}\n        keyboardType=\"phone-pad\"\n        value={phoneNumber}\n        onChangeText={onChangePhoneNumber}\n        {...textInputProps}\n      />\n    </View>\n  );\n};\n\nexport const PhoneNumberInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => <PhoneNumberInputBase {...props} innerRef={ref} />,\n);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface TextInputSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type TextInputSize = keyof TextInputSizes;\n\nexport interface TextInputVariables {\n  base: TextStyle;\n  disabled: TextStyle;\n  focus: TextStyle;\n  invalid: TextStyle;\n  placeholderTextColor: string;\n  sizes: TextInputSizes;\n}\n\nexport const getTextInputVariables = (theme: Theme): TextInputVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      width: '100%',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focus: {},\n    invalid: {\n      borderColor: theme.colors.border.danger,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  focusedStyle: TextStyle;\n  placeholderTextColor: string;\n}\n\nexport interface TextInputStylesProps {\n  size: TextInputSize;\n  isDisabled: boolean;\n  isClearable: boolean;\n  isInvalid: boolean;\n}\n\nexport type GetTextInputStyles = (\n  textInputStylesProps: TextInputStylesProps,\n  theme: Theme,\n) => TextInputStyles;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  { size, isDisabled, isInvalid },\n  theme,\n) => {\n  const textInputVariables = getTextInputVariables(theme);\n\n  const {\n    base,\n    disabled,\n    focus,\n    invalid,\n    placeholderTextColor,\n    sizes,\n  } = textInputVariables;\n\n  const sizeStyles = sizes[size];\n\n  return {\n    focusedStyle: focus,\n    inputStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isDisabled ? disabled : {}),\n      ...(isInvalid ? invalid : {}),\n    },\n    placeholderTextColor,\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetTextInputStyles,\n  getTextInputStyles,\n  TextInputSize,\n  TextInputStyles,\n} from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  children?: React.ReactNode;\n  name?: string;\n  innerRef?: React.Ref<RNTextInput>;\n  size?: TextInputSize;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles>\n  >;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    isDisabled = false,\n    isInvalid = false,\n    size = 'medium',\n    getStyles,\n    name,\n    innerRef,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const { inputStyle, placeholderTextColor } = mergeStyles(\n    getTextInputStyles,\n    getStyles,\n  )(\n    {\n      isDisabled,\n      isInvalid,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    // @ts-ignore: name prop does not exist, but on the web it is useful for browser autofill\n    <RNTextInput\n      ref={innerRef}\n      style={inputStyle}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor}\n      name={name}\n      {...textInputProps}\n    />\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './ListItem';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { useElement, useFreezeBody } from '../Helpers';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    isBackgroundScrollable = false,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  let animationTimer: any = null;\n  const targetElement = useElement('modal');\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n  const animationDuration = animationType === 'none' ? 0 : 350;\n\n  useFreezeBody({ isFrozen: !!(!isBackgroundScrollable && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        animationTimer = setTimeout(\n          () => setIsInView(false),\n          animationDuration,\n        );\n\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      clearTimeout(animationTimer);\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: isBackgroundScrollable ? 'absolute' : 'fixed',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}