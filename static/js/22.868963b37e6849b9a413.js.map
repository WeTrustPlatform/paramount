{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","paddingRight","height","justifyContent","___WEBPACK_IMPORTED_MODULE_6__","title","appearance","isLoading","of","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","react","alignItems","map","index","key","borderRadius","marginLeft","marginRight","width","defaultProps","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","_props$onPress","onPress","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","_props$appearance2","_props$color2","_props$isDisabled2","_props$isLoading2","_props$size2","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","_props$appearance3","_props$color3","_props$isDisabled3","_props$size3","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","_props$appearance4","_props$color4","Dots_Dots","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/22.9ae91825.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component to trigger an action`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: string;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nconst defaultProps = {\n  appearance: 'primary' as const,\n  color: 'default' as const,\n  isDisabled: false,\n  isLoading: false,\n  size: 'medium' as const,\n};\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    size = defaultProps.size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n  } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: string;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}