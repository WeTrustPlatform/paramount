{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Inputs/PhoneNumberInput.mdx","webpack:///./src/components/Inputs/PhoneNumberInput.styles.ts","webpack:///./src/components/Inputs/PhoneNumberInput.tsx","webpack:///./src/components/ListItem/ListItem.styles.ts","webpack:///./src/components/ListItem/ListItem.tsx","webpack:///./src/components/ListItem/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","value","accessibilityLabel","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react","_interopRequireDefault","_tag","_docz","_reactPowerplug","_PhoneNumberInput","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","Playground","__position","__code","__scope","State","Heading","PhoneNumberInput","initial","countryCode","phoneNumber","_ref","state","setState","header","marginVertical","paddingHorizontal","onChangeCountryCode","onChangePhoneNumber","placeholder","PropsTable","of","Component","containerStyle","_countriesList","_ListItem","_Modal","_TextInput","countries","countryList","map","PhoneNumberInputBase","_props$countryCode","innerRef","_props$useHistory","useHistory","textInputProps","_React$useState","useState","_React$useState2","_slicedToArray2","isModalOpen","setIsModalOpen","getPhoneNumberInputStyles","borderBottomRightRadius","dark","borderTopRightRadius","concat","phone","CloseableModal","visible","onRequestClose","onClose","FlatList","ListHeaderComponent","keyExtractor","item","getItemLayout","data","index","length","offset","renderItem","country","ListItem","label","event","preventDefault","TextInput","ref","inputStyle","borderBottomLeftRadius","borderTopLeftRadius","keyboardType","onChangeText","forwardRef","getListItemVariables","base","borderBottomWidth","focusBackgroundColor","selected","wrapper","isSelected","selectListVariables","sizeStyles","imageWrapperStyle","marginRight","leftWrapperStyle","textWrapperStyle","wrapperStyle","_props$rightIcon","rightIcon","leftIcon","getListItemStyles","avatarProps","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","min","nextDot","timing","duration","toValue","start","dots","o","marginLeft","opacity","width","defaultProps","_LoadingDots","_","_ModalContent","children","rightSide","modalProps","Modal","ModalContent","Box","TouchableOpacity","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","bottom","left","position","right","top","zIndex","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/15.82b3f7c9.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Button';\nexport * from './BackButton';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { State } from 'react-powerplug';\nimport { Heading } from '../Typography';\nimport { Spacing } from '../Layout';\nimport { PhoneNumberInput } from './PhoneNumberInput';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"phonenumberinput\"}}>{`PhoneNumberInput`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Appends a button to select country code`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<State initial={{ countryCode: \\'US\\', phoneNumber: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <PhoneNumberInput\\n      header={\\n        <Spacing marginVertical={3} paddingHorizontal={2}>\\n          <Heading size=\\\"xxxlarge\\\">Select your country</Heading>\\n        </Spacing>\\n      }\\n      onChangeCountryCode={countryCode => setState({ countryCode })}\\n      onChangePhoneNumber={phoneNumber => setState({ phoneNumber })}\\n      phoneNumber={state.phoneNumber}\\n      countryCode={state.countryCode}\\n      placeholder=\\\"Enter your phone number\\\"\\n    />\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,Heading,Spacing,PhoneNumberInput}}>\n  <State initial={{ countryCode: 'US', phoneNumber: '' }}>\n    {({ state, setState }) => (\n      <PhoneNumberInput\n        header={\n          <Spacing marginVertical={3} paddingHorizontal={2}>\n            <Heading size=\"xxxlarge\">Select your country</Heading>\n          </Spacing>\n        }\n        onChangeCountryCode={countryCode => setState({ countryCode })}\n        onChangePhoneNumber={phoneNumber => setState({ phoneNumber })}\n        phoneNumber={state.phoneNumber}\n        countryCode={state.countryCode}\n        placeholder=\"Enter your phone number\"\n      />\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={PhoneNumberInput} />\n           </MDXTag>\n  }\n}\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PhoneNumberInputSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PhoneNumberInputSize = keyof PhoneNumberInputSizes;\n\nexport interface PhoneNumberInputStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface PhoneNumberInputStylesProps {\n  size: PhoneNumberInputSize;\n}\n\nexport type GetPhoneNumberInputStyles = (\n  textInputStylesProps: PhoneNumberInputStylesProps,\n  theme: Theme,\n) => PhoneNumberInputStyles;\n\nexport const getPhoneNumberInputStyles: GetPhoneNumberInputStyles = (\n  { size },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n  };\n};\n","import { countries as countryList } from 'countries-list';\nimport * as React from 'react';\nimport { FlatList, TextInput as RNTextInput, View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button } from '../Button';\nimport { ListItem } from '../ListItem';\nimport { CloseableModal } from '../Modal';\nimport {\n  getPhoneNumberInputStyles,\n  PhoneNumberInputStyles,\n} from './PhoneNumberInput.styles';\nimport { TextInput, TextInputProps } from './TextInput';\nimport { GetTextInputStyles, TextInputStyles } from './TextInput.styles';\n\nexport interface PhoneNumberInputProps\n  extends Omit<TextInputProps, 'getStyles'> {\n  countryCode?: string;\n  onChangeCountryCode?: (countryCode: string) => void;\n  phoneNumber?: string;\n  onChangePhoneNumber?: (phoneNumber: string) => void;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactElement<any>;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles & PhoneNumberInputStyles>\n  >;\n}\n\nconst countries = (() => {\n  return Object.keys(countryList).map(countryCode => ({\n    countryCode,\n    key: countryCode,\n    ...countryList[countryCode],\n  }));\n})();\n\nconst PhoneNumberInputBase = (props: PhoneNumberInputProps) => {\n  const {\n    countryCode = 'US',\n    phoneNumber,\n    onChangeCountryCode,\n    onChangePhoneNumber,\n    header,\n    getStyles,\n    innerRef,\n    useHistory = false,\n    ...textInputProps\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(getPhoneNumberInputStyles, getStyles)(\n    {},\n    theme,\n  );\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        onPress={() => setIsModalOpen(true)}\n        appearance=\"outline\"\n        getStyles={() => ({\n          buttonStyle: {\n            borderBottomRightRadius: 0,\n            borderColor: theme.colors.border.dark,\n            borderTopRightRadius: 0,\n            borderWidth: 1,\n          },\n        })}\n        iconAfter={\n          <Icon\n            size={20}\n            color={theme.colors.text.default}\n            name=\"chevron-down\"\n          />\n        }\n        title={`+${countryList[countryCode].phone}`}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        <FlatList\n          ListHeaderComponent={header}\n          keyExtractor={item => item.key}\n          getItemLayout={(data, index) => ({\n            index,\n            length: theme.controlHeights.medium,\n            offset: theme.controlHeights.medium * index,\n          })}\n          data={countries}\n          renderItem={({ item: country }) => {\n            return (\n              <ListItem\n                key={country.countryCode}\n                label={country.name}\n                onPress={event => {\n                  event.preventDefault();\n                  if (onChangeCountryCode) {\n                    onChangeCountryCode(country.countryCode);\n                  }\n                  setIsModalOpen(false);\n                }}\n              />\n            );\n          }}\n        />\n      </CloseableModal>\n      <TextInput\n        ref={innerRef}\n        name=\"phone\"\n        getStyles={() => ({\n          inputStyle: {\n            borderBottomLeftRadius: 0,\n            borderTopLeftRadius: 0,\n          },\n        })}\n        keyboardType=\"phone-pad\"\n        value={phoneNumber}\n        onChangeText={onChangePhoneNumber}\n        {...textInputProps}\n      />\n    </View>\n  );\n};\n\nexport const PhoneNumberInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => <PhoneNumberInputBase {...props} innerRef={ref} />,\n);\ntry {\n    // @ts-ignore\n    PhoneNumberInput.displayName = \"PhoneNumberInput\";\n    // @ts-ignore\n    PhoneNumberInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"PhoneNumberInput\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/PhoneNumberInput.tsx#PhoneNumberInput\"] = { docgenInfo: PhoneNumberInput.__docgenInfo, name: \"PhoneNumberInput\", path: \"src/components/Inputs/PhoneNumberInput.tsx#PhoneNumberInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\ntry {\n    // @ts-ignore\n    getListItemVariables.displayName = \"getListItemVariables\";\n    // @ts-ignore\n    getListItemVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getListItemVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.styles.ts#getListItemVariables\"] = { docgenInfo: getListItemVariables.__docgenInfo, name: \"getListItemVariables\", path: \"src/components/ListItem/ListItem.styles.ts#getListItemVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\ntry {\n    // @ts-ignore\n    ListItem.displayName = \"ListItem\";\n    // @ts-ignore\n    ListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.tsx#ListItem\"] = { docgenInfo: ListItem.__docgenInfo, name: \"ListItem\", path: \"src/components/ListItem/ListItem.tsx#ListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './ListItem';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModal.displayName = \"HistoryModal\";\n    // @ts-ignore\n    HistoryModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModal\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModal\"] = { docgenInfo: HistoryModal.__docgenInfo, name: \"HistoryModal\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}