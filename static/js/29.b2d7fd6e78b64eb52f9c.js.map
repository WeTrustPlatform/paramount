{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Box","SelectList","SelectListItem","State","isMulti","selectedValue","onValueChange","newValue","itemIndex","console","log","label","value","initial","_ref2","state","setState","of","isMDXComponent"],"mappings":"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","file":"static/js/29.ea9c509a.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, SelectList, SelectListItem, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"selectlist\"\n    }}>{`SelectList`}</h1>\n    <p>{`SelectList that supports single value or multiple values selected at the same item. `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` is a compound component, which means that its children can be any component, and it will implicitly inject props such as `}<inlineCode parentName=\"p\">{`isSelected`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` to them.\n`}<inlineCode parentName=\"p\">{`SelectListItem`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`ListItem`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`FlatList`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<SelectList\\n  isMulti={false} // Single select\\n  selectedValue=\\\"c\\\"\\n  onValueChange={(newValue, itemIndex) => {\\n    console.log(newValue, itemIndex)\\n  }}\\n>\\n  <SelectListItem\\n    label=\\\"Usage\\\"\\n    value=\\\"c\\\"\\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\\n    // isSelected\\n    // onSelect\\n    // index\\n  />\\n</SelectList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <SelectList isMulti={false} // Single select\n      selectedValue=\"c\" onValueChange={(newValue, itemIndex) => {\n        console.log(newValue, itemIndex);\n      }} mdxType=\"SelectList\">\n    <SelectListItem label=\"Usage\" value=\"c\" // Props below are passed from `SelectList`, so it is not necessary to pass them here\n        // isSelected\n        // onSelect\n        // index\n        mdxType=\"SelectListItem\" />\n  </SelectList>\n    </Playground>\n    <h3 {...{\n      \"id\": \"multi-select\"\n    }}>{`Multi select`}</h3>\n    <Playground __position={1} __code={'<State initial={{ selectedValue: [\\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <SelectList\\n      isMulti\\n      selectedValue={state.selectedValue}\\n      onValueChange={(newValue, itemIndex) => {\\n        setState({ selectedValue: newValue })\\n      }}\\n    >\\n      <SelectListItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <SelectListItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <SelectListItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <SelectListItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <SelectListItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <SelectListItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <SelectListItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <SelectListItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <SelectListItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <SelectListItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <SelectListItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <SelectListItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <SelectListItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <SelectListItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <SelectListItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <SelectListItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <SelectListItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <SelectListItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <SelectListItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </SelectList>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        selectedValue: ['js', 'go']\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <SelectList isMulti selectedValue={state.selectedValue} onValueChange={(newValue, itemIndex) => {\n          setState({\n            selectedValue: newValue\n          });\n        }} mdxType=\"SelectList\">\n        <SelectListItem label=\"C\" value=\"c\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C#\" value=\"c#\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C++\" value=\"c++\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"CSS\" value=\"css\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elixir\" value=\"elixir\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elm\" value=\"elm\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Erlang\" value=\"erlang\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Go\" value=\"go\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Haskell\" value=\"haskell\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"HTML\" value=\"html\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Java\" value=\"java\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"JavaScript\" value=\"js\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Lua\" value=\"lua\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Python\" value=\"python\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"R\" value=\"r\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Ruby\" value=\"ruby\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Rust\" value=\"rust\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Switft\" value=\"swift\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Typescript\" value=\"typescript\" mdxType=\"SelectListItem\" />\n      </SelectList>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={SelectList} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}