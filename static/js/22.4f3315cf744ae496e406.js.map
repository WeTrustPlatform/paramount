{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","Drawer","Text","Toggle","___WEBPACK_IMPORTED_MODULE_9__","_ref2","on","toggle","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","___WEBPACK_IMPORTED_MODULE_6__","onPress","title","___WEBPACK_IMPORTED_MODULE_7__","space","isVisible","onRequestClose","___WEBPACK_IMPORTED_MODULE_5__","width","height","_ref3","position","_ref4","_ref5","of","parentName","className","isMDXComponent","getDrawerStyles","containerStyle","zIndex","modalContainerStyle","alignItems","display","justifyContent","overlayStyle","AnimatedView","animated","View","_useSpring","_props$isVisible","_props$onRequestClose","_props$position","_props$offset","offset","_props$shouldLockBody","shouldLockBodyScroll","_props$useHistory","useHistory","getStyles","_mergeStyles","mergeStyles","animation","useSpring","defineProperty","springDefaultConfig","react","HistoryModal_web","visible","transparent","objectSpread","Overlay","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","useElement","element","rootElem","rootElement","rootContainer","document","createElement","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","ModalBase","_props$animationType","animationType","isUnmounting","targetElement","slicedToArray","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","createFocusTrap","initialFocus","onDeactivate","activate","onRest","config","opacity","y","ReactDOM","web_cjs","div","tabIndex","ref","bottom","flexDirection","left","right","top","transform","interpolate","v","concat","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","addEventListener","handlePopstate","event","_this$props","go","handleEscapeKey","replaceState","removeEventListener","modalProps","esm_extends","ModalBase_web_ModalBase","HistoryModal_web_jsxFileName","HistoryModal","_ref$useHistory","objectWithoutProperties","HistoryModal_web_HistoryModalBase","getOverlayStyles","overlay","cursor","_props$transparent","TouchableWithoutFeedback","preventDefault","__webpack_require__","d","__webpack_exports__","friction","tension"],"mappings":"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","file":"static/js/22.1980449c.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Drawer, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <p>{`Slides a panel from defined position`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onRequestClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"top\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"left\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"right\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Drawer,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"top\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"left\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"right\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Drawer} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`DrawerStyles {\n  overlayStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\ngetStyles={(DrawerProps, Theme) => DrawerStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View modalContainerStyle>\n  <View containerStyle>{children}</View>\n  <Overlay overlayStyle />\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { DrawerProps } from './Drawer';\n\nexport interface DrawerStyles {\n  overlayStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetDrawerStyles = (\n  props: DrawerProps,\n  theme: Theme,\n) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    overlayStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nconst AnimatedView = animated(View);\n\nexport interface DrawerProps {\n  /**\n   * (Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that\n   * @default false\n   */\n  useHistory?: boolean;\n\n  /**\n   * (Web only) When true, the body of the document will not scroll when dialog is opened\n   * @default true\n   */\n  shouldLockBodyScroll?: boolean;\n\n  /**\n   * When true, it will display the drawer\n   * @default false\n   */\n  isVisible?: boolean;\n\n  /**\n   * Called when clicking on overlay or pressing Esc\n   */\n  onRequestClose?: () => void;\n\n  /**\n   * Amount to offset from the edge of window.\n   * @default 0\n   */\n  offset?: number;\n\n  /**\n   * Amount of % screen or px to take up.\n   */\n  space?: number | string;\n\n  /**\n   * The position to slide from.\n   * @default bottom\n   */\n  position?: Position;\n\n  /** Content of the drawer body */\n  children: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible = false,\n    onRequestClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    shouldLockBodyScroll = true,\n    useHistory = false,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle, overlayStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n    theme.components.getDrawerStyles,\n  )(props, theme);\n\n  const animation = useSpring({\n    [position]: offset,\n    config: springDefaultConfig,\n    from: { [position]: -600 },\n    reset: true,\n  });\n\n  return (\n    <Modal\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n      shouldLockBodyScroll={shouldLockBodyScroll}\n      useHistory={useHistory}\n    >\n      <View style={modalContainerStyle}>\n        {/*\n        // @ts-ignore */}\n        <AnimatedView\n          style={{\n            ...containerStyle,\n            [position]: animation[position],\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </AnimatedView>\n        <Overlay\n          onPress={onRequestClose}\n          getStyles={() => ({ overlayStyle })}\n        />\n      </View>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  return {\n    overlayStyle: {\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(\n    getOverlayStyles,\n    getStyles,\n    theme.components.getOverlayStyles,\n  )({ transparent }, theme);\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}