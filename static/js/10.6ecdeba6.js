(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"./src/components/Button/Button.mdx":function(e,t,n){var o=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=s;var i=o(n("./node_modules/@babel/runtime/helpers/extends.js")),r=o(n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),a=(o(n("./node_modules/react/index.js")),n("./node_modules/@mdx-js/react/dist/index.es.js")),l=n("./node_modules/docz/dist/index.esm.js"),d=n("./src/components/index.ts"),p={},u="wrapper";function s(e){var t=e.components,n=(0,r.default)(e,["components"]);return(0,a.mdx)(u,(0,i.default)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"button"},"Button"),(0,a.mdx)("h3",{id:"usage"},"Usage"),(0,a.mdx)(l.Playground,{__position:0,__code:'<Button\n  color="primary"\n  appearance="primary"\n  size="large"\n  isLoading={false}\n  isActive={false}\n  isDisabled={false}\n  isInline={false}\n  iconBefore={null}\n  iconAfter={null}\n  iconLoading={null}\n  title="Usage"\n  onPress={() => console.log(\'Pressed!\')}\n  getStyles={(props, theme) => ({\n    buttonStyle: {},\n    textStyle: {},\n    focusColor: \'#5ab9ae\',\n  })}\n/>',__scope:{props:this?this.props:n,Playground:l.Playground,Props:l.Props,Box:d.Box,Button:d.Button},mdxType:"Playground"},(0,a.mdx)(d.Button,{color:"primary",appearance:"primary",size:"large",isLoading:!1,isActive:!1,isDisabled:!1,isInline:!1,iconBefore:null,iconAfter:null,iconLoading:null,title:"Usage",onPress:function(){return console.log("Pressed!")},getStyles:function(e,t){return{buttonStyle:{},textStyle:{},focusColor:"#5ab9ae"}},mdxType:"Button"})),(0,a.mdx)("h3",{id:"variants"},"Variants"),(0,a.mdx)(l.Playground,{__position:1,__code:'<Box flexDirection="row">\n  <Box paddingRight={16} height={240} justifyContent="space-between">\n    <Button color="default" title="Default" />\n    <Button color="default" appearance="outline" title="Default" />\n    <Button color="default" appearance="minimal" title="Default" />\n    <Button color="default" appearance="primary" title="Default" isLoading />\n  </Box>\n  <Box paddingRight={16} height={240} justifyContent="space-between">\n    <Button color="primary" title="Primary" />\n    <Button color="primary" appearance="outline" title="Primary" />\n    <Button color="primary" appearance="minimal" title="Primary" />\n    <Button color="primary" appearance="primary" title="Primary" isLoading />\n  </Box>\n  <Box paddingRight={16} height={240} justifyContent="space-between">\n    <Button color="secondary" title="Secondary" />\n    <Button color="secondary" appearance="outline" title="Secondary" />\n    <Button color="secondary" appearance="minimal" title="Secondary" />\n    <Button\n      color="secondary"\n      appearance="primary"\n      title="Secondary"\n      isLoading\n    />\n  </Box>\n  <Box paddingRight={16} height={240} justifyContent="space-between">\n    <Button color="danger" title="Danger" />\n    <Button color="danger" appearance="outline" title="Danger" />\n    <Button color="danger" appearance="minimal" title="Danger" />\n    <Button color="danger" appearance="primary" title="Danger" isLoading />\n  </Box>\n</Box>',__scope:{props:this?this.props:n,Playground:l.Playground,Props:l.Props,Box:d.Box,Button:d.Button},mdxType:"Playground"},(0,a.mdx)(d.Box,{flexDirection:"row",mdxType:"Box"},(0,a.mdx)(d.Box,{paddingRight:16,height:240,justifyContent:"space-between",mdxType:"Box"},(0,a.mdx)(d.Button,{color:"default",title:"Default",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"default",appearance:"outline",title:"Default",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"default",appearance:"minimal",title:"Default",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"default",appearance:"primary",title:"Default",isLoading:!0,mdxType:"Button"})),(0,a.mdx)(d.Box,{paddingRight:16,height:240,justifyContent:"space-between",mdxType:"Box"},(0,a.mdx)(d.Button,{color:"primary",title:"Primary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"primary",appearance:"outline",title:"Primary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"primary",appearance:"minimal",title:"Primary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"primary",appearance:"primary",title:"Primary",isLoading:!0,mdxType:"Button"})),(0,a.mdx)(d.Box,{paddingRight:16,height:240,justifyContent:"space-between",mdxType:"Box"},(0,a.mdx)(d.Button,{color:"secondary",title:"Secondary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"secondary",appearance:"outline",title:"Secondary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"secondary",appearance:"minimal",title:"Secondary",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"secondary",appearance:"primary",title:"Secondary",isLoading:!0,mdxType:"Button"})),(0,a.mdx)(d.Box,{paddingRight:16,height:240,justifyContent:"space-between",mdxType:"Box"},(0,a.mdx)(d.Button,{color:"danger",title:"Danger",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"danger",appearance:"outline",title:"Danger",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"danger",appearance:"minimal",title:"Danger",mdxType:"Button"}),(0,a.mdx)(d.Button,{color:"danger",appearance:"primary",title:"Danger",isLoading:!0,mdxType:"Button"})))),(0,a.mdx)("h3",{id:"positioning-inline-button-with-different-sizes"},"Positioning inline button with different sizes"),(0,a.mdx)(l.Playground,{__position:2,__code:'<Box flexDirection="row" justifyContent="flex-start">\n  <Button isInline color="primary" title="Left small" size="small" />\n</Box>\n<Box flexDirection="row" justifyContent="center">\n  <Button isInline color="primary" title="Center medium" size="medium" />\n</Box>\n<Box flexDirection="row" justifyContent="flex-end">\n  <Button isInline color="primary" title="Right large" size="large" />\n</Box>',__scope:{props:this?this.props:n,Playground:l.Playground,Props:l.Props,Box:d.Box,Button:d.Button},mdxType:"Playground"},(0,a.mdx)(d.Box,{flexDirection:"row",justifyContent:"flex-start",mdxType:"Box"},(0,a.mdx)(d.Button,{isInline:!0,color:"primary",title:"Left small",size:"small",mdxType:"Button"})),(0,a.mdx)(d.Box,{flexDirection:"row",justifyContent:"center",mdxType:"Box"},(0,a.mdx)(d.Button,{isInline:!0,color:"primary",title:"Center medium",size:"medium",mdxType:"Button"})),(0,a.mdx)(d.Box,{flexDirection:"row",justifyContent:"flex-end",mdxType:"Box"},(0,a.mdx)(d.Button,{isInline:!0,color:"primary",title:"Right large",size:"large",mdxType:"Button"}))),(0,a.mdx)("p",null,"If ",(0,a.mdx)("inlineCode",{parentName:"p"},"isInline")," does not inline the button, try wrapping it with ",(0,a.mdx)("inlineCode",{parentName:"p"},"Box")),(0,a.mdx)("h3",{id:"props"},"Props"),(0,a.mdx)(l.Props,{of:d.Button,mdxType:"Props"}))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Button/Button.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=10.b2d7fd6e78b64eb52f9c.js.map