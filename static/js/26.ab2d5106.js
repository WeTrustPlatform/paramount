(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./src/components/Popover/Popover.mdx":function(o,e,n){var t=n("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(e,"__esModule",{value:!0}),e.default=x;var i=t(n("./node_modules/@babel/runtime/helpers/extends.js")),l=t(n("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),r=(t(n("./node_modules/react/index.js")),n("./node_modules/@mdx-js/react/dist/index.es.js")),s=n("./node_modules/docz/dist/index.esm.js"),p=n("./src/components/index.ts"),d={},g="wrapper";function x(o){var e=o.components,n=(0,l.default)(o,["components"]);return(0,r.mdx)(g,(0,i.default)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"popover"},"Popover"),(0,r.mdx)("p",null,"This component requires more polish. Composes ",(0,r.mdx)("inlineCode",{parentName:"p"},"Positioner")),(0,r.mdx)("h3",{id:"usage"},"Usage"),(0,r.mdx)(s.Playground,{__position:0,__code:'<Toggle>\n  {({ on, toggle }) => (\n    <Popover\n      isVisible={on}\n      onClose={toggle}\n      position="bottom"\n      isFullWidth={false}\n      // Use this prop to specify the position of the popover\n      targetMeasurements={{\n        height: 200,\n        pageX: window.innerWidth - 224,\n        pageY: -200,\n        width: 200,\n        x: 0,\n        y: 0,\n      }}\n      getStyles={(props, theme) => ({\n        positionerStyle: {},\n        modalContainerStyle: {},\n        popoverStyle: {},\n      })}\n      content={props => (\n        <Box>\n          <Text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n            enim ad minim veniam, quis nostrud exercitation ullamco laboris\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n            sunt in culpa qui officia deserunt mollit anim id est laborum.\n          </Text>\n        </Box>\n      )}\n    >\n      <Button onPress={toggle} title="Pop at right corner" />\n    </Popover>\n  )}\n</Toggle>',__scope:{props:this?this.props:n,Playground:s.Playground,Props:s.Props,Box:p.Box,Button:p.Button,Popover:p.Popover,Toggle:p.Toggle,Text:p.Text},mdxType:"Playground"},(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"bottom",isFullWidth:!1,targetMeasurements:{height:200,pageX:window.innerWidth-224,pageY:-200,width:200,x:0,y:0},getStyles:function(o,e){return{positionerStyle:{},modalContainerStyle:{},popoverStyle:{}}},content:function(o){return(0,r.mdx)(p.Box,{mdxType:"Box"},(0,r.mdx)(p.Text,{mdxType:"Text"},"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."))},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,title:"Pop at right corner",mdxType:"Button"}))})),(0,r.mdx)("h3",{id:"variants"},"Variants"),(0,r.mdx)(s.Playground,{__position:1,__code:'<Box paddingBottom={64} zIndex={1}>\n  <Box flexDirection="row" justifyContent="space-between">\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="top-right"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Top right" />\n        </Popover>\n      )}\n    </Toggle>\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="top"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Top" />\n        </Popover>\n      )}\n    </Toggle>\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="top-left"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Top left" />\n        </Popover>\n      )}\n    </Toggle>\n  </Box>\n</Box>\n<Box paddingVertical={64} zIndex={2}>\n  <Box flexDirection="row" justifyContent="space-between">\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="left"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Left" />\n        </Popover>\n      )}\n    </Toggle>\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="right"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Right" />\n        </Popover>\n      )}\n    </Toggle>\n  </Box>\n</Box>\n<Box paddingTop={64} zIndex={3}>\n  <Box flexDirection="row" justifyContent="space-between">\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="bottom-right"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Bottom right" />\n        </Popover>\n      )}\n    </Toggle>\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="bottom"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Bottom" />\n        </Popover>\n      )}\n    </Toggle>\n    <Toggle>\n      {({ on, toggle }) => (\n        <Popover\n          isVisible={on}\n          onClose={toggle}\n          position="bottom-left"\n          content={() => <Box width={200} height={200} />}\n        >\n          <Button onPress={toggle} isInline title="Bottom left" />\n        </Popover>\n      )}\n    </Toggle>\n  </Box>\n</Box>',__scope:{props:this?this.props:n,Playground:s.Playground,Props:s.Props,Box:p.Box,Button:p.Button,Popover:p.Popover,Toggle:p.Toggle,Text:p.Text},mdxType:"Playground"},(0,r.mdx)(p.Box,{paddingBottom:64,zIndex:1,mdxType:"Box"},(0,r.mdx)(p.Box,{flexDirection:"row",justifyContent:"space-between",mdxType:"Box"},(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"top-right",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Top right",mdxType:"Button"}))}),(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"top",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Top",mdxType:"Button"}))}),(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"top-left",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Top left",mdxType:"Button"}))}))),(0,r.mdx)(p.Box,{paddingVertical:64,zIndex:2,mdxType:"Box"},(0,r.mdx)(p.Box,{flexDirection:"row",justifyContent:"space-between",mdxType:"Box"},(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"left",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Left",mdxType:"Button"}))}),(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"right",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Right",mdxType:"Button"}))}))),(0,r.mdx)(p.Box,{paddingTop:64,zIndex:3,mdxType:"Box"},(0,r.mdx)(p.Box,{flexDirection:"row",justifyContent:"space-between",mdxType:"Box"},(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"bottom-right",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Bottom right",mdxType:"Button"}))}),(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"bottom",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Bottom",mdxType:"Button"}))}),(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,onClose:n,position:"bottom-left",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,isInline:!0,title:"Bottom left",mdxType:"Button"}))})))),(0,r.mdx)("h3",{id:"popover-with-full-width"},"Popover with full width"),(0,r.mdx)("p",null,"On Mobile sometimes we want the content to stretch full width of the window. There is the prop ",(0,r.mdx)("inlineCode",{parentName:"p"},"isFullWidth")," for that"),(0,r.mdx)(s.Playground,{__position:2,__code:'<Box flex={1}>\n  <Toggle>\n    {({ on, toggle }) => (\n      <Popover\n        isVisible={on}\n        isFullWidth\n        onClose={toggle}\n        position="top-left"\n        content={() => (\n          <Box width={200} height={200} backgroundColor="#67c6bb" />\n        )}\n      >\n        <Button onPress={toggle} title="Pop" />\n      </Popover>\n    )}\n  </Toggle>\n</Box>',__scope:{props:this?this.props:n,Playground:s.Playground,Props:s.Props,Box:p.Box,Button:p.Button,Popover:p.Popover,Toggle:p.Toggle,Text:p.Text},mdxType:"Playground"},(0,r.mdx)(p.Box,{flex:1,mdxType:"Box"},(0,r.mdx)(p.Toggle,{mdxType:"Toggle"},function(o){var e=o.on,n=o.toggle;return(0,r.mdx)(p.Popover,{isVisible:e,isFullWidth:!0,onClose:n,position:"top-left",content:function(){return(0,r.mdx)(p.Box,{width:200,height:200,backgroundColor:"#67c6bb",mdxType:"Box"})},mdxType:"Popover"},(0,r.mdx)(p.Button,{onPress:n,title:"Pop",mdxType:"Button"}))}))),(0,r.mdx)("h3",{id:"props"},"Props"),(0,r.mdx)(s.Props,{of:p.Popover,mdxType:"Props"}))}x&&x===Object(x)&&Object.isExtensible(x)&&Object.defineProperty(x,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Popover/Popover.mdx"}}),x.isMDXComponent=!0}}]);
//# sourceMappingURL=26.b2d7fd6e78b64eb52f9c.js.map