{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/index.ts"],"names":["getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","getDividerColor","borderColors","getDividerStyles","_ref","position","styleMap","horizontal","width","vertical","dividerStyle","_Divider","Divider","_props$position","Feather","Icon","name","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","getTabStyles","containerStyle","bottom","_Tab","Tab","_props$isActive","buttonProps","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","Playground","__position","__code","__scope","Props","State","Tabs","defaultActiveTabIndex","onSetActiveTabIndex","console","log","activeTabIndex","undefined","distribution","tabContainerStyle","initial","_ref2","state","setState","of","isMDXComponent","getTabsStyles","flex","_Tabs","children","_props$defaultActiveT","_props$distribution","_React$useState","useState","_React$useState2","_slicedToArray2","localActiveTabIndex","setLocalActiveTabIndex","isControlled","data","Children","child","tabCommonProps","tabs","toArray","item","cloneElement","FlatList","renderItem"],"mappings":"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","file":"static/js/7.331693e0.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\n","import { TextStyle } from 'react-native';\n\nimport { BorderColor, BorderColors, Theme } from '../../theme/ThemeInterface';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: BorderColor;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerColor = (borderColors: BorderColors) => (\n  borderColor: BorderColor,\n) => {\n  // @ts-ignore\n  const presetColor = borderColors[borderColor] as string | undefined;\n\n  return presetColor || borderColor;\n};\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const backgroundColor = getDividerColor(theme.colors.border)(\n    color || theme.colors.border.default,\n  );\n\n  const styleMap = {\n    horizontal: {\n      backgroundColor,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { BorderColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: BorderColor | string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nexport const Divider = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = useTheme();\n\n  const { dividerStyle } = mergeStyles(getDividerStyles, getStyles)(\n    { size, color, position },\n    theme,\n  );\n\n  return <View style={dividerStyle} />;\n};\n","export * from './Divider';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport type GetTabStyles = (theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = theme => {\n  return {\n    buttonStyle: {\n      borderRadius: 0,\n    },\n    containerStyle: {},\n    dividerStyle: {\n      borderRadius: 0,\n      bottom: 0,\n      position: 'absolute',\n    },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { ButtonStyles, GetButtonStyles } from '../Button/Button.styles';\nimport { Divider } from '../Divider';\nimport { getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps extends ButtonProps {\n  isActive?: boolean;\n  getStyles?: ReplaceReturnType<\n    GetButtonStyles,\n    DeepPartial<ButtonStyles & TabStyles>\n  >;\n}\n\nexport const Tab = (props: TabProps) => {\n  const { isActive = false, getStyles, ...buttonProps } = props;\n  const theme = useTheme();\n  const { containerStyle, dividerStyle, buttonStyle, textStyle } = mergeStyles(\n    getTabStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        appearance=\"minimal\"\n        getStyles={() => ({ buttonStyle, textStyle })}\n        {...buttonProps}\n      />\n      {isActive && (\n        <Divider\n          size={4}\n          color={isActive ? 'primary' : 'default'}\n          getStyles={() => ({ dividerStyle })}\n        />\n      )}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { View } from 'react-native';\nimport { Icon } from '../Icon';\nimport { Tabs, Tab } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Tabs\\n  defaultActiveTabIndex={1}\\n  onSetActiveTabIndex={index => console.log(\\'Clicked\\', index)}\\n  activeTabIndex={undefined}\\n  onPress={undefined}\\n  distribution=\\\"fit\\\" // or \\'scrollable\\'\\n  getStyles={(props, theme) => ({\\n    containerStyle: {}, // Only applied when distribution=\\\"fit\\\"\\n    tabContainerStyle: {},\\n    buttonStyle: {},\\n    textStyle: {},\\n    dividerStyle: {},\\n  })}\\n>\\n  <Tab title=\\\"Tab 1\\\" />\\n  <Tab title=\\\"Tab 2\\\" />\\n  <Tab title=\\\"Tab 3\\\" />\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs defaultActiveTabIndex={1} onSetActiveTabIndex={index => console.log('Clicked', index)} activeTabIndex={undefined} onPress={undefined} distribution=\"fit\" // or 'scrollable'\n      getStyles={(props, theme) => ({\n        containerStyle: {},\n        // Only applied when distribution=\"fit\"\n        tabContainerStyle: {},\n        buttonStyle: {},\n        textStyle: {},\n        dividerStyle: {}\n      })} mdxType=\"Tabs\">\n    <Tab title=\"Tab 1\" mdxType=\"Tab\" />\n    <Tab title=\"Tab 2\" mdxType=\"Tab\" />\n    <Tab title=\"Tab 3\" mdxType=\"Tab\" />\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h3>\n    <Playground __position={1} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      distribution=\\\"scrollable\\\"\\n      activeTabIndex={state.activeTabIndex}\\n      onPress={index => setState({ activeTabIndex: index })}\\n    >\\n      <Tab\\n        icon={\\n          <Icon\\n            name=\\\"home\\\"\\n            size={24}\\n            color={state.activeTabIndex === 0 ? \\'#1b877a\\' : \\'#7e7e7e\\'}\\n          />\\n        }\\n      />\\n      <Tab title=\\\"Tab 2\\\" />\\n      <Tab isDisabled title=\\\"Tab 3\\\" />\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs distribution=\"scrollable\" activeTabIndex={state.activeTabIndex} onPress={index => setState({\n          activeTabIndex: index\n        })} mdxType=\"Tabs\">\n        <Tab icon={<Icon name=\"home\" size={24} color={state.activeTabIndex === 0 ? '#1b877a' : '#7e7e7e'} mdxType=\"Icon\" />} mdxType=\"Tab\" />\n        <Tab title=\"Tab 2\" mdxType=\"Tab\" />\n        <Tab isDisabled title=\"Tab 3\" mdxType=\"Tab\" />\n      </Tabs>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"scrollable\"\n    }}>{`Scrollable`}</h3>\n    <Playground __position={2} __code={'<Tabs distribution=\\\"scrollable\\\">\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs distribution=\"scrollable\" mdxType=\"Tabs\">\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { TabsDistribution } from './Tabs';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n  tabContainerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport interface GetTabsStylesProps {\n  distribution: TabsDistribution;\n}\n\nexport type GetTabsStyles = (\n  props: GetTabsStylesProps,\n  theme: Theme,\n) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = ({ distribution }, theme) => {\n  return {\n    buttonStyle: {},\n    containerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n    dividerStyle: {},\n    tabContainerStyle:\n      distribution === 'fit'\n        ? {\n            flex: 1,\n          }\n        : {},\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { FlatList, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  activeTabIndex?: number;\n  children: Array<React.ReactElement<TabProps>>;\n  defaultActiveTabIndex?: number;\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n  distribution?: TabsDistribution;\n\n  onPress: (index: number) => void;\n  onSetActiveTabIndex?: (index: number) => void;\n}\n\nexport interface WrapperProps {\n  children: React.ReactNode;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const {\n    children,\n    activeTabIndex,\n    defaultActiveTabIndex = 0,\n    onPress,\n    onSetActiveTabIndex,\n    getStyles,\n    distribution = 'fit',\n  } = props;\n  const [localActiveTabIndex, setLocalActiveTabIndex] = React.useState(\n    defaultActiveTabIndex,\n  );\n  const theme = useTheme();\n  const isControlled = !!(activeTabIndex || onPress);\n  const {\n    containerStyle,\n    tabContainerStyle,\n    textStyle,\n    buttonStyle,\n    dividerStyle,\n  } = mergeStyles(getTabsStyles, getStyles)({ distribution }, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    const tabCommonProps = {\n      getStyles: () => ({\n        buttonStyle,\n        containerStyle: tabContainerStyle,\n        dividerStyle,\n        textStyle,\n      }),\n    };\n\n    return isControlled\n      ? {\n          ...tabCommonProps,\n          isActive: index === activeTabIndex,\n          onPress: () => onPress(index),\n        }\n      : {\n          ...tabCommonProps,\n          isActive: index === localActiveTabIndex,\n          onPress: () => {\n            setLocalActiveTabIndex(index);\n            if (onSetActiveTabIndex) onSetActiveTabIndex(index);\n          },\n        };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  if (distribution === 'fit') {\n    return (\n      <View style={containerStyle}>\n        {data.map((item, index) => React.cloneElement(tabs[index], item))}\n      </View>\n    );\n  }\n\n  return (\n    <FlatList\n      horizontal\n      data={data}\n      renderItem={({ item, index }) => React.cloneElement(tabs[index], item)}\n    />\n  );\n};\n","export * from './Tabs';\nexport * from './Tab';\n"],"sourceRoot":""}