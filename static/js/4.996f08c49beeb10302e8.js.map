{"version":3,"sources":["webpack:///./src/components/SelectList/SelectList.mdx","webpack:///./src/components/SelectList/SelectList.tsx","webpack:///./src/components/SelectList/SelectListField.tsx","webpack:///./src/components/SelectList/SelectListItem.tsx","webpack:///./src/components/SelectList/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","SelectList","SelectListItem","selectedValue","onValueChange","itemValue","itemIndex","console","log","label","value","PropsTable","of","React","Component","_interopRequireWildcard","_theme","_Layout","withTheme","isMulti","children","handleOnPress","isSelected","Array","isArray","filter","val","concat","finalChildren","Children","map","child","index","isValidElement","selectListItem","some","selVal","cloneElement","onPress","GridBox","displayName","__docgenInfo","description","defaultValue","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","__class","_FormField","_SelectList","SelectField","error","passThroughProps","SelectListField","theme","_fi","_reactNative","_Typography","_props$index","_props$isDisabled","isDisabled","_props$isSelected","_props$onPress","_props$size","size","testID","_theme$getSelectListS","getSelectListStyles","containerStyle","textStyle","focusBackgroundColor","TouchableHighlight","disabled","_onPress","apply","arguments","toString","underlayColor","style","View","Text","Box","position","right","marginRight","FiCheck","color","themeVariables","colors","text","success","_SelectListItem","_SelectListField"],"mappings":"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","file":"static/js/4.b73492f5.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { SelectList, SelectListItem } from '.';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"default\"}}>{`Default`}</MDXTag>\n<Playground __position={0} __code={`<SelectList\n  selectedValue=\"js\"\n  onValueChange={(itemValue, itemIndex) =>\n    console.log(\\'itemValue\\', itemValue)\n  }\n>\n  <SelectListItem label=\"Java\" value=\"java\" />\n  <SelectListItem label=\"JavaScript\" value=\"js\" />\n</SelectList>`} __scope={{props: this ? this.props : props,SelectList,SelectListItem}}>\n  <SelectList\n    selectedValue=\"js\"\n    onValueChange={(itemValue, itemIndex) =>\n      console.log('itemValue', itemValue)\n    }\n  >\n    <SelectListItem label=\"Java\" value=\"java\" />\n    <SelectListItem label=\"JavaScript\" value=\"js\" />\n  </SelectList>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list\"}}>{`Select List`}</MDXTag>\n<PropsTable of={SelectList} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list-item\"}}>{`Select List Item`}</MDXTag>\n<PropsTable of={SelectListItem} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nimport { ITheme, withTheme } from '../../theme';\nimport { GridBox } from '../Layout';\nimport { ISelectListItemProps } from './SelectListItem';\n\nexport interface ISelectListProps {\n  children: Array<React.ReactElement<ISelectListItemProps>>;\n  selectedValue: string | string[];\n  isMulti?: boolean;\n  theme: ITheme;\n  onValueChange: (itemValue: string | string[], itemIndex: number) => void;\n}\n\nconst SelectListWithoutTheme = (props: ISelectListProps): any => {\n  const { selectedValue, onValueChange, isMulti, children } = props;\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val === itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const selectListItem = child as React.ReactElement<ISelectListItemProps>;\n\n    const isSelected =\n      isMulti && Array.isArray(selectedValue)\n        ? selectedValue.some(selVal => selVal === selectListItem.props.value)\n        : selectedValue === selectListItem.props.value;\n\n    return React.cloneElement(selectListItem, {\n      index,\n      isSelected,\n      onPress: handleOnPress,\n    });\n  });\n\n  return <GridBox>{finalChildren}</GridBox>;\n};\n\nexport const SelectList = withTheme(SelectListWithoutTheme);\nexport default SelectList;\ntry {\n    // @ts-ignore\n    SelectList.displayName = \"SelectList\";\n    // @ts-ignore\n    SelectList.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectList\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#SelectList\"] = { docgenInfo: SelectList.__docgenInfo, name: \"SelectList\", path: \"src/components/SelectList/SelectList.tsx#SelectList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/SelectList.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport FormField, { IFormFieldProps } from '../FormField';\nimport SelectList, { ISelectListProps } from './SelectList';\n\nexport default class SelectField extends React.Component<\n  IFormFieldProps & ISelectListProps\n> {\n  public render() {\n    const { label, error, description, ...passThroughProps } = this.props;\n\n    return (\n      <FormField label={label} error={error} description={description}>\n        <SelectList {...passThroughProps} />\n      </FormField>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    SelectListField.displayName = \"SelectListField\";\n    // @ts-ignore\n    SelectListField.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectListField\", \"props\": { \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"ITheme\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListField.tsx#SelectListField\"] = { docgenInfo: SelectListField.__docgenInfo, name: \"SelectListField\", path: \"src/components/SelectList/SelectListField.tsx#SelectListField\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { FiCheck } from 'react-icons/fi';\nimport { TouchableHighlight, View } from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\nimport { SelectListSize } from '../../theme/component-variables/selectListVariables';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface ISelectListItemProps {\n  theme: ITheme;\n  size?: SelectListSize;\n  isDisabled?: boolean;\n  onPress?: (value: string, index: number, isSelected: boolean) => void;\n  testID?: string;\n  label: string;\n  isSelected?: boolean;\n  index?: number;\n  value: string;\n}\n\nconst SelectListItemWithoutTheme = (props: ISelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onPress = () => null,\n    size = 'medium',\n    testID,\n    theme,\n    value,\n  } = props;\n\n  const {\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n  } = theme.getSelectListStyles(size, isDisabled, isSelected);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      onPress={() => onPress(value, index, isSelected)}\n      underlayColor={focusBackgroundColor}\n      style={[containerStyle]}\n      testID={testID}\n    >\n      <View>\n        <Text {...textStyle}>{label}</Text>\n        {isSelected && (\n          <Box position=\"absolute\" right={0} marginRight={4}>\n            <FiCheck\n              size={22}\n              color={theme.themeVariables.colors.text.success}\n            />\n          </Box>\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const SelectListItem = withTheme(SelectListItemWithoutTheme);\nexport default SelectListItem;\ntry {\n    // @ts-ignore\n    SelectListItem.displayName = \"SelectListItem\";\n    // @ts-ignore\n    SelectListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#SelectListItem\"] = { docgenInfo: SelectListItem.__docgenInfo, name: \"SelectListItem\", path: \"src/components/SelectList/SelectListItem.tsx#SelectListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/SelectListItem.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default } from './SelectList';\nexport { default as SelectList } from './SelectList';\nexport { default as SelectListItem } from './SelectListItem';\nexport { default as SelectListField } from './SelectListField';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    SelectList.displayName = \"SelectList\";\n    // @ts-ignore\n    SelectList.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectList\", \"props\": { \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"ITheme\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/index.ts#SelectList\"] = { docgenInfo: SelectList.__docgenInfo, name: \"SelectList\", path: \"src/components/SelectList/index.ts#SelectList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}