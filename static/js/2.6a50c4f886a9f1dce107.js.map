{"version":3,"sources":["webpack:///./src/components/Layout/index.ts","webpack:///./src/components/Typography/BulletItem.tsx","webpack:///./src/components/Typography/Code.tsx","webpack:///./src/components/Typography/Heading.styles.ts","webpack:///./src/components/Typography/Heading.tsx","webpack:///./src/components/Typography/Label.tsx","webpack:///./src/components/Typography/Link.tsx","webpack:///./src/components/Typography/List.tsx","webpack:///./src/components/Typography/ListItem.tsx","webpack:///./src/components/Typography/NumberedItem.tsx","webpack:///./src/components/Typography/OrderedList.tsx","webpack:///./src/components/Typography/Paragraph.styles.ts","webpack:///./src/components/Typography/Paragraph.tsx","webpack:///./src/components/Typography/Text.styles.ts","webpack:///./src/components/Typography/Text.tsx","webpack:///./src/components/Typography/UnorderedList.tsx","webpack:///./src/components/Typography/index.ts","webpack:///./src/utils/mergeStyles.ts"],"names":["_Box","_interopRequireWildcard","__webpack_require__","_Spacing","__class","displayName","__docgenInfo","description","props","style","defaultValue","name","required","type","elevation","shape","backfaceVisibility","backgroundColor","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomWidth","borderColor","borderEndColor","borderLeftColor","borderLeftWidth","borderRadius","borderRightColor","borderRightWidth","borderStartColor","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopWidth","borderWidth","opacity","testID","alignContent","alignItems","alignSelf","aspectRatio","borderEndWidth","borderStartWidth","bottom","display","end","flex","flexBasis","flexDirection","flexGrow","flexShrink","flexWrap","height","justifyContent","left","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","maxHeight","maxWidth","minHeight","minWidth","overflow","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","position","right","start","top","width","zIndex","direction","shadowColor","shadowOffset","shadowOpacity","shadowRadius","transform","transformMatrix","rotation","scaleX","scaleY","translateX","translateY","gridPointMultiplier","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","React","_ListItem","_interopRequireDefault","BulletItem","icon","listItemProps","iconColor","_objectWithoutProperties2","default","createElement","_extends2","mark","size","theme","getStyles","allowFontScaling","ellipsizeMode","lineBreakMode","numberOfLines","onLayout","onPress","onLongPress","nativeID","adjustsFontSizeToFit","minimumFontScale","suppressHighlighting","selectable","selectionColor","textBreakStrategy","accessible","accessibilityLabel","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","isInline","color","align","fontFamily","weight","isBold","isItalic","_reactNative","_withTheme","_Text","styles","StyleSheet","create","Code","appearance","textProps","code","View","colors","background","tint2","getHeadingVariables","xxxlarge","text","dark","fontFamilies","heading","fontSize","headingSizes","fontWeight","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","_ref","headingVariables","headingStyle","_objectSpread2","getTextColor","textAlign","fills","fontWeights","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","_mergeStyles2","_Heading","Heading","accessibilityLevel","_props$size","_props$align","_props$color","mergeStyles","getHeadingStyles","Text","Platform","OS","aria-level","Label","children","Link","_Layout","List","listType","finalChildren","Children","map","listItem","index","isValidElement","cloneElement","Spacing","paddingLeftMap","xsmall","ListItem","NumberedItem","concat","_List","OrderedList","getParagraphVariables","paragraphVariables","paragraphStyle","getFontFamily","getFontWeight","_Paragraph","Paragraph","_props$fontFamily","_props$weight","getParagraphStyles","getTextVariables","textColors","textColor","textVariables","textStyle","fontStyle","textTransform","mono","light","normal","bold","_props$isInline","_props$isBold","_props$isItalic","getTextStyles","UnorderedList","_Code","_Label","_Link","_OrderedList","_BulletItem","_NumberedItem","_UnorderedList","Typography","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles","apply","arguments"],"mappings":"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","file":"static/js/2.dd5d2d58.js","sourcesContent":["export { default as Box, BoxProps } from './Box';\nexport { default as Spacing, SpacingProps } from './Spacing';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"ViewStyle\" } }, \"elevation\": { \"defaultValue\": null, \"description\": \"Sets the elevation of a view, using Android's underlying\\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\\nThis adds a drop shadow to the item and affects z-order for overlapping views.\\nOnly supported on Android 5.0+, has no effect on earlier versions.\", \"name\": \"elevation\", \"required\": false, \"type\": { \"name\": \"0 | 1 | 2 | 3 | 4 | 5 | 6\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"Shape\" } }, \"backfaceVisibility\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backfaceVisibility\", \"required\": false, \"type\": { \"name\": \"\\\"visible\\\" | \\\"hidden\\\"\" } }, \"backgroundColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderBottomColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderBottomEndRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomEndRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderBottomLeftRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomLeftRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderBottomRightRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomRightRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderBottomStartRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomStartRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderBottomWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderBottomWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderEndColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderEndColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderLeftColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderLeftColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderLeftWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderLeftWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderRightColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderRightColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderRightWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderRightWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderStartColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderStartColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderStyle\", \"required\": false, \"type\": { \"name\": \"\\\"solid\\\" | \\\"dotted\\\" | \\\"dashed\\\"\" } }, \"borderTopColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"borderTopEndRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopEndRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderTopLeftRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopLeftRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderTopRightRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopRightRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderTopStartRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopStartRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderTopWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderTopWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"alignContent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"alignContent\", \"required\": false, \"type\": { \"name\": \"\\\"flex-start\\\" | \\\"flex-end\\\" | \\\"center\\\" | \\\"stretch\\\" | \\\"space-between\\\" | \\\"space-around\\\"\" } }, \"alignItems\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"alignItems\", \"required\": false, \"type\": { \"name\": \"FlexAlignType\" } }, \"alignSelf\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"alignSelf\", \"required\": false, \"type\": { \"name\": \"\\\"flex-start\\\" | \\\"flex-end\\\" | \\\"center\\\" | \\\"stretch\\\" | \\\"baseline\\\" | \\\"auto\\\"\" } }, \"aspectRatio\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"aspectRatio\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"borderEndWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderEndWidth\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"borderStartWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderStartWidth\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"bottom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"bottom\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"display\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"display\", \"required\": false, \"type\": { \"name\": \"\\\"flex\\\" | \\\"none\\\"\" } }, \"end\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"end\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"flex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"flexBasis\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flexBasis\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"flexDirection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flexDirection\", \"required\": false, \"type\": { \"name\": \"\\\"row\\\" | \\\"column\\\" | \\\"row-reverse\\\" | \\\"column-reverse\\\"\" } }, \"flexGrow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flexGrow\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"flexShrink\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flexShrink\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"flexWrap\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"flexWrap\", \"required\": false, \"type\": { \"name\": \"\\\"wrap\\\" | \\\"nowrap\\\" | \\\"wrap-reverse\\\"\" } }, \"height\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"justifyContent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"justifyContent\", \"required\": false, \"type\": { \"name\": \"\\\"flex-start\\\" | \\\"flex-end\\\" | \\\"center\\\" | \\\"space-between\\\" | \\\"space-around\\\" | \\\"space-evenly\\\"\" } }, \"left\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"left\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"margin\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"margin\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginBottom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginBottom\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginEnd\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginHorizontal\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginHorizontal\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginLeft\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginLeft\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginRight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginRight\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginStart\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginTop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginTop\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginVertical\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginVertical\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"maxHeight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"maxHeight\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"maxWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"maxWidth\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"minHeight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minHeight\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"minWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minWidth\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"overflow\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overflow\", \"required\": false, \"type\": { \"name\": \"\\\"visible\\\" | \\\"hidden\\\" | \\\"scroll\\\"\" } }, \"padding\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"padding\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingBottom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingBottom\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingEnd\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingHorizontal\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingHorizontal\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingLeft\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingLeft\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingRight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingRight\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingStart\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingTop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingTop\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingVertical\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingVertical\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"absolute\\\" | \\\"relative\\\"\" } }, \"right\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"right\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"start\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"start\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"top\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"top\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"width\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"width\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"zIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"zIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"direction\": { \"defaultValue\": null, \"description\": \"@platform ios\", \"name\": \"direction\", \"required\": false, \"type\": { \"name\": \"\\\"inherit\\\" | \\\"ltr\\\" | \\\"rtl\\\"\" } }, \"shadowColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shadowColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"shadowOffset\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shadowOffset\", \"required\": false, \"type\": { \"name\": \"{ width: number; height: number; }\" } }, \"shadowOpacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shadowOpacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"shadowRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shadowRadius\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"(PerpectiveTransform | RotateTransform | RotateXTransform | RotateYTransform | RotateZTransform | ScaleTransform | ScaleXTransform | ScaleYTransform | TranslateXTransform | TranslateYTransform | SkewXTransform | SkewYTransform)[]\" } }, \"transformMatrix\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transformMatrix\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"rotation\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rotation\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scaleX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"scaleX\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scaleY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"scaleY\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"translateX\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"translateX\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"translateY\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"translateY\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"gridPointMultiplier\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"gridPointMultiplier\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Layout/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Layout/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { TextColor } from '../../theme/ThemeInterface';\nimport ListItem, { ListItemProps } from './ListItem';\n\nexport interface BulletItemProps extends ListItemProps {\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n  iconColor?: TextColor;\n}\n\nconst BulletItem = (props: BulletItemProps) => {\n  const { icon, iconColor, ...listItemProps } = props;\n\n  return <ListItem mark={icon} {...listItemProps} />;\n};\n\nexport default BulletItem;\ntry {\n    // @ts-ignore\n    BulletItem.displayName = \"BulletItem\";\n    // @ts-ignore\n    BulletItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"BulletItem\", \"props\": { \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"iconColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"mark\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mark\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/BulletItem.tsx#BulletItem\"] = { docgenInfo: BulletItem.__docgenInfo, name: \"BulletItem\", path: \"src/components/Typography/BulletItem.tsx#BulletItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport Text, { TextProps } from './Text';\n\nexport interface CodeProps {\n  appearance?: 'default' | 'minimal';\n  theme: Theme;\n}\n\nconst CodeBase = (props: CodeProps & TextProps) => {\n  const { appearance, theme, ...textProps } = props;\n\n  const code = <Text fontFamily=\"mono\" {...textProps} />;\n\n  if (appearance === 'default') {\n    return (\n      <View\n        style={[\n          styles.default,\n          {\n            backgroundColor: theme.colors.background.tint2,\n          },\n        ]}\n      >\n        {code}\n      </View>\n    );\n  }\n\n  return code;\n};\n\nconst styles = StyleSheet.create({\n  default: {\n    borderRadius: 2,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    paddingTop: 3,\n  },\n});\n\nexport const Code = withTheme(CodeBase);\nexport default Code;\ntry {\n    // @ts-ignore\n    Code.displayName = \"Code\";\n    // @ts-ignore\n    Code.__docgenInfo = { \"description\": \"\", \"displayName\": \"Code\", \"props\": { \"appearance\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"minimal\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Code.tsx#Code\"] = { docgenInfo: Code.__docgenInfo, name: \"Code\", path: \"src/components/Typography/Code.tsx#Code\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"appearance\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"minimal\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Code.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Code.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle } from 'react-native';\n\nimport { TextColor, Theme } from '../../theme/ThemeInterface';\nimport { getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle; // h1\n  xxlarge: TextStyle; // h2\n  xlarge: TextStyle; // h3\n  large: TextStyle; // h4\n  medium: TextStyle; // h5\n  small: TextStyle; // h6\n}\n\nexport type HeadingSize = keyof HeadingSizes;\n\nexport interface HeadingVariables {\n  size: HeadingSizes;\n}\n\nexport const getHeadingVariables = (theme: Theme): HeadingVariables => {\n  return {\n    size: {\n      xxxlarge: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.xxxlarge,\n        fontWeight: '600',\n        letterSpacing: -0.2,\n        lineHeight: 40,\n      },\n\n      xxlarge: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.xxlarge,\n        fontWeight: '600',\n        letterSpacing: -0.2,\n        lineHeight: 32,\n      },\n\n      xlarge: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.xlarge,\n        fontWeight: '600',\n        letterSpacing: -0.07,\n        lineHeight: 28,\n      },\n\n      large: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.large,\n        fontWeight: '600',\n        letterSpacing: -0.07,\n        lineHeight: 24,\n      },\n\n      medium: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.medium,\n        fontWeight: '600',\n        letterSpacing: -0.05,\n        lineHeight: 20,\n      },\n\n      small: {\n        color: theme.colors.text.dark,\n        fontFamily: theme.fontFamilies.heading,\n        fontSize: theme.headingSizes.small,\n        fontWeight: '600',\n        letterSpacing: -0.05,\n        lineHeight: 20,\n      },\n    },\n  };\n};\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport interface HeadingStylesProps {\n  size: HeadingSize;\n  align: TextAlign;\n  color: TextColor;\n}\n\nexport type GetHeadingStyles = (\n  headingStylesProps: HeadingStylesProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size, align, color },\n  theme,\n) => {\n  const headingVariables = getHeadingVariables(theme);\n\n  return {\n    headingStyle: {\n      ...headingVariables.size[size],\n      color: getTextColor(theme.colors.text)(color),\n      textAlign: align,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getHeadingVariables.displayName = \"getHeadingVariables\";\n    // @ts-ignore\n    getHeadingVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getHeadingVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Heading.styles.ts#getHeadingVariables\"] = { docgenInfo: getHeadingVariables.__docgenInfo, name: \"getHeadingVariables\", path: \"src/components/Typography/Heading.styles.ts#getHeadingVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { HeadingSize, TextColor, Theme } from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  size?: HeadingSize;\n  theme: Theme;\n  align?: TextAlign;\n  color?: TextColor;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nconst HeadingBase = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    theme,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    getStyles,\n    ...textProps\n  } = props;\n\n  const { headingStyle } = mergeStyles(getHeadingStyles, getStyles)(\n    { size, align, color },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n\nexport const Heading = withTheme(HeadingBase);\nexport default Heading;\ntry {\n    // @ts-ignore\n    Heading.displayName = \"Heading\";\n    // @ts-ignore\n    Heading.__docgenInfo = { \"description\": \"\", \"displayName\": \"Heading\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"xxxlarge\\\" | \\\"xxlarge\\\" | \\\"xlarge\\\" | \\\"large\\\" | \\\"medium\\\" | \\\"small\\\"\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityLevel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"accessibilityLevel\", \"required\": false, \"type\": { \"name\": \"1 | 2 | 3 | 4 | 5 | 6\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Heading.tsx#Heading\"] = { docgenInfo: Heading.__docgenInfo, name: \"Heading\", path: \"src/components/Typography/Heading.tsx#Heading\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"xxxlarge\\\" | \\\"xxlarge\\\" | \\\"xlarge\\\" | \\\"large\\\" | \\\"medium\\\" | \\\"small\\\"\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityLevel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"accessibilityLevel\", \"required\": false, \"type\": { \"name\": \"1 | 2 | 3 | 4 | 5 | 6\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Heading.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Heading.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport withTheme from '../../theme/withTheme';\nimport Text, { TextProps } from './Text';\n\nconst LabelBase = (props: TextProps) => {\n  const { children, ...textProps } = props;\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport const Label = withTheme(LabelBase);\nexport default Label;\ntry {\n    // @ts-ignore\n    Label.displayName = \"Label\";\n    // @ts-ignore\n    Label.__docgenInfo = { \"description\": \"\", \"displayName\": \"Label\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Label.tsx#Label\"] = { docgenInfo: Label.__docgenInfo, name: \"Label\", path: \"src/components/Typography/Label.tsx#Label\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Label.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Label.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport withTheme from '../../theme/withTheme';\nimport Text, { TextProps } from './Text';\n\nconst LinkBase = (props: TextProps) => {\n  return <Text color=\"primary\" {...props} />;\n};\n\nexport const Link = withTheme(LinkBase);\nexport default Link;\ntry {\n    // @ts-ignore\n    Link.displayName = \"Link\";\n    // @ts-ignore\n    Link.__docgenInfo = { \"description\": \"\", \"displayName\": \"Link\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Link.tsx#Link\"] = { docgenInfo: Link.__docgenInfo, name: \"Link\", path: \"src/components/Typography/Link.tsx#Link\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Link.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Link.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Spacing } from '../Layout';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : null,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Spacing margin={0} marginLeft={1} padding={0}>\n        {finalChildren}\n      </Spacing>\n    </View>\n  );\n};\n\nexport default List;\ntry {\n    // @ts-ignore\n    List.displayName = \"List\";\n    // @ts-ignore\n    List.__docgenInfo = { \"description\": \"\", \"displayName\": \"List\", \"props\": { \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"listType\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listType\", \"required\": false, \"type\": { \"name\": \"\\\"ol\\\" | \\\"ul\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/List.tsx#List\"] = { docgenInfo: List.__docgenInfo, name: \"List\", path: \"src/components/Typography/List.tsx#List\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Spacing } from '../Layout';\nimport Text, { TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 3,\n  medium: 2,\n  small: 2,\n  xsmall: 1,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark: React.ReactNode;\n}\n\nconst ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft = paddingLeftMap[size] as 1 | 2 | 3;\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Spacing flexDirection=\"row\" alignItems=\"center\" marginVertical={1}>\n        <Spacing>{mark}</Spacing>\n        <Spacing width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Spacing>\n      </Spacing>\n    </View>\n  );\n};\n\nexport default ListItem;\ntry {\n    // @ts-ignore\n    ListItem.displayName = \"ListItem\";\n    // @ts-ignore\n    ListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"mark\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mark\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/ListItem.tsx#ListItem\"] = { docgenInfo: ListItem.__docgenInfo, name: \"ListItem\", path: \"src/components/Typography/ListItem.tsx#ListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport ListItem, { ListItemProps } from './ListItem';\nimport Text from './Text';\n\nexport interface NumberedItemProps extends ListItemProps {\n  index: number;\n  children: React.ReactNode;\n}\n\nconst NumberedItem = (props: NumberedItemProps) => {\n  const { index, ...listItemProps } = props;\n\n  return (\n    <ListItem\n      mark={\n        <Text size={listItemProps.size} {...listItemProps}>{`${index}.`}</Text>\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport default NumberedItem;\ntry {\n    // @ts-ignore\n    NumberedItem.displayName = \"NumberedItem\";\n    // @ts-ignore\n    NumberedItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"NumberedItem\", \"props\": { \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"mark\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mark\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/NumberedItem.tsx#NumberedItem\"] = { docgenInfo: NumberedItem.__docgenInfo, name: \"NumberedItem\", path: \"src/components/Typography/NumberedItem.tsx#NumberedItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport List from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface ListProps {\n  size?: TextSize;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nconst OrderedListBase = (props: ListProps) => {\n  return <List listType=\"ol\" {...props} />;\n};\n\nexport const OrderedList = withTheme(OrderedListBase);\nexport default OrderedList;\ntry {\n    // @ts-ignore\n    OrderedList.displayName = \"OrderedList\";\n    // @ts-ignore\n    OrderedList.__docgenInfo = { \"description\": \"\", \"displayName\": \"OrderedList\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/OrderedList.tsx#OrderedList\"] = { docgenInfo: OrderedList.__docgenInfo, name: \"OrderedList\", path: \"src/components/Typography/OrderedList.tsx#OrderedList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/OrderedList.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/OrderedList.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  PresetTextColors,\n  TextColor,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { getFontFamily, getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type ParagraphSize = keyof ParagraphSizes;\n\nexport interface ParagraphVariables {\n  color: PresetTextColors;\n  size: ParagraphSizes;\n  fontFamily: FontFamilies;\n}\n\nexport const getParagraphVariables = (theme: Theme): ParagraphVariables => {\n  return {\n    color: theme.colors.text,\n    fontFamily: theme.fontFamilies,\n    size: {\n      small: {\n        fontSize: theme.paragraphSizes.small,\n        lineHeight: 24,\n        marginBottom: '1em',\n        marginTop: '1em',\n      },\n\n      medium: {\n        fontSize: theme.paragraphSizes.medium,\n        lineHeight: 21,\n        marginBottom: '1em',\n        marginTop: '1em',\n      },\n\n      large: {\n        fontSize: theme.paragraphSizes.large,\n        lineHeight: 18,\n        marginBottom: '1em',\n        marginTop: '1em',\n      },\n    },\n  };\n};\n\nexport interface ParagraphStylesProps {\n  align: TextAlign;\n  size: ParagraphSize;\n  color: TextColor;\n  fontFamily: FontFamily;\n  weight: FontWeight;\n}\n\nexport interface ParagraphStyles {\n  paragraphStyle: TextStyle;\n}\n\nexport type GetParagraphStyles = (\n  paragraphStylesProps: ParagraphStylesProps,\n  theme: Theme,\n) => ParagraphStyles;\n\nexport const getParagraphStyles: GetParagraphStyles = (\n  { size, color, fontFamily, align, weight },\n  theme,\n) => {\n  const paragraphVariables = getParagraphVariables(theme);\n\n  return {\n    paragraphStyle: {\n      ...paragraphVariables.size[size],\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(paragraphVariables.fontFamily)(fontFamily),\n      fontWeight: getFontWeight(theme.fontWeights)(weight),\n      textAlign: align,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getParagraphVariables.displayName = \"getParagraphVariables\";\n    // @ts-ignore\n    getParagraphVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getParagraphVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Paragraph.styles.ts#getParagraphVariables\"] = { docgenInfo: getParagraphVariables.__docgenInfo, name: \"getParagraphVariables\", path: \"src/components/Typography/Paragraph.styles.ts#getParagraphVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport {\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  TextColor,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetParagraphStyles,\n  getParagraphStyles,\n  ParagraphStyles,\n} from './Paragraph.styles';\nimport { TextAlign } from './types';\n\n// @ts-ignore: need to override for web purposes\nexport interface ParagraphProps extends TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: ParagraphSize;\n  weight?: FontWeight;\n  theme: Theme;\n  align?: TextAlign;\n  fontFamily?: FontFamily;\n\n  getStyles?: ReplaceReturnType<\n    GetParagraphStyles,\n    DeepPartial<ParagraphStyles>\n  >;\n}\n\nconst ParagraphBase = (props: ParagraphProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight = 'normal',\n    theme,\n    getStyles,\n    ...textProps\n  } = props;\n\n  const { paragraphStyle } = mergeStyles(getParagraphStyles, getStyles)(\n    { align, size, color, fontFamily, weight },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      style={paragraphStyle}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n\nexport const Paragraph = withTheme(ParagraphBase);\nexport default Paragraph;\ntry {\n    // @ts-ignore\n    Paragraph.displayName = \"Paragraph\";\n    // @ts-ignore\n    Paragraph.__docgenInfo = { \"description\": \"\", \"displayName\": \"Paragraph\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"heading\\\" | \\\"mono\\\" | \\\"text\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetParagraphStyles, DeepPartial<ParagraphStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Paragraph.tsx#Paragraph\"] = { docgenInfo: Paragraph.__docgenInfo, name: \"Paragraph\", path: \"src/components/Typography/Paragraph.tsx#Paragraph\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"heading\\\" | \\\"mono\\\" | \\\"text\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetParagraphStyles, DeepPartial<ParagraphStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Paragraph.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Paragraph.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  PresetTextColors,\n  RNFontWeight,\n  TextColor,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type TextSize = keyof TextSizes;\n\nexport interface TextVariables {\n  size: TextSizes;\n  fontFamily: FontFamilies;\n}\n\nexport const getTextVariables = (theme: Theme): TextVariables => {\n  return {\n    size: {\n      large: {\n        fontSize: theme.textSizes.large,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium,\n      },\n\n      small: {\n        fontSize: theme.textSizes.small,\n      },\n    },\n\n    fontFamily: theme.fontFamilies,\n  };\n};\n\nexport interface TextStylesProps {\n  isBold: boolean;\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight: FontWeight,\n): RNFontWeight => {\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: PresetTextColors) => (\n  textColor: TextColor,\n) => {\n  const presetColor = textColors[textColor];\n\n  return presetColor || textColor;\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    size,\n    color,\n    fontFamily,\n    isInline,\n    isBold,\n    isItalic,\n    align,\n    transform,\n    weight,\n  },\n  theme,\n) => {\n  const textVariables = getTextVariables(theme);\n\n  return {\n    textStyle: {\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(textVariables.fontFamily)(fontFamily),\n      fontWeight: getFontWeight(theme.fontWeights)(weight),\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...textVariables.size[size],\n      ...(isBold && {\n        fontWeight: '600',\n      }),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getTextVariables.displayName = \"getTextVariables\";\n    // @ts-ignore\n    getTextVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getTextVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.styles.ts#getTextVariables\"] = { docgenInfo: getTextVariables.__docgenInfo, name: \"getTextVariables\", path: \"src/components/Typography/Text.styles.ts#getTextVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getFontFamily.displayName = \"getFontFamily\";\n    // @ts-ignore\n    getFontFamily.__docgenInfo = { \"description\": \"\", \"displayName\": \"getFontFamily\", \"props\": { \"heading\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"heading\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"mono\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mono\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.styles.ts#getFontFamily\"] = { docgenInfo: getFontFamily.__docgenInfo, name: \"getFontFamily\", path: \"src/components/Typography/Text.styles.ts#getFontFamily\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getFontWeight.displayName = \"getFontWeight\";\n    // @ts-ignore\n    getFontWeight.__docgenInfo = { \"description\": \"\", \"displayName\": \"getFontWeight\", \"props\": { \"light\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"light\", \"required\": false, \"type\": { \"name\": \"RNFontWeight\" } }, \"normal\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"normal\", \"required\": false, \"type\": { \"name\": \"RNFontWeight\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"bold\", \"required\": false, \"type\": { \"name\": \"RNFontWeight\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.styles.ts#getFontWeight\"] = { docgenInfo: getFontWeight.__docgenInfo, name: \"getFontWeight\", path: \"src/components/Typography/Text.styles.ts#getFontWeight\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getTextColor.displayName = \"getTextColor\";\n    // @ts-ignore\n    getTextColor.__docgenInfo = { \"description\": \"\", \"displayName\": \"getTextColor\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.styles.ts#getTextColor\"] = { docgenInfo: getTextColor.__docgenInfo, name: \"getTextColor\", path: \"src/components/Typography/Text.styles.ts#getTextColor\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport {\n  FontFamily,\n  FontWeight,\n  TextColor,\n  TextSize,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isBold?: boolean;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n  theme: Theme;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nconst TextBase = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight = 'normal',\n    isInline = false,\n    theme,\n    getStyles,\n    isBold = false,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n\n  const { textStyle } = mergeStyles(getTextStyles, getStyles)(\n    {\n      align,\n      color,\n      fontFamily,\n      isBold,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n\nexport const Text = withTheme(TextBase);\nexport default Text;\ntry {\n    // @ts-ignore\n    Text.displayName = \"Text\";\n    // @ts-ignore\n    Text.__docgenInfo = { \"description\": \"\", \"displayName\": \"Text\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.tsx#Text\"] = { docgenInfo: Text.__docgenInfo, name: \"Text\", path: \"src/components/Typography/Text.tsx#Text\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/Text.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/Text.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport withTheme from '../../theme/withTheme';\nimport List from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface ListProps {\n  size?: TextSize;\n  icon?: React.ReactNode;\n  iconColor?: TextColor;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nconst UnorderedListBase = (props: ListProps) => {\n  return <List listType=\"ul\" {...props} />;\n};\n\nexport const UnorderedList = withTheme(UnorderedListBase);\nexport default UnorderedList;\ntry {\n    // @ts-ignore\n    UnorderedList.displayName = \"UnorderedList\";\n    // @ts-ignore\n    UnorderedList.__docgenInfo = { \"description\": \"\", \"displayName\": \"UnorderedList\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"iconColor\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/UnorderedList.tsx#UnorderedList\"] = { docgenInfo: UnorderedList.__docgenInfo, name: \"UnorderedList\", path: \"src/components/Typography/UnorderedList.tsx#UnorderedList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"iconColor\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/UnorderedList.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/UnorderedList.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Code } from './Code';\nexport { default as Heading, HeadingProps } from './Heading';\nexport { default as Label } from './Label';\nexport { default as Link } from './Link';\nexport {\n  default as OrderedList,\n  ListProps as IOrderedListProps,\n} from './OrderedList';\nexport { default as Paragraph, ParagraphProps } from './Paragraph';\nexport { default as BulletItem } from './BulletItem';\nexport { default as NumberedItem } from './NumberedItem';\nexport { default as Text, TextProps } from './Text';\nexport {\n  default as UnorderedList,\n  ListProps as IUnorderedListProps,\n} from './UnorderedList';\ntry {\n    // @ts-ignore\n    Typography.displayName = \"Typography\";\n    // @ts-ignore\n    Typography.__docgenInfo = { \"description\": \"\", \"displayName\": \"Typography\", \"props\": { \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"mark\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mark\", \"required\": true, \"type\": { \"name\": \"ReactNode\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"align\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"align\", \"required\": false, \"type\": { \"name\": \"TextAlign\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"TextTransform\" } }, \"fontFamily\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamily\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"heading\\\" | \\\"mono\\\"\" } }, \"weight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"weight\", \"required\": false, \"type\": { \"name\": \"FontWeight\" } }, \"isBold\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBold\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isItalic\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isItalic\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/index.ts#Typography\"] = { docgenInfo: Typography.__docgenInfo, name: \"Typography\", path: \"src/components/Typography/index.ts#Typography\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"iconColor\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Typography/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Typography/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}