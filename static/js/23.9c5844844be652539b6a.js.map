{"version":3,"sources":["webpack:///./src/components/Layout/Spacing.tsx","webpack:///./src/components/Layout/index.ts","webpack:///./src/components/Switch/Switch.mdx","webpack:///./src/components/Switch/Switch.styles.ts","webpack:///./src/components/Switch/Switch.tsx","webpack:///./src/components/Switch/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts","webpack:///./src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_Box","hasGrid","height","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","Spacing","props","marshalledProps","_objectSpread2","default","prop","gridPointMultiplier","createElement","Box","displayName","__docgenInfo","description","defaultValue","name","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Spacing","_react","_interopRequireDefault","_tag","_docz","_reactPowerplug","_","_Layout","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","MDXTag","id","Playground","__position","__code","__scope","Toggle","Switch","initial","_ref","on","toggle","isSwitchedOn","onChange","isDisabled","onIcon","offIcon","duration","getStyles","theme","circleStyle","containerStyle","backgroundColorOff","backgroundColorOn","circleColorOff","circleColorOn","PropsTable","of","Component","getSwitchVariables","colors","background","greyDefault","primaryDefault","white","circle","alignItems","backgroundColor","borderRadius","display","justifyContent","width","container","greyLight","flexDirection","getSwitchStyles","switchVariables","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","_reactNative","_icons","_theme","_mergeStyles3","_Switch","SwitchBase","handleOnPress","e","runAnimation","animValue","fromValue","toValue","Animated","timing","state","animXValue","start","_mergeStyles","mergeStyles","endPosition","Value","circlePosXEnd","circlePosXStart","newProps","_this$props2","testID","accessibilityProps","_this$state","_mergeStyles2","TouchableOpacity","_extends2","accessible","accessibilityLabel","onPress","activeOpacity","style","alignSelf","flexWrap","View","interpolate","inputRange","outputRange","transform","translateX","Icon","size","color","text","primary","defaultProps","withTheme","value","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles","apply","arguments"],"mappings":"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","file":"static/js/23.fc9d141f.js","sourcesContent":["import * as React from 'react';\n\nimport { Box, BoxProps } from './Box';\n\nexport type GridScale =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18;\n\nconst DEFAULT_GRD_POINT_MULTPLIER = 8;\n\nexport interface SpacingProps extends BoxProps {\n  gridPointMultiplier?: number;\n  height?: GridScale;\n\n  margin?: GridScale;\n  marginBottom?: GridScale;\n  marginEnd?: GridScale;\n  marginHorizontal?: GridScale;\n  marginLeft?: GridScale;\n  marginRight?: GridScale;\n  marginStart?: GridScale;\n  marginTop?: GridScale;\n  marginVertical?: GridScale;\n\n  padding?: GridScale;\n  paddingBottom?: GridScale;\n  paddingEnd?: GridScale;\n  paddingHorizontal?: GridScale;\n  paddingLeft?: GridScale;\n  paddingRight?: GridScale;\n  paddingStart?: GridScale;\n  paddingTop?: GridScale;\n  paddingVertical?: GridScale;\n}\n\nconst hasGrid = {\n  height: true,\n\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n};\n\nexport const Spacing = (props: SpacingProps) => {\n  const marshalledProps = { ...props };\n\n  for (const prop in props) {\n    // @ts-ignore\n    if (hasGrid[prop]) {\n      // @ts-ignore\n      marshalledProps[prop] =\n        // @ts-ignore\n        props[prop] *\n        (props.gridPointMultiplier || DEFAULT_GRD_POINT_MULTPLIER);\n    }\n  }\n\n  return <Box {...marshalledProps} />;\n};\ntry {\n    // @ts-ignore\n    Spacing.displayName = \"Spacing\";\n    // @ts-ignore\n    Spacing.__docgenInfo = { \"description\": \"\", \"displayName\": \"Spacing\", \"props\": { \"gridPointMultiplier\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"gridPointMultiplier\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"height\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"height\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"margin\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"margin\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginBottom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginBottom\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginEnd\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginHorizontal\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginHorizontal\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginLeft\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginLeft\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginRight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginRight\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginStart\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginTop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginTop\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"marginVertical\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"marginVertical\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"padding\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"padding\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingBottom\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingBottom\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingEnd\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingHorizontal\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingHorizontal\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingLeft\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingLeft\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingRight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingRight\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingStart\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingTop\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingTop\", \"required\": false, \"type\": { \"name\": \"GridScale\" } }, \"paddingVertical\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paddingVertical\", \"required\": false, \"type\": { \"name\": \"GridScale\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Layout/Spacing.tsx#Spacing\"] = { docgenInfo: Spacing.__docgenInfo, name: \"Spacing\", path: \"src/components/Layout/Spacing.tsx#Spacing\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Box';\nexport * from './Spacing';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { Switch } from '.';\nimport { Box } from '../Layout';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"switch\"}}>{`Switch`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Box>\\n  <Toggle initial={true}>\\n    {({ on, toggle }) => (\\n      <Switch\\n        isSwitchedOn={on}\\n        onChange={toggle}\\n        isDisabled={false}\\n        onIcon={null}\\n        offIcon={null}\\n        duration={300}\\n        getStyles={(props, theme) => ({\\n          circleStyle: {},\\n          containerStyle: {},\\n          backgroundColorOff: \\'#F5F6F7\\',\\n          backgroundColorOn: \\'#67c6bb\\',\\n          circleColorOff: \\'white\\',\\n          circleColorOn: \\'white\\',\\n        })}\\n      />\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{props: this ? this.props : props,Toggle,Switch,Box}}>\n  <Box>\n    <Toggle initial={true}>\n      {({ on, toggle }) => (\n        <Switch\n          isSwitchedOn={on}\n          onChange={toggle}\n          isDisabled={false}\n          onIcon={null}\n          offIcon={null}\n          duration={300}\n          getStyles={(props, theme) => ({\n            circleStyle: {},\n            containerStyle: {},\n            backgroundColorOff: '#F5F6F7',\n            backgroundColorOn: '#67c6bb',\n            circleColorOff: 'white',\n            circleColorOn: 'white',\n          })}\n        />\n      )}\n    </Toggle>\n  </Box>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Switch} />\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface SwitchVariables {\n  backgroundColorOff: string;\n  backgroundColorOn: string;\n  circleColorOff: string;\n  circleColorOn: string;\n\n  container: ViewStyle & SwitchStylesRequired;\n  circle: ViewStyle & SwitchStylesRequired;\n}\n\nexport const getSwitchVariables = (theme: Theme): SwitchVariables => {\n  return {\n    backgroundColorOff: theme.colors.background.greyDefault,\n    backgroundColorOn: theme.colors.background.primaryDefault,\n    circleColorOff: theme.colors.background.white,\n    circleColorOn: theme.colors.background.white,\n\n    circle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.white,\n      borderRadius: 24,\n      display: 'flex',\n      height: 38,\n      justifyContent: 'center',\n      padding: 0,\n      width: 38,\n    },\n\n    container: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.greyLight,\n      borderRadius: 24,\n      flexDirection: 'row',\n      height: 44,\n      padding: 3,\n      width: 72,\n    },\n  };\n};\n\nexport interface SwitchStylesRequired {\n  width: number;\n  padding: number;\n}\n\nexport interface SwitchStyles {\n  containerStyle: ViewStyle & SwitchStylesRequired;\n  circleStyle: ViewStyle & SwitchStylesRequired;\n  backgroundColorOff: string;\n  backgroundColorOn: string;\n  circleColorOff: string;\n  circleColorOn: string;\n}\nexport type GetSwitchStyles = (theme: Theme) => SwitchStyles;\n\nexport const getSwitchStyles: GetSwitchStyles = (theme: Theme) => {\n  const switchVariables = getSwitchVariables(theme);\n\n  return {\n    backgroundColorOff: switchVariables.backgroundColorOff,\n    backgroundColorOn: switchVariables.backgroundColorOn,\n    circleColorOff: switchVariables.circleColorOff,\n    circleColorOn: switchVariables.circleColorOn,\n    circleStyle: switchVariables.circle,\n    containerStyle: switchVariables.container,\n  };\n};\ntry {\n    // @ts-ignore\n    getSwitchVariables.displayName = \"getSwitchVariables\";\n    // @ts-ignore\n    getSwitchVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSwitchVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Switch/Switch.styles.ts#getSwitchVariables\"] = { docgenInfo: getSwitchVariables.__docgenInfo, name: \"getSwitchVariables\", path: \"src/components/Switch/Switch.styles.ts#getSwitchVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getSwitchStyles.displayName = \"getSwitchStyles\";\n    // @ts-ignore\n    getSwitchStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSwitchStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Switch/Switch.styles.ts#getSwitchStyles\"] = { docgenInfo: getSwitchStyles.__docgenInfo, name: \"getSwitchStyles\", path: \"src/components/Switch/Switch.styles.ts#getSwitchStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  Animated,\n  GestureResponderEvent,\n  TouchableOpacity,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetSwitchStyles,\n  getSwitchStyles,\n  SwitchStyles,\n} from './Switch.styles';\n\n/* Copy pasted from https://github.com/react-native-seoul/react-native-switch-toggle */\nexport interface SwitchProps extends AccessibilityProps {\n  isSwitchedOn?: boolean;\n  isDisabled?: boolean;\n  onChange?: (event: GestureResponderEvent) => void;\n  onIcon?: React.ReactNode;\n  offIcon?: React.ReactNode;\n  duration?: number;\n  theme: Theme;\n  testID?: string;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetSwitchStyles, DeepPartial<SwitchStyles>>;\n}\n\nexport interface SwitchState {\n  animXValue: Animated.Value;\n  circlePosXEnd: number;\n  circlePosXStart: number;\n}\n\nexport class SwitchBase extends React.Component<SwitchProps, SwitchState> {\n  public static defaultProps = {\n    backgroundColorOff: 'rgb(215,215,215)',\n    backgroundColorOn: 'rgb(227,227,227)',\n    circleColorOff: 'white',\n    circleColorOn: 'rgb(102,134,205)',\n    duration: 300,\n\n    circleStyle: {\n      backgroundColor: 'white',\n      borderRadius: 15,\n      height: 30,\n      width: 30,\n    },\n    containerStyle: {\n      backgroundColor: 'rgb(227,227,227)',\n      borderRadius: 18,\n      height: 36,\n      padding: 3,\n      width: 72,\n    },\n    isSwitchedOn: false,\n    onChange: () => null,\n  };\n\n  constructor(props: SwitchProps) {\n    super(props);\n    const { theme, getStyles } = props;\n    const { circleStyle, containerStyle } = mergeStyles(\n      getSwitchStyles,\n      getStyles,\n    )(theme);\n\n    const endPosition =\n      containerStyle.width - (circleStyle.width + containerStyle.padding * 2);\n\n    this.state = {\n      animXValue: new Animated.Value(props.isSwitchedOn ? 1 : 0),\n      circlePosXEnd: endPosition,\n      circlePosXStart: 0,\n    };\n  }\n\n  // TODO: When converting to hooks, we can use the follow API:\n  // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n  public componentWillReceiveProps(newProps: SwitchProps) {\n    if (newProps.isSwitchedOn !== this.props.isSwitchedOn) {\n      this.runAnimation();\n    }\n  }\n\n  public handleOnPress = (e: GestureResponderEvent) => {\n    const { onChange } = this.props;\n    this.runAnimation();\n\n    if (onChange) onChange(e);\n  };\n\n  public runAnimation = () => {\n    const { duration, isSwitchedOn } = this.props;\n\n    const animValue = {\n      duration,\n      fromValue: isSwitchedOn ? 1 : 0,\n      toValue: isSwitchedOn ? 0 : 1,\n    };\n\n    Animated.timing(this.state.animXValue, animValue).start();\n  };\n\n  public render() {\n    const {\n      onIcon,\n      offIcon,\n      theme,\n      isSwitchedOn,\n      getStyles,\n      testID,\n      ...accessibilityProps\n    } = this.props;\n    const { animXValue, circlePosXStart, circlePosXEnd } = this.state;\n\n    const {\n      circleStyle,\n      containerStyle,\n      backgroundColorOff,\n      backgroundColorOn,\n      circleColorOff,\n      circleColorOn,\n    } = mergeStyles(getSwitchStyles, getStyles)(theme);\n\n    return (\n      <TouchableOpacity\n        accessible\n        accessibilityLabel=\"switch\"\n        onPress={this.handleOnPress}\n        activeOpacity={1}\n        style={{\n          alignSelf: 'flex-start',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n        }}\n        testID={testID}\n        {...accessibilityProps}\n      >\n        <Animated.View\n          style={[\n            containerStyle,\n            {\n              backgroundColor: animXValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [backgroundColorOff, backgroundColorOn],\n              }),\n            },\n          ]}\n        >\n          <Animated.View\n            style={[\n              circleStyle,\n              {\n                backgroundColor: animXValue.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [circleColorOff, circleColorOn],\n                }),\n              },\n              {\n                transform: [\n                  {\n                    translateX: animXValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [circlePosXStart, circlePosXEnd],\n                    }),\n                  },\n                ],\n              },\n            ]}\n          >\n            {isSwitchedOn\n              ? onIcon || (\n                  <Icon\n                    name=\"check\"\n                    size={20}\n                    color={theme.colors.text.primary}\n                  />\n                )\n              : offIcon || (\n                  <Icon name=\"x\" size={20} color={theme.colors.text.default} />\n                )}\n          </Animated.View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport const Switch = withTheme(SwitchBase);\ntry {\n    // @ts-ignore\n    SwitchBase.displayName = \"SwitchBase\";\n    // @ts-ignore\n    SwitchBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"SwitchBase\", \"props\": { \"isSwitchedOn\": { \"defaultValue\": { value: \"false\" }, \"description\": \"\", \"name\": \"isSwitchedOn\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"offIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"offIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": true, \"type\": { \"name\": \"Theme\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetSwitchStyles, DeepPartial<SwitchStyles>>\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"text\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Switch/Switch.tsx#SwitchBase\"] = { docgenInfo: SwitchBase.__docgenInfo, name: \"SwitchBase\", path: \"src/components/Switch/Switch.tsx#SwitchBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Switch';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}