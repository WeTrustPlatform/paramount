{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Collapsible/Collapsible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Collapsible/Collapsible.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Collapsible/Collapsible.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Collapsible","Text","Toggle","___WEBPACK_IMPORTED_MODULE_8__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_6__","title","header","undefined","initialIsOpen","isOpen","onOpen","onClose","getStyles","touchableStyle","outerWrapperStyle","contentWrapperStyle","textStyle","iconWrapperStyle","___WEBPACK_IMPORTED_MODULE_5__","marginVertical","justifyContent","alignItems","height","___WEBPACK_IMPORTED_MODULE_7__","of","isMDXComponent","getCollapsibleStyles","overflow","paddingLeft","display","flexDirection","AnimatedView","animated","View","_props$isAnimated","isAnimated","_props$shouldMoveWith","shouldMoveWithEndOfContent","_props$initialIsOpen","_props$onOpen","_props$onClose","accessibilityProps","objectWithoutProperties","_React$useState","React","_React$useState2","slicedToArray","isOpened","setIsOpened","_React$useState3","initialMeasurements","_React$useState4","contentMeasurements","setContentMeasurements","isControlledUsage","isFinalOpened","_mergeStyles","mergeStyles","handlePress","useSpring","config","springDefaultConfig","headerToggle","react","TouchableOpacity","esm_extends","onPress","size","Icon_web","name","text","contentWrapper","objectSpread","ViewMeasure","onMeasure","_props$initial","useState","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","isRenderProp","ref","_useMeasure","useMeasure","measurements","onLayout","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","Icon","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","_props$isItalic","textProps","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","d","__webpack_exports__","friction","tension","pageX","pageY","width","x","y","adjustPageY","Platform","OS","window","scrollY","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/5.5a6f4cc0.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Collapsible, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"collapsible\"\n    }}>{`Collapsible`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Collapsible\\n      title=\\\"Stays at top of content\\\"\\n      header={undefined}\\n      initialIsOpen={false}\\n      isOpen={on}\\n      onOpen={toggle}\\n      onClose={toggle}\\n      getStyles={() => ({\\n        touchableStyle: {},\\n        outerWrapperStyle: {},\\n        contentWrapperStyle: {},\\n        textStyle: {},\\n        iconWrapperStyle: {},\\n      })}\\n    >\\n      <Box\\n        marginVertical={16}\\n        justifyContent=\\\"center\\\"\\n        alignItems=\\\"center\\\"\\n        height={300}\\n        backgroundColor=\\\"#67c6bb\\\"\\n      >\\n        <Text color=\\\"white\\\">Content of the Collapsible</Text>\\n      </Box>\\n    </Collapsible>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Collapsible,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Collapsible title=\"Stays at top of content\" header={undefined} initialIsOpen={false} isOpen={on} onOpen={toggle} onClose={toggle} getStyles={() => ({\n          touchableStyle: {},\n          outerWrapperStyle: {},\n          contentWrapperStyle: {},\n          textStyle: {},\n          iconWrapperStyle: {}\n        })} mdxType=\"Collapsible\">\n        <Box marginVertical={16} justifyContent=\"center\" alignItems=\"center\" height={300} backgroundColor=\"#67c6bb\" mdxType=\"Box\">\n          <Text color=\"white\" mdxType=\"Text\">Content of the Collapsible</Text>\n        </Box>\n      </Collapsible>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Collapsible} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface CollapsibleStyles {\n  touchableStyle: ViewStyle;\n  outerWrapperStyle: ViewStyle;\n  contentWrapperStyle: ViewStyle;\n  textStyle: ViewStyle;\n  iconWrapperStyle: ViewStyle;\n}\n\nexport type GetCollapsibleStyles = (\n  checkboxStylesProps: {},\n  theme: Theme,\n) => CollapsibleStyles;\n\nexport const getCollapsibleStyles: GetCollapsibleStyles = (props, theme) => {\n  return {\n    contentWrapperStyle: {\n      overflow: 'hidden',\n    },\n    iconWrapperStyle: {\n      paddingLeft: 4,\n    },\n    outerWrapperStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    textStyle: {},\n    touchableStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { AccessibilityProps, TouchableOpacity, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { initialMeasurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CollapsibleStyles,\n  GetCollapsibleStyles,\n  getCollapsibleStyles,\n} from './Collapsible.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface CollapsibleProps extends AccessibilityProps {\n  /** Web: Adds animation when revealing the content @default true */\n  isAnimated?: boolean;\n  /** Web: The header will move to the end of the content when revealing content @default false */\n  shouldMoveWithEndOfContent?: boolean;\n  children?: React.ReactNode;\n  /** Uncontrolled usage of the component */\n  initialIsOpen?: boolean;\n  /** Controlled usage of the component */\n  isOpen?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n  getStyles?: ReplaceReturnType<\n    GetCollapsibleStyles,\n    DeepPartial<CollapsibleStyles>\n  >;\n  title?: string;\n  /** Override the title and header of the Collapsible */\n  header?: React.ReactNode;\n  testID?: string;\n}\n\nexport const Collapsible = (props: CollapsibleProps) => {\n  const {\n    isAnimated = false,\n    shouldMoveWithEndOfContent = false,\n    title,\n    children,\n    header,\n    initialIsOpen = false,\n    isOpen,\n    getStyles,\n    testID,\n    onOpen = () => undefined,\n    onClose = () => undefined,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n  const [isOpened, setIsOpened] = React.useState(initialIsOpen);\n  const [contentMeasurements, setContentMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const isControlledUsage = typeof isOpen === 'boolean';\n  const isFinalOpened = isControlledUsage ? isOpen : isOpened;\n\n  const {\n    touchableStyle,\n    outerWrapperStyle,\n    contentWrapperStyle,\n    textStyle,\n    iconWrapperStyle,\n  } = mergeStyles(\n    getCollapsibleStyles,\n    getStyles,\n    theme.components.getCollapsibleStyles,\n  )({}, theme);\n\n  const handlePress = React.useCallback(() => {\n    if (isControlledUsage) {\n      if (isOpen) {\n        onClose();\n      } else {\n        onOpen();\n      }\n    } else {\n      if (isOpened) {\n        setIsOpened(false);\n        onClose();\n      } else {\n        setIsOpened(true);\n        onOpen();\n      }\n    }\n  }, [isOpened, isOpen, isControlledUsage]);\n\n  const { height } = useSpring({\n    config: springDefaultConfig,\n\n    height: isFinalOpened ? contentMeasurements.height : 0,\n  });\n\n  const headerToggle = (\n    <TouchableOpacity\n      testID={testID}\n      onPress={handlePress}\n      style={touchableStyle}\n      {...accessibilityProps}\n    >\n      <View style={outerWrapperStyle}>\n        {header || (\n          <>\n            <Text size=\"large\" getStyles={() => ({ textStyle })}>\n              {title}\n            </Text>\n            <View style={iconWrapperStyle}>\n              <Icon\n                size={28}\n                name={isFinalOpened ? 'chevron-up' : 'chevron-down'}\n                color={theme.colors.text.default}\n              />\n            </View>\n          </>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n\n  const contentWrapper = isAnimated ? (\n    // @ts-ignore\n    <AnimatedView style={{ ...contentWrapperStyle, height }}>\n      <ViewMeasure onMeasure={setContentMeasurements}>{children}</ViewMeasure>\n    </AnimatedView>\n  ) : (\n    <View style={contentWrapperStyle}>{isFinalOpened && children}</View>\n  );\n\n  if (shouldMoveWithEndOfContent) {\n    return (\n      <>\n        {contentWrapper}\n        {headerToggle}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {headerToggle}\n      {contentWrapper}\n    </>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}