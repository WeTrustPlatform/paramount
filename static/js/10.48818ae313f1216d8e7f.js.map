{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","defaultProps","Counter","_props$value","value","_props$step","step","max","min","_props$onValueChange","onValueChange","_props$overrides","overrides","isDecrementDisabled","isIncrementDisabled","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledTouchable","Touchable","_getOverrides4","touchableProps","_getOverrides5","StyledCount","Count","_getOverrides6","countProps","_getOverrides7","StyledIconPlus","IconPlus","_getOverrides8","iconPlusProps","_getOverrides9","StyledIconMinus","IconMinus","_getOverrides10","iconMinusProps","handleIncrement","React","handleDecrement","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_jsxFileName","isDisabled","onPress","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","display","flexDirection","alignItems","_props$value2","textProps","_Typography__WEBPACK_IMPORTED_MODULE_11__","align","paddingHorizontal","minWidth","_props$isDisabled","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","border","primary","borderRadius","borderWidth","height","justifyContent","width","disabled","undefined","StyledIcon","_props$isDisabled2","name","iconProps","_Icon__WEBPACK_IMPORTED_MODULE_10__","size","text","muted","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","ProgressBar","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","percent","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","AnimatedView","animated","View","_props$percent","_props$size","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","StyledProgress","Progress","progressProps","react__WEBPACK_IMPORTED_MODULE_4__","_props$size2","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","greyDefault","overflow","_props$percent2","boundPercent","Math","useSpring","config","springDefaultConfig","from","accessibilityRole","Platform","OS","primaryDefault","interpolate","w","concat","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/10.4b708fd7.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon, IconProps } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\ninterface CounterBaseProps {\n  /**\n   * Count to be displayed.\n   */\n  value?: number;\n\n  /**\n   * Minimum value for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum value for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Interval between counts\n   */\n  step?: number;\n\n  /**\n   * Called when either buttons are pressed.\n   */\n  onValueChange?: (value: number) => void;\n}\n\nexport interface CounterOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Count: CountProps;\n  IconPlus: CounterIconProps;\n  IconMinus: CounterIconProps;\n}\n\nexport interface CounterProps\n  extends WithOverrides<CounterBaseProps, CounterOverrides> {}\n\nconst defaultProps = {\n  value: 0,\n  step: 1,\n};\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    value = defaultProps.value,\n    step = defaultProps.step,\n    max,\n    min,\n    onValueChange = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const isDecrementDisabled = min === value;\n  const isIncrementDisabled = max === value;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Counter.Root'),\n    overrides.Root,\n  );\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Counter.Touchable'),\n    overrides.Touchable,\n  );\n  const [Count, countProps] = getOverrides(\n    StyledCount,\n    props,\n    dlv(theme, 'overrides.Counter.Count'),\n    overrides.Count,\n  );\n  const [IconPlus, iconPlusProps] = getOverrides(\n    StyledIconPlus,\n    props,\n    dlv(theme, 'overrides.Counter.IconPlus'),\n    overrides.IconPlus,\n  );\n  const [IconMinus, iconMinusProps] = getOverrides(\n    StyledIconMinus,\n    props,\n    dlv(theme, 'overrides.Counter.IconMinus'),\n    overrides.IconMinus,\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    onValueChange(value + step);\n  }, [value]);\n\n  const handleDecrement = React.useCallback(() => {\n    onValueChange(value - step);\n  }, [value]);\n\n  return (\n    <Root {...rootProps}>\n      <Touchable\n        isDisabled={isDecrementDisabled}\n        onPress={handleDecrement}\n        {...touchableProps}\n      >\n        <IconMinus isDisabled={isDecrementDisabled} {...iconMinusProps} />\n      </Touchable>\n      <Count value={value} {...countProps} />\n      <Touchable\n        isDisabled={isIncrementDisabled}\n        onPress={handleIncrement}\n        {...touchableProps}\n      >\n        <IconPlus isDisabled={isIncrementDisabled} {...iconPlusProps} />\n      </Touchable>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface CountProps extends TextProps {\n  value?: number;\n}\n\nconst StyledCount = (props: CountProps) => {\n  const { value = defaultProps.value, style, ...textProps } = props;\n\n  return (\n    <Text\n      align=\"center\"\n      style={[{ paddingHorizontal: 16, minWidth: 56 }, style]}\n      {...textProps}\n    >\n      {value}\n    </Text>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  isDisabled?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    children,\n    style,\n    isDisabled = false,\n    onPress,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          borderColor: theme.colors.border.primary,\n          borderRadius: 999,\n          borderWidth: 1,\n          display: 'flex',\n          height: 40,\n          justifyContent: 'center',\n          width: 40,\n          ...(isDisabled && { borderColor: theme.colors.border.default }),\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      onPress={!isDisabled ? onPress : undefined}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface StyledIconProps extends IconProps {\n  isDisabled?: boolean;\n}\n\nconst StyledIcon = (props: StyledIconProps) => {\n  const { isDisabled = false, name, ...iconProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Icon\n      name={name}\n      size=\"xsmall\"\n      color={isDisabled ? theme.colors.text.muted : theme.colors.text.primary}\n      {...iconProps}\n    />\n  );\n};\n\ninterface CounterIconProps {\n  isDisabled?: boolean;\n}\n\nconst StyledIconPlus = (props: CounterIconProps) => (\n  <StyledIcon name=\"plus\" {...props} />\n);\nconst StyledIconMinus = (props: CounterIconProps) => (\n  <StyledIcon name=\"minus\" {...props} />\n);\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Counter, State, ProgressBar } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: 0 }}>\\n  {({ state, setState }) => (\\n    <Box>\\n      <ProgressBar percent={state.value} size=\\\"large\\\" />\\n      <Counter\\n        value={state.value}\\n        onValueChange={value => setState({ value })}\\n        min={0}\\n        max={100}\\n        step={10}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Counter,\n      State,\n      ProgressBar\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={state.value} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter value={state.value} onValueChange={value => setState({\n            value\n          })} min={0} max={100} step={10} mdxType=\"Counter\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\n\nconst AnimatedView = animated(View);\n\ninterface ProgressBarBaseProps {\n  /**\n   * Percentage of the progress bar. From 0 to 1\n   * @default 0\n   */\n  percent?: number;\n\n  /**\n   * The size of the progress bar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n}\n\nexport interface ProgressBarOverrides {\n  Root: RootProps;\n  Progress: ProgressProps;\n}\n\nexport interface ProgressBarProps\n  extends WithOverrides<ProgressBarBaseProps, ProgressBarOverrides> {}\n\nconst defaultProps = {\n  percent: 0,\n  size: 'medium' as const,\n};\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const {\n    percent = defaultProps.percent,\n    size = defaultProps.size,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.ProgressBar.Root'),\n    overrides.Root,\n  );\n  const [Progress, progressProps] = getOverrides(\n    StyledProgress,\n    props,\n    dlv(theme, 'overrides.ProgressBar.Progress'),\n    overrides.Progress,\n  );\n\n  return (\n    <Root size={size} {...rootProps}>\n      <Progress percent={percent} {...progressProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  size?: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, size = defaultProps.size, ...viewProps } = props;\n  const theme = useTheme();\n\n  const height = isControlSize(size) ? theme.controlHeights[size] - 16 : size;\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.greyDefault,\n          borderRadius: 999,\n          height,\n          overflow: 'hidden',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ProgressProps extends ViewProps {\n  children?: React.ReactNode;\n  percent?: number;\n}\n\nconst StyledProgress = (props: ProgressProps) => {\n  const {\n    percent = defaultProps.percent,\n    children,\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n      // @ts-ignore\n      style={[\n        {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderRadius: 999,\n          height: '100%',\n          width: width.interpolate(w => `${w}%`),\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}