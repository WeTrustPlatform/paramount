{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/ArrowedPositioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/getPositionerArrow.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Intent.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/StackingOrder.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","isWindowAboveMinWidth","minWidth","Dimensions","width","isWindowBelowMaxWidth","maxWidth","Responsive","children","isAboveMinWidth","isBelowMaxWidth","matches","_useMeasure2","ViewMeasure","onMeasure","viewProps","isRenderProp","_useMeasure","useMeasure","forwardRef","onLayout","ref","measurements","_ViewMeasure","_Responsive","createRef","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","current","newMeasurements","e","nativeEvent","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","Modal","ModalContent","Box","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","el","modalRoot","focusTrap","isUnmounting","content","freezeBody","document","body","overflow","unfreezeBody","activateFocus","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","bottom","left","position","right","top","zIndex","prototype","hasOwnProperty","_exportNames","_FormModal","_Modal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_Overlay","Overlay","_props$transparent","TouchableWithoutFeedback","_Positioner","_getPositionerArrow","ArrowedPositioned","isFullWidth","Positioner","getPositionerArrowParams","targetMeasurements","arrow","getFullWidthPositionerArrow","getPositionerArrow","Fragment","getPositionerVariables","modalContainer","positioner","getPositionerStyles","positionerVariables","modalContainerStyle","positionerStyle","_constants","_Helpers","resolveCorrectPosition","shouldFlipBottomToTop","shouldFlipLeftToRight","shouldFlipRightToLeft","shouldFlipTopToBottom","newPosition","includes","POSITION","BOTTOM","replace","TOP","LEFT","RIGHT","getIsOverflowing","_ref2","positionerMeasurements","screenLayout","defaultProps","isDynamicContent","initialMeasurements","PositionerBase","hasOverflowedCounter","_props$isDynamicConte","childrenMeasurements","isAdjustingContent","_this2","_this$props$isDynamic","setTimeout","setState","_this3","parentHeight","isVisible","_this$props$isFullWid","_this$props$onClose","_this$props$position","_this$state","finalTargetMeasurements","hasPositionerMeasurementsMeasured","getPositionerPositionParams","offset","_ref3","params","BOTTOM_RIGHT","getPositionerFullWidthPosition","isOverflowing","TOP_LEFT","transform","translateX","TOP_RIGHT","translateY","BOTTOM_LEFT","getPositionerPosition","correctedPosition","positionerPositionStyle","Component","withTheme","commonStyle","TopLeftArrow","borderTopColor","marginBottom","TopArrow","TopRightArrow","LeftArrow","_ref4","borderLeftColor","RightArrow","_ref5","borderRightColor","BottomRightArrow","_ref6","borderBottomColor","marginTop","BottomArrow","_ref7","BottomLeftArrow","_ref8","_ref9","FullWidthTopArrow","_ref10","FullWidthBottomArrow","_ref11","_ref12","_ArrowedPositioner","INTENT","info","success","warning","FOCUSED","STACKING_CONTEXT","POSITIONER","OVERLAY","TOASTER","_StackingOrder","_Intent","_Position","Feather","IconTag","concat","result","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/3.2131327d.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from './useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './useMeasure';\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  getFullWidthPositionerArrow,\n  getPositionerArrow,\n} from './getPositionerArrow';\n\nexport const ArrowedPositioned = (props: PositionerProps) => {\n  const { content, isFullWidth } = props;\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      {...props}\n      content={({ position, targetMeasurements }) => {\n        const getPositionerArrowParams = {\n          position,\n          targetMeasurements,\n          theme,\n        };\n        const arrow = isFullWidth\n          ? getFullWidthPositionerArrow(getPositionerArrowParams)\n          : getPositionerArrow(getPositionerArrowParams);\n        return (\n          <>\n            {content}\n            {arrow}\n          </>\n        );\n      }}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PositionerVariables {\n  positioner: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getPositionerVariables = (theme: Theme): PositionerVariables => {\n  return {\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    positioner: {\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetPositionerStyles = (theme: Theme) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = theme => {\n  const positionerVariables = getPositionerVariables(theme);\n\n  return {\n    modalContainerStyle: positionerVariables.modalContainer,\n    positionerStyle: positionerVariables.positioner,\n  };\n};\n","import * as React from 'react';\nimport { Dimensions, ScaledSize, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Measurements, ViewMeasure } from '../Helpers';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface ContentProps {\n  positionerMeasurements: Measurements;\n  targetMeasurements: Measurements;\n  position: Position;\n}\n\nexport interface PositionerProps {\n  theme: Theme;\n  onClose?: () => void;\n  /** For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it. This is not `true` by default because it may causes small delay for the Positioner to be properly available. @default false */\n  isDynamicContent?: boolean;\n  /** Sets the positioner to cover full width. Useful when wanting to display on mobile devices a full menu. Overrides `isDynamicContent`. Ignores `right` and `left` positions. */\n  isFullWidth?: boolean;\n  children: React.ReactNode;\n  content: (props: ContentProps) => React.ReactNode;\n  /**\n   * Positioner uses window height to calculate its position, and whether it should flip to top if it at the bottom (So that it does not pop up outside the window height).\n   * However, sometimes window.height is shorter than the parent container, unnecessarily flipping it to `top`. To fix this behavior,\n   * you can pass in height of the parent so that it will use that instead of window's height\n   */\n  parentHeight?: number;\n  isVisible?: boolean;\n  position?: Position;\n  targetMeasurements?: Measurements;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\nconst DEFAULT_MARGIN = 24;\nconst DEFAULT_OFFSET = 14;\n/** Time to allow all the calculation to be done */\nconst RENDER_CALCULATION_DURATION = 700;\n\nconst resolveCorrectPosition = (position: Position) => ({\n  shouldFlipBottomToTop,\n  shouldFlipLeftToRight,\n  shouldFlipRightToLeft,\n  shouldFlipTopToBottom,\n}: {\n  shouldFlipBottomToTop: boolean;\n  shouldFlipLeftToRight: boolean;\n  shouldFlipRightToLeft: boolean;\n  shouldFlipTopToBottom: boolean;\n}) => {\n  let newPosition = position;\n\n  if (position.includes(POSITION.BOTTOM) && shouldFlipBottomToTop) {\n    newPosition = newPosition.replace(\n      POSITION.BOTTOM,\n      POSITION.TOP,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.TOP) && shouldFlipTopToBottom) {\n    newPosition = newPosition.replace(\n      POSITION.TOP,\n      POSITION.BOTTOM,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.LEFT) && shouldFlipLeftToRight) {\n    newPosition = newPosition.replace(\n      POSITION.LEFT,\n      POSITION.RIGHT,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.RIGHT) && shouldFlipRightToLeft) {\n    newPosition = newPosition.replace(\n      POSITION.RIGHT,\n      POSITION.LEFT,\n    ) as Position;\n  }\n\n  return newPosition;\n};\n\ninterface GetPositionerPositionParams {\n  screenLayout: ScaledSize;\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n  offset: number;\n}\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight:\n      position === POSITION.LEFT\n        ? positionerMeasurements.width + offset + DEFAULT_MARGIN >\n          targetMeasurements.pageX - offset\n        : positionerMeasurements.width + offset >\n          screenLayout.width - targetMeasurements.pageX,\n    shouldFlipRightToLeft:\n      position === POSITION.RIGHT\n        ? targetMeasurements.pageX +\n            targetMeasurements.width +\n            positionerMeasurements.width +\n            offset >\n          screenLayout.width - offset\n        : targetMeasurements.pageX <\n          positionerMeasurements.width + DEFAULT_MARGIN,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  });\n\n  const isOverflowing = getIsOverflowing({\n    position,\n    positionerMeasurements,\n    screenLayout,\n  });\n\n  switch (newPosition) {\n    case POSITION.TOP_LEFT:\n      return {\n        position: POSITION.TOP_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        position: POSITION.TOP_RIGHT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width -\n                targetMeasurements.pageX -\n                targetMeasurements.width,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width +\n                targetMeasurements.width,\n            }),\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.LEFT:\n      return {\n        position: POSITION.LEFT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width - targetMeasurements.pageX + offset,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width -\n                offset,\n            }),\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.RIGHT:\n      return {\n        position: POSITION.RIGHT,\n\n        left: targetMeasurements.pageX + targetMeasurements.width + offset,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        position: POSITION.BOTTOM_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nconst getPositionerFullWidthPosition = (\n  params: GetPositionerPositionParams,\n) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight: false,\n    shouldFlipRightToLeft: false,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  })\n    .replace('-left', '')\n    .replace('-right', '');\n\n  switch (newPosition) {\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nexport const getIsOverflowing = ({\n  positionerMeasurements,\n  screenLayout,\n  position,\n}: {\n  positionerMeasurements: Measurements;\n  screenLayout: ScaledSize;\n  position: Position;\n}) => {\n  if (positionerMeasurements.width > screenLayout.width - 48) {\n    return true;\n  }\n\n  return false;\n};\n\nexport interface PositionerState {\n  /** This is the adjusted measurements of the positioner when the content is of dynamic size. It adjusts several times when its position is being calculated to account for things like window overflow, margins and other layout calculations */\n  positionerMeasurements: Measurements;\n  /** Measurements of the wrapped component */\n  childrenMeasurements: Measurements;\n  /** HACK: For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it */\n  isAdjustingContent: boolean;\n}\n\nconst defaultProps = {\n  isDynamicContent: false,\n  isFullWidth: false,\n  position: POSITION.BOTTOM,\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport class PositionerBase extends React.Component<\n  PositionerProps,\n  PositionerState\n> {\n  /** Hack to get correct position of dynamic content */\n  private hasOverflowedCounter: number = 0;\n\n  constructor(props: PositionerProps) {\n    super(props);\n    const { isDynamicContent = defaultProps.isDynamicContent } = props;\n\n    this.state = {\n      childrenMeasurements: initialMeasurements,\n      isAdjustingContent: isDynamicContent,\n      positionerMeasurements: initialMeasurements,\n    };\n  }\n\n  public componentDidMount() {\n    const { isDynamicContent = defaultProps.isDynamicContent } = this.props;\n\n    if (isDynamicContent) {\n      setTimeout(() => {\n        this.setState({ isAdjustingContent: false });\n      }, RENDER_CALCULATION_DURATION);\n    }\n  }\n\n  public render() {\n    const {\n      theme,\n      getStyles,\n      children,\n      content,\n      parentHeight,\n      isVisible,\n      isFullWidth = defaultProps.isFullWidth,\n      onClose = () => null,\n      position = defaultProps.position,\n      targetMeasurements,\n    } = this.props;\n    const {\n      positionerMeasurements,\n      childrenMeasurements,\n      isAdjustingContent,\n    } = this.state;\n\n    const { positionerStyle, modalContainerStyle } = mergeStyles(\n      getPositionerStyles,\n      getStyles,\n    )(theme);\n\n    const screenLayout = Dimensions.get('window');\n\n    const finalTargetMeasurements = targetMeasurements || childrenMeasurements;\n    const hasPositionerMeasurementsMeasured =\n      positionerMeasurements.width !== 0 && positionerMeasurements.height !== 0;\n    const getPositionerPositionParams = {\n      offset: DEFAULT_OFFSET,\n      position,\n      positionerMeasurements,\n      screenLayout: {\n        ...screenLayout,\n        height: parentHeight || screenLayout.height,\n      },\n      targetMeasurements: finalTargetMeasurements,\n    };\n\n    const {\n      position: correctedPosition,\n      ...positionerPositionStyle\n    } = isFullWidth\n      ? getPositionerFullWidthPosition(getPositionerPositionParams)\n      : getPositionerPosition(getPositionerPositionParams);\n\n    return (\n      <>\n        {targetMeasurements ? (\n          children\n        ) : (\n          <ViewMeasure\n            onMeasure={measurements => {\n              this.setState({ childrenMeasurements: measurements });\n            }}\n          >\n            {children}\n          </ViewMeasure>\n        )}\n        <Modal\n          visible={isAdjustingContent || isVisible}\n          transparent\n          onRequestClose={onClose}\n          isBackgroundScrollable\n        >\n          <View style={modalContainerStyle}>\n            <ViewMeasure\n              style={{\n                ...positionerStyle,\n                ...positionerPositionStyle,\n                // Hide flash mis-positioned content\n                opacity:\n                  hasPositionerMeasurementsMeasured && !isAdjustingContent\n                    ? 1\n                    : 0,\n              }}\n              onMeasure={measurements => {\n                const isOverflowing = getIsOverflowing({\n                  position,\n                  positionerMeasurements,\n                  screenLayout,\n                });\n                /**\n                 * Positioner usually gets expected positioning after it has overflowed once.\n                 */\n\n                if (this.hasOverflowedCounter === 0) {\n                  this.setState({ positionerMeasurements: measurements });\n                } else if (!isOverflowing) {\n                  this.setState({ positionerMeasurements: measurements });\n                }\n\n                if (isOverflowing) {\n                  this.hasOverflowedCounter++;\n                }\n              }}\n            >\n              {content({\n                position: correctedPosition,\n                positionerMeasurements,\n                targetMeasurements: finalTargetMeasurements,\n              })}\n            </ViewMeasure>\n            <Overlay transparent onPress={onClose} />\n          </View>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport const Positioner = withTheme(PositionerBase);\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Position } from '../../constants';\nimport { Theme } from '../../theme';\nimport { Measurements } from '../Helpers';\n\nconst arrowWidth = 11;\nconst commonStyle = {\n  borderColor: 'transparent',\n  borderWidth: 11,\n  height: 0,\n  position: 'absolute',\n  width: 0,\n} as ViewStyle;\n\nexport const TopLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        marginBottom: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        marginBottom: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const LeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: theme.colors.border.default,\n        marginRight: -arrowWidth * 2,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: 'white',\n        marginRight: -arrowWidth * 2 + 1,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const RightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: theme.colors.border.default,\n        left: 0,\n        marginLeft: -arrowWidth * 2,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: 'white',\n        left: 0,\n        marginLeft: -arrowWidth * 2 + 1,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const BottomRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top-left':\n      return (\n        <TopLeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'top':\n      return <TopArrow theme={theme} targetMeasurements={targetMeasurements} />;\n    case 'top-right':\n      return (\n        <TopRightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'left':\n      return (\n        <LeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'right':\n      return (\n        <RightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-right':\n      return (\n        <BottomRightArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <BottomArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-left':\n      return (\n        <BottomLeftArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n\nexport const FullWidthTopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const FullWidthBottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getFullWidthPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top':\n      return (\n        <FullWidthTopArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <FullWidthBottomArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n","export * from './Positioner';\nexport * from './ArrowedPositioner';\n","export interface Intents {\n  danger: 'danger';\n  info: 'info';\n  success: 'success';\n  warning: 'warning';\n}\n\nexport type Intent = keyof Intents;\n\nexport const INTENT: Intents = {\n  danger: 'danger',\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n};\n","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","/**\n * Stacking order contains z-index values that are used through.\n * Note that the Stack component might increase the z-index for certain components.\n */\nexport default {\n  /**\n   * Used for focused buttons and controls.\n   */\n  FOCUSED: 2,\n\n  /**\n   * Used as the default for the StackingContext.\n   */\n  STACKING_CONTEXT: 5,\n\n  /**\n   * Used as the default for the Positioner.\n   */\n  POSITIONER: 10,\n\n  /**\n   * Used for the Overlay and everything that's inside such as Dialog + SideSheet.\n   */\n  OVERLAY: 20,\n\n  /**\n   * Used for the toasts in the toaster. Appears on top of everything else.\n   */\n  TOASTER: 30,\n};\n","export { default as StackingOrder } from './StackingOrder';\nexport { Intent, Intents } from './Intent';\nexport * from './Position';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}