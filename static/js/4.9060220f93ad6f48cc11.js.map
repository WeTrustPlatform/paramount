{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","getAvatarProps","fills","_ref","isSolid","color","hashValue","appearances","keys","Object","getAvatarStyles","_ref2","theme","colorProps","name","_ref2$size","size","_ref2$sizeLimitOneCha","sizeLimitOneCharacter","newHashValue","initialsFontSize","ceil","getAvatarInitialsFontSize","containerStyle","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","textStyle","fontSize","lineHeight","imageStyle","globalGetInitials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","Avatar","props","source","_props$size","_props$isSolid","_props$getInitials","getInitials","_props$color","_props$forceShowIniti","forceShowInitials","_props$sizeLimitOneCh","getStyles","testID","useTheme","imageUnavailable","initials","substring","_mergeStyles","mergeStyles","components","react","View","style","__source","fileName","_jsxFileName","lineNumber","Text","Image","propToFn","colors","background","elevation","elevations","shape","containerShapes","Box","children","propStyle","viewStyles","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","getCheckboxStyles","isChecked","isDisabled","sizeValue","controlHeights","checkColor","text","white","checkboxFocusBackgroundColor","primaryDark","greyLight","checkboxStyle","objectSpread","content","borderColor","border","borderWidth","primaryDefault","greyDark","circle","square","controlBorderRadius","small","touchableStyle","Checkbox","_props$isChecked","_props$isDisabled","_props$isInteractive","isInteractive","_props$onChange","onChange","_props$shape","accessibilityProps","objectWithoutProperties","TouchableHighlight","esm_extends","accessible","underlayColor","disabled","onPress","Icon_web","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","IconTag","Feather","concat","result","matches","charAt","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getListItemStyles","borderBottomWidth","paddingLeft","paddingRight","descriptionStyle","focusBackgroundColor","imageWrapperStyle","marginRight","leftWrapperStyle","flexDirection","textWrapperStyle","titleStyle","wrapperStyle","iconSize","large","medium","avatarSize","titleSize","descriptionSize","ListItem","avatarProps","title","description","_props$rightIcon","rightIcon","leftIcon","weight","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","SelectList","SelectListItem","___WEBPACK_IMPORTED_MODULE_6__","isMulti","selectedValue","onValueChange","newValue","itemIndex","console","log","___WEBPACK_IMPORTED_MODULE_7__","label","value","___WEBPACK_IMPORTED_MODULE_8__","of","isMDXComponent","SelectListBase","innerRef","flatListProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","handleOnPress","itemValue","isSelected","Array","isArray","filter","val","childrenArray","toArray","data","child","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_FlatList__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ref","keyExtractor","item","getItemLayout","_","index","offset","renderItem","selectListItem","some","selVal","onSelect","_props$index","_props$isSelected","_props$onSelect","listItemProps","_ListItem__WEBPACK_IMPORTED_MODULE_4__","e","preventDefault","_Checkbox__WEBPACK_IMPORTED_MODULE_3__","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","getTextStyles","isInline","isItalic","align","transform","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","_props$fontFamily","_props$align","_props$isInline","_props$isItalic","textProps","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","palette","lightest","light","base","dark","darkest","overlay","greyDefault","primaryLight","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","danger","info","success","warning","button","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","xxlarge","xlarge","paragraphSizes","xsmall","controlPaddings","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/4.3cf42b66.js","sourcesContent":["import { ImageStyle, TextStyle, ViewStyle } from 'react-native';\n\nimport { FillColors, Fills, Theme } from '../../theme/Theme';\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nexport interface AvatarStylesProps {\n  name?: string;\n  color: AvatarColor;\n  hashValue?: string;\n  isSolid: boolean;\n  size: number;\n  sizeLimitOneCharacter: number;\n}\n\nexport interface AvatarStyles {\n  containerStyle: ViewStyle;\n  textStyle: TextStyle;\n  imageStyle: ImageStyle;\n}\n\nconst getAvatarInitialsFontSize = (\n  size: number,\n  sizeLimitOneCharacter: number,\n) => {\n  if (size <= sizeLimitOneCharacter) {\n    return Math.ceil(size / 2.2);\n  }\n  return Math.ceil(size / 2.6);\n};\n\nconst getAvatarProps = (\n  fills: Fills,\n  {\n    isSolid,\n    color,\n    hashValue,\n  }: {\n    isSolid?: boolean;\n    color: AvatarColor;\n    hashValue: number;\n  },\n) => {\n  const appearances = fills[isSolid ? 'solid' : 'subtle'];\n\n  if (color === 'automatic') {\n    const keys = Object.keys(appearances);\n    const key = keys[hashValue % keys.length] as keyof FillColors;\n    return appearances[key];\n  }\n\n  return appearances[color];\n};\n\nexport type GetAvatarStyles = (\n  avatarStylesProps: AvatarStylesProps,\n  theme: Theme,\n) => AvatarStyles;\n\nexport const getAvatarStyles: GetAvatarStyles = (\n  { name, color, hashValue, isSolid, size = 24, sizeLimitOneCharacter = 20 },\n  theme,\n) => {\n  let colorProps;\n  const fills = theme.fills;\n  if (color === 'automatic') {\n    const newHashValue = hashCode(hashValue || name);\n    colorProps = getAvatarProps(theme.fills, {\n      color,\n      hashValue: newHashValue,\n      isSolid,\n    });\n  } else {\n    colorProps = getAvatarProps(fills, { color, isSolid, hashValue: 0 });\n  }\n\n  const initialsFontSize = getAvatarInitialsFontSize(\n    size,\n    sizeLimitOneCharacter,\n  );\n\n  return {\n    containerStyle: {\n      alignItems: 'center',\n      backgroundColor: colorProps.backgroundColor,\n      borderRadius: 9999,\n      display: 'flex',\n      height: size,\n      justifyContent: 'center',\n      overflow: 'hidden',\n      position: 'relative',\n      width: size,\n    },\n\n    textStyle: {\n      color: colorProps.color,\n      fontSize: initialsFontSize,\n      lineHeight: initialsFontSize,\n    },\n\n    imageStyle: {\n      height: '100%',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Image, ImageSourcePropType, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FillColors } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Text } from '../Typography';\nimport {\n  AvatarStyles,\n  GetAvatarStyles,\n  getAvatarStyles,\n} from './Avatar.styles';\n\n// https://github.com/segmentio/evergreen/blob/master/source/avatar/README.md\nexport type GetInitialsType = (name?: string, fallback?: string) => string;\n\nconst globalGetInitials: GetInitialsType = (name, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\nexport interface AvatarProps {\n  /**\n   * The source attribute of the image.\n   * When it's not available, render initials instead.\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   */\n  size?: number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * The value used for the hash function.\n   * The name is used as the hashValue by default.\n   * When dealing with anonymous users you should use the id instead.\n   */\n  hashValue?: string;\n\n  /**\n   * When true, render a solid avatar.\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * When the value is `automatic`, use the hash function to determine the color.\n   */\n  color?: 'automatic' | keyof FillColors;\n\n  /**\n   * Function to get the initials based on the name.\n   */\n  getInitials?: GetInitialsType;\n\n  /**\n   * When true, force show the initials.\n   * This is useful in some cases when using Gravatar and transparent pngs.\n   */\n  forceShowInitials?: boolean;\n\n  /**\n   * When the size is smaller than this number, use a single initial for the avatar.\n   */\n  sizeLimitOneCharacter?: number;\n\n  getStyles?: ReplaceReturnType<GetAvatarStyles, DeepPartial<AvatarStyles>>;\n\n  testID?: string;\n}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    size = 48,\n    name,\n    isSolid = false,\n    hashValue,\n    getInitials = globalGetInitials,\n    color = 'automatic',\n    forceShowInitials = false,\n    sizeLimitOneCharacter = 20,\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { imageHasFailedLoading } = { imageHasFailedLoading: false };\n  const imageUnavailable = !source || imageHasFailedLoading;\n\n  let initials = getInitials(name);\n  if (size <= sizeLimitOneCharacter) {\n    initials = initials.substring(0, 1);\n  }\n\n  const { containerStyle, textStyle, imageStyle } = mergeStyles(\n    getAvatarStyles,\n    getStyles,\n    theme.components.getAvatarStyles,\n  )(\n    {\n      color,\n      hashValue,\n      isSolid,\n      name,\n      size,\n      sizeLimitOneCharacter,\n    },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {(imageUnavailable || forceShowInitials) && (\n        <Text\n          getStyles={() => ({\n            textStyle,\n          })}\n        >\n          {initials}\n        </Text>\n      )}\n      {!imageUnavailable && !!source && (\n        <Image source={source} style={imageStyle} />\n      )}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\nimport { CheckboxShape } from './Checkbox';\n\nexport interface CheckboxStylesProps {\n  isChecked: boolean;\n  isDisabled: boolean;\n  shape: CheckboxShape;\n  size: ControlSize;\n}\n\nexport interface CheckboxStyles {\n  touchableStyle: ViewStyle;\n  checkboxStyle: ViewStyle;\n  checkColor: string;\n  checkboxFocusBackgroundColor: string;\n}\n\nexport type GetCheckboxStyles = (\n  checkboxStylesProps: CheckboxStylesProps,\n  theme: Theme,\n) => CheckboxStyles;\n\nexport const getCheckboxStyles: GetCheckboxStyles = (\n  { isChecked, isDisabled, shape, size },\n  theme,\n) => {\n  const sizeValue = theme.controlHeights[size] - 16;\n\n  return {\n    checkColor: theme.colors.text.white,\n    checkboxFocusBackgroundColor: isChecked\n      ? theme.colors.background.primaryDark\n      : theme.colors.background.greyLight,\n\n    checkboxStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      height: sizeValue,\n      justifyContent: 'center',\n      width: sizeValue,\n      ...(isChecked\n        ? {\n            backgroundColor: theme.colors.background.primaryDefault,\n            borderColor: 'transparent',\n          }\n        : {}),\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.background.greyDark,\n            borderColor: theme.colors.border.default,\n          }\n        : {}),\n      ...{\n        circle: {\n          borderRadius: 999,\n        },\n        square: {\n          borderRadius: theme.controlBorderRadius.small,\n        },\n      }[shape],\n    },\n\n    touchableStyle: {},\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  CheckboxStyles,\n  GetCheckboxStyles,\n  getCheckboxStyles,\n} from './Checkbox.styles';\n\nexport type CheckboxShape = 'circle' | 'square';\n\nexport interface CheckboxProps extends AccessibilityProps {\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  /** Sometimes we just want the display of the checkbox  */\n  isInteractive?: boolean;\n  /** @default square */\n  shape?: CheckboxShape;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n  getStyles?: ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>;\n  testID?: string;\n  size?: ControlSize;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    isInteractive = true,\n    onChange = () => null,\n    shape = 'square',\n    size = 'medium',\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    checkboxStyle,\n    checkColor,\n    checkboxFocusBackgroundColor,\n  } = mergeStyles(\n    getCheckboxStyles,\n    getStyles,\n    theme.components.getCheckboxStyles,\n  )(\n    {\n      isChecked,\n      isDisabled,\n      shape,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible={isInteractive}\n      style={touchableStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      {...(isInteractive\n        ? {\n            disabled: isDisabled,\n            onPress: onChange,\n          }\n        : {\n            disabled: true,\n          })}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={checkboxStyle}>\n        {isChecked ? <Icon name=\"check\" size={20} color={checkColor} /> : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ControlSize;\n  isDisabled: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      height: theme.controlHeights[size],\n      justifyContent: 'center',\n      paddingLeft: 16,\n      paddingRight: 8,\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n    },\n    descriptionStyle: {},\n    focusBackgroundColor: theme.colors.background.greyLight,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textWrapperStyle: {\n      justifyContent: 'center',\n    },\n    titleStyle: {},\n    wrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, TextSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ControlSize;\n  isDisabled?: boolean;\n  title?: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nconst iconSize: {\n  [size in ControlSize]: number;\n} = {\n  large: 32,\n  medium: 24,\n  small: 16,\n};\n\nconst avatarSize: {\n  [size in ControlSize]: number;\n} = {\n  large: 40,\n  medium: 32,\n  small: 24,\n};\n\nconst titleSize: {\n  [size in ControlSize]: TextSize;\n} = {\n  large: 'large',\n  medium: 'medium',\n  small: 'small',\n};\n\nconst descriptionSize: {\n  [size in ControlSize]: TextSize;\n} = {\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n};\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    avatarProps,\n    getStyles,\n    isDisabled = false,\n    title,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    titleStyle,\n    descriptionStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(\n    getListItemStyles,\n    getStyles,\n    theme.components.getListItemStyles,\n  )({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>\n            {leftIcon || avatarProps ? (\n              <Avatar size={avatarSize[size]} {...avatarProps} />\n            ) : null}\n          </View>\n          <View style={textWrapperStyle}>\n            {title && (\n              <Text\n                getStyles={() => ({ textStyle: titleStyle })}\n                size={titleSize[size]}\n                weight=\"500\"\n              >\n                {title}\n              </Text>\n            )}\n            {description && (\n              <Text\n                getStyles={() => ({ textStyle: descriptionStyle })}\n                size={descriptionSize[size]}\n                color=\"muted\"\n              >\n                {description}\n              </Text>\n            )}\n          </View>\n        </View>\n        {rightIcon || (\n          <Icon color=\"default\" size={iconSize[size]} name=\"chevron-right\" />\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, SelectList, SelectListItem, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"selectlist\"\n    }}>{`SelectList`}</h1>\n    <p>{`SelectList that supports single value or multiple values selected at the same item. `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` is a compound component, which means that its children can be any component, and it will implicitly inject props such as `}<inlineCode parentName=\"p\">{`isSelected`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` to them.\n`}<inlineCode parentName=\"p\">{`SelectListItem`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`ListItem`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`FlatList`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<SelectList\\n  isMulti={false} // Single select\\n  selectedValue=\\\"c\\\"\\n  onValueChange={(newValue, itemIndex) => {\\n    console.log(newValue, itemIndex)\\n  }}\\n>\\n  <SelectListItem\\n    label=\\\"Usage\\\"\\n    value=\\\"c\\\"\\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\\n    // isSelected\\n    // onSelect\\n    // index\\n  />\\n</SelectList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <SelectList isMulti={false} // Single select\n      selectedValue=\"c\" onValueChange={(newValue, itemIndex) => {\n        console.log(newValue, itemIndex);\n      }} mdxType=\"SelectList\">\n    <SelectListItem label=\"Usage\" value=\"c\" // Props below are passed from `SelectList`, so it is not necessary to pass them here\n        // isSelected\n        // onSelect\n        // index\n        mdxType=\"SelectListItem\" />\n  </SelectList>\n    </Playground>\n    <h3 {...{\n      \"id\": \"multi-select\"\n    }}>{`Multi select`}</h3>\n    <Playground __position={1} __code={'<State initial={{ selectedValue: [\\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <SelectList\\n      isMulti\\n      selectedValue={state.selectedValue}\\n      onValueChange={(newValue, itemIndex) => {\\n        setState({ selectedValue: newValue })\\n      }}\\n    >\\n      <SelectListItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <SelectListItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <SelectListItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <SelectListItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <SelectListItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <SelectListItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <SelectListItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <SelectListItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <SelectListItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <SelectListItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <SelectListItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <SelectListItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <SelectListItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <SelectListItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <SelectListItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <SelectListItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <SelectListItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <SelectListItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <SelectListItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </SelectList>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        selectedValue: ['js', 'go']\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <SelectList isMulti selectedValue={state.selectedValue} onValueChange={(newValue, itemIndex) => {\n          setState({\n            selectedValue: newValue\n          });\n        }} mdxType=\"SelectList\">\n        <SelectListItem label=\"C\" value=\"c\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C#\" value=\"c#\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C++\" value=\"c++\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"CSS\" value=\"css\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elixir\" value=\"elixir\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elm\" value=\"elm\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Erlang\" value=\"erlang\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Go\" value=\"go\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Haskell\" value=\"haskell\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"HTML\" value=\"html\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Java\" value=\"java\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"JavaScript\" value=\"js\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Lua\" value=\"lua\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Python\" value=\"python\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"R\" value=\"r\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Ruby\" value=\"ruby\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Rust\" value=\"rust\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Switft\" value=\"swift\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Typescript\" value=\"typescript\" mdxType=\"SelectListItem\" />\n      </SelectList>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={SelectList} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListProps\n  extends Omit<\n    Omit<FlatListProps<SelectListItemBaseProps>, 'data'>,\n    'renderItem'\n  > {\n  children:\n    | Array<React.ReactElement<SelectListItemBaseProps>>\n    | React.ReactElement<SelectListItemBaseProps>;\n  selectedValue: string | string[];\n  innerRef?: React.Ref<FlatList<SelectListItemBaseProps>>;\n  isMulti?: boolean;\n  onValueChange: (\n    itemValue: string | string[],\n    itemIndex: number,\n  ) => void | undefined;\n}\n\nconst SelectListBase = (props: SelectListProps): any => {\n  const {\n    selectedValue,\n    onValueChange,\n    isMulti,\n    children,\n    innerRef,\n    ...flatListProps\n  } = props;\n  const theme = useTheme();\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val !== itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n\n  return (\n    <FlatList\n      ref={innerRef}\n      keyExtractor={item => item.value}\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={data}\n      renderItem={({ item, index }) => {\n        const selectListItem = childrenArray[index];\n\n        const isSelected =\n          isMulti && Array.isArray(selectedValue)\n            ? selectedValue.some(selVal => selVal === item.value)\n            : selectedValue === item.value;\n\n        return React.cloneElement(selectListItem, {\n          index,\n          isSelected,\n          onSelect: handleOnPress,\n        });\n      }}\n      {...flatListProps}\n    />\n  );\n};\n\nexport const SelectList = React.forwardRef<\n  FlatList<SelectListItemBaseProps>,\n  SelectListProps\n>((props, ref) => {\n  return <SelectListBase {...props} innerRef={ref} />;\n});\n","import * as React from 'react';\n\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\n\nexport interface SelectListItemBaseProps {\n  index?: number;\n  isSelected?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  value: string;\n  label: string;\n}\n\nexport interface SelectListItemProps\n  extends SelectListItemBaseProps,\n    ListItemProps {\n  isDisabled?: boolean;\n}\n\nconst SelectListItemBase = (props: SelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    value,\n    ...listItemProps\n  } = props;\n\n  return (\n    <ListItem\n      onPress={e => {\n        e.preventDefault();\n        onSelect(value, index, isSelected);\n      }}\n      title={label}\n      rightIcon={\n        <Checkbox isInteractive={false} shape=\"circle\" isChecked={isSelected} />\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport const SelectListItem = React.memo(SelectListItemBase);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}