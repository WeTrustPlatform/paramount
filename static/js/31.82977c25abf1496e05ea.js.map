{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Box","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Box","height","width","shape","elevation","backgroundColor","isMDXComponent","React","_interopRequireWildcard","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","color","theme","colors","background","elevations","_shape","_x","apply","arguments","toString","children","propStyle","style","testID","viewStyles","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View"],"mappings":"0XAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,gCAOMG,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAR,EAAAY,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAG5E,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,OADR,QAGA,EAAAf,EAAAY,KAAA,8JAAwJ,EAAAZ,EAAAY,KAAA,cAAYI,WAAW,KAAvB,qBAAxJ,MAA2N,EAAAhB,EAAAY,KAAA,cAAYI,WAAW,KAAvB,kBAA3N,MAA2R,EAAAhB,EAAAY,KAAA,cAAYI,WAAW,KAAvB,SAA3R,iBACA,EAAAhB,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAc,WAAD,CAAYC,WAAY,EAAGC,OAAQ,4NAAmOC,QAAS,CAC7QV,MAAOW,KAAOA,KAAKX,MAAQA,EAC3BO,wBACAK,cACAC,WACCT,QAAQ,eACb,EAAAd,EAAAY,KAACR,EAAAmB,IAAD,CACIC,OAAQ,IAAKC,MAAO,IAAKC,MAAM,UAC/BC,UAAW,EAAGC,gBAAgB,iBAC9Bd,QAAQ,0LAKdP,EAAWsB,gBAAiB,mXC5C5BC,EAAAC,EAAA7B,EAAA,kCACA8B,EAAA9B,EAAA,iDAEA+B,EAAA/B,EAAA,4CAEiC,ioBAqB1B,IAAMgC,EAET,CACFC,OAAQ,CACNC,aAAc,KAEhBC,KAAM,CACJD,aAAc,KAEhBE,QAAS,CACPF,aA/B6B,GAiC/BG,cAAe,CACbC,uBAlC6B,EAmC7BC,wBAnC6B,GAqC/BC,YAAa,CACXF,uBAtC6B,EAuC7BG,oBAvC6B,GAyC/BC,aAAc,CACZH,wBA1C6B,EA2C7BI,qBA3C6B,GA6C/BC,WAAY,CACVH,oBA9C6B,EA+C7BE,qBA/C6B,GAiD/BE,OAAQ,CACNX,aAAc,+NAIlB,IAAMY,EAAW,CACfpB,gBAAiB,SAACqB,EAAwBC,GAExC,OAAIA,EAAMC,OAAOC,WAAWH,GAEnB,CAAErB,gBAAiBsB,EAAMC,OAAOC,WAAWH,IAE7C,CACLrB,gBAAiBqB,IAGrBtB,UAAW,SAACA,EAA8BuB,GACxC,OAAOA,EAAMG,WAAW1B,IAE1BD,MAAK,SAAA4B,GAAA,SAAA5B,EAAA6B,GAAA,OAAAD,EAAAE,MAAAnC,KAAAoC,WAAA,OAAA/B,EAAAgC,SAAA,kBAAAJ,EAAAI,YAAAhC,EAAA,CAAE,SAACA,GAAD,OAAkBQ,EAAaR,MAG3BH,EAAM,SAACb,GAAoB,IAC9BiD,EAAsDjD,EAAtDiD,SAAiBC,EAAqClD,EAA5CmD,MAAkBC,EAA0BpD,EAA1BoD,OAAWC,GADT,EAAApD,EAAA,SACwBD,EADxB,+BAEhCwC,GAAQ,EAAAjB,EAAA+B,YACRC,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQJ,EACjB,GAAII,EAAM,CAER,IAAMC,EAAUpB,EAASmB,GAEzB,GAAIC,EAAS,CAEX,IAAMP,EAAQO,EAAQL,EAAWI,GAAOjB,GAExCe,EAAkBI,KAAKR,QAGvBK,EAAWC,GAAQJ,EAAWI,GAKpC,OACErC,EAAAwC,cAACtC,EAAAuC,KAAD,CAAMT,OAAQA,EAAQD,MAAO,CAACK,EAAYD,EAAmBL,IAC1DD","file":"static/js/31.4db30ac0.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box } from './Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"box\"\n    }}>{`Box`}</h1>\n    <p>{`Box is a primitive component for convenient layout of components. All style properties are passed as props and has some convenient props such as `}<inlineCode parentName=\"p\">{`paddingHorizontal`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`marginVertical`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`shape`}</inlineCode>{` for styling`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box\\n  // ...ViewStyle\\n  height={200}\\n  width={200}\\n  shape=\\\"rounded\\\" // pill, circle or square (default)\\n  elevation={5}\\n  backgroundColor=\\\"primaryDefault\\\" // background colors or any custom color \\\"#67c6bb\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box\n    }} mdxType=\"Playground\">\n  <Box // ...ViewStyle\n      height={200} width={200} shape=\"rounded\" // pill, circle or square (default)\n      elevation={5} backgroundColor=\"primaryDefault\" // background colors or any custom color \"#67c6bb\"\n      mdxType=\"Box\" />\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n"],"sourceRoot":""}