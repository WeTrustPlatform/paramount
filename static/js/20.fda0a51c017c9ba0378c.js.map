{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.styles.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/RowAndColumn.mdx"],"names":["getColumnCount","columns","currentScreenSize","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","getProportion","columnCount","gridColumnCount","concat","splitColumnConfig","config","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetColumns","offsetLarge","offsetXlarge","getColumnStyles","_ref","gutterWidth","Object","objectWithoutProperties","_splitColumnConfig","flexBasis","offsetColumnCount","columnStyle","flex","marginLeft","maxWidth","paddingLeft","paddingRight","Column","props","children","getStyles","layout","useLayout","theme","useTheme","React","GutterWidthContext","mergeStyles","components","objectSpread","react","View","style","__source","fileName","lineNumber","getMaxWidth","containerSizes","undefined","getContainerStyles","size","containerStyle","marginRight","fluid","width","Container","_props$fluid","getRowStyles","_ref$hasGutter","hasGutter","rowStyle","flexDirection","flexWrap","defaultLayout","Row","_props$hasGutter","_jsxFileName","Provider","value","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","paddingVertical","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","backgroundColor","height","borderWidth","of","className","isMDXComponent"],"mappings":"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","file":"static/js/20.6fa3c73a.js","sourcesContent":["import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ColumnConfig, ColumnConfigBase, ColumnProps } from './Column';\nimport {\n  DESC_ORDER_SCREEN_SIZES,\n  LayoutContext,\n  ScreenSize,\n} from './LayoutContext';\n\nexport type GetColumnStyles = (\n  props: ColumnProps & LayoutContext,\n  theme: Theme,\n) => Partial<ColumnStyles>;\n\nexport interface ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n\nexport const getColumnStyles: GetColumnStyles = ({\n  gutterWidth,\n  currentScreenSize,\n  gridColumnCount,\n  ...config\n}) => {\n  const { columns, offsetColumns } = splitColumnConfig(config);\n\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return {\n    columnStyle: {\n      flex: 1,\n      flexBasis,\n      marginLeft,\n      maxWidth: flexBasis,\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetColumnStyles, getColumnStyles } from './Column.styles';\nimport { ColumnCount, useLayout } from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  /**\n   * Number of columns to span over when screen size is xsmall\n   */\n  xsmall?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is small\n   */\n  small?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is medium\n   */\n  medium?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is large\n   */\n  large?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is xlarge\n   */\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  /**\n   * Number of columns to offset when screen size is xsmall\n   */\n  offsetXsmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is small\n   */\n  offsetSmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is medium\n   */\n  offsetMedium?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is large\n   */\n  offsetLarge?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is xlarge\n   */\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  /** Content of the column. */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: GetColumnStyles;\n}\n\nexport const Column = (props: ColumnProps) => {\n  const { children, getStyles } = props;\n  const layout = useLayout();\n  const theme = useTheme();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const { columnStyle } = mergeStyles(\n    getColumnStyles,\n    getStyles,\n    theme.components.getColumnStyles,\n  )({ ...layout, ...props, gutterWidth }, theme);\n\n  return <View style={columnStyle}>{children}</View>;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ContainerProps } from './Container';\nimport {\n  ContainerSizes,\n  DESC_ORDER_SCREEN_SIZES,\n  LayoutContext,\n  ScreenSize,\n} from './LayoutContext';\n\nexport type GetContainerStyles = (\n  props: ContainerProps & LayoutContext,\n  theme: Theme,\n) => Partial<ContainerStyles>;\n\nexport interface ContainerStyles {\n  containerStyle: ViewStyle;\n}\n\nconst getMaxWidth = (\n  containerSizes: ContainerSizes,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (screenSize === 'xsmall') return false;\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!containerSizes[screenSize];\n  });\n\n  if (nearestSize === 'xsmall') return undefined;\n\n  return nearestSize ? containerSizes[nearestSize] : undefined;\n};\n\nexport const getContainerStyles: GetContainerStyles = (\n  { size, currentScreenSize, containerSizes, gutterWidth, fluid },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: fluid\n        ? '100%'\n        : size\n        ? containerSizes[size]\n        : getMaxWidth(containerSizes, currentScreenSize),\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetContainerStyles, getContainerStyles } from './Container.styles';\nimport { ContainerSize, useLayout } from './LayoutContext';\n\nexport interface ContainerProps {\n  /** Children node */\n  children?: React.ReactNode;\n\n  /**\n   * When true, it will not contain the width and occupy fully the parent container\n   * @default false\n   */\n  fluid?: boolean;\n\n  /**\n   * The size of the container. It will override the internal responsive mechanism, and will force the\n   * containment of a particular screen size\n   */\n  size?: ContainerSize;\n\n  /** Callback to get element styles. */\n  getStyles?: GetContainerStyles;\n}\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, getStyles, size, fluid = false } = props;\n  const layout = useLayout();\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getContainerStyles,\n    getStyles,\n    theme.components.getContainerStyles,\n  )({ size, fluid, ...layout }, theme);\n\n  return <View style={containerStyle}>{children}</View>;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { LayoutContext } from './LayoutContext';\nimport { RowProps } from './Row';\n\nexport type GetRowStyles = (\n  props: RowProps & LayoutContext,\n  theme: Theme,\n) => Partial<RowStyles>;\n\nexport interface RowStyles {\n  rowStyle: ViewStyle;\n}\n\nexport const getRowStyles: GetRowStyles = ({\n  hasGutter = true,\n  gutterWidth,\n}) => {\n  return {\n    rowStyle: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n      marginRight: hasGutter ? -gutterWidth / 2 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { ColumnProps } from './Column';\nimport { defaultLayout, useLayout } from './LayoutContext';\nimport { GetRowStyles, getRowStyles } from './Row.styles';\n\nexport interface RowProps {\n  /**\n   * When true, there will be gutter between columns\n   * @default true\n   */\n  hasGutter?: boolean;\n\n  /**\n   * `Column` components\n   */\n  children:\n    | Array<React.ReactElement<ColumnProps>>\n    | React.ReactElement<ColumnProps>;\n\n  /** Callback to get element styles. */\n  getStyles?: GetRowStyles;\n}\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, getStyles } = props;\n  const layout = useLayout();\n  const theme = useTheme();\n\n  const { rowStyle } = mergeStyles(\n    getRowStyles,\n    getStyles,\n    theme.components.getRowStyles,\n  )({ ...layout, ...props }, theme);\n\n  return (\n    <View style={rowStyle}>\n      <GutterWidthContext.Provider value={hasGutter ? layout.gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"row-and-column\"\n    }}>{`Row and Column`}</h1>\n    <p><inlineCode parentName=\"p\">{`Column`}</inlineCode>{` renders at the width of defined columns count. It will match nearest defined size that is smaller than or equal to current screen size.\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` wraps `}<inlineCode parentName=\"p\">{`Column`}</inlineCode>{`s to keep them horizontal`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"row-props\"\n    }}>{`Row Props`}</h2>\n    <Props of={Row} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"row-customization\"\n    }}>{`Row Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RowStyles {\n  rowStyle: ViewStyle;\n}\n\ngetStyles={(RowProps, Theme) => RowStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View rowStyle />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"column-props\"\n    }}>{`Column Props`}</h2>\n    <Props of={Column} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"column-customization\"\n    }}>{`Column Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\ngetStyles={(ColumnProps, Theme) => ColumnStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View columnStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}