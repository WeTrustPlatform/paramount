{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Grid.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.styles.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Visible.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/index.ts"],"names":["_LayoutContext","__webpack_require__","getColumnCount","columns","currentSize","matchedColumn","nearestColumn","currentSizeIndex","DESC_ORDER_LAYOUT_SIZES","indexOf","nearestSize","find","breakpoint","index","getNearestColumn","getProportion","columnCount","gridColumnCount","concat","getColumnStyles","_ref","theme","gutterWidth","offsetColumns","flexBasis","offsetColumnCount","columnStyle","marginLeft","maxWidth","paddingLeft","paddingRight","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Column","_Row","splitColumnConfig","config","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","Column","props","children","getStyles","_objectWithoutProperties2","_useLayout","useLayout","useTheme","useContext","GutterWidthContext","_splitColumnConfig","mergeStyles","createElement","View","style","getContainerStyles","containerWidth","innerWrapperStyle","width","outerWrapperStyle","flexDirection","justifyContent","_Container","Container","_mergeStyles","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","_Box","_Typography","layoutProps","MDXLayout","MDXContent","components","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","CounterContainer","Props","Row","LayoutProvider","Box","Text","paddingVertical","backgroundColor","height","borderWidth","hasGutter","hasMargin","isMDXComponent","defaultLayout","breakpoints","ASC_ORDER_LAYOUT_SIZES","slice","reverse","LayoutContext","createContext","_deepmerge","getCurrentSize","layout","windowScaledSize","Dimensions","get","layoutSize","value","layoutContext","_React$useState","useState","_React$useState2","_slicedToArray2","setCurrentSize","handleDimensionsChange","useCallback","useLayoutEffect","addEventListener","removeEventListener","Provider","_objectSpread2","getRowStyles","margin","rowStyle","flexWrap","marginRight","_props$hasMargin","_props$hasGutter","splitConfig","xsmallUp","xsmallDown","smallUp","smallDown","mediumUp","mediumDown","largeUp","largeDown","xlargeUp","downs","xlargeDown","exacts","ups","Visible","_splitConfig","isVisibleDown","filter","val","length","isVisibleUp","isVisibleExact","isVisible","Object","keys","forEach","key","defineProperty","exports","enumerable","_LayoutProvider","_Visible"],"mappings":"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","file":"static/js/16.b08953f5.js","sourcesContent":["import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { ColumnConfigBase } from './Column';\nimport {\n  ColumnCount,\n  DESC_ORDER_LAYOUT_SIZES,\n  LayoutSize,\n} from './LayoutContext';\n\nexport interface ColumnStylesProps {\n  gutterWidth: number;\n  currentSize: LayoutSize;\n  gridColumnCount: ColumnCount;\n  columns: ColumnConfigBase;\n  offsetColumns: ColumnConfigBase;\n}\n\nexport type GetColumnStyles = (\n  progressStylesProps: ColumnStylesProps,\n  theme: Theme,\n) => ColumnStyles;\n\nexport interface ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\n// Find nearest matching column count\n// when currentSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentSize: LayoutSize,\n) => {\n  const currentSizeIndex = DESC_ORDER_LAYOUT_SIZES.indexOf(currentSize);\n\n  const nearestSize = DESC_ORDER_LAYOUT_SIZES.find((breakpoint, index) => {\n    if (currentSizeIndex >= index) return false;\n\n    return !!columns[breakpoint];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (columns: ColumnConfigBase, currentSize: LayoutSize) => {\n  const matchedColumn = columns[currentSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const getColumnStyles: GetColumnStyles = (\n  { gutterWidth, currentSize, gridColumnCount, columns, offsetColumns },\n  theme,\n) => {\n  const columnCount = getColumnCount(columns, currentSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return {\n    columnStyle: {\n      flexBasis,\n      marginLeft,\n      maxWidth: flexBasis,\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ColumnStyles,\n  GetColumnStyles,\n  getColumnStyles,\n} from './Column.styles';\nimport { ColumnCount, useLayout } from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  xsmall?: ColumnCount;\n  small?: ColumnCount;\n  medium?: ColumnCount;\n  large?: ColumnCount;\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  offsetXsmall?: ColumnCount;\n  offsetSmall?: ColumnCount;\n  offsetMedium?: ColumnCount;\n  offsetLarge?: ColumnCount;\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetColumnStyles, DeepPartial<ColumnStyles>>;\n}\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n\nexport const Column = (props: ColumnProps) => {\n  const { children, getStyles, ...config } = props;\n  const { currentSize, gridColumnCount } = useLayout();\n  const theme = useTheme();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const { columns, offsetColumns } = splitColumnConfig(config);\n  const { columnStyle } = mergeStyles(getColumnStyles, getStyles)(\n    { gutterWidth, currentSize, gridColumnCount, columns, offsetColumns },\n    theme,\n  );\n\n  return <View style={columnStyle}>{children}</View>;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ContainerStylesProps {\n  maxWidth?: number;\n  containerWidth: number;\n}\nexport type GetContainerStyles = (\n  progressStylesProps: ContainerStylesProps,\n  theme: Theme,\n) => ContainerStyles;\n\nexport interface ContainerStyles {\n  outerWrapperStyle: ViewStyle;\n  innerWrapperStyle: ViewStyle;\n}\n\nexport const getContainerStyles: GetContainerStyles = (\n  { maxWidth, containerWidth },\n  theme,\n) => {\n  return {\n    innerWrapperStyle: {\n      maxWidth: maxWidth || containerWidth,\n      width: '100%',\n    },\n    outerWrapperStyle: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ContainerStyles,\n  GetContainerStyles,\n  getContainerStyles,\n} from './Container.styles';\nimport { useLayout } from './LayoutContext';\n\nexport interface ContainerProps {\n  children: React.ReactNode;\n  maxWidth?: number;\n  getStyles?: ReplaceReturnType<\n    GetContainerStyles,\n    DeepPartial<ContainerStyles>\n  >;\n}\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, getStyles, maxWidth } = props;\n  const { maxWidth: containerWidth } = useLayout();\n  const theme = useTheme();\n\n  const { outerWrapperStyle, innerWrapperStyle } = mergeStyles(\n    getContainerStyles,\n    getStyles,\n  )({ maxWidth, containerWidth }, theme);\n\n  return (\n    <View style={outerWrapperStyle}>\n      <View style={innerWrapperStyle}>{children}</View>\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Column, Row, LayoutProvider } from '.';\nimport { Box } from '../Box';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={1}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column medium={8}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={4}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column medium={4}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={4}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={4}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column medium={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column medium={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Column,\n      Row,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={1} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column medium={8} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={4} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column medium={4} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={4} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={4} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column medium={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column medium={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column xsmall={9}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column xsmall={4}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Column,\n      Row,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column xsmall={9} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column xsmall={4} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Row>\\n      <Column offsetXsmall={2} xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n    <Row>\\n      <Column offsetXsmall={4} xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n    <Row>\\n      <Column offsetXsmall={6} xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Column,\n      Row,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row mdxType=\"Row\">\n        <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n      <Row mdxType=\"Row\">\n        <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n      <Row mdxType=\"Row\">\n        <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Row hasGutter={false}>\\n      <Column xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Column,\n      Row,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row hasGutter={false} mdxType=\"Row\">\n        <Column xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-margin\"\n    }}>{`Without margin`}</h3>\n    <Playground __position={4} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Row hasMargin={false}>\\n      <Column xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n      <Column xsmall={6}>\\n        <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n      </Column>\\n    </Row>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Column,\n      Row,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Row hasMargin={false} mdxType=\"Row\">\n        <Column xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n        <Column xsmall={6} mdxType=\"Column\">\n          <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n        </Column>\n      </Row>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface LayoutSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport type Breakpoint = keyof Breakpoints;\nexport type LayoutSize = keyof LayoutSizes;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  maxWidth: number;\n  currentSize: LayoutSize;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1280,\n  },\n  currentSize: 'small',\n  gridColumnCount: 12,\n  gutterWidth: 30,\n  maxWidth: 1440,\n};\n\nexport const ASC_ORDER_LAYOUT_SIZES: Array<keyof LayoutSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_LAYOUT_SIZES: Array<\n  keyof LayoutSizes\n> = ASC_ORDER_LAYOUT_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  DESC_ORDER_LAYOUT_SIZES,\n  LayoutContext,\n  LayoutInterface,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentSize = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentSize = DESC_ORDER_LAYOUT_SIZES.find(layoutSize => {\n    if (layoutSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[layoutSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentSize || 'xsmall';\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n  const layoutContext = React.useContext(LayoutContext);\n  const layout = value ? deepmerge(layoutContext, value) : layoutContext;\n\n  const [currentSize, setCurrentSize] = React.useState(getCurrentSize(layout));\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentSize(getCurrentSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider value={{ ...layout, currentSize }}>\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface RowStyleProps {\n  gutterWidth: number;\n  hasMargin: boolean;\n  hasGutter: boolean;\n}\n\nexport type GetRowStyles = (props: RowStyleProps, theme: Theme) => RowStyles;\n\nexport interface RowStyles {\n  rowStyle: ViewStyle;\n}\n\nexport const getRowStyles: GetRowStyles = ({\n  hasMargin,\n  hasGutter,\n  gutterWidth,\n}) => {\n  // Columns have horizontal paddings that already create the margin\n  // So we manipulate row's margin to get desired result\n  let margin = 0;\n\n  if (hasMargin && !hasGutter) {\n    margin = gutterWidth / 2;\n  } else if (!hasMargin && hasGutter) {\n    margin = -gutterWidth / 2;\n  } else if (hasMargin && hasGutter) {\n    margin = 0;\n  } else if (!hasMargin && !hasGutter) {\n    margin = 0;\n  }\n\n  return {\n    rowStyle: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: margin,\n      marginRight: margin,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { defaultLayout, useLayout } from './LayoutContext';\nimport { GetRowStyles, getRowStyles, RowStyles } from './Row.styles';\n\nexport interface RowProps {\n  children: React.ReactNode;\n  hasGutter?: boolean;\n  hasMargin?: boolean;\n  getStyles?: ReplaceReturnType<GetRowStyles, DeepPartial<RowStyles>>;\n}\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasMargin = true, hasGutter = true, getStyles } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  const { rowStyle } = mergeStyles(getRowStyles, getStyles)(\n    { gutterWidth, hasMargin, hasGutter },\n    theme,\n  );\n\n  return (\n    <View style={rowStyle}>\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  ASC_ORDER_LAYOUT_SIZES,\n  LayoutContext,\n  LayoutSize,\n} from './LayoutContext';\n\nexport interface VisibleConfig {\n  xsmallUp?: boolean;\n  xsmall?: boolean;\n  xsmallDown?: boolean;\n  smallUp?: boolean;\n  small?: boolean;\n  smallDown?: boolean;\n  mediumUp?: boolean;\n  medium?: boolean;\n  mediumDown?: boolean;\n  largeUp?: boolean;\n  large?: boolean;\n  largeDown?: boolean;\n  xlargeUp?: boolean;\n  xlarge?: boolean;\n  xlargeDown?: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children: React.ReactElement;\n}\n\nexport const splitConfig = (config: VisibleConfig) => {\n  const {\n    xsmallUp,\n    xsmall,\n    xsmallDown,\n    smallUp,\n    small,\n    smallDown,\n    mediumUp,\n    medium,\n    mediumDown,\n    largeUp,\n    large,\n    largeDown,\n    xlargeUp,\n    xlarge,\n    xlargeDown,\n  } = config;\n\n  return {\n    downs: [xsmallDown, smallDown, mediumDown, largeDown, xlargeDown],\n    exacts: [xsmall, small, medium, large, xlarge],\n    ups: [xsmallUp, smallUp, mediumUp, largeUp, xlargeUp],\n  };\n};\n\nconst isVisible = (config: VisibleConfig, currentSize: LayoutSize) => {\n  const { downs, ups, exacts } = splitConfig(config);\n\n  const currentSizeIndex = ASC_ORDER_LAYOUT_SIZES.indexOf(currentSize);\n  const isVisibleDown =\n    downs.filter((val, index) => index >= currentSizeIndex && !!val).length > 0;\n\n  const isVisibleUp =\n    ups.filter((val, index) => index <= currentSizeIndex && !!val).length > 0;\n\n  const isVisibleExact = !!exacts.find(\n    (val, index) => index === currentSizeIndex && !!val,\n  );\n\n  return isVisibleDown || isVisibleUp || isVisibleExact;\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentSize } = React.useContext(LayoutContext);\n\n  if (isVisible(config, currentSize)) return children;\n\n  return null;\n};\n","export * from './Column';\nexport * from './Container';\nexport * from './LayoutContext';\nexport * from './LayoutProvider';\nexport * from './Row';\nexport * from './Visible';\n"],"sourceRoot":""}