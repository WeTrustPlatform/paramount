{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButtonWrapper.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePickerItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","color","size","theme","useTheme","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","colors","text","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","NativePicker","NativePickerItem","___WEBPACK_IMPORTED_MODULE_7__","value","_ref2","___WEBPACK_IMPORTED_MODULE_5__","selectedValue","onValueChange","itemValue","itemIndex","getStyles","pickerStyle","itemStyle","___WEBPACK_IMPORTED_MODULE_6__","label","isMDXComponent","getPickerButtonStyles","pickerStylesProps","controlSizeStyles","small","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","textSizeStyles","textSizes","containerStyle","backgroundColor","background","content","position","objectSpread","appearance","borderColor","border","borderWidth","width","rightContainerStyle","alignItems","display","justifyContent","paddingHorizontal","right","zIndex","PickerButtonWrapper","_props$size","_mergeStyles","mergeStyles","react","View","style","Icon_web","NativePickerBase","innerRef","pickerProps","objectWithoutProperties","PickerButtonWrapper_PickerButtonWrapper","NativePicker_jsxFileName","Picker","esm_extends","ref","NativePicker_NativePickerBase","RNPicker","Item","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","flexDirection","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","containerShapes","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"s2BAYO,IAAMA,EAAQ,SAACC,GAAsB,IAClCC,EAA8BD,EAA9BC,SADkCC,EACJF,EAApBG,eADwB,IAAAD,KAAAE,EAEhBC,IAAMC,SAASH,GAFCI,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEnCM,EAFmCH,EAAA,GAE5BI,EAF4BJ,EAAA,GAQ1C,OAAON,EAAS,CAAES,QAAOC,SAJLN,IAAMO,YAAY,SAAAC,GACpCF,EAASE,IACR,6dCFE,IAAMC,EAAO,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,KAC5BC,EAAQC,cAERC,EAAUC,EAAO,KAAAC,OAZzB,SAAyBP,GACvB,IAIMQ,EAASR,EAAKS,QAAQ,UAJV,SAACC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOH,EAAOI,OAAO,GAAGD,cAAgBH,EAAOK,MAAM,GAMxBC,CAAgBd,KAE7C,OACEe,EAAA,cAACV,EAAD,CACEJ,MAAOA,EAAQe,YAAab,EAAMc,OAAOC,KAA1BF,CAAgCf,GAASA,EACxDC,KAAMA,EAFRiB,SAAA,CAAAC,yFAAAC,WAAA,04BCVEC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATzB,GAGZ,IAFD0B,EAEC1B,EAFD0B,WACGzC,EACFQ,OAAAkC,EAAA,EAAAlC,CAAAO,EAAA,gBACD,OAAOP,OAAAmC,EAAA,EAAAnC,CAAC+B,EAAD/B,OAAAoC,EAAA,EAAApC,CAAA,GAAe8B,EAAiBtC,EAAhC,CAAuCyC,WAAYA,EAAYI,QAAQ,YAAvEV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAGL7B,OAAAmC,EAAA,EAAAnC,CAAA,KAAAA,OAAAoC,EAAA,EAAApC,CAAQ,CACNuC,GAAM,gBADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,sBAGA7B,OAAAmC,EAAA,EAAAnC,CAACwC,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,03CAAy8CC,QAAS,CACn/CnD,MAAOoD,KAAOA,KAAKpD,MAAQA,EAC3BqD,eACAC,UACAC,iBACAC,qBACAzD,WACC8C,QAAQ,aAPXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAQF7B,OAAAmC,EAAA,EAAAnC,CAACiD,EAAA,EAAD,CAAOtD,QAAS,CACVuD,MAAO,MACNb,QAAQ,QAFfV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAGG,SAAAsB,GAAA,IACKjD,EADLiD,EACKjD,MACAC,EAFLgD,EAEKhD,SAFL,OAGSH,OAAAmC,EAAA,EAAAnC,CAACoD,EAAA,EAAD,CAAcC,cAAenD,EAAMgD,MAAOI,cAAe,SAACC,EAAWC,GAAZ,OAA0BrD,EAAS,CAChG+C,MAAOK,KACL7C,KAAK,QAAQ+C,UAAW,SAACjE,EAAOmB,GAAR,MAAmB,CAC7C+C,YAAa,GACbC,UAAW,KACTtB,QAAQ,eALNV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAMN7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,IAAIX,MAAM,IAAIb,QAAQ,mBAA9CV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,KAAKX,MAAM,KAAKb,QAAQ,mBAAhDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,MAAMX,MAAM,MAAMb,QAAQ,mBAAlDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,MAAMX,MAAM,MAAMb,QAAQ,mBAAlDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,SAASX,MAAM,SAASb,QAAQ,mBAAxDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,MAAMX,MAAM,MAAMb,QAAQ,mBAAlDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,SAASX,MAAM,SAASb,QAAQ,mBAAxDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,KAAKX,MAAM,KAAKb,QAAQ,mBAAhDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,UAAUX,MAAM,UAAUb,QAAQ,mBAA1DV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,OAAOX,MAAM,OAAOb,QAAQ,mBAApDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,OAAOX,MAAM,OAAOb,QAAQ,mBAApDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,aAAaX,MAAM,KAAKb,QAAQ,mBAAxDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,MAAMX,MAAM,MAAMb,QAAQ,mBAAlDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,SAASX,MAAM,SAASb,QAAQ,mBAAxDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,IAAIX,MAAM,IAAIb,QAAQ,mBAA9CV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,OAAOX,MAAM,OAAOb,QAAQ,mBAApDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,OAAOX,MAAM,OAAOb,QAAQ,mBAApDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,SAASX,MAAM,QAAQb,QAAQ,mBAAvDV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACA7B,OAAAmC,EAAA,EAAAnC,CAAC4D,EAAA,EAAD,CAAkBC,MAAM,aAAaX,MAAM,aAAab,QAAQ,mBAAhEV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,wMAORG,EAAW8B,gBAAiB,gkDCnDrB,IAAMC,EAA+C,SAC1DC,EACArD,GACG,IACKD,EAASsD,EAATtD,KAEFuD,EAAoB,CACxBC,MAAO,CACLC,aAAcxD,EAAMyD,oBAAoBF,MACxCG,OAAQ1D,EAAM2D,eAAeJ,MAC7BK,YAAa5D,EAAM6D,gBAAgBN,MACnCO,aAAc,IAGhBC,OAAQ,CACNP,aAAcxD,EAAMyD,oBAAoBM,OACxCL,OAAQ1D,EAAM2D,eAAeI,OAC7BH,YAAa5D,EAAM6D,gBAAgBE,OACnCD,aAAc,IAGhBE,MAAO,CACLR,aAAcxD,EAAMyD,oBAAoBO,MACxCN,OAAQ1D,EAAM2D,eAAeK,MAC7BJ,YAAa5D,EAAM6D,gBAAgBG,MACnCF,aAAc,KAEhB/D,GAEIkE,EAAiBjE,EAAMkE,UAAUnE,GAEvC,MAAO,CACLoE,eAAgB,CACdC,gBAAiBpE,EAAMc,OAAOuD,WAAWC,QACzCC,SAAU,YAEZvB,UAAU3D,OAAAmF,EAAA,EAAAnF,CAAA,GACL4E,GAELlB,YAAY1D,OAAAmF,EAAA,EAAAnF,CAAA,CACVoF,WAAY,OACZL,gBAAiB,cACjBM,YAAa1E,EAAMc,OAAO6D,OAAb,QACbC,YAAa,EACb9E,MAAOE,EAAMc,OAAOC,KAAb,QACP8D,MAAO,QACJZ,EACAX,GAELwB,oBAAqB,CACnBC,WAAY,SACZC,QAAS,OACTtB,OAAQ,OACRuB,eAAgB,SAChBC,kBAAmB,EACnBX,SAAU,WACVY,MAAO,EACPC,QAAS,uxBC9DR,IAAMC,EAAsB,SAACxG,GAAoC,IAC9DiE,EAAyCjE,EAAzCiE,UAAWhE,EAA8BD,EAA9BC,SADmDwG,EACrBzG,EAApBkB,YADyC,IAAAuF,EAClC,SADkCA,EAEhEtF,EAAQC,cAFwDsF,EAItBC,YAC9CpC,EACAN,EACA9C,EAAMsB,WAAW8B,sBAH6BoC,CAI9C,CAAEzF,QAAQC,GAJJmE,EAJ8DoB,EAI9DpB,eAAgBW,EAJ8CS,EAI9CT,oBAMxB,OACEW,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOxB,EAAbnD,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACGpC,EACD2G,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOb,EAAb9D,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEuE,EAAA,cAACG,EAAA,EAAD,CAAM/F,KAAK,eAAeE,KAAM,GAAID,MAAOE,EAAMc,OAAOC,KAAb,QAA3CC,SAAA,CAAAC,SAAAU,EAAAT,WAAA,+oBCTR,IAAM2E,EAAmB,SAAChH,GAA6B,IAAAyG,EACYzG,EAAzDkB,YAD6C,IAAAuF,EACtC,SADsCA,EAC5BxC,EAAwCjE,EAAxCiE,UAAWgD,EAA6BjH,EAA7BiH,SAAaC,EADI1G,OAAA2G,EAAA,EAAA3G,CACYR,EADZ,iCAE/CmB,EAAQC,cAFuCsF,EAIlBC,YACjCpC,EACAN,EAFiC0C,CAGjC,CAAEzF,QAAQC,GAHJ+C,EAJ6CwC,EAI7CxC,YAAaC,EAJgCuC,EAIhCvC,UAKrB,OACEyC,EAAA,cAACQ,EAAD,CAAAjF,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KACEuE,EAAA,cAACU,EAAA,EAAD9G,OAAA+G,EAAA,EAAA/G,CAAA,CACEgH,IAAKP,EACL9C,UAAWA,EACX2C,MAAO5C,GACHgD,EAJN,CAAA/E,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,SAUOkB,EAAelD,aAC1B,SAACL,EAAOwH,GACN,OAAOZ,EAAA,cAACa,EAADjH,OAAA+G,EAAA,EAAA/G,CAAA,GAAsBR,EAAtB,CAA6BiH,SAAUO,EAAvCrF,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,kvBCtCJ,IAAMmB,EAAmBkE,IAASC,o3CC+BlC,IAAMC,EAAgB,SAACC,GAAD,OAAgC,SAC3DC,GAD2D,OAExDD,EAAaC,8NAEX,IAAMC,EAAgB,SAACC,GAAD,OAA8B,SACzDC,GAEA,GAAKA,EAKL,OAHyBD,EAAYC,IAGVA,6NAGtB,IAAMjG,EAAe,SAACkG,GAAD,OAA4B,SACtDC,GAKA,OAFoBD,EAAWC,IAETA,4NAGjB,IAAMC,EAAc,SAAC/C,GAAD,OAA0B,SACnDnE,GAKA,OAFuBmE,EAAUnE,IAER,CAAEmH,SAAUnH,oMAGhC,IAAMoH,EAA+B,SAAAvH,EAE1CI,GACG,IAFDD,EAECH,EAFDG,KAAMD,EAELF,EAFKE,MAAO6G,EAEZ/G,EAFY+G,WAAYS,EAExBxH,EAFwBwH,SAAUC,EAElCzH,EAFkCyH,SAAUC,EAE5C1H,EAF4C0H,MAAOC,EAEnD3H,EAFmD2H,UAAWC,EAE9D5H,EAF8D4H,OAG3DC,EAAYR,EAAYjH,EAAMkE,UAAlB+C,CAA6BlH,GAE/C,MAAO,CACL2H,UAAUrI,OAAAsI,EAAA,EAAAtI,CAAA,GACLoI,EADI,CAEP3H,MAAOe,EAAab,EAAMc,OAAOC,KAA1BF,CAAgCf,GACvC6G,WAAYF,EAAczG,EAAM0G,aAApBD,CAAkCE,GAC9CG,WACEF,EAAc5G,EAAM6G,YAApBD,CAAiCY,IAAWC,EAAUX,WACxDc,UAAWN,GACPF,EACA,CACES,UAAW,aACXC,cAAe,OAEjB,GACAT,GAAY,CACdU,UAAW,UAETR,GAAa,CACfS,cAAeT,26BCxER,IAAAU,EACJ,CACPC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WANEL,EASP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAdEL,EAiBR,CACHC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtBEL,EAyBL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9BEL,EAiCL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtCEL,EAyCN,CACLC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9CEL,EAiDP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtDEL,EAyDL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,0rDChEb,IAgBM7E,EAAoC,CACxCF,MAAO,EAEPQ,OAAQ,EAERC,MAAO,GAGHlD,EAAiB,CACrBuD,WAAY,CACV+D,KAAM,QACN9D,QAAS,QACTiE,QAAS,kBAETC,UAAWP,EAAgBC,SAC3BO,YAAa,UACbC,SAAUT,EAAgBE,MAE1BQ,aAAcV,EAAaC,SAC3BU,eAAgBX,EAAaG,KAC7BS,YAAaZ,EAAaI,KAE1BS,eAAgBb,EAAeC,SAC/Ba,iBAAkBd,EAAeG,KACjCY,cAAef,EAAeI,KAE9BY,YAAahB,EAAYC,SACzBgB,cAAejB,EAAYG,KAC3Be,WAAYlB,EAAYI,KAExBe,UAAWnB,EAAaC,SACxBmB,YAAapB,EAAaG,KAC1BkB,SAAUrB,EAAaI,KAEvBkB,aAActB,EAAcC,SAC5BsB,eAAgBvB,EAAcG,KAC9BqB,YAAaxB,EAAcI,KAE3BqB,aAAczB,EAAeC,SAC7ByB,eAAgB1B,EAAeG,KAC/BwB,YAAa3B,EAAeI,MAG9B1D,OAAQ,CACNkF,QAAS5B,EAAgBE,MAEzB2B,QAAS7B,EAAaK,QACtByB,UAAW9B,EAAeK,QAE1B0B,OAAQ/B,EAAYK,QACpB2B,KAAMhC,EAAaK,QACnB4B,QAASjC,EAAcK,QACvB6B,QAASlC,EAAeK,SAG1B8B,OAAQ,CACNC,SAAUpC,EAAgBE,MAC1BmC,aAAcrC,EAAgBK,QAE9BuB,QAAS5B,EAAgBC,SACzBqC,YAAatC,EAAgBK,QAE7BwB,QAAS7B,EAAaG,KACtBoC,YAAa,QAEbT,UAAW9B,EAAeG,KAC1BqC,cAAe,QAEfT,OAAQ/B,EAAYG,KACpBsC,WAAY,SAGd3J,KAAM,CACJ4J,KAAM1C,EAAgBK,QACtBuB,QAAS5B,EAAgBK,QACzBsC,MAAO3C,EAAgBI,KACvBwC,MAAO,QACPC,SAAU,QAEVhB,QAAS7B,EAAaK,QACtByB,UAAW9B,EAAeK,QAE1B0B,OAAQ/B,EAAYK,QACpB2B,KAAMhC,EAAaK,QACnB4B,QAASjC,EAAcK,QACvB6B,QAASlC,EAAeK,UAItByC,EAAyB,CAC7B,CACEC,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,EACfC,aAAc,GAEhB,CACEJ,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,IACfC,aAAc,GAEhB,CACEJ,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,GACfC,aAAc,IAEhB,CACEJ,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,IACfC,aAAc,IAEhB,CACEJ,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,GACfC,aAAc,GAEhB,CACEJ,UAAW,EACXC,YAAahD,EAAgBI,KAC7B6C,aAAc,CAAErG,MAAO,EAAGnB,OAAQ,GAClCyH,cAAe,IACfC,aAAc,IAmNLC,EAAsB,CACjCvK,SACAwK,MAjNmB,CACnBC,MAAO,CACLC,QAAS,CACPpH,gBAAiB6D,EAAgBG,KACjCtI,MAAO,SAGT2L,KAAM,CACJrH,gBAAiB6D,EAAaG,KAC9BtI,MAAO,SAGT4L,IAAK,CACHtH,gBAAiB6D,EAAYG,KAC7BtI,MAAO,SAGT6L,OAAQ,CACNvH,gBAAiB6D,EAAeG,KAChCtI,MAAO,SAGT8L,OAAQ,CACNxH,gBAAiB6D,EAAeG,KAChCtI,MAAOmI,EAAeK,SAGxBuD,MAAO,CACLzH,gBAAiB6D,EAAcG,KAC/BtI,MAAO,SAGTgM,KAAM,CACJ1H,gBAAiB6D,EAAaG,KAC9BtI,MAAO,SAGTiM,OAAQ,CACN3H,gBAAiB6D,EAAeG,KAChCtI,MAAO,UAIXkM,OAAQ,CACNR,QAAS,CACPpH,gBAAiB6D,EAAgBE,MACjCrI,MAAOmI,EAAgBK,SAGzBmD,KAAM,CACJrH,gBAAiB6D,EAAaE,MAC9BrI,MAAOmI,EAAaK,SAGtBoD,IAAK,CACHtH,gBAAiB6D,EAAYE,MAC7BrI,MAAOmI,EAAYK,SAGrBqD,OAAQ,CACNvH,gBAAiB6D,EAAeE,MAChCrI,MAAOmI,EAAeK,SAGxBsD,OAAQ,CACNxH,gBAAiB6D,EAAeE,MAChCrI,MAAOmI,EAAeK,SAGxBuD,MAAO,CACLzH,gBAAiB6D,EAAcE,MAC/BrI,MAAOmI,EAAcK,SAGvBwD,KAAM,CACJ1H,gBAAiB6D,EAAaE,MAC9BrI,MAAOmI,EAAaK,SAGtByD,OAAQ,CACN3H,gBAAiB6D,EAAeE,MAChCrI,MAAOmI,EAAeK,WAkI1B5B,aA3HgB,QAAhBuF,IAASC,GACL,CACEC,QAAO,iKACPC,KAAI,mGACJrL,KAAI,+JAEN,CACEoL,QAAS,SACTC,KAAM,SACNrL,KAAM,UAmHZ8F,YAhH+B,CAC/BwF,KAAM,OACNlE,MAAO,MACPmE,OAAQ,UA+GRC,aA5GiC,CACjCC,SAAU,CACRtF,SAAU,GACVuF,eAAgB,GAChBC,WAAY,IAGdC,QAAS,CACPzF,SAAU,GACVuF,eAAgB,GAChBC,WAAY,IAGdE,OAAQ,CACN1F,SAAU,GACVuF,eAAgB,IAChBC,WAAY,IAGd1I,MAAO,CACLkD,SAAU,GACVuF,eAAgB,IAChBC,WAAY,IAGd3I,OAAQ,CACNmD,SAAU,GACVuF,eAAgB,IAChBC,WAAY,IAGdnJ,MAAO,CACL2D,SAAU,GACVuF,eAAgB,IAChBC,WAAY,KA2EdG,eAvEqC,CACrCtJ,MAAO,CACL2D,SAAU,GACVwF,WAAY,IAGd3I,OAAQ,CACNmD,SAAU,GACVwF,WAAY,IAGd1I,MAAO,CACLkD,SAAU,GACVwF,WAAY,KA2DdxI,UAvD2B,CAC3BF,MAAO,CACLkD,SAAU,IAEZnD,OAAQ,CACNmD,SAAU,IAEZ3D,MAAO,CACL2D,SAAU,IAEZ4F,OAAQ,CACN5F,SAAU,KA8CZ6D,aAEAtH,sBACAE,eA3WmC,CACnCJ,MAAO,GAEPQ,OAAQ,GAERC,MAAO,IAuWPH,gBApXoC,CACpCN,MAAO,EAEPQ,OAAQ,GAERC,MAAO,IAiXP+I,gBAhDuC,CACvCC,OAAQ,CACNxJ,aAAc,KAEhByJ,KAAM,CACJzJ,aAAc,KAEhB0J,QAAS,CACP1J,aAAcC,EAAoBM,QAEpCoJ,cAAe,CACbC,uBAAwB3J,EAAoBM,OAC5CsJ,wBAAyB5J,EAAoBM,QAE/CuJ,YAAa,CACXF,uBAAwB3J,EAAoBM,OAC5CwJ,oBAAqB9J,EAAoBM,QAE3CyJ,aAAc,CACZH,wBAAyB5J,EAAoBM,OAC7C0J,qBAAsBhK,EAAoBM,QAE5C2J,WAAY,CACVH,oBAAqB9J,EAAoBM,OACzC0J,qBAAsBhK,EAAoBM,QAE5C4J,OAAQ,CACNnK,aAAc,IAuBhBlC,WAAY,utQCtGP,IAAMsM,EAAe1O,IAAM2O,cAAcxC,qfAOzC,IAAMyC,EAAc,SAAC9N,GAC1B,OAAOA,EACH+N,IAAiB1C,EAAcrL,GAC/BqL,6KAGC,IAAM2C,EAAgB,SAACnP,GAA8B,IAClDC,EAAmCD,EAAnCC,SADkDmP,EACfpP,EAAzB0D,MAEZvC,EAAQ8N,OAH4C,IAAAG,EAChC5C,EADgC4C,GAK1D,OACEC,EAAAC,EAAAC,cAACR,EAAaS,SAAd,CAAuB9L,MAAOvC,EAA9BgB,SAAA,CAAAC,4EAAAC,WAAA,MAAsCpC,gLAInC,IAAMmB,EAAW,WACtB,OAAOf,IAAMoP,WAAWV,8PC7T1BW,EAAAC,EAAAC,EAAA,sBAAAjJ,IAAA,IAAAkJ,EAAAH,EAAA,wCAAAI,EAAAJ,EAAAK,EAAAF,szBAiBO,IAAMlJ,EAAc,SACzBqJ,EACAC,EACAC,GAHyB,OAItB,SAAClQ,EAAoBmB,GACxB,IAEMgP,EAAkC,CAFlBH,EAAiBhQ,EAAOmB,IAY9C,OARI+O,GACFC,EAAOC,KAAKF,EAAelQ,EAAOmB,IAGhC8O,GACFE,EAAOC,KAAKH,EAAoBjQ,EAAOmB,IAGlCkP,IAAMC,IAAaH","file":"static/js/21.394fbb2d.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { NativePicker, NativePickerItem, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"nativepicker\"\n    }}>{`NativePicker`}</h1>\n    <Playground __position={0} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <NativePicker\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      size=\\\"large\\\"\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <NativePickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <NativePickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <NativePickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <NativePickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <NativePickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <NativePickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <NativePickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <NativePickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <NativePickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <NativePickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <NativePickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <NativePickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <NativePickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <NativePickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <NativePickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <NativePickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <NativePickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <NativePickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <NativePickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </NativePicker>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      NativePicker,\n      NativePickerItem,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'js'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <NativePicker selectedValue={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} size=\"large\" getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {}\n        })} mdxType=\"NativePicker\">\n        <NativePickerItem label=\"C\" value=\"c\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"C#\" value=\"c#\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"C++\" value=\"c++\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"CSS\" value=\"css\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Elixir\" value=\"elixir\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Elm\" value=\"elm\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Erlang\" value=\"erlang\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Go\" value=\"go\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Haskell\" value=\"haskell\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"HTML\" value=\"html\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Java\" value=\"java\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"JavaScript\" value=\"js\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Lua\" value=\"lua\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Python\" value=\"python\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"R\" value=\"r\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Ruby\" value=\"ruby\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Rust\" value=\"rust\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Switft\" value=\"swift\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Typescript\" value=\"typescript\" mdxType=\"NativePickerItem\" />\n      </NativePicker>}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport interface PickerButtonStylesProps {\n  size: ControlSize;\n}\n\nexport type GetPickerButtonStyles = (\n  pickerStylesProps: PickerButtonStylesProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  pickerStylesProps,\n  theme,\n) => {\n  const { size } = pickerStylesProps;\n\n  const controlSizeStyles = {\n    small: {\n      borderRadius: theme.controlBorderRadius.small,\n      height: theme.controlHeights.small,\n      paddingLeft: theme.controlPaddings.small,\n      paddingRight: 40,\n    },\n\n    medium: {\n      borderRadius: theme.controlBorderRadius.medium,\n      height: theme.controlHeights.medium,\n      paddingLeft: theme.controlPaddings.medium,\n      paddingRight: 40,\n    },\n\n    large: {\n      borderRadius: theme.controlBorderRadius.large,\n      height: theme.controlHeights.large,\n      paddingLeft: theme.controlPaddings.large,\n      paddingRight: 40,\n    },\n  }[size];\n\n  const textSizeStyles = theme.textSizes[size];\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      appearance: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      width: '100%',\n      ...textSizeStyles,\n      ...controlSizeStyles,\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  getStyles?: PickerButtonGetStylesProp;\n  size?: ControlSize;\n  children: React.ReactNode;\n}\n\nexport const PickerButtonWrapper = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children, size = 'medium' } = props;\n  const theme = useTheme();\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n    theme.components.getPickerButtonStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon name=\"chevron-down\" size={32} color={theme.colors.text.default} />\n      </View>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Picker as RNPicker, PickerProps as RNPickerProps } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { NativePickerItemProps } from './NativePickerItem';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\nimport { PickerButtonWrapper } from './PickerButtonWrapper';\n\nexport interface NativePickerProps extends RNPickerProps {\n  children: Array<React.ReactElement<NativePickerItemProps>>;\n  size?: ControlSize;\n  innerRef?: React.Ref<RNPicker>;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: PickerButtonGetStylesProp;\n}\n\nconst NativePickerBase = (props: NativePickerProps) => {\n  const { size = 'medium', getStyles, innerRef, ...pickerProps } = props;\n  const theme = useTheme();\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper>\n      <RNPicker\n        ref={innerRef}\n        itemStyle={itemStyle}\n        style={pickerStyle}\n        {...pickerProps}\n      />\n    </PickerButtonWrapper>\n  );\n};\n\nexport const NativePicker = React.forwardRef<RNPicker, NativePickerProps>(\n  (props, ref) => {\n    return <NativePickerBase {...props} innerRef={ref} />;\n  },\n);\n","import { Picker as RNPicker, PickerItemProps } from 'react-native';\n\n// tslint:disable-next-line\nexport interface NativePickerItemProps extends PickerItemProps {}\n\nexport const NativePickerItem = RNPicker.Item;\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}