{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","DESC_ORDER_SCREEN_SIZES","LayoutContext","useLayout","react__WEBPACK_IMPORTED_MODULE_0__","breakpoints","small","medium","large","xlarge","containerSizes","currentScreenSize","getResponsiveValue","values","xsmall","undefined","gridColumnCount","gutterWidth","slice","reverse","React","getCurrentScreenSize","layout","windowScaledSize","Dimensions","get","find","screenSize","width","LayoutProvider","value","deepmerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","currentScreenSizeIndex","indexOf","nearestSize","index","deriveResponsiveValue","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Visible","Text","___WEBPACK_IMPORTED_MODULE_7__","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_5__","height","___WEBPACK_IMPORTED_MODULE_8__","align","of","isMDXComponent","config","visibles","combineConfig","val","isVisible","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","size","fontSize","getTextStyles","isInline","isItalic","transform","weight","sizeStyle","textStyle","text","textAlign","alignSelf","flexDirection","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","getStyles","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","mergeStyles","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","controlBorderRadius","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/13.8b73c375.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport interface ContainerSizes {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ContainerSize = keyof ContainerSizes;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  containerSizes: ContainerSizes;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  LayoutContext,\n  LayoutInterface,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentScreenSize = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!values[screenSize];\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepmerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Visible, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"visible\"\n    }}>{`Visible`}</h1>\n    <p>{`Renders the children if the current screen size matches any of defined size prop`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Visible large xlarge>\\n    <Box backgroundColor=\\\"#67c6bb\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Large and greater\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible medium>\\n    <Box backgroundColor=\\\"#1ca5F7\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Medium\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible xsmall small>\\n    <Box backgroundColor=\\\"#d26557\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Small and lower\\n      </Text>\\n    </Box>\\n  </Visible>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Visible,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Visible large xlarge mdxType=\"Visible\">\n      <Box backgroundColor=\"#67c6bb\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Large and greater\n        </Text>\n      </Box>\n    </Visible>\n    <Visible medium mdxType=\"Visible\">\n      <Box backgroundColor=\"#1ca5F7\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Medium\n        </Text>\n      </Box>\n    </Visible>\n    <Visible xsmall small mdxType=\"Visible\">\n      <Box backgroundColor=\"#d26557\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Small and lower\n        </Text>\n      </Box>\n    </Visible>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Visible} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport {\n  ASC_ORDER_SCREEN_SIZES,\n  LayoutContext,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface VisibleConfig {\n  xsmall?: boolean;\n  small?: boolean;\n  medium?: boolean;\n  large?: boolean;\n  xlarge?: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children: React.ReactElement;\n}\n\nconst combineConfig = (config: VisibleConfig) => {\n  const { xsmall, small, medium, large, xlarge } = config;\n\n  return [xsmall, small, medium, large, xlarge];\n};\n\nconst isVisible = (config: VisibleConfig, currentScreenSize: ScreenSize) => {\n  const visibles = combineConfig(config);\n  const currentScreenSizeIndex = ASC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  return !!visibles.find(\n    (val, index) => index === currentScreenSizeIndex && !!val,\n  );\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentScreenSize } = React.useContext(LayoutContext);\n\n  if (isVisible(config, currentScreenSize)) return children;\n\n  return null;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}