{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_react2","_interopRequireDefault","_docz","_Divider","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","Props","Divider","paddingVertical","size","position","getStyles","dividerStyle","of","isMDXComponent","getDividerColor","borderColors","borderColor","getDividerStyles","border","styleMap","horizontal","height","width","vertical","_mergeStyles2","_props$position","mergeStyles","_deepmerge","_react","_defaultTheme","ThemeContext","createContext","defaultTheme","createTheme","ThemeProvider","_props$value","value","Provider","useContext","_palette","base","content","overlay","greyLight","palette","neutral","lightest","greyDefault","greyDark","light","primaryLight","teal","primaryDefault","primaryDark","dark","secondaryLight","orange","secondaryDefault","secondaryDark","dangerLight","red","dangerDefault","dangerDark","infoLight","blue","infoDefault","infoDark","successLight","green","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","darkest","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","text","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fills","solid","yellow","purple","subtle","fontFamilies","Platform","OS","heading","mono","undefined","fontWeights","bold","normal","headingSizes","xxxlarge","fontSize","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","paragraphSizes","textSizes","controlBorderRadius","controlHeights","controlPaddings","_Theme","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/19.91bf2bdc.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","export * from './Box';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Divider } from './Divider';\nimport { Box } from '../Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box paddingVertical={40}>\\n  <Divider\\n    size={3}\\n    color=\\\"#67c6bb\\\"\\n    position=\\\"horizontal\\\"\\n    getStyles={(props, theme) => ({\\n      dividerStyle: {},\\n    })}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Divider,\n      Box\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={40} mdxType=\"Box\">\n    <Divider size={3} color=\"#67c6bb\" position=\"horizontal\" getStyles={(props, theme) => ({\n          dividerStyle: {}\n        })} mdxType=\"Divider\" />\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Divider} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { BorderColor, BorderColors, Theme } from '../../theme/Theme';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: BorderColor;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerColor = (borderColors: BorderColors) => (\n  borderColor: BorderColor,\n) => {\n  // @ts-ignore\n  const presetColor = borderColors[borderColor] as string | undefined;\n\n  return presetColor || borderColor;\n};\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const backgroundColor = getDividerColor(theme.colors.border)(\n    color || theme.colors.border.default,\n  );\n\n  const styleMap = {\n    horizontal: {\n      backgroundColor,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { BorderColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: BorderColor | string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nexport const Divider = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = useTheme();\n\n  const { dividerStyle } = mergeStyles(\n    getDividerStyles,\n    getStyles,\n    theme.components.getDividerStyles,\n  )({ size, color, position }, theme);\n\n  return <View style={dividerStyle} />;\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","export * from './defaultTheme';\nexport * from './Theme';\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}