{"version":3,"sources":["webpack:///./src/components/Calendars/Month/MonthBody.tsx","webpack:///./src/components/Calendars/Month/MonthDay.tsx","webpack:///./src/components/Calendars/Month/MultiMonthCalendar.mdx","webpack:///./src/components/Calendars/Month/MultiMonthCalendar.tsx","webpack:///./src/components/Calendars/Month/constants.ts","webpack:///./src/components/Calendars/Month/utils/chunk.ts","webpack:///./src/components/Calendars/Month/utils/getWeeksInMonth.ts","webpack:///./src/components/Calendars/constants.ts","webpack:///./src/components/Calendars/utils.ts"],"names":["_dateFns","__webpack_require__","React","_interopRequireWildcard","_theme","_Layout","_constants","_MonthDay","_interopRequireDefault","MonthBody","props","onSelect","month","theme","useTheme","createElement","Box","weeks","map","week","flexDirection","key","index","days","day","date","isCurrentMonth","isSelected","isSelectedStart","isSelectedEnd","flex","justifyContent","alignItems","format","DATE_FORMAT","default","isSelectionStart","isSelectionEnd","toISOString","paddingVertical","zIndex","backgroundColor","colors","background","primaryDark","height","width","memo","prevProps","nextProps","selectedRange","displayName","__docgenInfo","description","defaultValue","name","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_reactNative","_Typography","MonthDay","_props$onSelect","TouchableHighlight","style","underlayColor","onPress","View","DEFAULT_MONTH_DAY_HEIGHT","position","right","left","borderRadius","Text","color","_react","_tag","_docz","_reactPowerplug","_MultiMonthCalendar","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","MDXTag","id","Playground","__position","__code","__scope","addMonths","subMonths","isBefore","isAfter","State","MultiMonthCalendar","initial","selectedStartDate","selectedEndDate","_ref","_ref$state","state","setState","startMonthDate","Date","endMonthDate","PropsTable","of","Component","_utils","_MonthBody","_getWeeksInMonth","_props$firstDayOfWeek","firstDayOfWeekIndex","DEFAULT_FIRST_DAY_OF_WEEK","_props$startMonthDate","_props$endMonthDate","_props$selectedStartD","propSelectedStartDate","_props$selectedEndDat","propSelectedEndDate","_marshalTimeRange","marshalTimeRange","_marshalTimeRange2","_slicedToArray2","startDate","endDate","Error","_marshalTimeRange3","_marshalTimeRange4","months","getWeeksInMultiMonth","formattedMonth","Spacing","Heading","size","array","Math","max","length","resIndex","result","Array","ceil","slice","_chunk","getMonthDatesFromDate","eachDay","startOfMonth","endOfMonth","getDatesBefore","startOfMonthDate","firstDayOfWeek","getFirstDayOfWeek","beforeDates","fromDate","getDay","addDays","subDays","getDatesAfter","endOfMonthDate","afterDates","lastDayOfWeek","getLastDayOfWeek","toDate","monthPageInDates","monthDates","concat","chunkBySeven","chunk","monthDate","arguments","undefined","transformDateToDay","getDaysInMonth","currentDays","selectedStartDateIndex","findIndex","isSameDay","isSelectedStartDateWithinMonth","selectedEndDateIndex","isSelectedEndDateWithinMonth","beforeSelectedDays","selectedDays","afterSelectedDays","_objectSpread2","getCurrentMonthDays","beforeDays","hasSelectedDatesBeforeMonth","getBeforeMonthDays","afterDays","hasSelectedDatesAfterMonth","getAfterMonthDays","getWeeksInMonth","getISOWeek","monthsCount","differenceInMonths","monthsDates","push","getMonthsDates","isWithinRange","areRangesOverlapping","console","error"],"mappings":"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","file":"static/js/21.3c7729f0.js","sourcesContent":["import { format } from 'date-fns';\nimport * as React from 'react';\n\nimport { useTheme } from '../../../theme';\nimport { Box } from '../../Layout';\nimport { Month } from '../types';\nimport { DATE_FORMAT } from './constants';\nimport MonthDay, { MonthDayBaseProps } from './MonthDay';\n\nexport interface MonthBodyProps extends MonthDayBaseProps {\n  month: Month;\n}\n\nconst MonthBody = (props: MonthBodyProps) => {\n  const { onSelect, month } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Box>\n      {month.weeks.map(week => (\n        <Box flexDirection=\"row\" key={week.index}>\n          {week.days.map(day => {\n            const {\n              date,\n              isCurrentMonth,\n              isSelected,\n              isSelectedStart,\n              isSelectedEnd,\n            } = day;\n\n            if (!isCurrentMonth) {\n              return (\n                <Box\n                  flex={1}\n                  justifyContent=\"center\"\n                  alignItems=\"flex-start\"\n                  key={date.toISOString()}\n                  paddingVertical={4}\n                  zIndex={-1}\n                >\n                  <Box\n                    backgroundColor={\n                      isSelected\n                        ? theme.colors.background.primaryDark\n                        : 'transparent'\n                    }\n                    flex={1}\n                    height={40}\n                    width=\"100%\"\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <Box\n                flex={1}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                key={format(date, DATE_FORMAT)}\n              >\n                <MonthDay\n                  onSelect={onSelect}\n                  date={date}\n                  isSelected={isSelected}\n                  isSelectionStart={isSelectedStart}\n                  isSelectionEnd={isSelectedEnd}\n                />\n              </Box>\n            );\n          })}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nconst propsAreEqual = (\n  prevProps: MonthBodyProps,\n  nextProps: MonthBodyProps,\n) => {\n  return (\n    prevProps.month.selectedRange === nextProps.month.selectedRange &&\n    prevProps.onSelect === nextProps.onSelect\n  );\n};\n\nexport default React.memo(MonthBody, propsAreEqual);\ntry {\n    // @ts-ignore\n    MonthBody.displayName = \"MonthBody\";\n    // @ts-ignore\n    MonthBody.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthBody\", \"props\": { \"month\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"month\", \"required\": true, \"type\": { \"name\": \"Month\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthBody.tsx#MonthBody\"] = { docgenInfo: MonthBody.__docgenInfo, name: \"MonthBody\", path: \"src/components/Calendars/Month/MonthBody.tsx#MonthBody\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { TouchableHighlight, View } from 'react-native';\n\nimport { useTheme } from '../../../theme';\nimport { Text } from '../../Typography';\nimport { DEFAULT_MONTH_DAY_HEIGHT } from './constants';\n\nexport interface MonthDayBaseProps {\n  onSelect?: (date: Date) => void;\n}\n\nexport interface MonthDayProps extends MonthDayBaseProps {\n  date: Date;\n  isSelected: boolean;\n  isSelectionStart: boolean;\n  isSelectionEnd: boolean;\n}\n\nconst MonthDay = (props: MonthDayProps) => {\n  const {\n    isSelected,\n    isSelectionStart,\n    isSelectionEnd,\n    date,\n    onSelect = () => null,\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableHighlight\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        paddingVertical: 4,\n        width: '100%',\n      }}\n      underlayColor=\"transparent\"\n      onPress={() => onSelect(date)}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          backgroundColor:\n            isSelected && !isSelectionStart && !isSelectionEnd\n              ? theme.colors.background.primaryDark\n              : 'transparent',\n          flex: 1,\n          flexDirection: 'row',\n          height: DEFAULT_MONTH_DAY_HEIGHT - 4,\n          justifyContent: 'center',\n          position: 'relative',\n        }}\n      >\n        {isSelectionStart && !isSelectionEnd && (\n          <View\n            style={{\n              backgroundColor: theme.colors.background.primaryDark,\n              height: '100%',\n              position: 'absolute',\n              right: 0,\n              width: '50%',\n            }}\n          />\n        )}\n        {isSelectionEnd && !isSelectionStart && (\n          <View\n            style={{\n              backgroundColor: theme.colors.background.primaryDark,\n              height: '100%',\n              left: 0,\n              position: 'absolute',\n              width: '50%',\n            }}\n          />\n        )}\n        <View\n          style={{\n            alignItems: 'center',\n            backgroundColor: isSelected\n              ? theme.colors.background.primaryDark\n              : 'transparent',\n            borderRadius: 999,\n            flexDirection: 'row',\n            height: DEFAULT_MONTH_DAY_HEIGHT - 4,\n            justifyContent: 'center',\n            width: DEFAULT_MONTH_DAY_HEIGHT - 4,\n          }}\n        >\n          <Text color={isSelected ? 'plain' : 'default'}>\n            {format(date, 'D')}\n          </Text>\n        </View>\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport default MonthDay;\ntry {\n    // @ts-ignore\n    MonthDay.displayName = \"MonthDay\";\n    // @ts-ignore\n    MonthDay.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthDay\", \"props\": { \"date\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"date\", \"required\": true, \"type\": { \"name\": \"Date\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"isSelectionStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelectionStart\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"isSelectionEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelectionEnd\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthDay.tsx#MonthDay\"] = { docgenInfo: MonthDay.__docgenInfo, name: \"MonthDay\", path: \"src/components/Calendars/Month/MonthDay.tsx#MonthDay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { addMonths, subMonths, isBefore, isAfter } from 'date-fns';\nimport { Playground, PropsTable } from 'docz';\nimport { State } from 'react-powerplug';\nimport { MultiMonthCalendar } from './MultiMonthCalendar';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"multimonthcalendar\"}}>{`MultiMonthCalendar`}</MDXTag>\n<Playground __position={0} __code={'<State\\n  initial={{\\n    selectedStartDate: null,\\n    selectedEndDate: null,\\n  }}\\n>\\n  {({ state: { selectedStartDate, selectedEndDate }, setState }) => (\\n    <MultiMonthCalendar\\n      selectedStartDate={selectedStartDate}\\n      selectedEndDate={selectedEndDate}\\n      startMonthDate={subMonths(new Date(), 2)}\\n      endMonthDate={addMonths(new Date(), 2)}\\n      onSelect={date => {\\n        if (!selectedStartDate && !selectedEndDate) {\\n          setState({\\n            selectedStartDate: date,\\n            selectedEndDate: null,\\n          })\\n        } else if (selectedStartDate && !selectedEndDate) {\\n          if (isBefore(date, selectedStartDate)) {\\n            setState({\\n              selectedStartDate: date,\\n              selectedEndDate: null,\\n            })\\n          } else if (isAfter(date, selectedStartDate)) {\\n            setState({\\n              selectedEndDate: date,\\n            })\\n          }\\n        } else {\\n          setState({\\n            selectedStartDate: date,\\n            selectedEndDate: null,\\n          })\\n        }\\n      }}\\n    />\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,addMonths,subMonths,isBefore,isAfter,State,MultiMonthCalendar}}>\n  <State\n    initial={{\n      selectedStartDate: null,\n      selectedEndDate: null,\n    }}\n  >\n    {({ state: { selectedStartDate, selectedEndDate }, setState }) => (\n      <MultiMonthCalendar\n        selectedStartDate={selectedStartDate}\n        selectedEndDate={selectedEndDate}\n        startMonthDate={subMonths(new Date(), 2)}\n        endMonthDate={addMonths(new Date(), 2)}\n        onSelect={date => {\n          if (!selectedStartDate && !selectedEndDate) {\n            setState({\n              selectedStartDate: date,\n              selectedEndDate: null,\n            });\n          } else if (selectedStartDate && !selectedEndDate) {\n            if (isBefore(date, selectedStartDate)) {\n              setState({\n                selectedStartDate: date,\n                selectedEndDate: null,\n              });\n            } else if (isAfter(date, selectedStartDate)) {\n              setState({\n                selectedEndDate: date,\n              });\n            }\n          } else {\n            setState({\n              selectedStartDate: date,\n              selectedEndDate: null,\n            });\n          }\n        }}\n      />\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={MultiMonthCalendar} />\n           </MDXTag>\n  }\n}\n  ","import { addMonths, format } from 'date-fns';\nimport * as React from 'react';\nimport { Omit } from 'ts-essentials';\n\nimport { Box, Spacing } from '../../Layout';\nimport { Heading } from '../../Typography';\nimport { DEFAULT_FIRST_DAY_OF_WEEK } from '../constants';\nimport { marshalTimeRange } from '../utils';\nimport MonthBody from './MonthBody';\nimport { MonthCalendarProps } from './MonthCalendar';\nimport { getWeeksInMultiMonth } from './utils/getWeeksInMonth';\n\nexport interface MultiMonthCalendarProps\n  extends Omit<MonthCalendarProps, 'date'> {\n  startMonthDate?: Date;\n  endMonthDate?: Date;\n}\n\nexport const MultiMonthCalendar = (props: MultiMonthCalendarProps) => {\n  const {\n    firstDayOfWeekIndex = DEFAULT_FIRST_DAY_OF_WEEK,\n    startMonthDate = new Date(),\n    endMonthDate = addMonths(new Date(), 1),\n    selectedStartDate: propSelectedStartDate = null,\n    selectedEndDate: propSelectedEndDate = null,\n    onSelect,\n  } = props;\n\n  const [startDate, endDate] = marshalTimeRange(startMonthDate, endMonthDate);\n\n  if (!startDate || !endDate) {\n    throw new Error(\n      'Please pass correct startMonthDate and endMonthDate in MultiMonthCalendar',\n    );\n  }\n\n  const [selectedStartDate, selectedEndDate] = marshalTimeRange(\n    propSelectedStartDate,\n    propSelectedEndDate,\n  );\n\n  const months = getWeeksInMultiMonth(\n    startDate,\n    endDate,\n    selectedStartDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  return (\n    <Box flex={1} width=\"100%\">\n      {months.map(month => {\n        return (\n          <Box key={month.formattedMonth}>\n            <Spacing paddingVertical={3}>\n              <Heading size=\"xlarge\">\n                {format(month.month, 'MMMM YYYY')}\n              </Heading>\n            </Spacing>\n            <MonthBody month={month} onSelect={onSelect} />\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\ntry {\n    // @ts-ignore\n    MultiMonthCalendar.displayName = \"MultiMonthCalendar\";\n    // @ts-ignore\n    MultiMonthCalendar.__docgenInfo = { \"description\": \"\", \"displayName\": \"MultiMonthCalendar\", \"props\": { \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MultiMonthCalendar.tsx#MultiMonthCalendar\"] = { docgenInfo: MultiMonthCalendar.__docgenInfo, name: \"MultiMonthCalendar\", path: \"src/components/Calendars/Month/MultiMonthCalendar.tsx#MultiMonthCalendar\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export const DATE_FORMAT = 'YYYY-MM-DD';\nexport const DEFAULT_MONTH_DAY_HEIGHT = 48;\n","// From Lodash\n\nexport const chunk = <TArrayElement = any>(\n  array: TArrayElement[],\n  size: number,\n): TArrayElement[][] => {\n  size = Math.max(size, 0);\n  const length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  let index = 0;\n  let resIndex = 0;\n  const result = new Array(Math.ceil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = array.slice(index, (index += size));\n  }\n\n  return result;\n};\n","import {\n  addDays,\n  addMonths,\n  areRangesOverlapping,\n  differenceInMonths,\n  eachDay,\n  endOfMonth,\n  format,\n  getISOWeek,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isWithinRange,\n  startOfMonth,\n  subDays,\n} from 'date-fns';\n\nimport { Day, Month } from '../../types';\nimport { DATE_FORMAT } from '../constants';\nimport { chunk } from './chunk';\n\nconst getFirstDayOfWeek = (firstDayOfWeekIndex: number) =>\n  (7 + firstDayOfWeekIndex) % 7 || 7;\n\nconst getLastDayOfWeek = (firstDayOfWeekIndex: number) =>\n  (firstDayOfWeekIndex + 6) % 7;\n\nconst getMonthDatesFromDate = (date: Date): Date[] =>\n  eachDay(startOfMonth(date), endOfMonth(date));\n\nconst getDatesBefore = (\n  startOfMonthDate: Date,\n  firstDayOfWeekIndex: number,\n) => {\n  const firstDayOfWeek = getFirstDayOfWeek(firstDayOfWeekIndex);\n  let beforeDates: Date[] = [];\n\n  let fromDate = startOfMonthDate;\n\n  if (fromDate.getDay() !== firstDayOfWeek) {\n    fromDate = addDays(fromDate, -(fromDate.getDay() + 7 - firstDayOfWeek) % 7);\n  }\n\n  if (isBefore(fromDate, startOfMonthDate)) {\n    beforeDates = eachDay(fromDate, subDays(startOfMonthDate, 1));\n  }\n\n  return beforeDates;\n};\n\nconst getDatesAfter = (endOfMonthDate: Date, firstDayOfWeekIndex: number) => {\n  let afterDates: Date[] = [];\n\n  const lastDayOfWeek = getLastDayOfWeek(firstDayOfWeekIndex);\n\n  let toDate = endOfMonthDate;\n\n  if (toDate.getDay() !== lastDayOfWeek) {\n    toDate = addDays(toDate, (lastDayOfWeek + 7 - toDate.getDay()) % 7);\n  }\n\n  if (isAfter(toDate, endOfMonthDate)) {\n    afterDates = eachDay(addDays(endOfMonthDate, 1), toDate);\n  }\n\n  return afterDates;\n};\n\nexport const monthPageInDates = (\n  date: Date,\n  firstDayOfWeekIndex: number,\n): Date[] => {\n  const monthDates = getMonthDatesFromDate(date);\n  const startOfMonthDate = monthDates[0];\n  const endOfMonthDate = monthDates[monthDates.length - 1];\n\n  const beforeDates = getDatesBefore(startOfMonthDate, firstDayOfWeekIndex);\n  const afterDates = getDatesAfter(endOfMonthDate, firstDayOfWeekIndex);\n\n  return beforeDates.concat(monthDates, afterDates);\n};\n\nconst chunkBySeven = <TData = any>(array: TData[]) => chunk(array, 7);\n\nexport const monthPageInWeeks = (\n  monthDate: Date,\n  firstDayOfWeekIndex: number = 1,\n) => chunkBySeven(monthPageInDates(monthDate, firstDayOfWeekIndex));\n\nconst transformDateToDay = (\n  isSelected: boolean,\n  isCurrentMonth: boolean = true,\n) => (date: Date): Day => ({\n  date,\n  isCurrentMonth,\n  isSelected,\n  isSelectedEnd: false,\n  isSelectedStart: false,\n});\n\nconst getCurrentMonthDays = (\n  monthDates: Date[],\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n) => {\n  if (!selectedStartDate) return monthDates.map(transformDateToDay(false));\n\n  const selectedStartDateIndex = monthDates.findIndex(date =>\n    isSameDay(date, selectedStartDate),\n  );\n  const isSelectedStartDateWithinMonth = selectedStartDateIndex !== -1;\n\n  const selectedEndDateIndex = selectedEndDate\n    ? monthDates.findIndex(date => isSameDay(date, selectedEndDate))\n    : selectedStartDateIndex;\n\n  const isSelectedEndDateWithinMonth = selectedEndDateIndex !== -1;\n\n  const beforeSelectedDays = isSelectedStartDateWithinMonth\n    ? monthDates.slice(0, selectedStartDateIndex).map(transformDateToDay(false))\n    : [];\n\n  const selectedDates = monthDates.slice(\n    isSelectedStartDateWithinMonth ? selectedStartDateIndex : 0,\n    isSelectedEndDateWithinMonth ? selectedEndDateIndex : monthDates.length,\n  );\n\n  const selectedDays = selectedDates.map(transformDateToDay(true));\n\n  const afterSelectedDays = isSelectedEndDateWithinMonth\n    ? monthDates.slice(selectedEndDateIndex).map(transformDateToDay(false))\n    : [];\n\n  const days = beforeSelectedDays.concat(selectedDays, afterSelectedDays);\n\n  days[selectedStartDateIndex] = {\n    ...days[selectedStartDateIndex],\n    isSelected: true,\n    isSelectedStart: true,\n  };\n\n  days[selectedEndDateIndex] = {\n    ...days[selectedEndDateIndex],\n    isSelected: true,\n    isSelectedEnd: true,\n  };\n\n  return days;\n};\n\nconst getBeforeMonthDays = (\n  startOfMonthDate: Date,\n  selectedStartDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const hasSelectedDatesBeforeMonth = !!(\n    selectedStartDate && isBefore(selectedStartDate, startOfMonthDate)\n  );\n  const beforeDates = getDatesBefore(startOfMonthDate, firstDayOfWeekIndex);\n\n  return beforeDates.map(\n    transformDateToDay(hasSelectedDatesBeforeMonth, false),\n  );\n};\n\nconst getAfterMonthDays = (\n  endOfMonthDate: Date,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const hasSelectedDatesAfterMonth = !!(\n    selectedEndDate && isAfter(selectedEndDate, endOfMonthDate)\n  );\n  const afterDates = getDatesAfter(endOfMonthDate, firstDayOfWeekIndex);\n\n  return afterDates.map(transformDateToDay(hasSelectedDatesAfterMonth, false));\n};\n\nexport const getDaysInMonth = (\n  monthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const monthDates = getMonthDatesFromDate(monthDate);\n  const startOfMonthDate = monthDates[0];\n  const endOfMonthDate = monthDates[monthDates.length - 1];\n\n  const currentDays = getCurrentMonthDays(\n    monthDates,\n    selectedStartDate,\n    selectedEndDate,\n  );\n  const beforeDays = getBeforeMonthDays(\n    startOfMonthDate,\n    selectedStartDate,\n    firstDayOfWeekIndex,\n  );\n  const afterDays = getAfterMonthDays(\n    endOfMonthDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  return beforeDays.concat(currentDays, afterDays);\n};\n\nexport const getWeeksInMonth = (\n  monthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n): Month => {\n  const days = getDaysInMonth(\n    monthDate,\n    selectedStartDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  const selectedRange = `${\n    selectedStartDate ? format(selectedStartDate, DATE_FORMAT) : ''\n  }-${selectedEndDate ? format(selectedEndDate, DATE_FORMAT) : ''}`;\n\n  return {\n    formattedMonth: format(monthDate, DATE_FORMAT),\n    month: monthDate,\n    selectedRange,\n    weeks: chunkBySeven(days).map(week => ({\n      days: week,\n      index: getISOWeek(week[0].date),\n    })),\n  };\n};\n\nconst getMonthsDates = (startDate: Date, endDate: Date) => {\n  const monthsCount = differenceInMonths(endDate, startDate);\n\n  const monthsDates: Date[] = [];\n\n  for (let index = 0; index < monthsCount; index++) {\n    monthsDates.push(addMonths(startDate, index));\n  }\n\n  return monthsDates;\n};\n\nexport const getWeeksInMultiMonth = (\n  startMonthDate: Date,\n  endMonthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n): Month[] => {\n  const monthsDates = getMonthsDates(startMonthDate, endMonthDate);\n\n  return monthsDates.map(monthDate => {\n    if (!selectedStartDate) {\n      return getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n    }\n\n    const startOfMonthDate = startOfMonth(monthDate);\n    const endOfMonthDate = endOfMonth(monthDate);\n\n    if (!selectedEndDate) {\n      const isSelectedStartDateWithinMonth = isWithinRange(\n        selectedStartDate,\n        startOfMonthDate,\n        endOfMonthDate,\n      );\n\n      return isSelectedStartDateWithinMonth\n        ? getWeeksInMonth(\n            monthDate,\n            selectedStartDate,\n            null,\n            firstDayOfWeekIndex,\n          )\n        : getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n    }\n\n    const isMonthOverlappingWithSelectedRange =\n      areRangesOverlapping(\n        startOfMonthDate,\n        endOfMonthDate,\n        selectedStartDate,\n        selectedEndDate,\n      ) || isSameDay(selectedEndDate, startOfMonthDate);\n\n    return isMonthOverlappingWithSelectedRange\n      ? getWeeksInMonth(\n          monthDate,\n          selectedStartDate,\n          selectedEndDate,\n          firstDayOfWeekIndex,\n        )\n      : getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n  });\n};\n","export const DAY_DATE_FORMAT = 'YYYY-MM-DD';\nexport const TOTAL_MINUTES_IN_DAY = 24 * 60;\nexport const DEFAULT_FIRST_DAY_OF_WEEK = 1;\n","import { isBefore } from 'date-fns';\n\nexport const marshalTimeRange = (\n  startDate: Date | null = null,\n  endDate: Date | null = null,\n): [Date | null, Date | null] => {\n  if (endDate && startDate && isBefore(endDate, startDate)) {\n    console.error('Selected end date cannot be before selected start date');\n    return [null, null];\n  }\n\n  if (endDate && !startDate) {\n    console.error('Selected end date cannot exist without selected start date');\n    return [null, null];\n  }\n\n  return [startDate, endDate];\n};\n"],"sourceRoot":""}