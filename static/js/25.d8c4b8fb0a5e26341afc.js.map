{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Heading","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","size","of","className","isMDXComponent","getHeadingSize","headingSizes","fontSize","getHeadingStyles","_ref$size","_ref$align","align","_ref$color","weight","sizeStyle","headingStyle","objectSpread","getTextColor","text","fontFamily","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","accessibilityLevel","getStyles","textProps","objectWithoutProperties","mergeStyles","react","Text","esm_extends","accessibilityRole","Platform","OS","aria-level","textColors","textColor","getTextSize","textSizes","getTextStyles","_ref$isItalic","isItalic","transform","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","mono","bold","normal","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","React","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"8nBAYA,IAAMA,EAAW,CACfC,gBAAiB,SAACC,EAAwBC,GAExC,OAAIA,EAAMC,OAAOC,WAAWH,GAEnB,CAAED,gBAAiBE,EAAMC,OAAOC,WAAWH,IAE7C,CACLD,gBAAiBC,IAGrBI,UAAW,SAACA,EAA8BH,GAA/B,OACTA,EAAMI,WAAWD,IACnBE,MAAO,SAACA,EAAuBL,GAAxB,OAAyCA,EAAMM,gBAAgBD,KAG3DE,EAAM,SAACC,GAAoB,IAC9BC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,OAAWC,EADSC,OAAAC,EAAA,EAAAD,CACMJ,EADN,uBAEhCR,EAAQc,cACRC,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQN,EACjB,GAAIM,EAAM,CAER,IAAMC,EAAUrB,EAASoB,GAEzB,GAAIC,EAAS,CAEX,IAAMC,EAAQD,EAAQP,EAAWM,GAAOjB,GAExCe,EAAkBK,KAAKD,QAGvBH,EAAWC,GAAQN,EAAWM,GAKpC,OACEI,EAAA,cAACC,EAAA,EAAD,CAAMZ,OAAQA,EAAQS,MAAO,CAACH,EAAYD,GAA1CQ,SAAA,CAAAC,mFAAAC,WAAA,KACGhB,+zBCzCDiB,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGtB,EACFI,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,gBACD,OAAOjB,OAAAmB,EAAA,EAAAnB,CAACe,EAADf,OAAAoB,EAAA,EAAApB,CAAA,GAAec,EAAiBlB,EAAhC,CAAuCsB,WAAYA,EAAYG,QAAQ,YAAvEV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAGLb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,WADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iBAGAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gCAA+Bb,OAAAmB,EAAA,EAAAnB,CAAA,cAAYwB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aAA/B,cACAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAb,OAAAmB,EAAA,EAAAnB,CAACyB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,oRAAiSC,QAAS,CAC3UhC,MAAOiC,KAAOA,KAAKjC,MAAQA,EAC3BkC,eACAC,UACApC,QACAqC,aACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFb,OAAAmB,EAAA,EAAAnB,CAACiC,EAAA,EAAD,CAAKZ,QAAQ,MAAbV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,WAAWd,QAAQ,UAAjCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iBACAb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,UAAUd,QAAQ,UAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,SAASd,QAAQ,UAA/BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,QAAQd,QAAQ,UAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,SAASd,QAAQ,UAA/BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAb,OAAAmB,EAAA,EAAAnB,CAACkC,EAAA,EAAD,CAASC,KAAK,QAAQd,QAAQ,UAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAGAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAb,OAAAmB,EAAA,EAAAnB,CAACyB,EAAA,EAAD,CAAOW,GAAIJ,IAASX,QAAQ,QAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAA,OAAAoB,EAAA,EAAApB,CAAQ,CACNuB,GAAM,iBADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,uBAGAb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cAAab,OAAAmB,EAAA,EAAAnB,CAAA,cAAYwB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,kBAAb,SACAb,OAAAmB,EAAA,EAAAnB,CAAA,OAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAAKb,OAAAmB,EAAA,EAAAnB,CAAA,OAAAA,OAAAoB,EAAA,EAAApB,CAAA,CAAMwB,WAAW,OAAU,GAA3B,CAAAb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iHAMLb,OAAAmB,EAAA,EAAAnB,CAAA,KAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAb,OAAAmB,EAAA,EAAAnB,CAAA,OAAAW,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAAKb,OAAAmB,EAAA,EAAAnB,CAAA,OAAAA,OAAAoB,EAAA,EAAApB,CAAA,CAAMwB,WAAW,OAAU,CAC5Ba,UAAa,gBADZ,CAAA1B,SAAA,CAAAC,SAAAU,EAAAT,WAAA,8NAOTG,EAAWsB,gBAAiB,8vCCrDrB,IAAMC,EAAiB,SAACC,GAAD,OAAgC,SAC5DL,GAKA,OAF0BK,EAAaL,IAEX,CAAEM,SAAUN,0MAGnC,IAAMO,EAAqC,SAAAzB,EAEhD7B,GACG,IAAAuD,EAAA1B,EAFDkB,YAEC,IAAAQ,EAFM,SAENA,EAAAC,EAAA3B,EAFgB4B,aAEhB,IAAAD,EAFwB,OAExBA,EAAAE,EAAA7B,EAFgC9B,aAEhC,IAAA2D,EAFwC,UAExCA,EAFmDC,EAEnD9B,EAFmD8B,OAGhDC,EAAYT,EAAenD,EAAMoD,aAArBD,CAAmCJ,GAErD,MAAO,CACLc,aAAajD,OAAAkD,EAAA,EAAAlD,CAAA,GACRgD,EADO,CAEV7D,MAAOgE,YAAa/D,EAAMC,OAAO+D,KAA1BD,CAAgChE,GACvCkE,WAAYjE,EAAMkE,aAAaC,QAC/BC,WACEC,YAAcrE,EAAMsE,YAApBD,CAAiCV,IAAWC,EAAUQ,WACxDG,UAAWd,ogBCcV,IAAMb,EAAU,SAACpC,GAAwB,IAE5CgE,EAOEhE,EAPFgE,mBAKAC,GAEEjE,EANFuC,KAMEvC,EALFiD,MAKEjD,EAJFT,MAIES,EAHFmD,OAGEnD,EAFFiE,WACGC,EARyC9D,OAAA+D,EAAA,EAAA/D,CAS1CJ,EAT0C,oEAUxCR,EAAQc,cAEN+C,EAAiBe,YACvBtB,EACAmB,EACAzE,EAAM8B,WAAWwB,iBAHMsB,CAIvBpE,EAAOR,GAJD6D,aAMR,OACEgB,EAAA,cAACC,EAAA,EAADlE,OAAAmE,EAAA,EAAAnE,CAAA,CAEEoE,kBAAmC,QAAhBC,IAASC,GAAe,UAAY,OACvDC,aAAYX,EACZrD,MAAO0C,GACHa,EALN,CAAAnD,SAAA,CAAAC,8FAAAC,WAAA,yhCClDG,IAAM4C,EAAgB,SAACC,GAAD,OAA8B,SACzDF,GAEA,GAAKA,EAKL,OAHyBE,EAAYF,IAGVA,6NAGtB,IAAML,EAAe,SAACqB,GAAD,OAA4B,SACtDC,GAKA,OAFoBD,EAAWC,IAETA,4NAGjB,IAAMC,EAAc,SAACC,GAAD,OAA0B,SACnDxC,GAKA,OAFuBwC,EAAUxC,IAER,CAAEM,SAAUN,oMAGhC,IAAMyC,EAA+B,SAAA3D,EAS1C7B,GACG,IAAA0D,EAAA7B,EARD9B,aAQC,IAAA2D,EARO,UAQPA,EAAAH,EAAA1B,EAPDkB,YAOC,IAAAQ,EAPM,SAONA,EAAAC,EAAA3B,EAND4B,aAMC,IAAAD,EANO,OAMPA,EALDG,EAKC9B,EALD8B,OAKC8B,EAAA5D,EAJD6D,gBAIC,IAAAD,KAHDE,EAGC9D,EAHD8D,UAII/B,EAAY0B,EAAYtF,EAAMuF,UAAlBD,CAA6BvC,GAE/C,MAAO,CACL6C,UAAUhF,OAAAiF,EAAA,EAAAjF,CAAA,GACLgD,EADI,CAEP7D,MAAOgE,EAAa/D,EAAMC,OAAO+D,KAA1BD,CAAgChE,GACvCkE,WAAYjE,EAAMkE,aAAaF,KAC/BI,WACEC,EAAcrE,EAAMsE,YAApBD,CAAiCV,IAAWC,EAAUQ,WACxDG,UAAWd,GACPiC,GAAY,CACdI,UAAW,UAETH,GAAa,CACfI,cAAeJ,26BCrDR,IAAAK,EACJ,CACPC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WANEL,EASP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAdEL,EAiBR,CACHC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtBEL,EAyBL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9BEL,EAiCL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtCEL,EAyCN,CACLC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9CEL,EAiDP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtDEL,EAyDL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,0rDChEb,IAgBMC,EAAoC,CACxCC,MAAO,EAEPC,OAAQ,EAERC,MAAO,GAGHxG,EAAiB,CACrBC,WAAY,CACViG,KAAM,QACNO,QAAS,QACTC,QAAS,kBAETC,UAAWZ,EAAgBC,SAC3BY,YAAa,UACbC,SAAUd,EAAgBE,MAE1Ba,aAAcf,EAAaC,SAC3Be,eAAgBhB,EAAaG,KAC7Bc,YAAajB,EAAaI,KAE1Bc,eAAgBlB,EAAeC,SAC/BkB,iBAAkBnB,EAAeG,KACjCiB,cAAepB,EAAeI,KAE9BiB,YAAarB,EAAYC,SACzBqB,cAAetB,EAAYG,KAC3BoB,WAAYvB,EAAYI,KAExBoB,UAAWxB,EAAaC,SACxBwB,YAAazB,EAAaG,KAC1BuB,SAAU1B,EAAaI,KAEvBuB,aAAc3B,EAAcC,SAC5B2B,eAAgB5B,EAAcG,KAC9B0B,YAAa7B,EAAcI,KAE3B0B,aAAc9B,EAAeC,SAC7B8B,eAAgB/B,EAAeG,KAC/B6B,YAAahC,EAAeI,MAG9B6B,OAAQ,CACNC,QAASlC,EAAgBE,MAEzBiC,QAASnC,EAAaK,QACtB+B,UAAWpC,EAAeK,QAE1BgC,OAAQrC,EAAYK,QACpBiC,KAAMtC,EAAaK,QACnBkC,QAASvC,EAAcK,QACvBmC,QAASxC,EAAeK,SAG1BoC,OAAQ,CACNC,SAAU1C,EAAgBE,MAC1ByC,aAAc3C,EAAgBK,QAE9B6B,QAASlC,EAAgBC,SACzB2C,YAAa5C,EAAgBK,QAE7B8B,QAASnC,EAAaG,KACtB0C,YAAa,QAEbT,UAAWpC,EAAeG,KAC1B2C,cAAe,QAEfT,OAAQrC,EAAYG,KACpB4C,WAAY,SAGd/E,KAAM,CACJgF,KAAMhD,EAAgBK,QACtB6B,QAASlC,EAAgBK,QACzB4C,MAAOjD,EAAgBI,KACvB8C,MAAO,QACPC,SAAU,QAEVhB,QAASnC,EAAaK,QACtB+B,UAAWpC,EAAeK,QAE1BgC,OAAQrC,EAAYK,QACpBiC,KAAMtC,EAAaK,QACnBkC,QAASvC,EAAcK,QACvBmC,QAASxC,EAAeK,UAItBjG,EAAyB,CAC7B,CACED,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,EACfC,aAAc,GAEhB,CACEtJ,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,GAEhB,CACEtJ,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfC,aAAc,IAEhB,CACEtJ,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,IAEhB,CACEtJ,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfC,aAAc,GAEhB,CACEtJ,UAAW,EACXiJ,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,IAmNLC,EAAsB,CACjCzJ,SACA0J,MAjNmB,CACnBC,MAAO,CACLC,QAAS,CACP/J,gBAAiBkG,EAAgBG,KACjCpG,MAAO,SAGT+J,KAAM,CACJhK,gBAAiBkG,EAAaG,KAC9BpG,MAAO,SAGTgK,IAAK,CACHjK,gBAAiBkG,EAAYG,KAC7BpG,MAAO,SAGTiK,OAAQ,CACNlK,gBAAiBkG,EAAeG,KAChCpG,MAAO,SAGTkK,OAAQ,CACNnK,gBAAiBkG,EAAeG,KAChCpG,MAAOiG,EAAeK,SAGxB6D,MAAO,CACLpK,gBAAiBkG,EAAcG,KAC/BpG,MAAO,SAGToK,KAAM,CACJrK,gBAAiBkG,EAAaG,KAC9BpG,MAAO,SAGTqK,OAAQ,CACNtK,gBAAiBkG,EAAeG,KAChCpG,MAAO,UAIXsK,OAAQ,CACNR,QAAS,CACP/J,gBAAiBkG,EAAgBE,MACjCnG,MAAOiG,EAAgBK,SAGzByD,KAAM,CACJhK,gBAAiBkG,EAAaE,MAC9BnG,MAAOiG,EAAaK,SAGtB0D,IAAK,CACHjK,gBAAiBkG,EAAYE,MAC7BnG,MAAOiG,EAAYK,SAGrB2D,OAAQ,CACNlK,gBAAiBkG,EAAeE,MAChCnG,MAAOiG,EAAeK,SAGxB4D,OAAQ,CACNnK,gBAAiBkG,EAAeE,MAChCnG,MAAOiG,EAAeK,SAGxB6D,MAAO,CACLpK,gBAAiBkG,EAAcE,MAC/BnG,MAAOiG,EAAcK,SAGvB8D,KAAM,CACJrK,gBAAiBkG,EAAaE,MAC9BnG,MAAOiG,EAAaK,SAGtB+D,OAAQ,CACNtK,gBAAiBkG,EAAeE,MAChCnG,MAAOiG,EAAeK,WAkI1BnC,aA3HgB,QAAhBe,IAASC,GACL,CACEf,QAAO,iKACPmG,KAAI,mGACJtG,KAAI,+JAEN,CACEG,QAAS,SACTmG,KAAM,SACNtG,KAAM,UAmHZM,YAhH+B,CAC/BiG,KAAM,OACNrE,MAAO,MACPsE,OAAQ,UA+GRpH,aA5GiC,CACjCqH,SAAU,CACRpH,SAAU,GACVqH,eAAgB,GAChBC,WAAY,IAGdC,QAAS,CACPvH,SAAU,GACVqH,eAAgB,GAChBC,WAAY,IAGdE,OAAQ,CACNxH,SAAU,GACVqH,eAAgB,IAChBC,WAAY,IAGdlE,MAAO,CACLpD,SAAU,GACVqH,eAAgB,IAChBC,WAAY,IAGdnE,OAAQ,CACNnD,SAAU,GACVqH,eAAgB,IAChBC,WAAY,IAGdpE,MAAO,CACLlD,SAAU,GACVqH,eAAgB,IAChBC,WAAY,KA2EdG,eAvEqC,CACrCvE,MAAO,CACLlD,SAAU,GACVsH,WAAY,IAGdnE,OAAQ,CACNnD,SAAU,GACVsH,WAAY,IAGdlE,MAAO,CACLpD,SAAU,GACVsH,WAAY,KA2DdpF,UAvD2B,CAC3BkB,MAAO,CACLpD,SAAU,IAEZmD,OAAQ,CACNnD,SAAU,IAEZkD,MAAO,CACLlD,SAAU,IAEZ0H,OAAQ,CACN1H,SAAU,KA8CZjD,aAEAkG,sBACA0E,eA3WmC,CACnCzE,MAAO,GAEPC,OAAQ,GAERC,MAAO,IAuWPwE,gBApXoC,CACpC1E,MAAO,EAEPC,OAAQ,GAERC,MAAO,IAiXPnG,gBAhDuC,CACvC4K,OAAQ,CACNC,aAAc,KAEhBC,KAAM,CACJD,aAAc,KAEhBE,QAAS,CACPF,aAAc7E,EAAoBE,QAEpC8E,cAAe,CACbC,uBAAwBjF,EAAoBE,OAC5CgF,wBAAyBlF,EAAoBE,QAE/CiF,YAAa,CACXF,uBAAwBjF,EAAoBE,OAC5CkF,oBAAqBpF,EAAoBE,QAE3CmF,aAAc,CACZH,wBAAyBlF,EAAoBE,OAC7CoF,qBAAsBtF,EAAoBE,QAE5CqF,WAAY,CACVH,oBAAqBpF,EAAoBE,OACzCoF,qBAAsBtF,EAAoBE,QAE5CsF,OAAQ,CACNX,aAAc,IAuBhBrJ,WAAY,utQClGP,IAAMiK,EAAeC,IAAMC,cAAcvC,qfAOzC,IAAMwC,EAAc,SAAClM,GAC1B,OAAOA,EACHmM,IAAiBzC,EAAc1J,GAC/B0J,6KAGC,IAAM0C,EAAgB,SAAC5L,GAA8B,IAClDC,EAAmCD,EAAnCC,SADkD4L,EACf7L,EAAzB8L,MAEZtM,EAAQkM,OAH4C,IAAAG,EAChC3C,EADgC2C,GAK1D,OACEE,EAAAC,EAAAC,cAACV,EAAaW,SAAd,CAAuBJ,MAAOtM,EAA9BuB,SAAA,CAAAC,4EAAAC,WAAA,MAAsChB,gLAInC,IAAMK,EAAW,WACtB,OAAOkL,IAAMW,WAAWZ,8PCjU1Ba,EAAAC,EAAAC,EAAA,sBAAAlI,IAAA,IAAAmI,EAAAH,EAAA,wCAAAI,EAAAJ,EAAAK,EAAAF,szBAiBO,IAAMnI,EAAc,SACzBsI,EACAC,EACAC,GAHyB,OAItB,SAAC5M,EAAoBR,GACxB,IAEMqN,EAAkC,CAFlBH,EAAiB1M,EAAOR,IAY9C,OARIoN,GACFC,EAAOjM,KAAKgM,EAAe5M,EAAOR,IAGhCmN,GACFE,EAAOjM,KAAK+L,EAAoB3M,EAAOR,IAGlCsN,IAAMC,IAAaF","file":"static/js/25.9c8816c9.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Heading } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"heading\"\n    }}>{`Heading`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Heading size=\\\"xxxlarge\\\">xxxlarge</Heading>\\n  <Heading size=\\\"xxlarge\\\">xxlarge</Heading>\\n  <Heading size=\\\"xlarge\\\">xlarge</Heading>\\n  <Heading size=\\\"large\\\">large</Heading>\\n  <Heading size=\\\"medium\\\">medium</Heading>\\n  <Heading size=\\\"small\\\">small</Heading>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Heading\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Heading size=\"xxxlarge\" mdxType=\"Heading\">xxxlarge</Heading>\n    <Heading size=\"xxlarge\" mdxType=\"Heading\">xxlarge</Heading>\n    <Heading size=\"xlarge\" mdxType=\"Heading\">xlarge</Heading>\n    <Heading size=\"large\" mdxType=\"Heading\">large</Heading>\n    <Heading size=\"medium\" mdxType=\"Heading\">medium</Heading>\n    <Heading size=\"small\" mdxType=\"Heading\">small</Heading>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Heading} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`HeadingStyles {\n  headingStyle: TextStyle;\n}\n\ngetStyles={(HeadingProps, Theme) => HeadingStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Text headingStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { HeadingSize, HeadingSizes, Theme } from '../../theme/Theme';\nimport { HeadingProps } from './Heading';\nimport { getFontWeight, getTextColor } from './Text.styles';\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport type GetHeadingStyles = (\n  props: HeadingProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size = 'medium', align = 'left', color = 'default', weight },\n  theme,\n) => {\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return {\n    headingStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.heading,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, HeadingSize, TextColor } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  /** Text content */\n  children?: React.ReactNode;\n\n  /**\n   * Size of the heading.\n   * @default \"medium\"\n   */\n  size?: HeadingSize;\n\n  /**\n   * Alignment of the heading.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Color of the heading.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Weight of the heading.\n   * @default headingSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * (Web only): Corresponding h1, h2, h3... levels\n   */\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { headingStyle } = mergeStyles(\n    getHeadingStyles,\n    getStyles,\n    theme.components.getHeadingStyles,\n  )(props, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}