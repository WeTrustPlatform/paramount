{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/WheelPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","State","WheelPicker","Icon","TextInput","___WEBPACK_IMPORTED_MODULE_6__","initial","month","day","year","_ref2","state","setState","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_7__","value","data","label","onValueChange","console","log","Array","fill","map","v","i","concat","of","isMDXComponent","__webpack_require__","d","__webpack_exports__","isControlSize"],"mappings":"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","file":"static/js/32.361c3f38.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, WheelPicker, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"wheelpicker-experimental\"\n    }}>{`WheelPicker (Experimental)`}</h1>\n    <Playground __position={0} __code={'<State initial={{ month: \\'March\\', day: \\'15\\', year: \\'2019\\' }}>\\n  {({ state, setState }) => (\\n    <Box flexDirection=\\\"row\\\">\\n      <WheelPicker\\n        value={state.month}\\n        data={[\\n          { label: \\'January\\', value: \\'January\\' },\\n          { label: \\'February\\', value: \\'February\\' },\\n          { label: \\'March\\', value: \\'March\\' },\\n          { label: \\'April\\', value: \\'April\\' },\\n          { label: \\'May\\', value: \\'May\\' },\\n          { label: \\'June\\', value: \\'June\\' },\\n          { label: \\'July\\', value: \\'July\\' },\\n          { label: \\'August\\', value: \\'August\\' },\\n          { label: \\'September\\', value: \\'September\\' },\\n          { label: \\'October\\', value: \\'October\\' },\\n          { label: \\'November\\', value: \\'November\\' },\\n          { label: \\'December\\', value: \\'December\\' },\\n        ]}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ month: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.day}\\n        data={new Array(31)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${i + 1}`, value: `${i + 1}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ day: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.year}\\n        data={new Array(50)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${2000 + i}`, value: `${2000 + i}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ year: value })\\n        }}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      WheelPicker,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        month: 'March',\n        day: '15',\n        year: '2019'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box flexDirection=\"row\" mdxType=\"Box\">\n        <WheelPicker value={state.month} data={[{\n            label: 'January',\n            value: 'January'\n          }, {\n            label: 'February',\n            value: 'February'\n          }, {\n            label: 'March',\n            value: 'March'\n          }, {\n            label: 'April',\n            value: 'April'\n          }, {\n            label: 'May',\n            value: 'May'\n          }, {\n            label: 'June',\n            value: 'June'\n          }, {\n            label: 'July',\n            value: 'July'\n          }, {\n            label: 'August',\n            value: 'August'\n          }, {\n            label: 'September',\n            value: 'September'\n          }, {\n            label: 'October',\n            value: 'October'\n          }, {\n            label: 'November',\n            value: 'November'\n          }, {\n            label: 'December',\n            value: 'December'\n          }]} onValueChange={value => {\n            console.log(value);\n            setState({\n              month: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.day} data={new Array(31).fill(0).map((v, i) => ({\n            label: `${i + 1}`,\n            value: `${i + 1}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              day: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.year} data={new Array(50).fill(0).map((v, i) => ({\n            label: `${2000 + i}`,\n            value: `${2000 + i}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              year: value\n            });\n          }} mdxType=\"WheelPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={WheelPicker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}