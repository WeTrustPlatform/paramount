{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Code.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/List.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_ListItem","BulletItem","icon","listItemProps","iconColor","ListItem","_extends2","mark","_List","BulletedList","List","listType","_Text","Code","appearance","textProps","code","Text","fontFamily","styles","greyDefault","StyleSheet","create","default","paddingBottom","paddingLeft","paddingRight","paddingTop","getHeadingSize","headingSizes","size","fontSize","getHeadingStyles","_ref","align","weight","sizeStyle","headingStyle","_objectSpread2","getTextColor","text","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","_mergeStyles2","_Heading","Heading","accessibilityLevel","_props$size","_props$align","_props$color","getStyles","mergeStyles","components","accessibilityRole","Platform","OS","aria-level","Label","finalChildren","Children","map","listItem","index","isValidElement","cloneElement","undefined","margin","marginLeft","padding","paddingLeftMap","large","medium","small","xsmall","flexDirection","alignItems","marginVertical","width","isInline","NumberedItem","concat","NumberedList","getParagraphSize","paragraphSizes","getParagraphStyles","paragraphStyle","getFontFamily","marginBottom","marginTop","_Paragraph","Paragraph","_props$fontFamily","accessibilityLabel","textColors","textColor","getTextSize","textSizes","getTextStyles","isItalic","transform","textStyle","alignSelf","fontStyle","textTransform","_props$isInline","_props$isItalic","_Code","_Label","_NumberedList","_BulletItem","_NumberedItem","_BulletedList","_deepmerge","_interopRequireDefault","_react","_defaultTheme","ThemeContext","createContext","defaultTheme","createTheme","ThemeProvider","_props$value","value","Provider","useContext","_palette","base","content","overlay","greyLight","palette","neutral","lightest","greyDark","light","primaryLight","teal","primaryDefault","primaryDark","dark","secondaryLight","orange","secondaryDefault","secondaryDark","dangerLight","red","dangerDefault","dangerDark","infoLight","blue","infoDefault","infoDark","successLight","green","successDefault","successDark","warningLight","warningDefault","warningDark","border","primary","darkest","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fills","solid","yellow","purple","subtle","mono","bold","normal","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","controlBorderRadius","controlHeights","controlPaddings","_Theme","getDefaultStyles","getOverridingStyles","getThemeStyles","merge","all"],"mappings":"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","file":"static/js/1.45c124c0.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","export * from './Box';\n","import * as React from 'react';\n\nimport { TextColor } from '../../theme/Theme';\nimport { ListItem, ListItemProps } from './ListItem';\n\nexport interface BulletItemProps extends ListItemProps {\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n  iconColor?: TextColor;\n}\n\nexport const BulletItem = (props: BulletItemProps) => {\n  const { icon, iconColor, ...listItemProps } = props;\n\n  return <ListItem mark={icon} {...listItemProps} />;\n};\n","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/Theme';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface BulletedListProps {\n  size?: TextSize;\n  icon?: React.ReactNode;\n  iconColor?: TextColor;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const BulletedList = (props: BulletedListProps) => {\n  return <List listType=\"ul\" {...props} />;\n};\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Text, TextProps } from './Text';\n\nexport interface CodeProps extends TextProps {\n  appearance?: 'default' | 'minimal';\n}\n\nexport const Code = (props: CodeProps) => {\n  const { appearance, ...textProps } = props;\n  const theme = useTheme();\n\n  const code = <Text fontFamily=\"mono\" {...textProps} />;\n\n  if (appearance === 'default') {\n    return (\n      <View\n        style={[\n          styles.default,\n          {\n            backgroundColor: theme.colors.background.greyDefault,\n          },\n        ]}\n      >\n        {code}\n      </View>\n    );\n  }\n\n  return code;\n};\n\nconst styles = StyleSheet.create({\n  default: {\n    borderRadius: 2,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    paddingTop: 3,\n  },\n});\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n  Theme,\n} from '../../theme/Theme';\nimport { getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport interface HeadingStylesProps {\n  size: HeadingSize;\n  align: TextAlign;\n  color: TextColor;\n  weight?: FontWeight;\n}\n\nexport type GetHeadingStyles = (\n  headingStylesProps: HeadingStylesProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size, align, color, weight },\n  theme,\n) => {\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return {\n    headingStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.heading,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, HeadingSize, TextColor } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  children: React.ReactNode;\n  size?: HeadingSize;\n  align?: TextAlign;\n  color?: TextColor;\n  weight?: FontWeight;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { headingStyle } = mergeStyles(\n    getHeadingStyles,\n    getStyles,\n    theme.components.getHeadingStyles,\n  )({ size, align, color, weight }, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport { Text, TextProps } from './Text';\n\nexport const Label = (props: TextProps) => {\n  const { children, ...textProps } = props;\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : undefined,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Box margin={0} marginLeft={8} padding={0}>\n        {finalChildren}\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { Text, TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 24,\n  medium: 16,\n  small: 16,\n  xsmall: 8,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark: React.ReactNode;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft =\n    typeof size === 'number' ? 16 : (paddingLeftMap[size] as 1 | 2 | 3);\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Box flexDirection=\"row\" alignItems=\"center\" marginVertical={8}>\n        <Box>{mark}</Box>\n        <Box width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Box>\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemProps } from './ListItem';\nimport { Text } from './Text';\n\nexport interface NumberedItemProps extends ListItemProps {\n  index: number;\n  children: React.ReactNode;\n}\n\nexport const NumberedItem = (props: NumberedItemProps) => {\n  const { index, ...listItemProps } = props;\n\n  return (\n    <ListItem\n      mark={\n        <Text size={listItemProps.size} {...listItemProps}>{`${index}.`}</Text>\n      }\n      {...listItemProps}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { TextSize } from '../../theme/Theme';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface NumberedListProps {\n  size?: TextSize;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const NumberedList = (props: NumberedListProps) => {\n  return <List listType=\"ol\" {...props} />;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  ParagraphSizes,\n  TextColor,\n  Theme,\n} from '../../theme/Theme';\nimport { getFontFamily, getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface ParagraphStylesProps {\n  align: TextAlign;\n  size: ParagraphSize;\n  color: TextColor;\n  fontFamily: FontFamily;\n  weight?: FontWeight;\n}\n\nexport interface ParagraphStyles {\n  paragraphStyle: TextStyle;\n}\n\nexport type GetParagraphStyles = (\n  paragraphStylesProps: ParagraphStylesProps,\n  theme: Theme,\n) => ParagraphStyles;\n\nexport const getParagraphSize = (paragraphSizes: ParagraphSizes) => (\n  size: ParagraphSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetParagraphSize = paragraphSizes[size] as TextStyle;\n\n  return presetParagraphSize || { fontSize: size };\n};\n\nexport const getParagraphStyles: GetParagraphStyles = (\n  { size, color, fontFamily, align, weight },\n  theme,\n) => {\n  const sizeStyle = getParagraphSize(theme.paragraphSizes)(size);\n\n  return {\n    paragraphStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      marginBottom: '1em',\n      marginTop: '1em',\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  TextColor,\n} from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetParagraphStyles,\n  getParagraphStyles,\n  ParagraphStyles,\n} from './Paragraph.styles';\nimport { TextAlign } from './types';\n\n// @ts-ignore: need to override for web purposes\nexport interface ParagraphProps extends TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: ParagraphSize;\n  weight?: FontWeight;\n  align?: TextAlign;\n  fontFamily?: FontFamily;\n\n  getStyles?: ReplaceReturnType<\n    GetParagraphStyles,\n    DeepPartial<ParagraphStyles>\n  >;\n}\n\nexport const Paragraph = (props: ParagraphProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { paragraphStyle } = mergeStyles(\n    getParagraphStyles,\n    getStyles,\n    theme.components.getParagraphStyles,\n  )({ align, size, color, fontFamily, weight }, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      style={paragraphStyle}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export * from './Code';\nexport * from './Heading';\nexport * from './Label';\nexport * from './NumberedList';\nexport * from './Paragraph';\nexport * from './BulletItem';\nexport * from './NumberedItem';\nexport * from './Text';\nexport * from './BulletedList';\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","export * from './defaultTheme';\nexport * from './Theme';\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}