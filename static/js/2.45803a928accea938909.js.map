{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","height","marginLeft","marginRight","width","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","Dots_Dots","Dialog","_props$shouldLockBody","shouldLockBodyScroll","_props$isVisible","isVisible","_props$onRequestClose","onRequestClose","_props$useHistory","useHistory","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","StyledContent","Content","contentProps","StyledBody","Body","bodyProps","Overlay","OverlayR","overlayProps","StyledHeader","Header","headerProps","_getOverrides11","StyledFooter","Footer","_getOverrides12","footerProps","react__WEBPACK_IMPORTED_MODULE_4__","_Modal__WEBPACK_IMPORTED_MODULE_9__","visible","transparent","animationType","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","maxHeight","maxWidth","minWidth","position","zIndex","scrollViewProps","react_native_web_dist_exports_ScrollView__WEBPACK_IMPORTED_MODULE_5__","Toggle","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","useElement","id","element","rootElem","rootElement","rootContainer","document","createElement","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","ModalBase","_props$animationType","isUnmounting","targetElement","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","createFocusTrap","initialFocus","onDeactivate","activate","_useSpring","useSpring","springDefaultConfig","y","ReactDOM","web_cjs","div","tabIndex","ref","bottom","left","right","top","transform","interpolate","v","concat","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","modal","pushState","defineProperty","addEventListener","handlePopstate","event","_this$props","go","handleEscapeKey","replaceState","removeEventListener","modalProps","ModalBase_web_ModalBase","HistoryModal_web_jsxFileName","HistoryModal","_ref$useHistory","HistoryModal_web_HistoryModalBase","override","react_native_web_dist_exports_TouchableWithoutFeedback__WEBPACK_IMPORTED_MODULE_5__","preventDefault","Heading","accessibilityLevel","align","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledHeading","textRProps","react__WEBPACK_IMPORTED_MODULE_5__","Platform","OS","aria-level","getHeadingSize","headingSizes","fontSize","_props$align","sizeStyle","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","getTextColor","fontFamily","fontFamilies","heading","getFontWeight","fontWeights","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/2.8c303d24.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { ScrollView, ScrollViewProps, View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Modal } from '../Modal';\nimport { Overlay, OverlayProps } from '../Overlay';\n\ninterface DialogBaseProps {\n  /**\n   * (Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that.\n   * @default false\n   */\n  useHistory?: boolean;\n\n  /**\n   * When true, it will display the dialog\n   * @default false\n   */\n  isVisible?: boolean;\n\n  /**\n   * (Web only) When true, the body of the document will not scroll when dialog is opened\n   * @default true\n   */\n  shouldLockBodyScroll?: boolean;\n\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n\n  /** Content of the dialog body */\n  children?: React.ReactNode;\n}\n\nexport interface DialogOverrides {\n  Root: RootProps;\n  Content: ContentProps;\n  Body: BodyProps;\n  Overlay: OverlayProps;\n  Header: HeaderProps;\n  Footer: FooterProps;\n}\n\nexport interface DialogProps\n  extends WithOverrides<DialogBaseProps, DialogOverrides> {}\n\nexport const Dialog = (props: DialogProps) => {\n  const {\n    children,\n    shouldLockBodyScroll = true,\n    isVisible = false,\n    onRequestClose = () => null,\n    useHistory = false,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Dialog.Root'),\n    overrides.Root,\n  );\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    dlv(theme, 'overrides.Dialog.Content'),\n    overrides.Content,\n  );\n  const [Body, bodyProps] = getOverrides(\n    StyledBody,\n    props,\n    dlv(theme, 'overrides.Dialog.Body'),\n    overrides.Body,\n  );\n  const [OverlayR, overlayProps] = getOverrides(\n    Overlay,\n    props,\n    dlv(theme, 'overrides.Dialog.Overlay'),\n    overrides.Overlay,\n  );\n  const [Header, headerProps] = getOverrides(\n    StyledHeader,\n    props,\n    dlv(theme, 'overrides.Dialog.Header'),\n    overrides.Header,\n  );\n  const [Footer, footerProps] = getOverrides(\n    StyledFooter,\n    props,\n    dlv(theme, 'overrides.Dialog.Footer'),\n    overrides.Footer,\n  );\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onRequestClose}\n      shouldLockBodyScroll={shouldLockBodyScroll}\n    >\n      <Root {...rootProps}>\n        <Content {...contentProps}>\n          <Header onRequestClose={onRequestClose} {...headerProps} />\n          <Body {...bodyProps}>{children}</Body>\n          <Footer onRequestClose={onRequestClose} {...footerProps} />\n        </Content>\n        <OverlayR onPress={onRequestClose} {...overlayProps} />\n      </Root>\n    </Modal>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ContentProps extends ViewProps, PropsWithChildren {}\n\nconst StyledContent = (props: ContentProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: 'white',\n          borderRadius: theme.controlBorderRadius.medium,\n          elevation: 1,\n\n          /**\n           * On iOs the navigation bar and bottom bar take roughly 10% each, maxHeight offsets\n           * that amount so that it does not overflow the window\n           */\n          maxHeight: '80%',\n          maxWidth: 600,\n          minWidth: 280,\n          position: 'relative',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface FooterProps extends PropsWithChildren {\n  onRequestClose?: () => void;\n}\n\nconst StyledFooter = (props: FooterProps) => {\n  return <></>;\n};\n\ninterface HeaderProps extends PropsWithChildren {\n  onRequestClose?: () => void;\n}\n\nconst StyledHeader = (props: HeaderProps) => {\n  return <></>;\n};\n\ninterface BodyProps extends ScrollViewProps, PropsWithChildren {}\n\nconst StyledBody = (props: BodyProps) => {\n  const { children, style, ...scrollViewProps } = props;\n\n  return (\n    <ScrollView\n      style={[\n        {\n          maxHeight: 400,\n        },\n        style,\n      ]}\n      {...scrollViewProps}\n    >\n      {children}\n    </ScrollView>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { TouchableWithoutFeedback, View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override } from '../../utils/overrides';\n\nexport interface OverlayProps extends ViewProps {\n  onPress?: () => void;\n  override?: OverlayOverride;\n}\n\nexport type OverlayOverride = Override<OverlayProps, RootProps>;\n\nexport const Overlay = (props: OverlayProps) => {\n  const {\n    onPress = () => {\n      return;\n    },\n    override,\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Overlay'),\n    override,\n  );\n\n  return <Root onPress={onPress} {...rootProps} />;\n};\n\ninterface RootProps extends ViewProps {\n  onPress: () => void;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { style, onPress, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View\n        style={[\n          {\n            backgroundColor: theme.colors.background.overlay,\n            bottom: 0,\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n          },\n          style,\n        ]}\n        {...viewProps}\n      />\n    </TouchableWithoutFeedback>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Platform,\n  Text as RNText,\n  TextProps as RNTextProps,\n  TextStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n} from '../../theme/Theme';\nimport { getOverrides, Override } from '../../utils/overrides';\nimport { getFontWeight, getTextColor } from './Text';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends RNTextProps {\n  /** Text content */\n  children?: React.ReactNode;\n\n  /**\n   * Size of the heading.\n   * @default \"medium\"\n   */\n  size?: HeadingSize;\n\n  /**\n   * Alignment of the heading.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Color of the heading.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Weight of the heading.\n   * @default headingSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * Overrides\n   */\n  override?: HeadingOverride;\n\n  /**\n   * (Web only): Corresponding h1, h2, h3... levels\n   */\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\nexport type HeadingOverride = Override<HeadingProps, StyledHeadingProps>;\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size,\n    align,\n    color,\n    weight,\n    override,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const [Text, textRProps] = getOverrides(\n    StyledHeading,\n    props,\n    dlv(theme, 'overrides.Heading'),\n    override,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      accessibilityLevel={accessibilityLevel}\n      size={size}\n      align={align}\n      color={color}\n      weight={weight}\n      {...textProps}\n      {...textRProps}\n    />\n  );\n};\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\ninterface StyledHeadingProps extends RNTextProps {\n  children?: React.ReactNode;\n  size?: HeadingSize;\n  align?: TextAlign;\n  color?: TextColor;\n  weight?: FontWeight;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\nconst StyledHeading = (props: StyledHeadingProps) => {\n  const {\n    children,\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return (\n    <RNText\n      style={[\n        {\n          ...sizeStyle,\n          color: getTextColor(theme.colors.text)(color),\n          fontFamily: theme.fontFamilies.heading,\n          fontWeight:\n            getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n          textAlign: align,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {children}\n    </RNText>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}