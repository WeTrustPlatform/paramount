{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Toggle","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","on","toggle","set","initialMeasurements","height","pageX","pageY","width","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","onMeasure","ref","slicedToArray","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","objectSpread","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","viewProps","objectWithoutProperties","isRenderProp","_useMeasure","react","View","esm_extends","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","Popover","Text","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","getStyles","positionerStyle","modalContainerStyle","popoverStyle","content","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","appearance","onPress","title","of","isMDXComponent","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","getPositionerStyles","containerStyle","opacity","isPositionerMeasurementsMeasured","zIndex","Positioner","_props$position","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","_mergeStyles","mergeStyles","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","getPopoverStyles","padding","restProps","Positioner_Positioner","Popover_jsxFileName"],"mappings":"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","file":"static/js/29.6fd99a60.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        getStyles={(props, theme) => ({\\n          positionerStyle: {},\\n          modalContainerStyle: {},\\n          popoverStyle: {},\\n        })}\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, you have to\\n              manage its open and closed state\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" getStyles={(props, theme) => ({\n            positionerStyle: {},\n            modalContainerStyle: {},\n            popoverStyle: {}\n          })} content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, you have to\n                manage its open and closed state\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport interface PositionerStyleProps {\n  isPositionerMeasurementsMeasured: boolean;\n}\n\nexport type GetPositionerStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = (props, theme) => {\n  const { isPositionerMeasurementsMeasured } = props;\n\n  return {\n    containerStyle: {},\n    positionerStyle: {\n      opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface PositionerProps {\n  children: React.ReactNode;\n  content?: React.ReactNode;\n  isVisible?: boolean;\n  position?: Position;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\ninterface GetPositionerPositionParams {\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    getStyles,\n    children,\n    content,\n    isVisible,\n    position = POSITION.BOTTOM,\n  } = props;\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const theme = useTheme();\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const { positionerStyle, containerStyle } = mergeStyles(\n    getPositionerStyles,\n    getStyles,\n    theme.components.getPositionerStyles,\n  )({ isPositionerMeasurementsMeasured }, theme);\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  return (\n    <>\n      {isVisible && (\n        <ViewMeasure\n          style={{\n            ...positionStyle,\n            ...positionerStyle,\n          }}\n          onMeasure={setPositionerMeasurements}\n        >\n          {content}\n        </ViewMeasure>\n      )}\n      <ViewMeasure style={containerStyle} onMeasure={setTargetMeasurements}>\n        {children}\n      </ViewMeasure>\n    </>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport {\n  getPositionerStyles,\n  PositionerStyleProps,\n  PositionerStyles,\n} from '../Positioner/Positioner.styles';\n\nexport interface PopoverStyles extends PositionerStyles {\n  popoverStyle: ViewStyle;\n}\n\nexport type GetPopoverStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => PopoverStyles;\n\nexport const getPopoverStyles: GetPopoverStyles = (props, theme) => {\n  return {\n    popoverStyle: {\n      backgroundColor: theme.colors.background.content,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    ...getPositionerStyles(props, theme),\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  GetPopoverStyles,\n  getPopoverStyles,\n  PopoverStyles,\n} from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  getStyles?: ReplaceReturnType<GetPopoverStyles, DeepPartial<PopoverStyles>>;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getStyles, ...restProps } = props;\n  const theme = useTheme();\n  const { popoverStyle } = mergeStyles(\n    getPopoverStyles,\n    getStyles,\n    theme.components.getPopoverStyles,\n  )({ isPositionerMeasurementsMeasured: false }, theme);\n\n  return (\n    <Positioner\n      {...restProps}\n      getStyles={getStyles}\n      content={<View style={popoverStyle}>{content}</View>}\n    />\n  );\n};\n"],"sourceRoot":""}