{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/Picker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/Picker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/usePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","testID","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","children","objectWithoutProperties","buttonAppearances","minimal","default","background","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","getStyle","Dots_Dots","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setState","newState","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Picker","___WEBPACK_IMPORTED_MODULE_5__","value","_ref2","___WEBPACK_IMPORTED_MODULE_6__","onValueChange","tab","data","Array","fill","v","i","concat","of","isMDXComponent","_props$data","_props$onValueChange","keyExtractor","isMulti","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","StyledItem","Item","tabProps","_usePicker","usePicker","items","handleSelect","react__WEBPACK_IMPORTED_MODULE_4__","item","onSelect","isSelected","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","flex","_Button__WEBPACK_IMPORTED_MODULE_8__","isArray","itemValue","itemIndex","filter","val","some","selVal","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/10.d2a09a27.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State, Picker } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"picker\"\n    }}>{`Picker`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'Tab 1\\' }}>\\n  {({ state, setState }) => (\\n    <Picker\\n      value={state.value}\\n      onValueChange={tab => setState({ value: tab })}\\n      data={new Array(4).fill(0).map((v, i) => ({\\n        value: `Tab ${i + 1}`,\\n      }))}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      Picker\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'Tab 1'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Picker value={state.value} onValueChange={tab => setState({\n          value: tab\n        })} data={new Array(4).fill(0).map((v, i) => ({\n          value: `Tab ${i + 1}`\n        }))} mdxType=\"Picker\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Picker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Button } from '../Button';\nimport {\n  PickerItem,\n  PickerItemProps,\n  usePicker,\n  UsePickerProps,\n} from './usePicker';\n\nexport interface PickerOverrides<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>\n> {\n  Root: RootProps;\n  Item: ItemProps<TValue, TPickerItem & PickerItemProps>;\n}\n\nexport interface ItemProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue> & PickerItemProps\n> {\n  item: TPickerItem;\n  onSelect: () => void;\n}\n\nexport interface PickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>\n  extends WithOverrides<\n    UsePickerProps<TValue, TPickerItem, TIsMulti>,\n    PickerOverrides<TValue, TPickerItem>\n  > {}\n\nexport const Picker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: PickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    data = [],\n    value,\n    onValueChange = () => {\n      return;\n    },\n    keyExtractor,\n    isMulti,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Picker.Root'),\n    overrides.Root,\n  );\n  const [Item, tabProps] = getOverrides(\n    StyledItem,\n    props,\n    dlv(theme, 'overrides.Picker.Item'),\n    overrides.Item,\n  );\n\n  const { items, handleSelect } = usePicker({\n    value,\n    onValueChange,\n    data,\n    isMulti,\n    keyExtractor,\n  });\n\n  return (\n    <Root {...rootProps}>\n      {items.map(item => (\n        <Item\n          key={item.key}\n          onSelect={() => handleSelect(item.value, item.index, item.isSelected)}\n          item={item}\n          {...tabProps}\n        />\n      ))}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          borderRadius: theme.controlBorderRadius.medium,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const StyledItem = <TValue extends any = string>(\n  props: ItemProps<TValue, PickerItem<TValue> & PickerItemProps>,\n) => {\n  const { item, onSelect } = props;\n  const { isSelected, value } = item;\n  const theme = useTheme();\n\n  return (\n    <Button\n      color={isSelected ? 'primary' : 'default'}\n      overrides={{\n        Touchable: {\n          style: {\n            backgroundColor: isSelected ? 'white' : 'transparent',\n            paddingLeft: 0,\n            paddingRight: 0,\n          },\n        },\n        Title: {\n          style: {\n            color: isSelected\n              ? theme.colors.text.primary\n              : theme.colors.text.muted,\n          },\n        },\n      }}\n      title={typeof value === 'string' ? value : 'Invalid value'}\n      onPress={onSelect}\n    />\n  );\n};\n","import * as React from 'react';\n\ntype Value<\n  TValue extends any,\n  TIsMulti extends boolean = false\n> = TIsMulti extends true ? TValue[] : TValue;\n\nexport interface PickerItem<TValue extends any> {\n  value: TValue;\n  key?: string;\n}\n\nexport interface PickerItemProps {\n  key: string;\n  isSelected: boolean;\n  index: number;\n}\n\nexport interface UsePickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n> {\n  /**\n   * Set whether it should allow multiple selections. You should specify the value to get proper type-checking.\n   * @default false\n   */\n  isMulti?: TIsMulti;\n\n  /**\n   * Select item or items.\n   * For single-select use single string.\n   * For multi-select use string array\n   *\n   * *This is a controlled component*; Value will reflect selected items\n   */\n  value?: Value<TValue, TIsMulti> | null;\n\n  /**\n   * Called when a select list item is pressed\n   */\n  onValueChange?: (value: Value<TValue, TIsMulti>, index: number) => void;\n\n  /**\n   * List of data\n   */\n  data?: Array<TPickerItem>;\n\n  /**\n   * Used to extract a unique key for a given item at the specified index.\n   * Key is used for caching and as the react key to track item re-ordering.\n   * The default extractor checks item.key, then falls back to using the index, like React does.\n   */\n  keyExtractor?: (item: TPickerItem) => string;\n}\n\nconst isMulti = <TValue extends any>(\n  value: TValue | TValue[],\n): value is TValue[] => Array.isArray(value);\n\nexport const usePicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: UsePickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    value,\n    onValueChange = () => {\n      return;\n    },\n    data = [],\n    keyExtractor,\n  } = props;\n\n  const handleSelect = React.useCallback(\n    (itemValue: TValue, itemIndex: number, isSelected: boolean) => {\n      if (isMulti(value)) {\n        if (isSelected) {\n          onValueChange(\n            // @ts-ignore: TODO: make this work\n            value.filter(val => val !== itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        } else {\n          onValueChange(\n            value.concat(itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        }\n      } else {\n        onValueChange(itemValue as Value<TValue, TIsMulti>, itemIndex);\n      }\n    },\n    [value, onValueChange],\n  );\n\n  const items = data.map((item, index) => {\n    const isSelected = (isMulti(value)\n      ? //\n        // @ts-ignore: TODO: make this work\n        value.some(selVal => selVal === item.value)\n      : value === item.value) as boolean;\n\n    return {\n      ...item,\n      key: keyExtractor ? keyExtractor(item) : item.key || `${index}`,\n      index,\n      isSelected,\n    };\n  }) as (TPickerItem & PickerItemProps)[];\n\n  return {\n    handleSelect,\n    items,\n  };\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}