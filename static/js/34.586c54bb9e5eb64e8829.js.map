{"version":3,"sources":["webpack:///./src/components/Drawer/Drawer.styles.ts","webpack:///./src/components/Drawer/Drawer.tsx","webpack:///./src/components/Drawer/index.ts","webpack:///./src/components/Menu/DrawerMenu.mdx","webpack:///./src/components/Menu/DrawerMenu.tsx"],"names":["getDrawerVariables","theme","container","position","width","zIndex","modalContainer","alignItems","display","height","justifyContent","getDrawerStyles","drawerVariables","containerStyle","modalContainerStyle","displayName","__docgenInfo","description","props","colors","defaultValue","name","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Modal","_Overlay","_Drawer","Drawer","withTheme","children","isVisible","_props$onClose","onClose","_props$position","_props$offset","offset","space","getStyles","_mergeStyles","mergeStyles","value","Animated","Value","spring","bounciness","speed","toValue","start","createElement","Modal","visible","transparent","onRequestClose","View","style","_objectSpread3","default","_defineProperty2","Overlay","onPress","_react","_interopRequireDefault","_tag","_docz","_reactPowerplug","_DrawerMenu","_Button","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","MDXTag","id","Playground","__position","__code","__scope","Toggle","DrawerMenu","Button","_ref","on","toggle","Fragment","isInline","title","options","color","appearance","Component","_Layout","_props$options","Spacing","padding","Box","elevation","borderRadius","medium","borderWidth","borderColor","border","ButtonGroup","map","option","_extends2","key","paddingTop"],"mappings":"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","file":"static/js/34.7fd180bc.js","sourcesContent":["import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDrawerVariables.displayName = \"getDrawerVariables\";\n    // @ts-ignore\n    getDrawerVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\"] = { docgenInfo: getDrawerVariables.__docgenInfo, name: \"getDrawerVariables\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDrawerStyles.displayName = \"getDrawerStyles\";\n    // @ts-ignore\n    getDrawerStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\"] = { docgenInfo: getDrawerStyles.__docgenInfo, name: \"getDrawerStyles\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  theme: Theme;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nconst DrawerBase = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    theme,\n    getStyles,\n  } = props;\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  if (!isVisible) return null;\n\n  const value = new Animated.Value(-500);\n\n  Animated.spring(value, {\n    bounciness: 0,\n    speed: 70,\n    toValue: offset,\n  }).start();\n\n  return (\n    <Modal visible transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        <Animated.View\n          style={{\n            ...containerStyle,\n            [position]: value,\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </Animated.View>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\n\nexport const Drawer = withTheme(DrawerBase);\nexport default Drawer;\n","export { default as Drawer, DrawerProps } from './Drawer';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport DrawerMenu from './DrawerMenu';\nimport { Button } from '../Button';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"drawermenu\"}}>{`DrawerMenu`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} isInline title=\\\"Open overlay menu\\\" />\\n      <DrawerMenu\\n        options={[\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 1\\',\\n            color: \\'danger\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 2\\',\\n            color: \\'primary\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 3\\',\\n            color: \\'secondary\\',\\n            appearance: \\'minimal\\',\\n          },\\n          {\\n            onPress: toggle,\\n            title: \\'Menu Option 4\\',\\n            appearance: \\'minimal\\',\\n          },\\n        ]}\\n        isVisible={on}\\n        onClose={toggle}\\n      />\\n    </>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,DrawerMenu,Button}}>\n  <Toggle>\n    {({ on, toggle }) => (\n      <>\n        <Button onPress={toggle} isInline title=\"Open overlay menu\" />\n        <DrawerMenu\n          options={[\n            {\n              onPress: toggle,\n              title: 'Menu Option 1',\n              color: 'danger',\n              appearance: 'minimal',\n            },\n            {\n              onPress: toggle,\n              title: 'Menu Option 2',\n              color: 'primary',\n              appearance: 'minimal',\n            },\n            {\n              onPress: toggle,\n              title: 'Menu Option 3',\n              color: 'secondary',\n              appearance: 'minimal',\n            },\n            {\n              onPress: toggle,\n              title: 'Menu Option 4',\n              appearance: 'minimal',\n            },\n          ]}\n          isVisible={on}\n          onClose={toggle}\n        />\n      </>\n    )}\n  </Toggle>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Button, ButtonGroup, ButtonProps } from '../Button';\nimport { Drawer } from '../Drawer';\nimport { Box, Spacing } from '../Layout';\n\nexport interface DrawerMenuProps {\n  theme: Theme;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** List of menu options, which also take `ButtonProps` */\n  options?: ButtonProps[];\n}\n\nconst DrawerMenuBase = (props: DrawerMenuProps) => {\n  const { options = [], isVisible, onClose, theme } = props;\n\n  return (\n    <Drawer isVisible={isVisible} onClose={onClose}>\n      <Spacing padding={3}>\n        <Box\n          elevation={1}\n          borderRadius={theme.controlBorderRadius.medium}\n          borderWidth={1}\n          borderColor={theme.colors.border.default}\n        >\n          <ButtonGroup>\n            {options.map(option => (\n              <Button key={option.title} {...option} />\n            ))}\n          </ButtonGroup>\n        </Box>\n        <Spacing paddingTop={3}>\n          <Button onPress={onClose} title=\"Close\" />\n        </Spacing>\n      </Spacing>\n    </Drawer>\n  );\n};\n\nexport const DrawerMenu = withTheme(DrawerMenuBase);\nexport default DrawerMenu;\n"],"sourceRoot":""}