{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","justifyContent","___WEBPACK_IMPORTED_MODULE_6__","title","appearance","isLoading","of","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","alignItems","map","index","key","borderRadius","marginLeft","marginRight","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","_props$onPress","onPress","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","minHeight","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Fragment","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/19.fc3e737d.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component to trigger an action`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}