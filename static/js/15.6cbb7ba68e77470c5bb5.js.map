{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/RowAndColumn.mdx"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","Column","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useLayout","useLayout","currentScreenSize","gridColumnCount","gutterWidth","React","GutterWidthContext","_splitColumnConfig","splitColumnConfig","columns","offsetColumns","columnCount","getColumnCount","flexBasis","getProportion","offsetColumnCount","marginLeft","react__WEBPACK_IMPORTED_MODULE_3__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","flex","maxWidth","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","concat","config","Container","_props$fluid","fluid","containerSizes","marginRight","getMaxWidth","undefined","defaultLayout","Row","_props$hasGutter","hasGutter","flexDirection","flexWrap","_jsxFileName","Provider","value","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","borderWidth","of","className","isMDXComponent"],"mappings":"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","file":"static/js/15.46eb1746.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport {\n  ColumnCount,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  /**\n   * Number of columns to span over when screen size is xsmall\n   */\n  xsmall?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is small\n   */\n  small?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is medium\n   */\n  medium?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is large\n   */\n  large?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is xlarge\n   */\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  /**\n   * Number of columns to offset when screen size is xsmall\n   */\n  offsetXsmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is small\n   */\n  offsetSmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is medium\n   */\n  offsetMedium?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is large\n   */\n  offsetLarge?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is xlarge\n   */\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig, Omit<ViewProps, 'style'> {\n  /** Content of the column. */\n  children?: React.ReactNode;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<ColumnProps, ViewStyle>;\n}\n\nexport type ColumnOverride = OverrideStyle<ColumnProps, ViewStyle>;\n\nexport const Column = (props: ColumnProps) => {\n  const {\n    children,\n    style,\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n    ...viewProps\n  } = props;\n\n  const theme = useTheme();\n  const { currentScreenSize, gridColumnCount } = useLayout();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const config = {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  };\n  const { columns, offsetColumns } = splitColumnConfig(config);\n\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return (\n    <View\n      style={[\n        {\n          flex: 1,\n          flexBasis,\n          marginLeft,\n          maxWidth: flexBasis,\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Column.style')),\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport {\n  ContainerSize,\n  ContainerSizes,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\n\nexport interface ContainerProps extends Omit<ViewProps, 'style'> {\n  /** Children node */\n  children?: React.ReactNode;\n\n  /**\n   * When true, it will not contain the width and occupy fully the parent container\n   * @default false\n   */\n  fluid?: boolean;\n\n  /**\n   * The size of the container. It will override the internal responsive mechanism, and will force the\n   * containment of a particular screen size\n   */\n  size?: ContainerSize;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<ContainerProps, ViewStyle>;\n}\n\nexport type ContainerOverride = OverrideStyle<ContainerProps, ViewStyle>;\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, size, fluid = false, style, ...viewProps } = props;\n  const theme = useTheme();\n  const { gutterWidth, containerSizes, currentScreenSize } = useLayout();\n\n  return (\n    <View\n      style={[\n        {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: fluid\n            ? '100%'\n            : size\n            ? containerSizes[size]\n            : getMaxWidth(containerSizes, currentScreenSize),\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n          width: '100%',\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Container.style')),\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getMaxWidth = (\n  containerSizes: ContainerSizes,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (screenSize === 'xsmall') return false;\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!containerSizes[screenSize];\n  });\n\n  if (nearestSize === 'xsmall') return undefined;\n\n  return nearestSize ? containerSizes[nearestSize] : undefined;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport { ColumnProps } from './Column';\nimport { defaultLayout, useLayout } from './LayoutContext';\n\nexport interface RowProps extends Omit<ViewProps, 'style'> {\n  /**\n   * When true, there will be gutter between columns\n   * @default true\n   */\n  hasGutter?: boolean;\n\n  /**\n   * `Column` components\n   */\n  children:\n    | Array<React.ReactElement<ColumnProps>>\n    | React.ReactElement<ColumnProps>;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<RowProps, ViewStyle>;\n}\n\nexport type RowOverride = OverrideStyle<RowProps, ViewStyle>;\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, style, ...viewProps } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n          marginRight: hasGutter ? -gutterWidth / 2 : 0,\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Row.style')),\n      ]}\n      {...viewProps}\n    >\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"row-and-column\"\n    }}>{`Row and Column`}</h1>\n    <p><inlineCode parentName=\"p\">{`Column`}</inlineCode>{` renders at the width of defined columns count. It will match nearest defined size that is smaller than or equal to current screen size.\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` wraps `}<inlineCode parentName=\"p\">{`Column`}</inlineCode>{`s to keep them horizontal`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"row-props\"\n    }}>{`Row Props`}</h2>\n    <Props of={Row} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"row-customization\"\n    }}>{`Row Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RowStyles {\n  rowStyle: ViewStyle;\n}\n\ngetStyles={(RowProps, Theme) => RowStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View rowStyle />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"column-props\"\n    }}>{`Column Props`}</h2>\n    <Props of={Column} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"column-customization\"\n    }}>{`Column Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\ngetStyles={(ColumnProps, Theme) => ColumnStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View columnStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}