{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","paddingRight","justifyContent","___WEBPACK_IMPORTED_MODULE_6__","title","appearance","isLoading","of","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","alignItems","map","index","key","borderRadius","marginLeft","marginRight","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","_props$onPress","onPress","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","Dots_Dots","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/21.ae9f3ea5.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component to trigger an action`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}