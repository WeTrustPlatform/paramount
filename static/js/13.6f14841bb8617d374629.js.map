{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Star.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Svg/Svg.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Svg/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","CounterContainer","Props","Rating","Counter","initial","_ref2","rating","count","set","value","size","color","onChange","getStyles","theme","containerStyle","touchableStyle","starColor","starSize","of","isMDXComponent","_Text","getRatingStyles","controlHeights","flexDirection","paddingRight","controlPaddings","getTextColor","colors","text","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Rating","_Star","_props$value","_props$maxRating","maxRating","_props$size","_props$onChange","_props$color","useTheme","_mergeStyles","mergeStyles","createElement","View","style","Array","fill","map","index","currentValue","isWithinRating","isLast","TouchableOpacity","key","_objectSpread2","onPress","Star","isFilled","_Svg","_props$isFilled","coercedSize","String","finalColor","fills","subtle","yellow","backgroundColor","Svg","width","height","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","points","Object","keys","forEach","defineProperty","exports","enumerable","get","_reactNativeWeb","prepare","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","clean","transform","push","concat","length","join","styleProp","cleanedProps","styles","StyleSheet","Symbol","iterator","assign","apply","_toConsumableArray2","Circle","ClipPath","Defs","Ellipse","G","x","y","rest","Image","Line","LinearGradient","Path","Polyline","RadialGradient","Rect","Stop","Text","TSpan","TextPath","Use","Mask","Pattern","getFontFamily","fontFamilies","getFontWeight","fontWeights","textColors","textColor","getTextSize","textSizes","getTextStyles","isInline","isItalic","align","weight","sizeStyle","textStyle","textAlign","alignSelf","textTransform","_deepmerge","_react","_defaultTheme","ThemeContext","createContext","defaultTheme","createTheme","ThemeProvider","children","Provider","useContext","_palette","background","base","content","overlay","greyLight","palette","neutral","lightest","greyDefault","greyDark","light","primaryLight","teal","primaryDefault","primaryDark","dark","secondaryLight","orange","secondaryDefault","secondaryDark","dangerLight","red","dangerDefault","dangerDark","infoLight","blue","infoDefault","infoDark","successLight","green","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","darkest","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","solid","purple","Platform","OS","heading","mono","undefined","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","paragraphSizes","controlBorderRadius","_Theme","getDefaultStyles","getOverridingStyles","getThemeStyles","merge","all"],"mappings":"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","file":"static/js/13.b166b318.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Rating } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"rating\"\n    }}>{`Rating`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={3}>\\n  {({ count: rating, set }) => (\\n    <Rating\\n      value={rating}\\n      size=\\\"small\\\"\\n      color=\\\"#67c6bb\\\"\\n      onChange={value => set(value)}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n        touchableStyle: {},\\n        starColor: \\'#67c6bb\\', // defined as color prop\\n        starSize: 40, // defined as size prop\\n      })}\\n    />\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Rating\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={3} mdxType=\"CounterContainer\">\n    {({\n          count: rating,\n          set\n        }) => <Rating value={rating} size=\"small\" color=\"#67c6bb\" onChange={value => set(value)} getStyles={(props, theme) => ({\n          containerStyle: {},\n          touchableStyle: {},\n          starColor: '#67c6bb',\n          // defined as color prop\n          starSize: 40 // defined as size prop\n\n        })} mdxType=\"Rating\" />}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Rating} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, TextColor, Theme } from '../../theme/Theme';\nimport { getTextColor } from '../Typography/Text.styles';\n\nexport interface RatingStylesProps {\n  size: ControlSize;\n  color: TextColor;\n}\n\nexport type GetRatingStyles = (\n  progressStylesProps: RatingStylesProps,\n  theme: Theme,\n) => RatingStyles;\n\nexport interface RatingStyles {\n  touchableStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  starColor: string;\n  starSize: number;\n}\n\nexport const getRatingStyles: GetRatingStyles = ({ size, color }, theme) => {\n  const starSize = theme.controlHeights[size];\n  const padding = theme.controlPaddings[size];\n\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n    touchableStyle: {\n      paddingRight: padding,\n    },\n\n    starColor: getTextColor(theme.colors.text)(color),\n    starSize,\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, TextColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetRatingStyles,\n  getRatingStyles,\n  RatingStyles,\n} from './Rating.styles';\nimport { Star } from './Star';\n\nexport interface RatingProps {\n  value?: number;\n  maxRating?: number;\n  size?: ControlSize;\n  getStyles?: ReplaceReturnType<GetRatingStyles, DeepPartial<RatingStyles>>;\n  onChange?: (value: number) => void;\n  color?: TextColor;\n}\n\nexport const Rating = (props: RatingProps) => {\n  const {\n    value = 0,\n    maxRating = 5,\n    size = 'medium',\n    getStyles,\n    onChange = () => undefined,\n    color = 'primary',\n  } = props;\n  const theme = useTheme();\n\n  const { containerStyle, starColor, starSize, touchableStyle } = mergeStyles(\n    getRatingStyles,\n    getStyles,\n    theme.components.getRatingStyles,\n  )({ size, color }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {new Array(maxRating).fill(0).map((_, index) => {\n        const currentValue = index + 1;\n        const isWithinRating = currentValue <= value;\n        const isLast = currentValue === maxRating;\n\n        return (\n          <TouchableOpacity\n            key={currentValue}\n            style={{\n              ...touchableStyle,\n              ...(isLast ? { paddingRight: 0 } : {}),\n            }}\n            onPress={() => onChange(currentValue)}\n          >\n            <Star color={starColor} size={starSize} isFilled={isWithinRating} />\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Polygon, Svg } from '../Svg';\n\nexport interface StarProps {\n  size?: number;\n  isFilled?: boolean;\n  color?: string;\n}\n\nexport const Star = (props: StarProps) => {\n  const { size = 24, color, isFilled = false } = props;\n  const theme = useTheme();\n\n  const coercedSize = String(size);\n\n  const finalColor = color || theme.fills.subtle.yellow.backgroundColor;\n\n  return (\n    <Svg\n      width={coercedSize}\n      height={coercedSize}\n      viewBox={`0 0 24 24`}\n      fill={isFilled ? finalColor : 'none'}\n      stroke={finalColor}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <Polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n    </Svg>\n  );\n};\n","export * from './Rating';\nexport * from './Star';\n","// PORTED IMPLEMENTATION FROM https://github.com/react-native-community/react-native-svg/blob/master/index.web.js\nimport * as React from 'react';\nimport {\n  CircleProps,\n  ClipPathProps,\n  DefinitionProps,\n  EllipseProps,\n  GProps,\n  ImageProps,\n  LinearGradientProps,\n  LineProps,\n  MaskProps,\n  PathProps,\n  PatternProps,\n  PolygonProps,\n  PolylineProps,\n  RadialGradientProps,\n  RectProps,\n  StopProps,\n  SvgProps,\n  SymbolProps,\n  TextPathProps,\n  TextProps,\n  TSpanProps,\n  UseProps,\n} from 'react-native-svg';\n// @ts-ignore\nimport { createElement, StyleSheet } from 'react-native-web';\n\n// Kept in separate file, to avoid name collision with Symbol element\n// @ts-ignore\nconst resolve = (styleProp, cleanedProps) => {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      // @ts-ignore\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n};\n\nexport const prepare = (props: any) => {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    ...clean\n  } = props;\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  const styles: StyleSheet = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nexport const Circle = (props: CircleProps) => {\n  return createElement('circle', prepare(props));\n};\n\nexport const ClipPath = (props: ClipPathProps) => {\n  return createElement('clipPath', prepare(props));\n};\n\nexport const Defs = (props: DefinitionProps) => {\n  return createElement('defs', prepare(props));\n};\n\nexport const Ellipse = (props: EllipseProps) => {\n  return createElement('ellipse', prepare(props));\n};\n\nexport const G = (props: GProps) => {\n  const { x, y, ...rest } = props;\n\n  if ((x || y) && !rest.translate) {\n    rest.translate = `${x || 0}, ${y || 0}`;\n  }\n\n  return createElement('g', prepare(rest));\n};\n\nexport const Image = (props: ImageProps) => {\n  return createElement('image', prepare(props));\n};\n\nexport const Line = (props: LineProps) => {\n  return createElement('line', prepare(props));\n};\n\nexport const LinearGradient = (props: LinearGradientProps) => {\n  return createElement('linearGradient', prepare(props));\n};\n\nexport const Path = (props: PathProps) => {\n  return createElement('path', prepare(props));\n};\n\nexport const Polygon = (props: PolygonProps) => {\n  return createElement('polygon', prepare(props));\n};\n\nexport const Polyline = (props: PolylineProps) => {\n  return createElement('polyline', prepare(props));\n};\n\nexport const RadialGradient = (props: RadialGradientProps) => {\n  return createElement('radialGradient', prepare(props));\n};\n\nexport const Rect = (props: RectProps) => {\n  return createElement('rect', prepare(props));\n};\n\nexport const Stop = (props: StopProps) => {\n  return createElement('stop', prepare(props));\n};\n\nexport const Svg = (props: SvgProps) => {\n  return createElement('svg', prepare(props));\n};\n\nexport const Symbol = (props: SymbolProps) => {\n  return createElement('symbol', prepare(props));\n};\n\nexport const Text = (props: TextProps) => {\n  return createElement('text', prepare(props));\n};\n\nexport const TSpan = (props: TSpanProps) => {\n  return createElement('tspan', prepare(props));\n};\n\nexport const TextPath = (props: TextPathProps) => {\n  return createElement('textPath', prepare(props));\n};\n\nexport const Use = (props: UseProps) => {\n  return createElement('use', prepare(props));\n};\n\nexport const Mask = (props: MaskProps) => {\n  return createElement('mask', prepare(props));\n};\n\nexport const Pattern = (props: PatternProps) => {\n  return createElement('pattern', prepare(props));\n};\n\nexport default Svg;\n","export * from './Svg';\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","export * from './defaultTheme';\nexport * from './Theme';\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}