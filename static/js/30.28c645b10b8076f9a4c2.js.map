{"version":3,"sources":["webpack:///./docs/CustomizeTheme.mdx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","href","React","Component"],"mappings":"6oBACEA,EAAAC,EAAAC,EAAA,kCACAC,EAAAD,EAAA,4CAMmBE,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,SAAAC,EAAAC,SAAAC,KAAAL,IACjBE,GAAA,EAAAI,EAAAF,SAAAC,MAAA,EAAAE,EAAAH,SAAAJ,GAAAQ,KAAAH,KAAMJ,KACDQ,OAAS,KAFGP,2EAIV,IAAAQ,EAC0BL,KAAKJ,MAA9BU,EADDD,EACCC,YADD,EAAAC,EAAAR,SAAAM,EAAA,gBAGP,OAAOd,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CACEC,KAAK,UAELJ,WAAYA,GAAYf,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,kBAAvD,iBACrCpB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,sBAAvD,qBACApB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,yCAAmFf,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,EAAYM,WAAW,KAA7D,SAAnF,WAAkLrB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYM,WAAW,IAAIhB,MAAO,CAACiB,KAAO,yFAAvE,sBAAlL,sBAAwYtB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,EAAYM,WAAW,KAA7D,kBACxYrB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,MAAMJ,WAAYA,GAAYf,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,OAAOJ,WAAYA,EAAYM,WAAW,MAAMhB,MAAO,IAApE,q1LAoQ3CL,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,8BAAvD,6BACApB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,0BAAoEf,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,EAAYM,WAAW,KAA7D,aAApE,8DACArB,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,MAAMJ,WAAYA,GAAYf,EAAAQ,QAAAS,cAACd,EAAAe,OAAD,CAAQC,KAAK,OAAOJ,WAAYA,EAAYM,WAAW,MAAMhB,MAAO,IAApE,8oBApRHkB,UAAMC","file":"static/js/30.34a86d98.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"customization\"}}>{`Customization`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"use-themeprovider\"}}>{`Use ThemeProvider`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can customize the theme using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Theme`}</MDXTag>{` object `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/WeTrustPlatform/paramount/blob/master/src/theme/ThemeInterface.ts\"}}>{`See Themeinterface`}</MDXTag>{` and passing it to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ThemeProvider`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { ThemeProvider, createTheme } from 'paramount-ui'\n\nconst theme = createTheme({\n  colors: {\n    background: {\n        overlay: 'rgba(0,0,0,0.3)',\n        plain: 'white',\n        disabled: palette.neutral.light,\n        tint1: palette.neutral.lightest,\n        tint2: '#F5F6F7',\n\n        // Brand colors\n        primary: {\n          default: palette.teal.base,\n          focus: palette.teal.dark,\n          focusLight: palette.teal.lightest,\n        },\n        secondary: {\n          default: palette.orange.base,\n          focus: palette.orange.dark,\n          focusLight: palette.orange.lightest,\n        },\n\n        // Intent.\n        danger: {\n          default: palette.red.base,\n          focus: palette.red.dark,\n          focusLight: palette.red.lightest,\n        },\n        info: {\n          default: palette.blue.base,\n          focus: palette.blue.dark,\n          focusLight: palette.blue.lightest,\n        },\n        success: {\n          default: palette.green.base,\n          focus: palette.green.dark,\n          focusLight: palette.green.lightest,\n        },\n        warning: {\n          default: palette.orange.base,\n          focus: palette.orange.dark,\n          focusLight: palette.orange.lightest,\n        },\n      },\n\n      border: {\n        default: palette.neutral.light,\n        muted: '#EDF0F2',\n\n        // Brand colors\n        primary: palette.teal.darkest,\n        secondary: palette.orange.darkest,\n\n        // Intent.\n        danger: palette.red.darkest,\n        info: palette.blue.darkest,\n        success: palette.green.darkest,\n        warning: palette.orange.darkest,\n      },\n\n      text: {\n        dark: palette.neutral.darkest,\n        default: palette.neutral.darkest,\n        muted: palette.neutral.dark,\n        plain: 'white',\n        selected: 'white',\n\n        // Brand colors\n        primary: palette.teal.darkest,\n        secondary: palette.orange.darkest,\n\n        // Intent.\n        danger: palette.red.darkest,\n        info: palette.blue.darkest,\n        success: palette.green.darkest,\n        warning: palette.orange.darkest,\n      },\n    }\n  },\n\n  textSizes: {\n    large: 20,\n    medium: 16,\n    small: 14,\n  },\n\n  fills: {\n    solid: {\n        neutral: {\n          backgroundColor: palette.neutral.base,\n          color: 'white',\n        },\n\n        blue: {\n          backgroundColor: palette.blue.base,\n          color: 'white',\n        },\n\n        red: {\n          backgroundColor: palette.red.base,\n          color: 'white',\n        },\n\n        orange: {\n          backgroundColor: palette.orange.base,\n          color: 'white',\n        },\n\n        yellow: {\n          backgroundColor: palette.yellow.base,\n          color: palette.yellow.darkest,\n        },\n\n        green: {\n          backgroundColor: palette.green.base,\n          color: 'white',\n        },\n\n        teal: {\n          backgroundColor: palette.teal.base,\n          color: 'white',\n        },\n\n        purple: {\n          backgroundColor: palette.purple.base,\n          color: 'white',\n        },\n      },\n\n      subtle: {\n        neutral: {\n          backgroundColor: palette.neutral.light,\n          color: palette.neutral.darkest,\n        },\n\n        blue: {\n          backgroundColor: palette.blue.light,\n          color: palette.blue.darkest,\n        },\n\n        red: {\n          backgroundColor: palette.red.light,\n          color: palette.red.darkest,\n        },\n\n        orange: {\n          backgroundColor: palette.orange.light,\n          color: palette.orange.darkest,\n        },\n\n        yellow: {\n          backgroundColor: palette.yellow.light,\n          color: palette.yellow.darkest,\n        },\n\n        green: {\n          backgroundColor: palette.green.light,\n          color: palette.green.darkest,\n        },\n\n        teal: {\n          backgroundColor: palette.teal.light,\n          color: palette.teal.darkest,\n        },\n\n        purple: {\n          backgroundColor: palette.purple.light,\n          color: palette.purple.darkest,\n        },\n      },\n    },\n  },\n\n  fontFamilies: {\n    heading: \\`\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"\\`,\n    mono: \\`\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace\\`,\n    text: \\`\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"\\`,\n  },\n\n  fontWeights: {\n    bold: '700',\n    light: '300',\n    normal: '600',\n  },\n\n  headingSizes: {\n    xxxlarge: 35,\n\n    xxlarge: 29,\n\n    xlarge: 24,\n\n    large: 20,\n\n    medium: 16,\n\n    small: 14,\n  },\n\n  paragraphSizes: {\n    large: 20,\n    medium: 16,\n    small: 14,\n  },\n\n\n  elevations: [\n    {\n      elevation: 0,\n      shadowColor: palette.neutral.dark,\n      shadowOffset: { width: 0, height: 0 },\n      shadowOpacity: 0,\n      shadowRadius: 0,\n    },\n    {\n      elevation: 1,\n      shadowColor: palette.neutral.dark,\n      shadowOffset: { width: 1, height: 1 },\n      shadowOpacity: 0.15,\n      shadowRadius: 8,\n    },\n    {\n      elevation: 2,\n      shadowColor: palette.neutral.dark,\n      shadowOffset: { width: 2, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 10,\n    },\n    // ...add more elevations\n  ],\n\n  controlBorderRadius: {\n    small: 4,\n\n    medium: 4,\n\n    large: 4,\n  },\n  controlHeights: {\n    small: 40,\n\n    medium: 48,\n\n    large: 56,\n  },\n  controlPaddings: {\n    small: 8,\n\n    medium: 16,\n\n    large: 24,\n  }\n})\n\n// in the outmost component insert the provider and pass Theme Object as value\n<ThemeProvider value={theme}>\n  ...\n</ThemeProvider>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"override-component-styles\"}}>{`Override Component Styles`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each component exposes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`getStyles`}</MDXTag>{` callback, which can be used to override component styles.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { Button } from 'paramount-ui'\n\nconst CustomButton = () => {\n  return (\n    <Button\n      color=\"primary\"\n      title=\"Example\"\n      getStyles={(buttonProps, theme) => {\n        const { color } = buttonProps;\n\n        // Each Component may use multiple style objects. The API enables to override each node's style\n        // VSCode intellisense would autofill available style fields; however, you can view the style spec of each component in their \\`Component*.styles.ts\\`\n        return {\n          buttonStyle: { ... },\n          textStyle: { ... },\n          focusColor: color\n        }\n      }}\n    >\n  )\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}