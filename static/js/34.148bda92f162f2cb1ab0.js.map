{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","_ref$color","color","_ref$size","size","theme","useTheme","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_getTextSize$fontSize","getTextSize","textSizes","fontSize","iconSize","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","colors","text","__source","fileName","lineNumber","getTabStyles","_ref$shouldStretch","shouldStretch","_ref$isActive","isActive","containerStyle","objectSpread","backgroundColor","background","greyDefault","padding","flex","textStyle","primary","muted","touchableStyle","paddingLeft","paddingRight","Tab","_props$isActive","getStyles","index","onPress","buttonProps","objectWithoutProperties","_mergeStyles","mergeStyles","components","react","View","style","_jsxFileName","Button","esm_extends","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Tabs","___WEBPACK_IMPORTED_MODULE_6__","activeTabIndex","_ref2","___WEBPACK_IMPORTED_MODULE_7__","onTabPress","Array","fill","map","v","i","___WEBPACK_IMPORTED_MODULE_8__","key","title","of","className","isMDXComponent","getTabsStyles","borderRadius","controlBorderRadius","medium","flexDirection","justifyContent","data","child","tabs","toArray","tabProps"],"mappings":"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","file":"static/js/34.d621ae0c.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor, getTextSize } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({\n  name,\n  color = 'default',\n  size = 'medium',\n}: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n  const { fontSize = 16 } = getTextSize(theme.textSizes)(size);\n  const iconSize = typeof size === 'string' ? fontSize + 8 : size;\n\n  return (\n    <IconTag color={getTextColor(theme.colors.text)(color)} size={iconSize} />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TabProps } from './Tab';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetTabStyles = (props: TabProps, theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = (\n  { shouldStretch = true, isActive = false },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      padding: 2,\n      ...(shouldStretch\n        ? {\n            flex: 1,\n          }\n        : {}),\n    },\n    textStyle: {\n      color: isActive ? theme.colors.text.primary : theme.colors.text.muted,\n    },\n    touchableStyle: {\n      backgroundColor: isActive ? 'white' : 'transparent',\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { GetTabStyles, getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps\n  extends Omit<Omit<ButtonProps, 'onPress'>, 'getStyles'> {\n  /**\n   * Index of the tab.\n   */\n  index?: number;\n\n  /**\n   * Called when tab is pressed.\n   */\n  onPress?: (index?: number) => void;\n\n  /**\n   * When true, the tab would be highlighted as active.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the tab will fill empty spaces\n   * @default true\n   */\n  shouldStretch?: boolean;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: ReplaceReturnType<GetTabStyles, DeepPartial<TabStyles>>;\n}\n\nexport const Tab = (props: TabProps) => {\n  const {\n    isActive = false,\n    getStyles,\n    index,\n    onPress,\n    shouldStretch = true,\n    ...buttonProps\n  } = props;\n  const theme = useTheme();\n  const { containerStyle, touchableStyle, textStyle } = mergeStyles(\n    getTabStyles,\n    getStyles,\n    theme.components.getTabStyles,\n  )(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        getStyles={() => ({ touchableStyle, textStyle })}\n        onPress={() => {\n          if ((index === 0 || index) && onPress) onPress(index);\n          else if (onPress) onPress();\n        }}\n        {...buttonProps}\n      />\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Icon, State, Tabs, Tab } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTabIndex={state.activeTabIndex}\\n      onTabPress={index => setState({ activeTabIndex: index })}\\n    >\\n      {new Array(4).fill(0).map((v, i) => (\\n        <Tab key={i} title={`Tab ${i + 1}`} />\\n      ))}\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      State,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTabIndex={state.activeTabIndex} onTabPress={index => setState({\n          activeTabIndex: index\n        })} mdxType=\"Tabs\">\n        {new Array(4).fill(0).map((v, i) => <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />)}\n      </Tabs>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tabs-props\"\n    }}>{`Tabs Props`}</h2>\n    <Props of={Tabs} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tabs-customization\"\n    }}>{`Tabs Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TabsStyles {\n  containerStyle: ViewStyle;\n}\n\ngetStyles={(TabsProps, Theme) => TabsStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View style={containerStyle}>{tabs}</View>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tab-props\"\n    }}>{`Tab Props`}</h2>\n    <p>{`Extends `}<inlineCode parentName=\"p\">{`ButtonProps`}</inlineCode></p>\n    <Props of={Tab} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tab-customization\"\n    }}>{`Tab Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TabStyles {\n  containerStyle: ViewStyle;\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\ngetStyles={(TabProps, Theme) => TabStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View style={containerStyle}>\n  <Button touchableStyle textStyle>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TabsProps } from './Tabs';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n}\n\nexport type GetTabsStyles = (props: TabsProps, theme: Theme) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      borderRadius: theme.controlBorderRadius.medium,\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  /**\n   * Current active tab index.\n   */\n  activeTabIndex?: number;\n\n  /**\n   * Called when a Tab is pressed\n   */\n  onTabPress: (index?: number) => void;\n\n  /**\n   * `Tab` components\n   */\n  children: Array<React.ReactElement<TabProps>> | React.ReactElement<TabProps>;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const { children, activeTabIndex, onTabPress, getStyles } = props;\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getTabsStyles,\n    getStyles,\n    theme.components.getTabsStyles,\n  )(props, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    return {\n      index,\n      isActive: index === activeTabIndex,\n      onPress: i => onTabPress(i),\n      ...child.props,\n    };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  return (\n    <View style={containerStyle}>\n      {data.map((tabProps, index) => React.cloneElement(tabs[index], tabProps))}\n    </View>\n  );\n};\n"],"sourceRoot":""}