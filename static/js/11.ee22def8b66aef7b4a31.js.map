{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Icon","TextInput","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","onValueChange","isInvalid","isClearable","onClear","console","log","of","isMDXComponent","_props$isClearable","_props$isDisabled","isDisabled","_props$isInvalid","_props$onClear","_props$onValueChange","_props$onChangeText","onChangeText","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","hasLeftIcon","LeftIcon","hasRightIcon","RightIcon","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5___default","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","minHeight","controlHeights","controlPaddings","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","greyLight","content","borderColor","border","borderWidth","text","muted","danger","editable","name","alignItems","display","justifyContent","left","position","zIndex","right","Fragment","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/11.203a1dd4.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"Placeholder\\\"\\n      size=\\\"large\\\"\\n      onValueChange={value => setState({ value })}\\n      isInvalid={false}\\n      isClearable\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"Placeholder\" size=\"large\" onValueChange={value => setState({\n          value\n        })} isInvalid={false} isClearable onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={TextInput} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    {\n      hasLeftIcon: !!overrides.LeftIcon,\n      hasRightIcon: !!(isClearable || overrides.RightIcon),\n      size,\n      isDisabled,\n      isInvalid,\n      onValueChange,\n      value,\n      onChangeText,\n      ...textInputProps,\n    },\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon {...leftIconProps} />\n      </LeftIconWrapper>\n      <Input {...inputProps} />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon {...rightIconProps} />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    minHeight,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                minHeight: numberOfLines * minHeight,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}