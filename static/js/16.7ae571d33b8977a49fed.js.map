{"version":3,"sources":["webpack:///./src/components/SelectList/SelectList.mdx","webpack:///./src/components/SelectList/SelectList.tsx","webpack:///./src/components/SelectList/SelectListItem.tsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_SelectList","_SelectListItem","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","SelectList","SelectListItem","selectedValue","onValueChange","itemValue","itemIndex","console","log","label","value","PropsTable","of","parentName","React","Component","_interopRequireWildcard","withTheme","isMulti","children","handleOnPress","isSelected","Array","isArray","filter","val","concat","Children","map","child","index","isValidElement","selectListItem","some","selVal","cloneElement","onSelect","displayName","__docgenInfo","description","defaultValue","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","__class","_fi","_reactNative","_theme","_Layout","_Typography","checkedIcon","dangerouslySetInlineStyle","_props$index","_props$isDisabled","isDisabled","_props$isSelected","_props$onSelect","_props$size","size","testID","theme","touchableHighlightProps","_theme$getSelectListS","getSelectListStyles","containerStyle","textStyle","focusBackgroundColor","TouchableHighlight","_extends2","disabled","onPress","underlayColor","style","_objectSpread2","View","wrapperStyle","Text","Box","position","right","marginRight","FiCheck","color","themeVariables","colors","text","success","activeOpacity","onHideUnderlay","onShowUnderlay","delayLongPress","delayPressIn","delayPressOut","hitSlop","onLayout","onLongPress","onPressIn","onPressOut","pressRetentionOffset","accessible","accessibilityLabel","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors"],"mappings":"8pBACEA,EAAAC,EAAAC,EAAA,kCACAC,EAAAD,EAAA,4CACAE,EAAAF,EAAA,uCACFG,EAAAJ,EAAAC,EAAA,+CACAI,EAAAL,EAAAC,EAAA,mDAEqBK,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,SAAAC,EAAAC,SAAAC,KAAAL,IACjBE,GAAA,EAAAI,EAAAF,SAAAC,MAAA,EAAAE,EAAAH,SAAAJ,GAAAQ,KAAAH,KAAMJ,KACDQ,OAAS,KAFGP,2EAIV,IAAAQ,EAC0BL,KAAKJ,MAA9BU,EADDD,EACCC,WAAeV,GADhB,EAAAW,EAAAR,SAAAM,EAAA,gBAGP,OAAOjB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CACEC,KAAK,UAELJ,WAAYA,GACzBlB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,UAAvD,SACAvB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,YAAvD,WACAvB,EAAAW,QAAAS,cAAChB,EAAAoB,WAAD,CAAYC,WAAY,EAAGC,OAAM,sPAQjBC,QAAS,CAACnB,MAAOI,KAAOA,KAAKJ,MAAQA,EAAMoB,qBAAWC,2BACpE7B,EAAAW,QAAAS,cAACf,EAAAM,QAAD,CACEmB,cAAc,KACdC,cAAe,SAACC,EAAWC,GAAZ,OACbC,QAAQC,IAAI,YAAaH,KAG3BhC,EAAAW,QAAAS,cAACd,EAAAK,QAAD,CAAgByB,MAAM,OAAOC,MAAM,SACnCrC,EAAAW,QAAAS,cAACd,EAAAK,QAAD,CAAgByB,MAAM,aAAaC,MAAM,SAG7CrC,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,UAAvD,SACAvB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,gBAAvD,eACAvB,EAAAW,QAAAS,cAAChB,EAAAkC,WAAD,CAAYC,GAAIX,YAChB5B,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,qBAAvD,oBACAvB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,WAAqDlB,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,EAAYsB,WAAW,KAA7D,2BAArD,eAA0KxC,EAAAW,QAAAS,cAACjB,EAAAkB,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,EAAYsB,WAAW,KAA7D,iBAA1K,2CACAxC,EAAAW,QAAAS,cAAChB,EAAAkC,WAAD,CAAYC,GAAIV,oBAtCwBY,UAAMC,+OCP9C,IAAAD,EAAAE,EAAAzC,EAAA,kCAwDa0B,GAAa,EAtD1B1B,EAAA,wBAsD0B0C,WA3CH,SAACpC,GAAiC,IAC/CsB,EAAoDtB,EAApDsB,cAAeC,EAAqCvB,EAArCuB,cAAec,EAAsBrC,EAAtBqC,QAASC,EAAatC,EAAbsC,SAEzCC,EAAgB,SACpBf,EACAC,EACAe,GAEIH,GAAWI,MAAMC,QAAQpB,GAEzBC,EADEiB,EAEAlB,EAAcqB,OAAO,SAAAC,GAAG,OAAIA,IAAQpB,IAIxBF,EAAcuB,OAAOrB,GAHjCC,GAMJF,EAAcC,EAAWC,IAI7B,OAAOQ,EAAMa,SAASC,IAAIT,EAAU,SAACU,EAAOC,GAC1C,IAAKhB,EAAMiB,eAAeF,GACxB,OAAOA,EAIT,IAAMG,EAAiBH,EAEjBR,EACJH,GAAWI,MAAMC,QAAQpB,GACrBA,EAAc8B,KAAK,SAAAC,GAAM,OAAIA,IAAWF,EAAenD,MAAM6B,QAC7DP,IAAkB6B,EAAenD,MAAM6B,MAE7C,OAAOI,EAAMqB,aAAaH,EAAgB,CACxCF,QACAT,aACAe,SAAUhB,6BAMDnB,cACf,IAEIA,EAAWoC,YAAc,aAEzBpC,EAAWqC,aAAe,CAAEC,YAAe,GAAIF,YAAe,aAAcxD,MAAS,CAAEsB,cAAiB,CAAEqC,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,gBAAiB8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,sBAAyBuB,QAAW,CAAEsB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeS,cAAiB,CAAEoC,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,gBAAiB8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,gEAExb,qBAA5BgD,0BAEPA,wBAAwB,uDAAyD,CAAEC,WAAY3C,EAAWqC,aAAc3C,KAAM,aAAckD,KAAM,wDAE1J,MAAOC,IAA2C,IAE9CC,QAAQV,YAAc,UAEtBU,QAAQT,aAAe,CAAEC,YAAe,GAAIF,YAAe,UAAWxD,MAAS,CAAEsB,cAAiB,CAAEqC,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,gBAAiB8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,sBAAyBuB,QAAW,CAAEsB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeS,cAAiB,CAAEoC,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,gBAAiB8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,gEAElb,qBAA5BgD,0BAEPA,wBAAwB,oDAAsD,CAAEC,WAAYG,QAAQT,aAAc3C,KAAM,UAAWkD,KAAM,qDAEjJ,MAAOC,qfC9EPhC,EAAAE,EAAAzC,EAAA,kCACAyE,EAAAzE,EAAA,0CACA0E,EAAA1E,EAAA,iDAQA2E,EAAA3E,EAAA,wBAEA4E,EAAA5E,EAAA,oCACA6E,EAAA7E,EAAA,wCA0Fa2B,GAAiB,EAAAgD,EAAAjC,WAnEH,SAACpC,GAAgC,IAExDwE,EAYExE,EAZFwE,YACAC,EAWEzE,EAXFyE,0BAHwDC,EActD1E,EAVFiD,aAJwD,IAAAyB,EAIhD,EAJgDA,EAAAC,EActD3E,EATF4E,kBALwD,IAAAD,KAAAE,EActD7E,EARFwC,kBANwD,IAAAqC,KAOxDjD,EAOE5B,EAPF4B,MAPwDkD,EActD9E,EANFuD,gBARwD,IAAAuB,EAQ7C,kBAAM,MARuCA,EAAAC,EActD/E,EALFgF,YATwD,IAAAD,EASjD,SATiDA,EAUxDE,EAIEjF,EAJFiF,OACAC,EAGElF,EAHFkF,MACArD,EAEE7B,EAFF6B,MACGsD,GAbqD,EAAAxE,EAAAR,SActDH,EAdsD,kIAAAoF,EAoBtDF,EAAMG,oBAAoBL,EAAMJ,EAAYpC,GAH9C8C,EAjBwDF,EAiBxDE,eACAC,EAlBwDH,EAkBxDG,UACAC,EAnBwDJ,EAmBxDI,qBAGF,OACEvD,EAAArB,cAACwD,EAAAqB,oBAAD,EAAAC,EAAAvF,SAAA,CACEwF,SAAUf,EACVgB,QAAS,kBAAMrC,EAAS1B,EAAOoB,EAAOT,IACtCqD,cAAeL,EACfM,OAAK,EAAAC,EAAA5F,SAAA,GACAmF,EACCb,GACFA,EAA0Ba,gBAE9BL,OAAQA,GACJE,GAEJlD,EAAArB,cAACwD,EAAA4B,KAAD,CACEF,OAAK,EAAAC,EAAA5F,SAAA,GACCsE,GACFA,EAA0BwB,eAG9BhE,EAAArB,cAAC2D,EAAA2B,KAAD,CACEzB,0BAA2B,CACzBc,WAAS,EAAAQ,EAAA5F,SAAA,GACJoF,EACCd,GACFA,EAA0Bc,aAI/B3D,GAEFY,GACCP,EAAArB,cAAC0D,EAAA6B,IAAD,CAAKC,SAAS,WAAWC,MAAO,EAAGC,YAAa,GAC7C9B,GACCvC,EAAArB,cAACuD,EAAAoC,QAAD,CACEvB,KAAM,GACNwB,MAAOtB,EAAMuB,eAAeC,OAAOC,KAAKC,wCAWzCvF,cACf,IAEIA,EAAemC,YAAc,iBAE7BnC,EAAeoC,aAAe,CAAEC,YAAe,GAAIF,YAAe,iBAAkBxD,MAAS,CAAEgF,KAAQ,CAAErB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,OAAQ8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,iCAA0C8D,WAAc,CAAEjB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeyC,SAAY,CAAEI,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,gEAAmEmE,OAAU,CAAEtB,aAAgB,KAAMD,YAAe,gDAAiD5C,KAAQ,SAAU8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcc,MAAS,CAAE+B,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,WAAc0B,WAAc,CAAEmB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAemC,MAAS,CAAEU,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAce,MAAS,CAAE8B,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,WAAc0D,YAAe,CAAEb,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,cAAe8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,cAAiB2D,0BAA6B,CAAEd,aAAgB,KAAMD,YAAe,+BAAgC5C,KAAQ,4BAA6B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,qFAAwF+F,cAAiB,CAAElD,aAAgB,KAAMD,YAAe,kFAAmF5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcgG,eAAkB,CAAEnD,aAAgB,KAAMD,YAAe,kDAAmD5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBiG,eAAkB,CAAEpD,aAAgB,KAAMD,YAAe,iDAAkD5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBgF,MAAS,CAAEnC,aAAgB,KAAMD,YAAe,mHAAoH5C,KAAQ,QAAS8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,yBAA4B+E,cAAiB,CAAElC,aAAgB,KAAMD,YAAe,6EAA8E5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAckG,eAAkB,CAAErD,aAAgB,KAAMD,YAAe,6DAA8D5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcmG,aAAgB,CAAEtD,aAAgB,KAAMD,YAAe,wEAAyE5C,KAAQ,eAAgB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcoG,cAAiB,CAAEvD,aAAgB,KAAMD,YAAe,2EAA4E5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc6E,SAAY,CAAEhC,aAAgB,KAAMD,YAAe,wDAAyD5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeqG,QAAW,CAAExD,aAAgB,KAAMD,YAAe,ySAA0S5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcsG,SAAY,CAAEzD,aAAgB,KAAMD,YAAe,2FAA4F5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,uCAA0CuG,YAAe,CAAE1D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,cAAe8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8C8E,QAAW,CAAEjC,aAAgB,KAAMD,YAAe,8GAA+G5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8CwG,UAAa,CAAE3D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,YAAa8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8CyG,WAAc,CAAE5D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8C0G,qBAAwB,CAAE7D,aAAgB,KAAMD,YAAe,wWAAyW5C,KAAQ,uBAAwB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc2G,WAAc,CAAE9D,aAAgB,KAAMD,YAAe,0HAA2H5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAe4G,mBAAsB,CAAE/D,aAAgB,KAAMD,YAAe,6NAA8N5C,KAAQ,qBAAsB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc6G,kBAAqB,CAAEhE,aAAgB,KAAMD,YAAe,iIAAkI5C,KAAQ,oBAAqB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,sBAAyB8G,oBAAuB,CAAEjE,aAAgB,KAAMD,YAAe,yIAA0I5C,KAAQ,sBAAuB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,yBAA4B+G,kBAAqB,CAAElE,aAAgB,KAAMD,YAAe,uLAAwL5C,KAAQ,oBAAqB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcgH,2BAA8B,CAAEnE,aAAgB,KAAMD,YAAe,4gBAA6gB5C,KAAQ,6BAA8B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,wEAAmFiH,wBAA2B,CAAEpE,aAAgB,KAAMD,YAAe,gRAAiR5C,KAAQ,0BAA2B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,oCAA6CkH,0BAA6B,CAAErE,aAAgB,KAAMD,YAAe,8oBAA+oB5C,KAAQ,4BAA6B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,kDAA6DmH,4BAA+B,CAAEtE,aAAgB,KAAMD,YAAe,6JAA8J5C,KAAQ,8BAA+B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeoH,oBAAuB,CAAEvE,aAAgB,KAAMD,YAAe,gNAAiN5C,KAAQ,sBAAuB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,mPAAwRqH,mBAAsB,CAAExE,aAAgB,KAAMD,YAAe,0IAA2I5C,KAAQ,qBAAsB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBsH,WAAc,CAAEzE,aAAgB,KAAMD,YAAe,6HAA8H5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBuH,iCAAoC,CAAE1E,aAAgB,KAAMD,YAAe,gHAAiH5C,KAAQ,mCAAoC8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,cAEr5U,qBAA5BgD,0BAEPA,wBAAwB,+DAAiE,CAAEC,WAAY1C,EAAeoC,aAAc3C,KAAM,iBAAkBkD,KAAM,gEAE1K,MAAOC,IAA2C,IAE9CC,QAAQV,YAAc,UAEtBU,QAAQT,aAAe,CAAEC,YAAe,GAAIF,YAAe,UAAWxD,MAAS,CAAEgF,KAAQ,CAAErB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,OAAQ8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,iCAA0C8D,WAAc,CAAEjB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeyC,SAAY,CAAEI,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,gEAAmEmE,OAAU,CAAEtB,aAAgB,KAAMD,YAAe,gDAAiD5C,KAAQ,SAAU8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcc,MAAS,CAAE+B,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,WAAc0B,WAAc,CAAEmB,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAemC,MAAS,CAAEU,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAce,MAAS,CAAE8B,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,QAAS8C,UAAY,EAAMC,KAAQ,CAAE/C,KAAQ,WAAc0D,YAAe,CAAEb,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,cAAe8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,cAAiB2D,0BAA6B,CAAEd,aAAgB,KAAMD,YAAe,+BAAgC5C,KAAQ,4BAA6B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,qFAAwF+F,cAAiB,CAAElD,aAAgB,KAAMD,YAAe,kFAAmF5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcgG,eAAkB,CAAEnD,aAAgB,KAAMD,YAAe,kDAAmD5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBiG,eAAkB,CAAEpD,aAAgB,KAAMD,YAAe,iDAAkD5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBgF,MAAS,CAAEnC,aAAgB,KAAMD,YAAe,mHAAoH5C,KAAQ,QAAS8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,yBAA4B+E,cAAiB,CAAElC,aAAgB,KAAMD,YAAe,6EAA8E5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAckG,eAAkB,CAAErD,aAAgB,KAAMD,YAAe,6DAA8D5C,KAAQ,iBAAkB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcmG,aAAgB,CAAEtD,aAAgB,KAAMD,YAAe,wEAAyE5C,KAAQ,eAAgB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcoG,cAAiB,CAAEvD,aAAgB,KAAMD,YAAe,2EAA4E5C,KAAQ,gBAAiB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc6E,SAAY,CAAEhC,aAAgB,KAAMD,YAAe,wDAAyD5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeqG,QAAW,CAAExD,aAAgB,KAAMD,YAAe,ySAA0S5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcsG,SAAY,CAAEzD,aAAgB,KAAMD,YAAe,2FAA4F5C,KAAQ,WAAY8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,uCAA0CuG,YAAe,CAAE1D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,cAAe8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8C8E,QAAW,CAAEjC,aAAgB,KAAMD,YAAe,8GAA+G5C,KAAQ,UAAW8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8CwG,UAAa,CAAE3D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,YAAa8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8CyG,WAAc,CAAE5D,aAAgB,KAAMD,YAAe,GAAI5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,2CAA8C0G,qBAAwB,CAAE7D,aAAgB,KAAMD,YAAe,wWAAyW5C,KAAQ,uBAAwB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc2G,WAAc,CAAE9D,aAAgB,KAAMD,YAAe,0HAA2H5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAe4G,mBAAsB,CAAE/D,aAAgB,KAAMD,YAAe,6NAA8N5C,KAAQ,qBAAsB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAc6G,kBAAqB,CAAEhE,aAAgB,KAAMD,YAAe,iIAAkI5C,KAAQ,oBAAqB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,sBAAyB8G,oBAAuB,CAAEjE,aAAgB,KAAMD,YAAe,yIAA0I5C,KAAQ,sBAAuB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,yBAA4B+G,kBAAqB,CAAElE,aAAgB,KAAMD,YAAe,uLAAwL5C,KAAQ,oBAAqB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,WAAcgH,2BAA8B,CAAEnE,aAAgB,KAAMD,YAAe,4gBAA6gB5C,KAAQ,6BAA8B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,wEAAmFiH,wBAA2B,CAAEpE,aAAgB,KAAMD,YAAe,gRAAiR5C,KAAQ,0BAA2B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,oCAA6CkH,0BAA6B,CAAErE,aAAgB,KAAMD,YAAe,8oBAA+oB5C,KAAQ,4BAA6B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,kDAA6DmH,4BAA+B,CAAEtE,aAAgB,KAAMD,YAAe,6JAA8J5C,KAAQ,8BAA+B8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,YAAeoH,oBAAuB,CAAEvE,aAAgB,KAAMD,YAAe,gNAAiN5C,KAAQ,sBAAuB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,mPAAwRqH,mBAAsB,CAAExE,aAAgB,KAAMD,YAAe,0IAA2I5C,KAAQ,qBAAsB8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBsH,WAAc,CAAEzE,aAAgB,KAAMD,YAAe,6HAA8H5C,KAAQ,aAAc8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,eAAkBuH,iCAAoC,CAAE1E,aAAgB,KAAMD,YAAe,gHAAiH5C,KAAQ,mCAAoC8C,UAAY,EAAOC,KAAQ,CAAE/C,KAAQ,cAEv4U,qBAA5BgD,0BAEPA,wBAAwB,wDAA0D,CAAEC,WAAYG,QAAQT,aAAc3C,KAAM,UAAWkD,KAAM,yDAErJ,MAAOC","file":"static/js/16.6b6e8c30.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport SelectList from './SelectList';\nimport SelectListItem from './SelectListItem';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"default\"}}>{`Default`}</MDXTag>\n<Playground __position={0} __code={`<SelectList\n  selectedValue=\"js\"\n  onValueChange={(itemValue, itemIndex) =>\n    console.log(\\'itemValue\\', itemValue)\n  }\n>\n  <SelectListItem label=\"Java\" value=\"java\" />\n  <SelectListItem label=\"JavaScript\" value=\"js\" />\n</SelectList>`} __scope={{props: this ? this.props : props,SelectList,SelectListItem}}>\n  <SelectList\n    selectedValue=\"js\"\n    onValueChange={(itemValue, itemIndex) =>\n      console.log('itemValue', itemValue)\n    }\n  >\n    <SelectListItem label=\"Java\" value=\"java\" />\n    <SelectListItem label=\"JavaScript\" value=\"js\" />\n  </SelectList>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list\"}}>{`Select List`}</MDXTag>\n<PropsTable of={SelectList} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list-item\"}}>{`Select List Item`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Extends `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TouchableHighlightProps`}</MDXTag>{`. Read from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`activeOpacity`}</MDXTag>{` and above for component specific props`}</MDXTag>\n<PropsTable of={SelectListItem} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nimport { ITheme, withTheme } from '../../theme';\nimport { ISelectListItemProps } from './SelectListItem';\n\nexport interface ISelectListProps {\n  children: Array<React.ReactElement<ISelectListItemProps>>;\n  selectedValue: string | string[];\n  isMulti?: boolean;\n  theme: ITheme;\n  onValueChange: (itemValue: string | string[], itemIndex: number) => void;\n}\n\nconst SelectListBase = (props: ISelectListProps): any => {\n  const { selectedValue, onValueChange, isMulti, children } = props;\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val === itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  return React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const selectListItem = child as React.ReactElement<ISelectListItemProps>;\n\n    const isSelected =\n      isMulti && Array.isArray(selectedValue)\n        ? selectedValue.some(selVal => selVal === selectListItem.props.value)\n        : selectedValue === selectListItem.props.value;\n\n    return React.cloneElement(selectListItem, {\n      index,\n      isSelected,\n      onSelect: handleOnPress,\n    });\n  });\n};\n\nexport const SelectList = withTheme(SelectListBase);\nexport default SelectList;\ntry {\n    // @ts-ignore\n    SelectList.displayName = \"SelectList\";\n    // @ts-ignore\n    SelectList.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectList\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#SelectList\"] = { docgenInfo: SelectList.__docgenInfo, name: \"SelectList\", path: \"src/components/SelectList/SelectList.tsx#SelectList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/SelectList.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { FiCheck } from 'react-icons/fi';\nimport {\n  TextStyle,\n  TouchableHighlight,\n  TouchableHighlightProps,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\nimport { SelectListSize } from '../../theme/component-variables/selectListVariables';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface ISelectListItemProps extends TouchableHighlightProps {\n  theme: ITheme;\n  size?: SelectListSize;\n  isDisabled?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  testID?: string;\n  label: string;\n  isSelected?: boolean;\n  index?: number;\n  value: string;\n  checkedIcon?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  dangerouslySetInlineStyle?: {\n    containerStyle?: ViewStyle;\n    wrapperStyle?: ViewStyle;\n    textStyle?: TextStyle;\n  };\n}\n\nconst SelectListItemBase = (props: ISelectListItemProps) => {\n  const {\n    checkedIcon,\n    dangerouslySetInlineStyle,\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    testID,\n    theme,\n    value,\n    ...touchableHighlightProps\n  } = props;\n\n  const {\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n  } = theme.getSelectListStyles(size, isDisabled, isSelected);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      onPress={() => onSelect(value, index, isSelected)}\n      underlayColor={focusBackgroundColor}\n      style={{\n        ...containerStyle,\n        ...(dangerouslySetInlineStyle &&\n          dangerouslySetInlineStyle.containerStyle),\n      }}\n      testID={testID}\n      {...touchableHighlightProps}\n    >\n      <View\n        style={{\n          ...(dangerouslySetInlineStyle &&\n            dangerouslySetInlineStyle.wrapperStyle),\n        }}\n      >\n        <Text\n          dangerouslySetInlineStyle={{\n            textStyle: {\n              ...textStyle,\n              ...(dangerouslySetInlineStyle &&\n                dangerouslySetInlineStyle.textStyle),\n            },\n          }}\n        >\n          {label}\n        </Text>\n        {isSelected && (\n          <Box position=\"absolute\" right={0} marginRight={4}>\n            {checkedIcon || (\n              <FiCheck\n                size={22}\n                color={theme.themeVariables.colors.text.success}\n              />\n            )}\n          </Box>\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const SelectListItem = withTheme(SelectListItemBase);\nexport default SelectListItem;\ntry {\n    // @ts-ignore\n    SelectListItem.displayName = \"SelectListItem\";\n    // @ts-ignore\n    SelectListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"dangerouslySetInlineStyle\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"dangerouslySetInlineStyle\", \"required\": false, \"type\": { \"name\": \"{ containerStyle?: ViewStyle; wrapperStyle?: ViewStyle; textStyle?: TextStyle; }\" } }, \"activeOpacity\": { \"defaultValue\": null, \"description\": \"Determines what the opacity of the wrapped view should be when touch is active.\", \"name\": \"activeOpacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onHideUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is hidden\", \"name\": \"onHideUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShowUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is shown\", \"name\": \"onShowUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"//FIXME: not in doc but available in examples\\n@see https://facebook.github.io/react-native/docs/view.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"underlayColor\": { \"defaultValue\": null, \"description\": \"The color of the underlay that will show through when the touch is active.\", \"name\": \"underlayColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"delayLongPress\": { \"defaultValue\": null, \"description\": \"Delay in ms, from onPressIn, before onLongPress is called.\", \"name\": \"delayLongPress\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressIn\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the start of the touch, before onPressIn is called.\", \"name\": \"delayPressIn\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressOut\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the release of the touch, before onPressOut is called.\", \"name\": \"delayPressOut\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"If true, disable all interactions for this component.\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far your touch can start away from the button.\\nThis is added to pressRetentionOffset when moving off of the button.\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch hits\\ntwo overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n{nativeEvent: {layout: {x, y, width, height}}}\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"Called when the touch is released,\\nbut not if cancelled (e.g. by a scroll that steals the responder lock).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressIn\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressIn\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressOut\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"pressRetentionOffset\": { \"defaultValue\": null, \"description\": \"When the scroll view is disabled, this defines how far your\\ntouch may move off of the button, before deactivating the button.\\nOnce deactivated, try moving it back and you'll see that the button\\nis once again reactivated! Move it back and forth several times\\nwhile the scroll view is disabled. Ensure you pass in a constant\\nto reduce memory allocations.\", \"name\": \"pressRetentionOffset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"disabled\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#SelectListItem\"] = { docgenInfo: SelectListItem.__docgenInfo, name: \"SelectListItem\", path: \"src/components/SelectList/SelectListItem.tsx#SelectListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"dangerouslySetInlineStyle\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"dangerouslySetInlineStyle\", \"required\": false, \"type\": { \"name\": \"{ containerStyle?: ViewStyle; wrapperStyle?: ViewStyle; textStyle?: TextStyle; }\" } }, \"activeOpacity\": { \"defaultValue\": null, \"description\": \"Determines what the opacity of the wrapped view should be when touch is active.\", \"name\": \"activeOpacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onHideUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is hidden\", \"name\": \"onHideUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShowUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is shown\", \"name\": \"onShowUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"//FIXME: not in doc but available in examples\\n@see https://facebook.github.io/react-native/docs/view.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"underlayColor\": { \"defaultValue\": null, \"description\": \"The color of the underlay that will show through when the touch is active.\", \"name\": \"underlayColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"delayLongPress\": { \"defaultValue\": null, \"description\": \"Delay in ms, from onPressIn, before onLongPress is called.\", \"name\": \"delayLongPress\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressIn\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the start of the touch, before onPressIn is called.\", \"name\": \"delayPressIn\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressOut\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the release of the touch, before onPressOut is called.\", \"name\": \"delayPressOut\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"If true, disable all interactions for this component.\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far your touch can start away from the button.\\nThis is added to pressRetentionOffset when moving off of the button.\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch hits\\ntwo overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n{nativeEvent: {layout: {x, y, width, height}}}\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"Called when the touch is released,\\nbut not if cancelled (e.g. by a scroll that steals the responder lock).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressIn\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressIn\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressOut\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"pressRetentionOffset\": { \"defaultValue\": null, \"description\": \"When the scroll view is disabled, this defines how far your\\ntouch may move off of the button, before deactivating the button.\\nOnce deactivated, try moving it back and you'll see that the button\\nis once again reactivated! Move it back and forth several times\\nwhile the scroll view is disabled. Ensure you pass in a constant\\nto reduce memory allocations.\", \"name\": \"pressRetentionOffset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"disabled\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/SelectListItem.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}