{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["getAlertStyles","_ref","theme","intent","bodyStyle","flex","containerStyle","Object","objectSpread","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","textStyle","titleStyle","Alert","props","title","description","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","components","react","View","style","__source","fileName","_jsxFileName","lineNumber","Box","paddingRight","justifyContent","Icon_web","name","size","color","resolveIcon","Text","weight","TouchableOpacity","onPress","paddingLeft","text","shapeMapping","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","elevation","shape","_shape","_x","apply","this","arguments","toString","children","propStyle","viewStyles","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Button","ToastContext","ToastProvider","Toast","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","Consumer","_ref2","notify","___WEBPACK_IMPORTED_MODULE_6__","offset","duration","_ref3","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","of","isMDXComponent","onRemove","_props$duration","toastSettings","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","React","timer","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2__","_Alert__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","defaultToastInstance","defaultToastContext","danger","removeToast","success","warning","useToast","getToastStyles","left","marginBottom","marginLeft","marginRight","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","wrapperStyle","width","AnimatedView","animated","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","toConsumableArray","payload","toast","REMOVE_TOAST","filter","Error","idCounterRef","_React$useReducer","_React$useReducer2","slicedToArray","dispatch","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","String","startsWith","err","transitions","useTransition","config","springDefaultConfig","enter","translateY","from","leave","Provider","map","item","transitionStyle","key","transform","esm_extends","friction","tension"],"mappings":"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","file":"static/js/18.f8d87d93.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    textStyle: {},\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(\n    getAlertStyles,\n    getStyles,\n    theme.components.getAlertStyles,\n  )({ intent }, theme);\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Box paddingRight={16} justifyContent=\"center\">\n          {resolveIcon(intent)}\n        </Box>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text weight=\"bold\">{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Box paddingLeft={16}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Box>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, ToastContext, ToastProvider, Toast } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider getStyles={(props, theme) => ({\n        containerStyle: {}\n      })} mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null,\n              // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000 // ...Alert props e.g. getStyles\n\n            });\n          }} title=\"Use\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <>\n          <Button onPress={() => notify({\n              title: 'Title',\n              description: 'Description',\n              isCloseable: true\n            })} title=\"Open default toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'success',\n              title: 'Title'\n            })} color=\"primary\" title=\"Open success toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'danger',\n              title: 'Title'\n            })} color=\"danger\" title=\"Open danger toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'warning',\n              title: 'Title'\n            })} color=\"secondary\" title=\"Open warning toast\" mdxType=\"Button\" />\n        </>}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { Omit } from 'ts-essentials';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const {\n    component,\n    id,\n    onRemove,\n    duration = 3000,\n    offset = 16,\n    ...toastSettings\n  } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} onClose={onRemove} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\nexport type GetToastStyles = (props: {}, theme: Theme) => ToastStyles;\n\n// @ts-ignore: Compat with web\nexport const getToastStyles: GetToastStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n    wrapperStyle: {\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children, getStyles } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const theme = useTheme();\n\n  const { containerStyle, wrapperStyle } = mergeStyles(\n    getToastStyles,\n    getStyles,\n    theme.components.getToastStyles,\n  )({ intent: 'info' }, theme);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(state.toasts, toast => toast.id, {\n    config: springDefaultConfig,\n\n    enter: { translateY: 10 },\n    from: { translateY: -500 },\n    leave: { translateY: -500 },\n  });\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View style={containerStyle}>\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              ...wrapperStyle,\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}