{"version":3,"sources":["webpack:///./src/components/Alert/Alert.styles.ts","webpack:///./src/components/Alert/Alert.tsx","webpack:///./src/components/Alert/index.ts","webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Toast/Toast.mdx","webpack:///./src/components/Toast/Toast.styles.ts","webpack:///./src/components/Toast/Toast.tsx","webpack:///./src/components/Toast/ToastContext.ts","webpack:///./src/components/Toast/ToastProvider.tsx","webpack:///./src/components/Toast/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["alertVariables","theme","body","flex","container","_objectSpread2","default","backgroundColor","colors","background","white","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","title","danger","borderLeftColor","border","info","success","warning","_ref","intent","_alertVariables","intentStyle","_objectWithoutProperties2","bodyStyle","containerStyle","textStyle","titleStyle","displayName","__docgenInfo","description","props","defaultValue","name","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","controlPaddings","controlHeights","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Layout","_Typography","_Alert","Alert","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","getAlertStyles","createElement","View","style","Spacing","paddingRight","justifyContent","Icon","size","color","text","resolveIcon","Text","isBold","TouchableOpacity","onPress","paddingLeft","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Button","BackButton","Button","_extends2","appearance","isInline","iconBefore","getButtonVariables","appearances","minimal","focusColor","greyDefault","primary","secondary","greyLight","borderColor","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","fontSize","height","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","alignSelf","flexWrap","alignItems","fontWeight","textAlign","_Loading","_props$appearance","_props$color","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","LoadingDots","value","accessibilityLabel","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","_BackButton","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","width","Component","defaultProps","_LoadingDots","_react","_interopRequireDefault","_tag","_docz","_","MDXContent","layout","components","MDXTag","id","parentName","Playground","__position","__code","__scope","ToastContext","ToastProvider","Toast","Box","Consumer","notify","offset","_ref2","Fragment","PropsTable","of","getToastVariables","base","paddingBottom","paddingTop","backgroundDanger","textDanger","backgroundInfo","textInfo","backgroundSuccess","successDefault","textSuccess","backgroundWarning","warningDefault","textWarning","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","DEFAULT_VALUE","ToastBase","closeTimer","state","onRemove","_this$props$duration","_this$props$offset","sequence","spring","bounciness","speed","delay","_this$props2","toastSettings","transform","translateY","withTheme","defaultToastInstance","defaultToastContext","createContext","_Toast","_Toast2","_ToastContext","hasCustomId","ToastProviderBase","removeToast","setState","previousState","toasts","filter","toast","toastInstance","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","String","startsWith","err","return","concat","_toConsumableArray2","slice","uniqueId","idCounter","_this2","children","currentToast","_slicedToArray2","getToastStyles","Provider","_ToastProvider","Feather","IconTag","result","replace","matches","toUpperCase","charAt","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/16.b4bf8723.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.white,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    alertVariables.displayName = \"alertVariables\";\n    // @ts-ignore\n    alertVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"alertVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.styles.ts#alertVariables\"] = { docgenInfo: alertVariables.__docgenInfo, name: \"alertVariables\", path: \"src/components/Alert/Alert.styles.ts#alertVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { Icon } from '../../icons';\nimport { Theme, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent, theme: Theme) => {\n  switch (intent) {\n    case 'success':\n      return (\n        <Icon name=\"check-circle\" size={24} color={theme.colors.text.success} />\n      );\n    case 'warning':\n      return (\n        <Icon\n          name=\"alert-triangle\"\n          size={24}\n          color={theme.colors.text.warning}\n        />\n      );\n    case 'danger':\n      return (\n        <Icon name=\"alert-circle\" size={24} color={theme.colors.text.danger} />\n      );\n    default:\n      return <Icon name=\"info\" size={24} color={theme.colors.text.info} />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(getAlertStyles, getStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Spacing paddingRight={2} justifyContent=\"center\">\n          {resolveIcon(intent, theme)}\n        </Spacing>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text isBold>{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Spacing paddingLeft={2}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Spacing>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\ntry {\n    // @ts-ignore\n    Alert.displayName = \"Alert\";\n    // @ts-ignore\n    Alert.__docgenInfo = { \"description\": \"\", \"displayName\": \"Alert\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"component\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"isCloseable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isCloseable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"intent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"intent\", \"required\": false, \"type\": { \"name\": \"\\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Alert/Alert.tsx#Alert\"] = { docgenInfo: Alert.__docgenInfo, name: \"Alert\", path: \"src/components/Alert/Alert.tsx#Alert\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Alert';\n","import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './LoadingDots';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { ToastContext, ToastProvider, Toast } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toast\"}}>{`Toast`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Alert`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{props: this ? this.props : props,ToastContext,ToastProvider,Toast,Button,Box}}>\n  <ToastProvider\n    getStyles={(props, theme) => ({\n      containerStyle: {},\n    })}\n  >\n    <ToastContext.Consumer>\n      {({ notify }) => (\n        <Button\n          onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null, // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000,\n              // ...Alert props e.g. getStyles\n            });\n          }}\n          title=\"Use\"\n        />\n      )}\n    </ToastContext.Consumer>\n  </ToastProvider>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variants\"}}>{`Variants`}</MDXTag>\n<Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{props: this ? this.props : props,ToastContext,ToastProvider,Toast,Button,Box}}>\n  <ToastProvider>\n    <ToastContext.Consumer>\n      {({ notify }) => (\n        <>\n          <Button\n            onPress={() =>\n              notify({\n                title: 'Title',\n                description: 'Description',\n                isCloseable: true,\n              })\n            }\n            title=\"Open default toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'success',\n                title: 'Title',\n              })\n            }\n            color=\"primary\"\n            title=\"Open success toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'danger',\n                title: 'Title',\n              })\n            }\n            color=\"danger\"\n            title=\"Open danger toast\"\n          />\n          <Button\n            onPress={() =>\n              notify({\n                description: 'Description',\n                intent: 'warning',\n                title: 'Title',\n              })\n            }\n            color=\"secondary\"\n            title=\"Open warning toast\"\n          />\n        </>\n      )}\n    </ToastContext.Consumer>\n  </ToastProvider>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Toast} />\n           </MDXTag>\n  }\n}\n  ","import { Platform, TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants';\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ToastVariables {\n  base: ViewStyle;\n  /** The area on screen where the toast appears */\n  container: ViewStyle;\n\n  textSuccess: TextStyle;\n  backgroundSuccess: ViewStyle;\n  textDanger: TextStyle;\n  backgroundDanger: ViewStyle;\n  textWarning: TextStyle;\n  backgroundWarning: ViewStyle;\n  textInfo: TextStyle;\n  backgroundInfo: ViewStyle;\n}\n\nexport const getToastVariables = (theme: Theme): ToastVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderRadius: theme.controlBorderRadius.medium,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n      ...theme.elevations[2],\n    },\n\n    backgroundDanger: {\n      backgroundColor: theme.colors.background.dangerDefault,\n    },\n    textDanger: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundInfo: {\n      backgroundColor: theme.colors.background.white,\n    },\n    textInfo: {\n      color: theme.colors.text.default,\n    },\n\n    backgroundSuccess: {\n      backgroundColor: theme.colors.background.successDefault,\n    },\n    textSuccess: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundWarning: {\n      backgroundColor: theme.colors.background.warningDefault,\n    },\n    textWarning: {\n      color: theme.colors.text.white,\n    },\n\n    container: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n  };\n};\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface ToastStylesProps {\n  intent: Intent;\n}\n\nexport type GetToastStyles = (\n  toastStylesProps: ToastStylesProps,\n  theme: Theme,\n) => ToastStyles;\n\nexport const getToastStyles: GetToastStyles = ({ intent }, theme) => {\n  const toastVariables = getToastVariables(theme);\n\n  return {\n    containerStyle: toastVariables.container,\n  };\n};\ntry {\n    // @ts-ignore\n    getToastVariables.displayName = \"getToastVariables\";\n    // @ts-ignore\n    getToastVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getToastVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Toast/Toast.styles.ts#getToastVariables\"] = { docgenInfo: getToastVariables.__docgenInfo, name: \"getToastVariables\", path: \"src/components/Toast/Toast.styles.ts#getToastVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Alert, AlertProps } from '../Alert';\n\n// Animation taken from https://medium.com/@norbajunior/react-native-facebook-and-instagram-like-top-bar-notifications-with-animated-api-43c48d0443dd\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\nexport interface ToastProps extends ToastInstance {\n  theme: Theme;\n}\n\nexport interface ToastState {\n  value: Animated.Value;\n}\n\nconst DEFAULT_VALUE = 500;\n\nclass ToastBase extends React.Component<ToastProps, ToastState> {\n  public closeTimer: number | null = null;\n\n  constructor(props: ToastProps) {\n    super(props);\n\n    this.state = {\n      value: new Animated.Value(-DEFAULT_VALUE),\n    };\n  }\n\n  public componentDidMount() {\n    const { onRemove, duration = 3000, offset = 16 } = this.props;\n    const { value } = this.state;\n\n    Animated.sequence([\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: offset,\n      }),\n      Animated.delay(duration),\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: -DEFAULT_VALUE,\n      }),\n    ]).start(() => onRemove());\n  }\n\n  public render() {\n    const {\n      component,\n      offset,\n      duration,\n      id,\n      onRemove,\n      ...toastSettings\n    } = this.props;\n\n    return (\n      <Animated.View\n        style={{\n          transform: [{ translateY: this.state.value }],\n        }}\n      >\n        {component || <Alert {...toastSettings} onClose={onRemove} />}\n      </Animated.View>\n    );\n  }\n}\n\nexport const Toast = withTheme(ToastBase);\n","import * as React from 'react';\n\nimport { ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  theme: Theme;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nexport interface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\nclass ToastProviderBase extends React.Component<\n  ToastProviderProps,\n  ToastProviderState\n> {\n  public static idCounter: number = 0;\n\n  constructor(props: ToastProviderProps) {\n    super(props);\n\n    this.state = {\n      toasts: [],\n    };\n  }\n\n  public removeToast = (id: ToastId) => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.filter(toast => toast.id !== id),\n      };\n    });\n  };\n\n  public notify = (toastSettings: ToastSettings) => {\n    const toastInstance = this.createToastInstance(toastSettings);\n\n    // If there's a custom toast D passed, close existing toasts with the same custom D\n    if (hasCustomId(toastSettings)) {\n      for (const toast of this.state.toasts) {\n        // Since unique D is still appended to a custom D, skip the unique D and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          this.removeToast(toast.id);\n        }\n      }\n    }\n\n    this.setState(previousState => {\n      return {\n        // Immediately remove the current toast\n        toasts: [...previousState.toasts.slice(1), toastInstance],\n      };\n    });\n\n    return toastInstance;\n  };\n\n  public createToastInstance = (\n    toastSettings: ToastSettings,\n  ): ToastInstance => {\n    const uniqueId = ++ToastProviderBase.idCounter;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () => this.removeToast(id),\n      ...toastSettings,\n    };\n  };\n\n  public render() {\n    const { children, theme, getStyles } = this.props;\n    const { toasts } = this.state;\n    const [currentToast] = toasts;\n\n    // Intent does not matter here\n    // Consider using a different style getter for toast provider\n    const { containerStyle } = mergeStyles(getToastStyles, getStyles)(\n      { intent: 'info' },\n      theme,\n    );\n\n    return (\n      <ToastContext.Provider\n        value={{\n          danger: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'danger' }),\n          notify: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings }),\n          removeToast: (id: ToastId) => this.removeToast(id),\n          success: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'success' }),\n          warning: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'warning' }),\n        }}\n      >\n        {children}\n        <View style={containerStyle}>\n          {currentToast && <Toast key={currentToast.id} {...currentToast} />}\n        </View>\n      </ToastContext.Provider>\n    );\n  }\n}\n\nexport const ToastProvider = withTheme(ToastProviderBase);\n","export * from './Toast';\nexport * from './ToastContext';\nexport * from './ToastProvider';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}