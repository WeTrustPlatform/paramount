{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","Counter","_props$value","value","_props$step","step","max","min","_props$onValueChange","onValueChange","_props$overrides","overrides","isDecrementDisabled","isIncrementDisabled","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledTouchable","Touchable","_getOverrides4","touchableProps","_getOverrides5","StyledCount","Count","_getOverrides6","countProps","_getOverrides7","StyledIconPlus","IconPlus","_getOverrides8","iconPlusProps","_getOverrides9","StyledIconMinus","IconMinus","_getOverrides10","iconMinusProps","handleIncrement","React","handleDecrement","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_jsxFileName","isDisabled","onPress","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","display","flexDirection","alignItems","textProps","_Typography__WEBPACK_IMPORTED_MODULE_11__","align","paddingHorizontal","minWidth","_props$isDisabled","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","borderColor","border","primary","borderRadius","borderWidth","justifyContent","disabled","undefined","StyledIcon","name","iconProps","_Icon__WEBPACK_IMPORTED_MODULE_10__","text","muted","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","ProgressBar","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","percent","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","AnimatedView","animated","_props$percent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","StyledProgress","Progress","progressProps","react__WEBPACK_IMPORTED_MODULE_4__","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","greyDefault","overflow","boundPercent","Math","useSpring","config","springDefaultConfig","from","accessibilityRole","Platform","OS","primaryDefault","interpolate","w","concat","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/9.a3af6a68.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { Icon, IconProps } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\ninterface CounterBaseProps {\n  /**\n   * Count to be displayed.\n   */\n  value?: number;\n\n  /**\n   * Minimum value for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum value for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Interval between counts\n   */\n  step?: number;\n\n  /**\n   * Called when either buttons are pressed.\n   */\n  onValueChange?: (value: number) => void;\n}\n\nexport interface CounterOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Count: CountProps;\n  IconPlus: CounterIconProps;\n  IconMinus: CounterIconProps;\n}\n\nexport interface CounterProps\n  extends WithOverrides<CounterBaseProps, CounterOverrides> {}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    value = 0,\n    step = 1,\n    max,\n    min,\n    onValueChange = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const isDecrementDisabled = min === value;\n  const isIncrementDisabled = max === value;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Counter.Root'),\n    overrides.Root,\n  );\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Counter.Touchable'),\n    overrides.Touchable,\n  );\n  const [Count, countProps] = getOverrides(\n    StyledCount,\n    props,\n    dlv(theme, 'overrides.Counter.Count'),\n    overrides.Count,\n  );\n  const [IconPlus, iconPlusProps] = getOverrides(\n    StyledIconPlus,\n    props,\n    dlv(theme, 'overrides.Counter.IconPlus'),\n    overrides.IconPlus,\n  );\n  const [IconMinus, iconMinusProps] = getOverrides(\n    StyledIconMinus,\n    props,\n    dlv(theme, 'overrides.Counter.IconMinus'),\n    overrides.IconMinus,\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    onValueChange(value + step);\n  }, [value]);\n\n  const handleDecrement = React.useCallback(() => {\n    onValueChange(value - step);\n  }, [value]);\n\n  return (\n    <Root {...rootProps}>\n      <Touchable\n        isDisabled={isDecrementDisabled}\n        onPress={handleDecrement}\n        {...touchableProps}\n      >\n        <IconMinus isDisabled={isDecrementDisabled} {...iconMinusProps} />\n      </Touchable>\n      <Count value={value} {...countProps} />\n      <Touchable\n        isDisabled={isIncrementDisabled}\n        onPress={handleIncrement}\n        {...touchableProps}\n      >\n        <IconPlus isDisabled={isIncrementDisabled} {...iconPlusProps} />\n      </Touchable>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface CountProps extends TextProps {\n  value: number;\n}\n\nconst StyledCount = (props: CountProps) => {\n  const { value, style, ...textProps } = props;\n\n  return (\n    <Text\n      align=\"center\"\n      style={[{ paddingHorizontal: 16, minWidth: 56 }, getStyle(props, style)]}\n      {...textProps}\n    >\n      {value}\n    </Text>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    children,\n    style,\n    isDisabled = false,\n    onPress,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          borderColor: theme.colors.border.primary,\n          borderRadius: 999,\n          borderWidth: 1,\n          display: 'flex',\n          height: 40,\n          justifyContent: 'center',\n          width: 40,\n          ...(isDisabled && { borderColor: theme.colors.border.default }),\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      onPress={!isDisabled ? onPress : undefined}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface StyledIconProps extends IconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIcon = (props: StyledIconProps) => {\n  const { isDisabled, name, ...iconProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Icon\n      name={name}\n      size=\"xsmall\"\n      color={isDisabled ? theme.colors.text.muted : theme.colors.text.primary}\n      {...iconProps}\n    />\n  );\n};\n\ninterface CounterIconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIconPlus = (props: CounterIconProps) => (\n  <StyledIcon name=\"plus\" {...props} />\n);\nconst StyledIconMinus = (props: CounterIconProps) => (\n  <StyledIcon name=\"minus\" {...props} />\n);\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Counter, State, ProgressBar } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: 0 }}>\\n  {({ state, setState }) => (\\n    <Box>\\n      <ProgressBar percent={state.value} size=\\\"large\\\" />\\n      <Counter\\n        value={state.value}\\n        onValueChange={value => setState({ value })}\\n        min={0}\\n        max={100}\\n        step={10}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Counter,\n      State,\n      ProgressBar\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={state.value} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter value={state.value} onValueChange={value => setState({\n            value\n          })} min={0} max={100} step={10} mdxType=\"Counter\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\n\nconst AnimatedView = animated(View);\n\ninterface ProgressBarBaseProps {\n  /**\n   * Percentage of the progress bar. From 0 to 1\n   * @default 0\n   */\n  percent?: number;\n\n  /**\n   * The size of the progress bar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n}\n\nexport interface ProgressBarOverrides {\n  Root: RootProps;\n  Progress: ProgressProps;\n}\n\nexport interface ProgressBarProps\n  extends WithOverrides<ProgressBarBaseProps, ProgressBarOverrides> {}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, size = 'medium', overrides = {} } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.ProgressBar.Root'),\n    overrides.Root,\n  );\n  const [Progress, progressProps] = getOverrides(\n    StyledProgress,\n    props,\n    dlv(theme, 'overrides.ProgressBar.Progress'),\n    overrides.Progress,\n  );\n\n  return (\n    <Root size={size} {...rootProps}>\n      <Progress percent={percent} {...progressProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, size, ...viewProps } = props;\n  const theme = useTheme();\n\n  const height = isControlSize(size) ? theme.controlHeights[size] - 16 : size;\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.greyDefault,\n          borderRadius: 999,\n          height,\n          overflow: 'hidden',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ProgressProps extends ViewProps {\n  children?: React.ReactNode;\n  percent: number;\n}\n\nconst StyledProgress = (props: ProgressProps) => {\n  const { percent, children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n      // @ts-ignore\n      style={[\n        {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderRadius: 999,\n          height: '100%',\n          width: width.interpolate(w => `${w}%`),\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}