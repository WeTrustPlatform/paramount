{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","FormField","TextInput","___WEBPACK_IMPORTED_MODULE_5__","label","description","error","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","defaultProps","children","_props$labelPosition","labelPosition","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","Label","_getOverrides4","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4__","position","style","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","color","paddingBottom","size","isClearable","isDisabled","isInvalid","onClear","onValueChange","onChangeText","_props$isClearable","_props$isDisabled","_props$isInvalid","_props$onClear","_props$onValueChange","_props$onChangeText","_props$size","value","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledInput","Input","inputProps","StyledLeftIconWrapper","LeftIconWrapper","leftIconWrapperProps","StyledLeftIcon","LeftIcon","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","hasLeftIcon","hasRightIcon","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","_props$isDisabled2","_props$isInvalid2","_props$onValueChange2","_props$onChangeText2","_props$size2","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","backgroundColor","colors","background","content","borderColor","border","borderWidth","text","width","greyDark","danger","paddingVertical","editable","muted","name","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","right","_props$isClearable2","_props$onClear2","_props$onValueChange3","_props$onChangeText3","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","_props$position2","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/17.f0eaa17c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormField, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"formfield\"\n    }}>{`FormField`}</h1>\n    <p>{`Enriches a field in a form to contain label, description or error messages.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<FormField\\n  label=\\\"Label\\\"\\n  description=\\\"Description for the field\\\"\\n  error=\\\"Error message\\\"\\n>\\n  <TextInput />\\n</FormField>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormField,\n      TextInput\n    }} mdxType=\"Playground\">\n  <FormField label=\"Label\" description=\"Description for the field\" error=\"Error message\" mdxType=\"FormField\">\n    <TextInput mdxType=\"TextInput\" />\n  </FormField>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormField} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Label, LabelProps, Text, TextProps } from '../Typography';\n\ntype FormFieldLabelPosition = 'top' | 'left' | 'right';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: string | false;\n\n  /**\n   * Label of the field.\n   */\n  label?: string | false;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: FormFieldLabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: string;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nconst defaultProps = {\n  labelPosition: 'top' as const,\n};\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = defaultProps.labelPosition,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR label={label} position={labelPosition} {...labelRProps}>\n        {children}\n      </LabelR>\n      <Description description={description} {...descriptionProps} />\n      <ErrorR error={error} {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: string | false;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: string | false;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[style]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nconst defaultProps = {\n  size: 'medium' as const,\n  isClearable: false,\n  isDisabled: false,\n  isInvalid: false,\n  onClear: () => {\n    return;\n  },\n  onValueChange: () => {\n    return;\n  },\n  onChangeText: () => {\n    return;\n  },\n};\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    isClearable = defaultProps.isClearable,\n    isDisabled = defaultProps.isDisabled,\n    isInvalid = defaultProps.isInvalid,\n    onClear = defaultProps.onClear,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    size = defaultProps.size,\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  hasLeftIcon?: boolean;\n  hasRightIcon?: boolean;\n  onValueChange?: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled = defaultProps.isDisabled,\n    isInvalid = defaultProps.isInvalid,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    size = defaultProps.size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange?: (value: string) => void;\n  onChangeText?: (text: string) => void;\n  value?: string;\n  isClearable?: boolean;\n  onClear?: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const {\n    isClearable = defaultProps.isClearable,\n    onClear = defaultProps.onClear,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    value,\n  } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: string | false;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nconst defaultProps = {\n  position: 'top' as const,\n};\n\nexport const Label = (props: LabelProps) => {\n  const {\n    children,\n    position = defaultProps.position,\n    overrides = {},\n    label,\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: string | false;\n  position?: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const {\n    label,\n    position = defaultProps.position,\n    style,\n    ...textProps\n  } = props;\n\n  if (!label) return null;\n\n  let textStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, style]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}