{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButtonWrapper.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","_ref$color","color","_ref$size","size","theme","useTheme","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_getTextSize$fontSize","getTextSize","textSizes","fontSize","iconSize","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","colors","text","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","NativePicker","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_5__","selectedValue","onValueChange","itemValue","itemIndex","options","label","of","className","isMDXComponent","getPickerButtonStyles","controlSizeStyles","isControlSize","small","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","textSizeStyles","containerStyle","backgroundColor","background","content","position","itemStyle","objectSpread","pickerStyle","appearance","borderColor","border","borderWidth","width","rightContainerStyle","alignItems","display","justifyContent","paddingHorizontal","right","zIndex","PickerButtonWrapper","getStyles","_mergeStyles","mergeStyles","react","View","style","Icon_web","NativePickerBase","innerRef","pickerProps","objectWithoutProperties","PickerButtonWrapper_PickerButtonWrapper","NativePicker_jsxFileName","Picker","esm_extends","ref","map","option","Item","key","NativePicker_NativePickerBase","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextStyles","_ref$align","align","weight","_ref$isItalic","isItalic","transform","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","containerShapes","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/21.52e17d23.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor, getTextSize } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({\n  name,\n  color = 'default',\n  size = 'medium',\n}: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n  const { fontSize = 16 } = getTextSize(theme.textSizes)(size);\n  const iconSize = typeof size === 'string' ? fontSize + 8 : size;\n\n  return (\n    <IconTag color={getTextColor(theme.colors.text)(color)} size={iconSize} />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { NativePicker, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"nativepicker\"\n    }}>{`NativePicker`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Picker`}</inlineCode></p>\n    <Playground __position={0} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <NativePicker\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      size=\\\"large\\\"\\n      options={[\\n        { label: \\'C\\', value: \\'c\\' },\\n        { label: \\'C#\\', value: \\'c#\\' },\\n        { label: \\'C++\\', value: \\'c++\\' },\\n        { label: \\'CSS\\', value: \\'css\\' },\\n        { label: \\'Elixir\\', value: \\'elixir\\' },\\n        { label: \\'Elm\\', value: \\'elm\\' },\\n        { label: \\'Erlang\\', value: \\'erlang\\' },\\n        { label: \\'Go\\', value: \\'go\\' },\\n        { label: \\'Haskell\\', value: \\'haskell\\' },\\n        { label: \\'HTML\\', value: \\'html\\' },\\n        { label: \\'Java\\', value: \\'java\\' },\\n        { label: \\'JavaScript\\', value: \\'js\\' },\\n        { label: \\'Lua\\', value: \\'lua\\' },\\n        { label: \\'Python\\', value: \\'python\\' },\\n        { label: \\'R\\', value: \\'r\\' },\\n        { label: \\'Ruby\\', value: \\'ruby\\' },\\n        { label: \\'Rust\\', value: \\'rust\\' },\\n        { label: \\'Switft\\', value: \\'swift\\' },\\n        { label: \\'Typescript\\', value: \\'typescript\\' },\\n      ]}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      NativePicker,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'js'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <NativePicker selectedValue={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} size=\"large\" options={[{\n          label: 'C',\n          value: 'c'\n        }, {\n          label: 'C#',\n          value: 'c#'\n        }, {\n          label: 'C++',\n          value: 'c++'\n        }, {\n          label: 'CSS',\n          value: 'css'\n        }, {\n          label: 'Elixir',\n          value: 'elixir'\n        }, {\n          label: 'Elm',\n          value: 'elm'\n        }, {\n          label: 'Erlang',\n          value: 'erlang'\n        }, {\n          label: 'Go',\n          value: 'go'\n        }, {\n          label: 'Haskell',\n          value: 'haskell'\n        }, {\n          label: 'HTML',\n          value: 'html'\n        }, {\n          label: 'Java',\n          value: 'java'\n        }, {\n          label: 'JavaScript',\n          value: 'js'\n        }, {\n          label: 'Lua',\n          value: 'lua'\n        }, {\n          label: 'Python',\n          value: 'python'\n        }, {\n          label: 'R',\n          value: 'r'\n        }, {\n          label: 'Ruby',\n          value: 'ruby'\n        }, {\n          label: 'Rust',\n          value: 'rust'\n        }, {\n          label: 'Switft',\n          value: 'swift'\n        }, {\n          label: 'Typescript',\n          value: 'typescript'\n        }]} mdxType=\"NativePicker\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"nativepicker-props\"\n    }}>{`NativePicker Props`}</h2>\n    <p>{`Extends native `}<inlineCode parentName=\"p\">{`Picker`}</inlineCode></p>\n    <Props of={NativePicker} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`NativePickerStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: ViewStyle;\n}\n\ngetStyles={(NativePickerProps, Theme) => NativePickerStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View style={containerStyle}>\n  <Picker itemStyle pickerStyle />\n  <View style={rightContainerStyle}>{icon}</View>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { PickerButtonWrapperProps } from './PickerButtonWrapper';\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport type GetPickerButtonStyles = (\n  props: PickerButtonWrapperProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  { size = 'medium' },\n  theme,\n) => {\n  const controlSizeStyles = isControlSize(size)\n    ? {\n        small: {\n          borderRadius: theme.controlBorderRadius.small,\n          height: theme.controlHeights.small,\n          paddingLeft: theme.controlPaddings.small,\n          paddingRight: 40,\n        },\n\n        medium: {\n          borderRadius: theme.controlBorderRadius.medium,\n          height: theme.controlHeights.medium,\n          paddingLeft: theme.controlPaddings.medium,\n          paddingRight: 40,\n        },\n\n        large: {\n          borderRadius: theme.controlBorderRadius.large,\n          height: theme.controlHeights.large,\n          paddingLeft: theme.controlPaddings.large,\n          paddingRight: 40,\n        },\n      }[size]\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: 40,\n      };\n\n  const textSizeStyles = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      appearance: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      width: '100%',\n      ...textSizeStyles,\n      ...controlSizeStyles,\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  /**\n   * The size of the picker.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: PickerButtonGetStylesProp;\n\n  /**\n   * Content of the wrapper\n   */\n  children?: React.ReactNode;\n}\n\nexport const PickerButtonWrapper = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children } = props;\n  const theme = useTheme();\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n    theme.components.getPickerButtonStyles,\n  )(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon\n          name=\"chevron-down\"\n          size=\"large\"\n          color={theme.colors.text.default}\n        />\n      </View>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Picker as RNPicker, PickerProps as RNPickerProps } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\nimport { PickerButtonWrapper } from './PickerButtonWrapper';\n\ninterface NativePickerOption {\n  label: string;\n  value: string;\n}\n\nexport interface NativePickerProps extends RNPickerProps {\n  /**\n   * The size of the picker.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n  /**\n   * List of NativePickerItem items.\n   */\n  options: NativePickerOption[];\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: PickerButtonGetStylesProp;\n\n  innerRef?: React.Ref<RNPicker>;\n}\n\nconst NativePickerBase = (props: NativePickerProps) => {\n  const {\n    size = 'medium',\n    getStyles,\n    innerRef,\n    options,\n    ...pickerProps\n  } = props;\n  const theme = useTheme();\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )(props, theme);\n\n  return (\n    <PickerButtonWrapper getStyles={getStyles}>\n      <RNPicker\n        ref={innerRef}\n        itemStyle={itemStyle}\n        style={pickerStyle}\n        {...pickerProps}\n      >\n        {options.map(option => (\n          <RNPicker.Item\n            key={option.value}\n            value={option.value}\n            label={option.label}\n          />\n        ))}\n      </RNPicker>\n    </PickerButtonWrapper>\n  );\n};\n\nexport const NativePicker = React.forwardRef<RNPicker, NativePickerProps>(\n  (props, ref) => {\n    return <NativePickerBase {...props} innerRef={ref} />;\n  },\n);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.teal.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}