{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getCounterStyles","props","theme","containerStyle","display","flexDirection","countStyle","justifyContent","minWidth","counterStyle","alignItems","borderColor","colors","border","primary","borderRadius","borderWidth","height","width","decrementWrapperStyle","paddingRight","disabledStyle","incrementWrapperStyle","paddingLeft","textStyle","Counter","_props$count","count","component","max","min","onIncrement","onDecrement","getStyles","useTheme","_mergeStyles","mergeStyles","components","isDecrementDisabled","isIncrementDisabled","react","View","style","__source","fileName","_jsxFileName","lineNumber","TouchableOpacity","Object","objectSpread","disabled","onPress","undefined","Icon_web","name","size","color","text","muted","Text","align","concat","CounterState","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrement","decrementBy","increment","incrementBy","set","layoutProps","MDXLayout","MDXContent","_ref","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","ProgressBar","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","percent","___WEBPACK_IMPORTED_MODULE_6__","of","parentName","className","isMDXComponent","getProgressBarStyles","_ref$size","isControlSize","controlHeights","backgroundColor","background","greyDefault","overflow","progressStyle","primaryDefault","AnimatedView","animated","_props$percent","testID","boundPercent","Math","useSpring","config","springDefaultConfig","from","accessibilityRole","Platform","OS","interpolate","w","__webpack_require__","d","__webpack_exports__"],"mappings":"woCAoBO,IAAMA,EAAqC,SAACC,EAAOC,GACxD,MAAO,CACLC,eAAgB,CACdC,QAAS,OACTC,cAAe,OAEjBC,WAAY,CACVC,eAAgB,SAChBC,SAAU,IAEZC,aAAc,CACZC,WAAY,SACZC,YAAaT,EAAMU,OAAOC,OAAOC,QACjCC,aAAc,IACdC,YAAa,EACbZ,QAAS,OACTa,OAAQ,GACRV,eAAgB,SAChBW,MAAO,IAETC,sBAAuB,CAAEC,aAAc,IACvCC,cAAe,CACbV,YAAaT,EAAMU,OAAOC,OAAb,SAEfS,sBAAuB,CAAEC,YAAa,IACtCC,UAAW,qlBCCR,IAAMC,EAAU,SAACxB,GAAwB,IAAAyB,EAS1CzB,EAPF0B,aAF4C,IAAAD,EAEpC,EAFoCA,EAG5CE,EAME3B,EANF2B,UACAC,EAKE5B,EALF4B,IACAC,EAIE7B,EAJF6B,IACAC,EAGE9B,EAHF8B,YACAC,EAEE/B,EAFF+B,YACAC,EACEhC,EADFgC,UAGI/B,EAAQgC,cAXgCC,EAqB1CC,YACFpC,EACAiC,EACA/B,EAAMmC,WAAWrC,iBAHfoC,CAIFnC,EAAOC,GAXPC,EAd4CgC,EAc5ChC,eACAM,EAf4C0B,EAe5C1B,aACAH,EAhB4C6B,EAgB5C7B,WACAa,EAjB4CgB,EAiB5ChB,sBACAE,EAlB4Cc,EAkB5Cd,cACAC,EAnB4Ca,EAmB5Cb,sBACAE,EApB4CW,EAoB5CX,UAOIc,EAAsBR,IAAQH,EAC9BY,EAAsBV,IAAQF,EAEpC,OACEa,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOvC,EAAbwC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACEN,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOvB,EAAbwB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACEN,EAAA,cAACO,EAAA,EAAD,CACEL,MAAKM,OAAAC,EAAA,EAAAD,CAAA,GACAvC,EACC6B,GAAuBjB,GAE7B6B,SAAUZ,EACVa,QAAUb,OAAoCc,EAAdpB,EANlCW,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAQEN,EAAA,cAACa,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,SACLC,MACElB,EACIpC,EAAMU,OAAO6C,KAAKC,MAClBxD,EAAMU,OAAO6C,KAAK3C,QAN1B6B,SAAA,CAAAC,SAAAC,EAAAC,WAAA,QAWHlB,GACCY,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOpC,EAAbqC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACEN,EAAA,cAACmB,EAAA,EAAD,CACEC,MAAM,SACN3B,UAAW,iBAAO,CAAET,cAFtBmB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,SAAAe,OAGKlC,KAGTa,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOpB,EAAbqB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACEN,EAAA,cAACO,EAAA,EAAD,CACEL,MAAKM,OAAAC,EAAA,EAAAD,CAAA,GACAvC,EACC8B,GAAuBlB,GAE7B6B,SAAUX,EACVY,QAAUZ,OAAoCa,EAAdrB,EANlCY,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAQEN,EAAA,cAACa,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,SACLC,MACEjB,EACIrC,EAAMU,OAAO6C,KAAKC,MAClBxD,EAAMU,OAAO6C,KAAK3C,QAN1B6B,SAAA,CAAAC,SAAAC,EAAAC,WAAA,4nCCnGH,IAAMgB,EAAe,SAAC7D,GAA6B,IAChD8D,EAA0B9D,EAA1B8D,SADgDC,EACtB/D,EAAhBgE,eADsC,IAAAD,EAC5B,EAD4BA,EAAAE,EAE9BC,IAAMC,SAASH,GAFeI,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAkB,EAAA,GAEjDvC,EAFiD0C,EAAA,GAE1CE,EAF0CF,EAAA,GAIlDG,EAAoBL,IAAMM,YAC9B,SAAAC,GACEH,EAAS5C,EAAQ+C,IAEnB,CAAC/C,IAGGgD,EAAoBR,IAAMM,YAC9B,SAAAC,GACEH,EAAS5C,EAAQ+C,IAEnB,CAAC/C,IAGGiD,EAAkBT,IAAMM,YAAY,WACxCF,EAAS5C,EAAQ,IAChB,CAACA,IAEEkD,EAAkBV,IAAMM,YAAY,WACxCF,EAAS5C,EAAQ,IAChB,CAACA,IAEEmD,EAAYX,IAAMM,YACtB,SAAAC,GACEH,EAASG,IAEX,CAAC/C,IAGH,OAAOoC,EAAS,CACdpC,QACAoD,UAAWF,EACXG,YAAaL,EACbM,UAAWL,EACXM,YAAaV,EACbW,IAAKL,k8BC3CHM,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDlD,EAECkD,EAFDlD,WACGpC,EACF+C,OAAAwC,EAAA,EAAAxC,CAAAuC,EAAA,gBACD,OAAOvC,OAAAyC,EAAA,EAAAzC,CAACqC,EAADrC,OAAA0C,EAAA,EAAA1C,CAAA,GAAeoC,EAAiBnF,EAAhC,CAAuCoC,WAAYA,EAAYsD,QAAQ,YAAvEhD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGLE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAA,OAAA0C,EAAA,EAAA1C,CAAQ,CACN4C,GAAM,eADR,CAAAjD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,qBAGAE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAA,OAAA0C,EAAA,EAAA1C,CAAQ,CACN4C,GAAM,SADR,CAAAjD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAE,OAAAyC,EAAA,EAAAzC,CAAC6C,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,6VAAgWC,QAAS,CAC1Y/F,MAAOgG,KAAOA,KAAKhG,MAAQA,EAC3BiG,eACAC,UACAC,QACA3E,YACAqC,iBACAuC,iBACCV,QAAQ,aARXhD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KASFE,OAAAyC,EAAA,EAAAzC,CAACsD,EAAA,EAAD,CAAcrC,QAAS,EAAG0B,QAAQ,eAAlChD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAyD,GAAA,IACK5E,EADL4E,EACK5E,MACAuD,EAFLqB,EAEKrB,YACAF,EAHLuB,EAGKvB,YAHL,OAIShC,OAAAyC,EAAA,EAAAzC,CAACwD,EAAA,EAAD,CAAKb,QAAQ,MAAbhD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACNE,OAAAyC,EAAA,EAAAzC,CAACyD,EAAA,EAAD,CAAaC,QAAS/E,EAAO4B,KAAK,QAAQoC,QAAQ,cAAlDhD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAE,OAAAyC,EAAA,EAAAzC,CAAC2D,EAAA,EAAD,CAAShF,MAAOA,EAAOK,YAAa,kBAAMgD,EAAY,KAAKjD,YAAa,kBAAMmD,EAAY,KAAKpD,IAAK,EAAGD,IAAK,IAAK8D,QAAQ,UAAzHhD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAIJE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAA,OAAA0C,EAAA,EAAA1C,CAAQ,CACN4C,GAAM,SADR,CAAAjD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAE,OAAAyC,EAAA,EAAAzC,CAAC6C,EAAA,EAAD,CAAOe,GAAIP,IAAaV,QAAQ,QAAhChD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAA,OAAA0C,EAAA,EAAA1C,CAAQ,CACN4C,GAAM,iBADR,CAAAjD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,uBAGAE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,cAAaE,OAAAyC,EAAA,EAAAzC,CAAA,cAAY6D,WAAW,IAAvBlE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kBAAb,SACAE,OAAAyC,EAAA,EAAAzC,CAAA,OAAAL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKE,OAAAyC,EAAA,EAAAzC,CAAA,OAAAA,OAAA0C,EAAA,EAAA1C,CAAA,CAAM6D,WAAW,OAAU,GAA3B,CAAAlE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,4JAOLE,OAAAyC,EAAA,EAAAzC,CAAA,KAAAL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eACAE,OAAAyC,EAAA,EAAAzC,CAAA,OAAAL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKE,OAAAyC,EAAA,EAAAzC,CAAA,OAAAA,OAAA0C,EAAA,EAAA1C,CAAA,CAAM6D,WAAW,OAAU,CAC5BC,UAAa,gBADZ,CAAAnE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,sQASTwC,EAAWyB,gBAAiB,4rCC1DrB,IAAMC,EAA6C,SAAAzB,EAExDrF,GACG,IAAA+G,EAAA1B,EAFDhC,YAEC,IAAA0D,EAFM,SAENA,EACGhG,EAASiG,YAAc3D,GAAQrD,EAAMiH,eAAe5D,GAAQ,GAAKA,EAEvE,MAAO,CACLpD,eAAgB,CACdiH,gBAAiBlH,EAAMU,OAAOyG,WAAWC,YACzCvG,aAAc,IACdE,SACAsG,SAAU,UAEZC,cAAe,CACbJ,gBAAiBlH,EAAMU,OAAOyG,WAAWI,eACzC1G,aAAc,IACdE,OAAQ,0VCpBRyG,EAAeC,mBAASlF,6TAsBvB,IAAM4D,EAAc,SAACpG,GAA4B,IAAA2H,EACX3H,EAAnCyG,eAD8C,IAAAkB,EACpC,EADoCA,EACjC3F,EAAsBhC,EAAtBgC,UAAW4F,EAAW5H,EAAX4H,OAC1B3H,EAAQgC,cAFwCC,EAIZC,YACxC4E,EACA/E,EACA/B,EAAMmC,WAAW2E,qBAHuB5E,CAIxCnC,EAAOC,GAJDC,EAJ8CgC,EAI9ChC,eAAgBqH,EAJ8BrF,EAI9BqF,cAMlBM,EAAeC,KAAKlG,IAAIkG,KAAKjG,IAAI4E,EAAS,KAAM,GAC9CxF,EAAU8G,oBAAU,CAC1BC,OAAQC,IACRC,KAAM,CAAEjH,MAAO4G,GACf5G,MAAO4G,IAHD5G,MAMR,OACEsB,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOvC,EAAgB0H,OAAQA,EAArClF,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACEN,EAAA,cAACkF,EAAD,CAEEU,kBAAmC,QAAhBC,IAASC,GAAe,WAAa,OAExD5F,MAAKM,OAAAC,EAAA,EAAAD,CAAA,GACAwE,EADA,CAEHtG,MAAOA,EAAMqH,YAAY,SAAAC,GAAC,SAAA3E,OAAO2E,EAAP,SAN9B7F,SAAA,CAAAC,SAAAC,EAAAC,WAAA,8RCnDN2F,EAAAC,EAAAC,EAAA,sBAAAzB,IAAO,IAAMA,EAAgB,SAC3B3D,GAEA,MAAoB,kBAATA","file":"static/js/11.5de094c3.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { CounterProps } from './Counter';\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  countStyle: ViewStyle;\n  decrementWrapperStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  incrementWrapperStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (\n  props: CounterProps,\n  theme: Theme,\n) => Partial<CounterStyles>;\n\nexport const getCounterStyles: GetCounterStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    countStyle: {\n      justifyContent: 'center',\n      minWidth: 24,\n    },\n    counterStyle: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    decrementWrapperStyle: { paddingRight: 16 },\n    disabledStyle: {\n      borderColor: theme.colors.border.default,\n    },\n    incrementWrapperStyle: { paddingLeft: 16 },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { GetCounterStyles, getCounterStyles } from './Counter.styles';\n\nexport interface CounterProps {\n  /**\n   * Count to be displayed.\n   */\n  count?: number;\n\n  /**\n   * Minimum count for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum count for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Custom component in place of count.\n   */\n  component?: React.ReactNode;\n\n  /**\n   * Called when increment button is pressed.\n   */\n  onIncrement?: () => void;\n\n  /**\n   * Called when decrement button is pressed.\n   */\n  onDecrement?: () => void;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: GetCounterStyles;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count = 0,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    decrementWrapperStyle,\n    disabledStyle,\n    incrementWrapperStyle,\n    textStyle,\n  } = mergeStyles(\n    getCounterStyles,\n    getStyles,\n    theme.components.getCounterStyles,\n  )(props, theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <View style={decrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size=\"xsmall\"\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n      {component || (\n        <View style={countStyle}>\n          <Text\n            align=\"center\"\n            getStyles={() => ({ textStyle })}\n          >{`${count}`}</Text>\n        </View>\n      )}\n      <View style={incrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size=\"xsmall\"\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Counter, CounterState, ProgressBar } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<CounterState initial={0}>\\n  {({ count, incrementBy, decrementBy }) => (\\n    <Box>\\n      <ProgressBar percent={count} size=\\\"large\\\" />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decrementBy(10)}\\n        onIncrement={() => incrementBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Counter,\n      CounterState,\n      ProgressBar\n    }} mdxType=\"Playground\">\n  <CounterState initial={0} mdxType=\"CounterState\">\n    {({\n          count,\n          incrementBy,\n          decrementBy\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={count} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter count={count} onDecrement={() => decrementBy(10)} onIncrement={() => incrementBy(10)} min={0} max={100} mdxType=\"Counter\" />\n      </Box>}\n  </CounterState>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\ngetStyles={(ProgressBarProps, Theme) => ProgressBarStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View progressStyle />\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ProgressBarProps } from './ProgressBar';\n\nexport type GetProgressBarStyles = (\n  props: ProgressBarProps,\n  theme: Theme,\n) => Partial<ProgressBarStyles>;\n\nexport interface ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressBarStyles: GetProgressBarStyles = (\n  { size = 'medium' },\n  theme,\n) => {\n  const height = isControlSize(size) ? theme.controlHeights[size] - 16 : size;\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      borderRadius: 999,\n      height,\n      overflow: 'hidden',\n    },\n    progressStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 999,\n      height: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport {\n  GetProgressBarStyles,\n  getProgressBarStyles,\n} from './ProgressBar.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface ProgressBarProps {\n  /**\n   * Percentage of the progress bar. From 0 to 1\n   * @default 0\n   */\n  percent?: number;\n\n  /**\n   * The size of the progress bar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /** Callback to get element styles. */\n  getStyles?: GetProgressBarStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, getStyles, testID } = props;\n  const theme = useTheme();\n\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressBarStyles,\n    getStyles,\n    theme.components.getProgressBarStyles,\n  )(props, theme);\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <AnimatedView\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        // @ts-ignore\n        style={{\n          ...progressStyle,\n          width: width.interpolate(w => `${w}%`),\n        }}\n      />\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}