{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts"],"names":["_changeColor","__webpack_require__","getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","focusColor","darken","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Object","keys","forEach","key","defineProperty","exports","enumerable","get","isWindowAboveMinWidth","minWidth","Dimensions","width","isWindowBelowMaxWidth","maxWidth","Responsive","children","isAboveMinWidth","isBelowMaxWidth","matches","_useMeasure2","ViewMeasure","onMeasure","viewProps","isRenderProp","_useMeasure","useMeasure","forwardRef","measurements","onLayout","ref","_ViewMeasure","_Responsive","Feather","_Text","Icon","_ref","name","IconTag","concat","result","toUpperCase","charAt","slice","convertToPascal","getTextColor","_Icon","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","getTabStyles","containerStyle","dividerStyle","bottom","position","_hooks","_Helpers","_Tab","Tab","_props$isActive","_props$onActive","onActive","buttonProps","_React$useState","useState","initialMeasurements","_React$useState2","_slicedToArray2","setMeasurements","useEffect","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","State","Tabs","ActiveBar","undefined","defaultActiveTabIndex","activeTabIndex","distribution","tabContainerStyle","Array","fill","v","i","of","isMDXComponent","getTabsStyles","flex","_Animation","_Box","_Tabs","DefaultActiveBar","_useSpring","useSpring","springDefaultConfig","x","primaryDefault","left","top","_props$ActiveBar","_props$defaultActiveT","_props$distribution","localActiveTabIndex","setLocalActiveTabIndex","isControlled","listRef","useRef","_React$useState3","_React$useState4","activeBarProps","setActiveBarProps","current","scrollToIndex","max","data","Children","child","tabCommonProps","tabs","toArray","tabProps","cloneElement","Fragment","FlatList","horizontal","keyExtractor","item","renderItem","showsHorizontalScrollIndicator","ListFooterComponent","Box","friction","tension","_usePrevious","_useElement","_useLockBodyScroll","_exenv","useElement","element","rootElem","rootElement","rootContainer","document","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childNodes","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","pageX","pageY","y","createRef","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","e","nativeEvent","usePrevious","value"],"mappings":"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","file":"static/js/5.9e13fa70.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/ThemeInterface';\nimport { darken } from './changeColor';\n\nexport type ButtonColorProps = ViewStyle & {\n  backgroundColor: string;\n  color: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.button.default,\n          color: theme.colors.button.defaultText,\n\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.button.danger,\n          color: theme.colors.button.dangerText,\n\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.button.primary,\n          color: theme.colors.button.primaryText,\n\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.button.secondary,\n          color: theme.colors.button.secondaryText,\n\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.button.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, measurements, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport type GetTabStyles = (props: {}, theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = (props, theme) => {\n  return {\n    buttonStyle: {\n      borderRadius: 0,\n    },\n    containerStyle: {},\n    dividerStyle: {\n      borderRadius: 0,\n      bottom: 0,\n      position: 'absolute',\n    },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { initialMeasurements, Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { ViewMeasure } from '../Helpers';\nimport { GetTabStyles, getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps\n  extends Omit<Omit<ButtonProps, 'onPress'>, 'getStyles'> {\n  index: number;\n  isActive?: boolean;\n  getStyles?: ReplaceReturnType<GetTabStyles, DeepPartial<TabStyles>>;\n  onPress: (index: number) => void;\n  onActive?: (index: number, measurements: Measurements) => void;\n}\n\nexport const Tab = (props: TabProps) => {\n  const {\n    isActive = false,\n    getStyles,\n    index,\n    onPress,\n    onActive = () => {\n      return;\n    },\n    ...buttonProps\n  } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n  const theme = useTheme();\n  const { containerStyle, buttonStyle, textStyle } = mergeStyles(\n    getTabStyles,\n    getStyles,\n  )({}, theme);\n\n  React.useEffect(() => {\n    if (isActive) onActive(index, measurements);\n  }, [isActive, measurements]);\n\n  return (\n    <ViewMeasure onMeasure={setMeasurements} style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        appearance=\"minimal\"\n        getStyles={() => ({ buttonStyle, textStyle })}\n        onPress={() => onPress(index)}\n        {...buttonProps}\n      />\n    </ViewMeasure>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { View } from 'react-native';\nimport { Icon } from '../Icon';\nimport { Tabs, Tab } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`Passing `}<inlineCode parentName=\"p\">{`activeTabIndex`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` will alternate to controlled usage (manually set tab)`}</p>\n    <p>{`You can use a custom `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component as long as it accepts `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` props`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Tabs\\n  ActiveBar={undefined} // The indicator of active tab. Currently works only when distribution=\\\"fit\\\"\\n  defaultActiveTabIndex={1}\\n  activeTabIndex={undefined}\\n  onPress={undefined}\\n  distribution=\\\"fit\\\" // or \\'scrollable\\'\\n  getStyles={(props, theme) => ({\\n    containerStyle: {}, // Only applied when distribution=\\\"fit\\\"\\n    tabContainerStyle: {},\\n    buttonStyle: {},\\n    textStyle: {},\\n    dividerStyle: {},\\n  })}\\n>\\n  {new Array(4).fill(0).map((v, i) => (\\n    <Tab key={i} title={`Tab ${i + 1}`} />\\n  ))}\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs ActiveBar={undefined} // The indicator of active tab. Currently works only when distribution=\"fit\"\n      defaultActiveTabIndex={1} activeTabIndex={undefined} onPress={undefined} distribution=\"fit\" // or 'scrollable'\n      getStyles={(props, theme) => ({\n        containerStyle: {},\n        // Only applied when distribution=\"fit\"\n        tabContainerStyle: {},\n        buttonStyle: {},\n        textStyle: {},\n        dividerStyle: {}\n      })} mdxType=\"Tabs\">\n    {new Array(4).fill(0).map((v, i) => <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />)}\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"scrollable\"\n    }}>{`Scrollable`}</h3>\n    <p>{`Scrollable Tabs will also inline `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode></p>\n    <Playground __position={1} __code={'<Tabs distribution=\\\"scrollable\\\">\\n  {new Array(20).fill(0).map((v, i) => (\\n    <Tab key={i} title={`Tab ${i + 1}`} />\\n  ))}\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs distribution=\"scrollable\" mdxType=\"Tabs\">\n    {new Array(20).fill(0).map((v, i) => <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />)}\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { TabsDistribution } from './Tabs';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n  tabContainerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport interface GetTabsStylesProps {\n  distribution: TabsDistribution;\n}\n\nexport type GetTabsStyles = (\n  props: GetTabsStylesProps,\n  theme: Theme,\n) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = ({ distribution }, theme) => {\n  return {\n    buttonStyle: {},\n    containerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n    dividerStyle: {},\n    tabContainerStyle:\n      distribution === 'fit'\n        ? {\n            flex: 1,\n          }\n        : {},\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { FlatList, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { initialMeasurements, Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nconst AnimatedView = animated(View);\n\nexport interface TabsProps {\n  /** The indicator of active tab. Currently works only when distribution=\"fit\" */\n  ActiveBar?: React.ComponentType<ActiveBarProps>;\n  activeTabIndex?: number;\n  children: Array<React.ReactElement<TabProps>>;\n  defaultActiveTabIndex?: number;\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n  distribution?: TabsDistribution;\n\n  onPress: (index: number) => void;\n}\n\nexport interface WrapperProps {\n  children: React.ReactNode;\n}\n\nexport interface ActiveBarProps {\n  index: number;\n  measurements: Measurements;\n}\n\nconst DefaultActiveBar = (props: ActiveBarProps) => {\n  const { index, measurements } = props;\n  const theme = useTheme();\n\n  const { x, width } = useSpring({\n    config: springDefaultConfig,\n\n    width: measurements.width,\n    x: index * measurements.width,\n  });\n\n  return (\n    <AnimatedView\n      // @ts-ignore\n      style={{\n        backgroundColor: theme.colors.background.primaryDefault,\n        height: 3,\n        left: x,\n        position: 'absolute',\n        top: measurements.height,\n        width,\n      }}\n    />\n  );\n};\n\nexport const Tabs = (props: TabsProps) => {\n  const {\n    ActiveBar = DefaultActiveBar,\n    children,\n    activeTabIndex,\n    defaultActiveTabIndex = 0,\n    onPress,\n    getStyles,\n    distribution = 'fit',\n  } = props;\n  const [localActiveTabIndex, setLocalActiveTabIndex] = React.useState(\n    defaultActiveTabIndex,\n  );\n  const theme = useTheme();\n  const isControlled = !!(activeTabIndex || onPress);\n  const listRef = React.useRef<FlatList<TabProps>>(null);\n  const [activeBarProps, setActiveBarProps] = React.useState({\n    index: (isControlled ? activeTabIndex : localActiveTabIndex) || -1,\n    measurements: initialMeasurements,\n  });\n\n  React.useEffect(() => {\n    if (listRef.current && distribution === 'scrollable') {\n      if (isControlled && activeTabIndex) {\n        listRef.current.scrollToIndex({\n          animated: true,\n          index: Math.max(activeTabIndex - 2, 0),\n        });\n      } else if (localActiveTabIndex) {\n        listRef.current.scrollToIndex({\n          animated: true,\n          index: Math.max(localActiveTabIndex - 2, 0),\n        });\n      }\n    }\n  });\n\n  const {\n    containerStyle,\n    tabContainerStyle,\n    textStyle,\n    buttonStyle,\n    dividerStyle,\n  } = mergeStyles(getTabsStyles, getStyles)({ distribution }, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    const tabCommonProps: Partial<TabProps> = {\n      getStyles: () => ({\n        buttonStyle,\n        containerStyle: tabContainerStyle,\n        dividerStyle,\n        textStyle,\n      }),\n      index,\n      onActive: (i, measurements) => {\n        setActiveBarProps({ index, measurements });\n      },\n    };\n\n    return isControlled\n      ? {\n          ...tabCommonProps,\n          isActive: index === activeTabIndex,\n          onPress: i => onPress(i),\n        }\n      : {\n          ...tabCommonProps,\n          isActive: index === localActiveTabIndex,\n          onPress: i => setLocalActiveTabIndex(i),\n        };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  if (distribution === 'fit') {\n    return (\n      <View style={containerStyle}>\n        {data.map((tabProps, index) =>\n          React.cloneElement(tabs[index], tabProps),\n        )}\n        <ActiveBar {...activeBarProps} />\n      </View>\n    );\n  }\n\n  return (\n    <>\n      <FlatList\n        ref={listRef}\n        horizontal\n        keyExtractor={item => `${item.index}`}\n        data={data}\n        renderItem={({ item, index }) => React.cloneElement(tabs[index], item)}\n        showsHorizontalScrollIndicator={false}\n        ListFooterComponent={() => <Box width=\"100%\" testID=\"zxcv\" />}\n      />\n    </>\n  );\n};\n","export * from './Tabs';\nexport * from './Tab';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","export * from './usePrevious';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useLockBodyScroll';\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps = {}) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>(value);\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n"],"sourceRoot":""}