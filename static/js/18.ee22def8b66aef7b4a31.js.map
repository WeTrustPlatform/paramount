{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","Button","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","___WEBPACK_IMPORTED_MODULE_5__","title","description","intent","overrides","Action","component","___WEBPACK_IMPORTED_MODULE_7__","appearance","color","of","isMDXComponent","getSpacing","size","theme","spacing","Spacing","_props$size","_props$orientation","orientation","style","viewProps","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","propToFn","backgroundColor","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","alignItems","flexDirection","justifyContent","map","index","key","borderRadius","marginLeft","marginRight","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","_props$overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","minHeight","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Fragment","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/18.61a26310.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`Give feedback to the user about an action or state`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box paddingVertical={8}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert\\n    intent=\\\"danger\\\"\\n    title=\\\"Danger\\\"\\n    description=\\\"Message\\\"\\n    overrides={{\\n      Action: {\\n        component: () => (\\n          <Button title=\\\"Action\\\" appearance=\\\"minimal\\\" color=\\\"primary\\\" />\\n        ),\\n      },\\n    }}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" overrides={{\n          Action: {\n            component: () => <Button title=\"Action\" appearance=\"minimal\" color=\"primary\" mdxType=\"Button\" />\n          }\n        }} mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}