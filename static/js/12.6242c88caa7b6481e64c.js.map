{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Icon","TextInput","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","onValueChange","isInvalid","isClearable","onClear","console","log","of","isMDXComponent","_props$isClearable","_props$isDisabled","isDisabled","_props$isInvalid","_props$onClear","_props$onValueChange","_props$onChangeText","onChangeText","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","LeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","hasLeftIcon","hasRightIcon","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","text","greyDark","danger","paddingVertical","editable","muted","name","alignItems","display","justifyContent","left","paddingHorizontal","position","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/12.46ee7c5c.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"Placeholder\\\"\\n      size=\\\"large\\\"\\n      onValueChange={value => setState({ value })}\\n      isInvalid={false}\\n      isClearable\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"Placeholder\" size=\"large\" onValueChange={value => setState({\n          value\n        })} isInvalid={false} isClearable onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={TextInput} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}