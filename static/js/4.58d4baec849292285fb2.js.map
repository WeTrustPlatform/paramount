{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/ArrowedPositioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/getPositionerArrow.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Intent.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/StackingOrder.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/index.ts"],"names":["_reactNative","__webpack_require__","isWindowAboveMinWidth","minWidth","Dimensions","get","width","isWindowBelowMaxWidth","maxWidth","Responsive","props","children","isAboveMinWidth","isBelowMaxWidth","matches","React","_interopRequireWildcard","_useMeasure2","ViewMeasure","onMeasure","viewProps","_objectWithoutProperties2","isRenderProp","ref","useRef","_useMeasure","useMeasure","measurements","onLayout","createElement","View","_extends2","_ViewMeasure","Object","keys","forEach","key","defineProperty","exports","enumerable","_Responsive","getOverlayStyles","_ref","theme","overlayStyle","backgroundColor","transparent","colors","background","overlay","bottom","cursor","height","left","position","right","top","_theme","_mergeStyles2","_Overlay","Overlay","onPress","_props$transparent","getStyles","useTheme","mergeStyles","components","TouchableWithoutFeedback","event","preventDefault","style","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","_Button","_Box","_Typography","layoutProps","MDXLayout","document","body","mdx","MDXContent","_ref2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Toggle","ScrollView","Popover","Button","Box","Text","_ref3","on","toggle","isVisible","onClose","isFullWidth","targetMeasurements","pageX","window","innerWidth","pageY","x","y","positionerStyle","modalContainerStyle","popoverStyle","content","title","paddingBottom","zIndex","flexDirection","justifyContent","_ref4","isInline","_ref5","_ref6","paddingVertical","_ref7","_ref8","paddingTop","_ref9","_ref10","_ref11","align","_ref12","flex","_ref13","of","isMDXComponent","_Positioner","getPopoverStyles","_objectSpread2","padding","elevations","getPositionerStyles","_Popover","restProps","_mergeStyles","Positioner","params","_getPositionerArrow","ArrowedPositioned","getPositionerArrowParams","arrow","getFullWidthPositionerArrow","getPositionerArrow","Fragment","alignItems","display","_constants","_Helpers","_Modal","initialMeasurements","_props$isFullWidth","_props$onClose","_props$position","POSITION","BOTTOM","_React$useState","useState","_React$useState2","_slicedToArray2","positionerMeasurements","setPositionerMeasurements","_React$useState3","_React$useState4","childrenMeasurements","setChildrenMeasurements","screenLayout","finalTargetMeasurements","hasPositionerMeasurementsMeasured","getPositionerPositionParams","offset","replace","TOP","getPositionerFullWidthPosition","TOP_LEFT","marginRight","transform","translateX","TOP_RIGHT","LEFT","translateY","RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","getPositionerPosition","correctedPosition","positionerPositionStyle","Modal","visible","onRequestClose","shouldLockBodyScroll","opacity","commonStyle","borderColor","borderWidth","TopLeftArrow","borderTopColor","border","marginBottom","TopArrow","TopRightArrow","LeftArrow","borderLeftColor","RightArrow","borderRightColor","marginLeft","BottomRightArrow","borderBottomColor","marginTop","BottomArrow","BottomLeftArrow","FullWidthTopArrow","FullWidthBottomArrow","_ArrowedPositioner","INTENT","danger","info","success","warning","StackingOrder","FOCUSED","STACKING_CONTEXT","POSITIONER","OVERLAY","TOASTER","_StackingOrder","_Intent","_Position","prototype","hasOwnProperty","call","_exportNames"],"mappings":"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","file":"static/js/4.e4f8076b.js","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  return {\n    overlayStyle: {\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(\n    getOverlayStyles,\n    getStyles,\n    theme.components.getOverlayStyles,\n  )({ transparent }, theme);\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { ScrollView } from 'react-native';\nimport { Popover } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Box';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = ({ children }) => {\n  document.body.style.height = 'initial';\n  document.body.style.position = 'relative';\n  return <div>{children}</div>;\n}\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`This component requires more polish. Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <Popover\\n      isVisible={on}\\n      onClose={toggle}\\n      position=\\\"bottom\\\"\\n      isFullWidth={false}\\n      // Use this prop to specify the position of the popover\\n      targetMeasurements={{\\n        height: 200,\\n        pageX: window.innerWidth - 224,\\n        pageY: -200,\\n        width: 200,\\n        x: 0,\\n        y: 0,\\n      }}\\n      getStyles={(props, theme) => ({\\n        positionerStyle: {},\\n        modalContainerStyle: {},\\n        popoverStyle: {},\\n      })}\\n      content={props => (\\n        <Box>\\n          <Text>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\\n            enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident,\\n            sunt in culpa qui officia deserunt mollit anim id est laborum.\\n          </Text>\\n        </Box>\\n      )}\\n    >\\n      <Button onPress={toggle} title=\\\"Pop at right corner\\\" />\\n    </Popover>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      ScrollView,\n      Popover,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Popover isVisible={on} onClose={toggle} position=\"bottom\" isFullWidth={false} // Use this prop to specify the position of the popover\n        targetMeasurements={{\n          height: 200,\n          pageX: window.innerWidth - 224,\n          pageY: -200,\n          width: 200,\n          x: 0,\n          y: 0\n        }} getStyles={(props, theme) => ({\n          positionerStyle: {},\n          modalContainerStyle: {},\n          popoverStyle: {}\n        })} content={props => <Box mdxType=\"Box\">\n            <Text mdxType=\"Text\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </Text>\n          </Box>} mdxType=\"Popover\">\n        <Button onPress={toggle} title=\"Pop at right corner\" mdxType=\"Button\" />\n      </Popover>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Box paddingBottom={64} zIndex={1}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>\\n<Box paddingVertical={64} zIndex={2}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>\\n<Box paddingTop={64} zIndex={3}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom-right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom-left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      ScrollView,\n      Popover,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box paddingBottom={64} zIndex={1} mdxType=\"Box\">\n    <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top right\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top left\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n    </Box>\n  </Box>\n      <Box paddingVertical={64} zIndex={2} mdxType=\"Box\">\n  <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} isInline title=\"Left\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n    <Toggle mdxType=\"Toggle\">\n      {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} isInline title=\"Right\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n      </Box>\n  <Box paddingTop={64} zIndex={3} mdxType=\"Box\">\n    <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom-right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom right\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom-left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom left\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n    </Box>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"todo-popover-inside-scrollview\"\n    }}>{`TODO: Popover inside ScrollView`}</h3>\n    <Playground __position={2} __code={'<Box height={400}>\\n  <ScrollView>\\n    <Text align=\\\"center\\\">Scroll down to button</Text>\\n    <Box height={400} />\\n    <Box>\\n      <Toggle>\\n        {({ on, toggle }) => (\\n          <Popover\\n            isVisible={on}\\n            onClose={toggle}\\n            position=\\\"top\\\"\\n            content={() => <Box width={200} height={200} />}\\n          >\\n            <Button onPress={toggle} title=\\\"Pop\\\" />\\n          </Popover>\\n        )}\\n      </Toggle>\\n    </Box>\\n    <Box height={400} />\\n  </ScrollView>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      ScrollView,\n      Popover,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={400} mdxType=\"Box\">\n    <ScrollView mdxType=\"ScrollView\">\n      <Text align=\"center\" mdxType=\"Text\">Scroll down to button</Text>\n      <Box height={400} mdxType=\"Box\" />\n      <Box mdxType=\"Box\">\n        <Toggle mdxType=\"Toggle\">\n          {({\n                on,\n                toggle\n              }) => <Popover isVisible={on} onClose={toggle} position=\"top\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n              <Button onPress={toggle} title=\"Pop\" mdxType=\"Button\" />\n            </Popover>}\n        </Toggle>\n      </Box>\n      <Box height={400} mdxType=\"Box\" />\n    </ScrollView>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"popover-with-full-width\"\n    }}>{`Popover with full width`}</h3>\n    <p>{`On Mobile sometimes we want the content to stretch full width of the window. There is the prop `}<inlineCode parentName=\"p\">{`isFullWidth`}</inlineCode>{` for that`}</p>\n    <Playground __position={3} __code={'<Box flex={1}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        isFullWidth\\n        onClose={toggle}\\n        position=\\\"top-left\\\"\\n        content={() => (\\n          <Box width={200} height={200} backgroundColor=\\\"#67c6bb\\\" />\\n        )}\\n      >\\n        <Button onPress={toggle} title=\\\"Pop\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      ScrollView,\n      Popover,\n      Button,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flex={1} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} isFullWidth onClose={toggle} position=\"top-left\" content={() => <Box width={200} height={200} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Pop\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport {\n  getPositionerStyles,\n  PositionerStyles,\n} from '../Positioner/Positioner.styles';\n\nexport interface PopoverStyles extends PositionerStyles {\n  popoverStyle: TextStyle;\n}\n\nexport type GetPopoverStyles = (props: {}, theme: Theme) => PopoverStyles;\n\nexport const getPopoverStyles: GetPopoverStyles = (props, theme) => {\n  return {\n    popoverStyle: {\n      backgroundColor: theme.colors.background.content,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    ...getPositionerStyles({}, theme),\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  GetPopoverStyles,\n  getPopoverStyles,\n  PopoverStyles,\n} from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  getStyles?: ReplaceReturnType<GetPopoverStyles, DeepPartial<PopoverStyles>>;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getStyles, ...restProps } = props;\n  const theme = useTheme();\n  const { popoverStyle, modalContainerStyle, positionerStyle } = mergeStyles(\n    getPopoverStyles,\n    getStyles,\n    theme.components.getPopoverStyles,\n  )({}, theme);\n\n  return (\n    <Positioner\n      {...restProps}\n      getStyles={() => ({ modalContainerStyle, positionerStyle })}\n      content={params => <View style={popoverStyle}>{content(params)}</View>}\n    />\n  );\n};\n","export * from './Popover';\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  getFullWidthPositionerArrow,\n  getPositionerArrow,\n} from './getPositionerArrow';\n\nexport const ArrowedPositioned = (props: PositionerProps) => {\n  const { content, isFullWidth } = props;\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      {...props}\n      content={({ position, targetMeasurements }) => {\n        const getPositionerArrowParams = {\n          position,\n          targetMeasurements,\n          theme,\n        };\n        const arrow = isFullWidth\n          ? getFullWidthPositionerArrow(getPositionerArrowParams)\n          : getPositionerArrow(getPositionerArrowParams);\n        return (\n          <>\n            {content}\n            {arrow}\n          </>\n        );\n      }}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetPositionerStyles = (props: {}, theme: Theme) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = (props, theme) => {\n  return {\n    modalContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    positionerStyle: {\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Dimensions, ScaledSize, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface ContentProps {\n  positionerMeasurements: Measurements;\n  targetMeasurements: Measurements;\n  position: Position;\n}\n\nexport interface PositionerProps {\n  onClose?: () => void;\n\n  isFullWidth?: boolean;\n  children: React.ReactNode;\n  content: (props: ContentProps) => React.ReactNode;\n  isVisible?: boolean;\n  position?: Position;\n  targetMeasurements?: Measurements;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\nconst DEFAULT_MARGIN = 24;\nconst DEFAULT_OFFSET = 14;\n\ninterface GetPositionerPositionParams {\n  screenLayout: ScaledSize;\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n  offset: number;\n}\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const {\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        position: POSITION.TOP_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        position: POSITION.TOP_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.LEFT:\n      return {\n        position: POSITION.LEFT,\n\n        left: targetMeasurements.pageX - positionerMeasurements.width - offset,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.RIGHT:\n      return {\n        position: POSITION.RIGHT,\n\n        left: targetMeasurements.pageX + targetMeasurements.width + offset,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        position: POSITION.BOTTOM_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nconst getPositionerFullWidthPosition = (\n  params: GetPositionerPositionParams,\n) => {\n  const {\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = position.replace('-left', '').replace('-right', '');\n\n  switch (newPosition) {\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM,\n      };\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    getStyles,\n    children,\n    content,\n    isVisible,\n    isFullWidth = false,\n    onClose = () => null,\n    position = POSITION.BOTTOM,\n    targetMeasurements,\n  } = props;\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [childrenMeasurements, setChildrenMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const theme = useTheme();\n\n  const { positionerStyle, modalContainerStyle } = mergeStyles(\n    getPositionerStyles,\n    getStyles,\n    theme.components.getPositionerStyles,\n  )({}, theme);\n\n  const screenLayout = Dimensions.get('window');\n\n  const finalTargetMeasurements = targetMeasurements || childrenMeasurements;\n  const hasPositionerMeasurementsMeasured =\n    positionerMeasurements.width !== 0 && positionerMeasurements.height !== 0;\n  const getPositionerPositionParams = {\n    offset: DEFAULT_OFFSET,\n    position,\n    positionerMeasurements,\n    screenLayout,\n    targetMeasurements: finalTargetMeasurements,\n  };\n\n  const {\n    position: correctedPosition,\n    ...positionerPositionStyle\n  } = isFullWidth\n    ? getPositionerFullWidthPosition(getPositionerPositionParams)\n    : getPositionerPosition(getPositionerPositionParams);\n\n  return (\n    <>\n      {targetMeasurements ? (\n        children\n      ) : (\n        <ViewMeasure onMeasure={setChildrenMeasurements}>\n          {children}\n        </ViewMeasure>\n      )}\n      <Modal\n        visible={isVisible}\n        transparent\n        onRequestClose={onClose}\n        shouldLockBodyScroll={false}\n      >\n        <View style={modalContainerStyle}>\n          <ViewMeasure\n            style={{\n              ...positionerStyle,\n              ...positionerPositionStyle,\n              // Hide flash mis-positioned content\n              opacity: hasPositionerMeasurementsMeasured ? 1 : 0,\n            }}\n            onMeasure={setPositionerMeasurements}\n          >\n            {content({\n              position: correctedPosition,\n              positionerMeasurements,\n              targetMeasurements: finalTargetMeasurements,\n            })}\n          </ViewMeasure>\n          <Overlay transparent onPress={onClose} />\n        </View>\n      </Modal>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Position } from '../../constants';\nimport { Measurements } from '../../hooks';\nimport { Theme } from '../../theme';\n\nconst arrowWidth = 11;\nconst commonStyle = {\n  borderColor: 'transparent',\n  borderWidth: 11,\n  height: 0,\n  position: 'absolute',\n  width: 0,\n} as ViewStyle;\n\nexport const TopLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        marginBottom: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        marginBottom: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const LeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: theme.colors.border.default,\n        marginRight: -arrowWidth * 2,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: 'white',\n        marginRight: -arrowWidth * 2 + 1,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const RightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: theme.colors.border.default,\n        left: 0,\n        marginLeft: -arrowWidth * 2,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: 'white',\n        left: 0,\n        marginLeft: -arrowWidth * 2 + 1,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const BottomRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top-left':\n      return (\n        <TopLeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'top':\n      return <TopArrow theme={theme} targetMeasurements={targetMeasurements} />;\n    case 'top-right':\n      return (\n        <TopRightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'left':\n      return (\n        <LeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'right':\n      return (\n        <RightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-right':\n      return (\n        <BottomRightArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <BottomArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-left':\n      return (\n        <BottomLeftArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n\nexport const FullWidthTopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const FullWidthBottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getFullWidthPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top':\n      return (\n        <FullWidthTopArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <FullWidthBottomArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n","export * from './Positioner';\nexport * from './ArrowedPositioner';\n","export interface Intents {\n  danger: 'danger';\n  info: 'info';\n  success: 'success';\n  warning: 'warning';\n}\n\nexport type Intent = keyof Intents;\n\nexport const INTENT: Intents = {\n  danger: 'danger',\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n};\n","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","/**\n * Stacking order contains z-index values that are used through.\n * Note that the Stack component might increase the z-index for certain components.\n */\nexport const StackingOrder = {\n  /**\n   * Used for focused buttons and controls.\n   */\n  FOCUSED: 2,\n\n  /**\n   * Used as the default for the StackingContext.\n   */\n  STACKING_CONTEXT: 5,\n\n  /**\n   * Used as the default for the Positioner.\n   */\n  POSITIONER: 10,\n\n  /**\n   * Used for the Overlay and everything that's inside such as Dialog + SideSheet.\n   */\n  OVERLAY: 20,\n\n  /**\n   * Used for the toasts in the toaster. Appears on top of everything else.\n   */\n  TOASTER: 30,\n};\n","export { StackingOrder } from './StackingOrder';\nexport { Intent, Intents } from './Intent';\nexport * from './Position';\n"],"sourceRoot":""}