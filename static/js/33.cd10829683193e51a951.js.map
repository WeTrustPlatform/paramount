{"version":3,"sources":["webpack:///./src/components/Dialog/ConfirmDialog.tsx","webpack:///./src/components/Dialog/Dialog.mdx","webpack:///./src/components/Dialog/Dialog.styles.ts","webpack:///./src/components/Dialog/Dialog.tsx","webpack:///./src/components/Dialog/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_Button","_Layout","_Typography","_Dialog","_interopRequireDefault","ConfirmDialogHeader","_ref","title","theme","onRequestClose","createElement","Spacing","padding","flexDirection","justifyContent","alignItems","Heading","TouchableOpacity","onPress","Icon","name","size","color","colors","text","default","ConfirmDialogFooter","_ref2","_ref2$color","onConfirm","cancelLabel","confirmLabel","Button","appearance","paddingLeft","ConfirmDialog","withTheme","props","_props$cancelLabel","children","_props$confirmLabel","footer","header","dialogProps","_objectWithoutProperties2","_extends2","_react","_tag","_reactPowerplug","_docz","_","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","parentName","Playground","__position","__code","__scope","Toggle","Dialog","Box","Text","initial","on","toggle","isVisible","useHistory","getStyles","modalContainerStyle","containerStyle","bodyStyle","height","PropsTable","of","Component","getDialogVariables","body","maxHeight","container","backgroundColor","elevation","maxWidth","minWidth","position","zIndex","modalContainer","display","width","getDialogStyles","dialogVariables","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_mergeStyles2","_Modal","_Overlay","_props$onRequestClose","useContext","ThemeContext","_mergeStyles","mergeStyles","Modal","visible","transparent","View","style","Overlay","_ConfirmDialog"],"mappings":"meAAAA,EAAAC,EAAAC,EAAA,kCACAC,EAAAD,EAAA,iDAEAE,EAAAF,EAAA,wBACAG,EAAAH,EAAA,wBACAI,EAAAJ,EAAA,oCAEAK,EAAAL,EAAA,oCACAM,EAAAN,EAAA,wCACAO,EAAAC,EAAAR,EAAA,uCAcMS,EAAsB,SAAAC,GAAA,IAC1BC,EAD0BD,EAC1BC,MACAC,EAF0BF,EAE1BE,MACAC,EAH0BH,EAG1BG,eAH0B,OAK1Bf,EAAAgB,cAACT,EAAAU,QAAD,CACEC,QAAS,EACTC,cAAc,MACdC,eAAe,gBACfC,WAAW,UAEXrB,EAAAgB,cAACR,EAAAc,QAAD,KAAUT,GACVb,EAAAgB,cAACb,EAAAoB,iBAAD,CAAkBC,QAAST,GACzBf,EAAAgB,cAACZ,EAAAqB,KAAD,CAAMC,KAAK,IAAIC,KAAM,GAAIC,MAAOd,EAAMe,OAAOC,KAAKC,aAiBlDC,EAAsB,SAAAC,GAAA,IAAAC,EAAAD,EAC1BL,aAD0B,IAAAM,EAClB,UADkBA,EAE1BnB,EAF0BkB,EAE1BlB,eACAoB,EAH0BF,EAG1BE,UACAC,EAJ0BH,EAI1BG,YACAC,EAL0BJ,EAK1BI,aAL0B,OAO1BrC,EAAAgB,cAACT,EAAAU,QAAD,CAASC,QAAS,EAAGC,cAAc,MAAMC,eAAe,YACtDpB,EAAAgB,cAACV,EAAAgC,OAAD,CAAQC,WAAW,UAAUf,QAAST,EAAgBF,MAAOuB,IAC7DpC,EAAAgB,cAACT,EAAAU,QAAD,CAASuB,YAAa,GACpBxC,EAAAgB,cAACV,EAAAgC,OAAD,CAAQV,MAAOA,EAAOJ,QAASW,EAAWtB,MAAOwB,OAoD1CI,GAAgB,EAAApC,EAAAqC,WA/CH,SAACC,GAA8B,IAAAC,EAYnDD,EAVFP,mBAFqD,IAAAQ,EAEvC,SAFuCA,EAGrDC,EASEF,EATFE,SAHqDC,EAYnDH,EARFN,oBAJqD,IAAAS,EAItC,UAJsCA,EAKrDC,EAOEJ,EAPFI,OACAC,EAMEL,EANFK,OACAjC,EAKE4B,EALF5B,eACAoB,EAIEQ,EAJFR,UACAtB,EAGE8B,EAHF9B,MACAC,EAEE6B,EAFF7B,MACGmC,GAXkD,EAAAC,EAAAnB,SAYnDY,EAZmD,0GAcvD,OACE3C,EAAAgB,cAACP,EAAAsB,SAAD,EAAAoB,EAAApB,SAAA,CACEiB,OACa,OAAXA,EACI,KACAA,GACEhD,EAAAgB,cAACL,EAAD,CACEG,MAAOA,EACPC,eAAgBA,EAChBF,MAAOA,IAIjBkC,OACa,OAAXA,EACI,KACAA,GACE/C,EAAAgB,cAACgB,EAAD,CACEjB,eAAgBA,EAChBoB,UAAWA,EACXC,YAAaA,EACbC,aAAcA,IAIxBtB,eAAgBA,GACZkC,GAEJjD,EAAAgB,cAACT,EAAAU,QAAD,CAASC,QAAS,GAAI2B,8BAMbJ,2mBCnHbW,EAAA1C,EAAAR,EAAA,kCACAmD,EAAAnD,EAAA,4CACAoD,EAAApD,EAAA,8DACFqD,EAAArD,EAAA,uCACAsD,EAAAtD,EAAA,oCACAI,EAAAJ,EAAA,oCACAK,EAAAL,EAAA,oCACAM,EAAAN,EAAA,wCAKqBuD,cACnB,SAAAA,EAAYd,GAAO,IAAAe,EAAA,SAAAC,EAAA5B,SAAA6B,KAAAH,IACjBC,GAAA,EAAAG,EAAA9B,SAAA6B,MAAA,EAAAE,EAAA/B,SAAA0B,GAAAM,KAAAH,KAAMjB,KACDqB,OAAS,KAFGN,2EAIV,IAAAO,EAC0BL,KAAKjB,MAA9BuB,EADDD,EACCC,WAAevB,GADhB,EAAAO,EAAAnB,SAAAkC,EAAA,gBAGP,OAAOb,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CACEzC,KAAK,UAELwC,WAAYA,GAEzBd,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CAAQzC,KAAK,KAAKwC,WAAYA,EAAYvB,MAAO,CAACyB,GAAK,WAAvD,UACAhB,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CAAQzC,KAAK,IAAIwC,WAAYA,GAA7B,yJAAmMd,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CAAQzC,KAAK,aAAawC,WAAYA,EAAYG,WAAW,KAA7D,iBAAnM,UACAjB,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CAAQzC,KAAK,KAAKwC,WAAYA,EAAYvB,MAAO,CAACyB,GAAK,UAAvD,SACAhB,EAAArB,QAAAf,cAACuC,EAAAe,WAAD,CAAYC,WAAY,EAAGC,OAAQ,olBAAulBC,QAAS,CAAC9B,MAAOiB,KAAOA,KAAKjB,MAAQA,EAAM+B,gBAAOC,gBAAOrC,gBAAOsC,UAAIC,cAC5rBzB,EAAArB,QAAAf,cAACsC,EAAAoB,OAAD,CAAQI,SAAS,GACd,SAAAlE,GAAA,IAAGmE,EAAHnE,EAAGmE,GAAIC,EAAPpE,EAAOoE,OAAP,OACC5B,EAAArB,QAAAf,cAACT,EAAAqE,IAAD,KACExB,EAAArB,QAAAf,cAACwC,EAAAmB,OAAD,CACE3B,OAAQI,EAAArB,QAAAf,cAACR,EAAAqE,KAAD,eACR9B,OAAQK,EAAArB,QAAAf,cAACR,EAAAqE,KAAD,eACRI,UAAWF,EACXhE,eAAgBiE,EAChBE,YAAY,EACZC,UAAW,SAACxC,EAAO7B,GAAR,MAAmB,CAC5BsE,oBAAqB,GACrBC,eAAgB,GAChBC,UAAW,MAGblC,EAAArB,QAAAf,cAACT,EAAAqE,IAAD,CAAKW,OAAQ,MACXnC,EAAArB,QAAAf,cAACR,EAAAqE,KAAD,wCAGJzB,EAAArB,QAAAf,cAACV,EAAAgC,OAAD,CAAQd,QAASwD,EAAQnE,MAAM,oBAKvCuC,EAAArB,QAAAf,cAACqC,EAAAc,OAAD,CAAQzC,KAAK,KAAKwC,WAAYA,EAAYvB,MAAO,CAACyB,GAAK,iBAAvD,gBACAhB,EAAArB,QAAAf,cAACuC,EAAAiC,WAAD,CAAYC,GAAId,mBA1CwB3E,UAAM0F,gLCHvC,IAAMC,EAAqB,SAAC7E,GACjC,MAAO,CACL8E,KAAM,CACJC,UAAW,KAEbC,UAAW,CACTC,gBAAiB,QACjBC,UAAW,EACXC,SAAU,IACVC,SAAU,IACVC,SAAU,WACVC,OAAQ,GAEVC,eAAgB,CACdhF,WAAY,SACZiF,QAAS,OACTf,OAAQ,OACRnE,eAAgB,SAChBmF,MAAO,iCAYN,IAAMC,EAAmC,SAAA1F,GAC9C,IAAM2F,EA9BC,CACLb,KAAM,CACJC,UAAW,KAEbC,UAAW,CACTC,gBAAiB,QACjBC,UAAW,EACXC,SAAU,IACVC,SAAU,IACVC,SAAU,WACVC,OAAQ,GAEVC,eAAgB,CACdhF,WAAY,SACZiF,QAAS,OACTf,OAAQ,OACRnE,eAAgB,SAChBmF,MAAO,SAeX,MAAO,CACLjB,UAAWmB,EAAgBb,KAC3BP,eAAgBoB,EAAgBX,UAChCV,oBAAqBqB,EAAgBJ,qCAGzC,IAEIV,EAAmBe,YAAc,qBAEjCf,EAAmBgB,aAAe,CAAEC,YAAe,GAAIF,YAAe,qBAAsB/D,MAAS,CAAEd,OAAU,CAAEgF,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,SAAUoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,WAAcsF,MAAS,CAAEH,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,QAASoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,UAAauF,aAAgB,CAAEJ,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,eAAgBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoBwF,YAAe,CAAEL,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,cAAeoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,gBAAmByF,aAAgB,CAAEN,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,eAAgBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB0F,eAAkB,CAAEP,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,iBAAkBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,mBAAsB2F,UAAa,CAAER,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,YAAaoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,cAAiB4F,WAAc,CAAET,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,aAAcoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,gBAAmB6F,gBAAmB,CAAEV,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,kBAAmBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB8F,eAAkB,CAAEX,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,iBAAkBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB+F,oBAAuB,CAAEZ,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,sBAAuBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,mBAE3gD,qBAA5BgG,0BAEPA,wBAAwB,6DAA+D,CAAEC,WAAYhC,EAAmBgB,aAAcjF,KAAM,qBAAsBkG,KAAM,8DAEhL,MAAOC,IAA2C,IAE9CrB,EAAgBE,YAAc,kBAE9BF,EAAgBG,aAAe,CAAEC,YAAe,GAAIF,YAAe,kBAAmB/D,MAAS,CAAEd,OAAU,CAAEgF,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,SAAUoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,WAAcsF,MAAS,CAAEH,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,QAASoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,UAAauF,aAAgB,CAAEJ,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,eAAgBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoBwF,YAAe,CAAEL,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,cAAeoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,gBAAmByF,aAAgB,CAAEN,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,eAAgBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB0F,eAAkB,CAAEP,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,iBAAkBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,mBAAsB2F,UAAa,CAAER,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,YAAaoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,cAAiB4F,WAAc,CAAET,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,aAAcoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,gBAAmB6F,gBAAmB,CAAEV,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,kBAAmBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB8F,eAAkB,CAAEX,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,iBAAkBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,iBAAoB+F,oBAAuB,CAAEZ,aAAgB,KAAMD,YAAe,GAAIlF,KAAQ,sBAAuBoF,UAAY,EAAMC,KAAQ,CAAErF,KAAQ,mBAErgD,qBAA5BgG,0BAEPA,wBAAwB,0DAA4D,CAAEC,WAAYnB,EAAgBG,aAAcjF,KAAM,kBAAmBkG,KAAM,2DAEvK,MAAOC,iNCrEP,IAAA7H,EAAAC,EAAAC,EAAA,kCACAC,EAAAD,EAAA,iDAGAG,EAAAH,EAAA,wBACA4H,EAAA5H,EAAA,8BACA6H,EAAA7H,EAAA,mCACA8H,EAAA9H,EAAA,qCACAO,EAAAP,EAAA,4CA8DayE,EApCM,SAAChC,GAAuB,IAEvCE,EAOEF,EAPFE,SACAE,EAMEJ,EANFI,OACAC,EAKEL,EALFK,OACAiC,EAIEtC,EAJFsC,UALuCgD,EASrCtF,EAHF5B,sBANuC,IAAAkH,EAMtB,kBAAM,MANgBA,EAOvC9C,EAEExC,EAFFwC,UACAD,EACEvC,EADFuC,WAEIpE,EAAQd,EAAMkI,WAAWC,gBAVUC,GAYkB,EAAAN,EAAAO,aACzD7B,kBACArB,EAFyD,CAGzDrE,GAHMsE,EAZiCgD,EAYjChD,oBAAqBC,EAZY+C,EAYZ/C,eAAgBC,EAZJ8C,EAYI9C,UAK7C,OACEtF,EAAAgB,cAAC+G,EAAAO,MAAD,CACEpD,WAAYA,EACZqD,QAAStD,EACTuD,aAAW,EACXzH,eAAgBA,GAEhBf,EAAAgB,cAACb,EAAAsI,KAAD,CAAMC,MAAOtD,GACXpF,EAAAgB,cAACb,EAAAsI,KAAD,CAAMC,MAAOrD,GACVrC,EACDhD,EAAAgB,cAACb,EAAAsI,KAAD,CAAMC,MAAOpD,GAAYzC,GACxBE,GAEH/C,EAAAgB,cAACgH,EAAAW,QAAD,CAASnH,QAAST,wBAQX4D,cACf,IAEIA,EAAO+B,YAAc,SAErB/B,EAAOgC,aAAe,CAAEC,YAAe,GAAIF,YAAe,SAAU/D,MAAS,CAAEuC,WAAc,CAAE2B,aAAgB,KAAMD,YAAe,6BAA8BlF,KAAQ,aAAcoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,YAAeuD,UAAa,CAAE4B,aAAgB,KAAMD,YAAe,wBAAyBlF,KAAQ,YAAaoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,YAAeX,eAAkB,CAAE8F,aAAgB,KAAMD,YAAe,yGAA0GlF,KAAQ,iBAAkBoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,eAAkBsB,OAAU,CAAE6D,aAAgB,KAAMD,YAAe,uGAAwGlF,KAAQ,SAAUoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,cAAiBqB,OAAU,CAAE8D,aAAgB,KAAMD,YAAe,uGAAwGlF,KAAQ,SAAUoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,cAAiByD,UAAa,CAAE0B,aAAgB,KAAMD,YAAe,+BAAgClF,KAAQ,YAAaoF,UAAY,EAAOC,KAAQ,CAAErF,KAAQ,oEAE/pC,qBAA5BgG,0BAEPA,wBAAwB,2CAA6C,CAAEC,WAAYhD,EAAOgC,aAAcjF,KAAM,SAAUkG,KAAM,4CAEtI,MAAOC,wiBCnFP,IAAApH,EAAAR,EAAAC,EAAA,uCACA0I,EAAA3I,EAAAC,EAAA","file":"static/js/33.959dee8f.js","sourcesContent":["import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { Button } from '../Button';\nimport { ButtonColor } from '../Button/Button.styles';\nimport { Spacing } from '../Layout';\nimport { Heading } from '../Typography';\nimport Dialog, { DialogProps } from './Dialog';\n\nexport interface ConfirmDialogProps\n  extends DialogProps,\n    ConfirmDialogHeaderProps,\n    ConfirmDialogFooterProps {}\n\nexport interface ConfirmDialogHeaderProps {\n  /** Title displayed in the header */\n  title?: string;\n  onRequestClose?: () => void;\n  theme: Theme;\n}\n\nconst ConfirmDialogHeader = ({\n  title,\n  theme,\n  onRequestClose,\n}: ConfirmDialogHeaderProps) => (\n  <Spacing\n    padding={2}\n    flexDirection=\"row\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\n    <Heading>{title}</Heading>\n    <TouchableOpacity onPress={onRequestClose}>\n      <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n    </TouchableOpacity>\n  </Spacing>\n);\n\nexport interface ConfirmDialogFooterProps {\n  color?: ButtonColor;\n  /** Label for cancel button */\n  cancelLabel?: string;\n  /** Label for confirm button */\n  confirmLabel?: string;\n  /** Handler for confirm button */\n  onConfirm?: () => void;\n  /** Handler for cancel button */\n  onRequestClose?: () => void;\n}\n\nconst ConfirmDialogFooter = ({\n  color = 'primary',\n  onRequestClose,\n  onConfirm,\n  cancelLabel,\n  confirmLabel,\n}: ConfirmDialogFooterProps) => (\n  <Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n    <Button appearance=\"minimal\" onPress={onRequestClose} title={cancelLabel} />\n    <Spacing paddingLeft={2}>\n      <Button color={color} onPress={onConfirm} title={confirmLabel} />\n    </Spacing>\n  </Spacing>\n);\n\nconst ConfirmDialogBase = (props: ConfirmDialogProps) => {\n  const {\n    cancelLabel = 'Cancel',\n    children,\n    confirmLabel = 'Confirm',\n    footer,\n    header,\n    onRequestClose,\n    onConfirm,\n    title,\n    theme,\n    ...dialogProps\n  } = props;\n\n  return (\n    <Dialog\n      header={\n        header === null\n          ? null\n          : header || (\n              <ConfirmDialogHeader\n                theme={theme}\n                onRequestClose={onRequestClose}\n                title={title}\n              />\n            )\n      }\n      footer={\n        footer === null\n          ? null\n          : footer || (\n              <ConfirmDialogFooter\n                onRequestClose={onRequestClose}\n                onConfirm={onConfirm}\n                cancelLabel={cancelLabel}\n                confirmLabel={confirmLabel}\n              />\n            )\n      }\n      onRequestClose={onRequestClose}\n      {...dialogProps}\n    >\n      <Spacing padding={2}>{children}</Spacing>\n    </Dialog>\n  );\n};\n\nexport const ConfirmDialog = withTheme(ConfirmDialogBase);\nexport default ConfirmDialog;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Toggle } from 'react-powerplug';\nimport { Playground, PropsTable } from 'docz';\nimport { Dialog } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"dialog\"}}>{`Dialog`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control. For a more out-of-box usage, you can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfirmDialog`}</MDXTag>{` below`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <Dialog\\n        header={<Text>Header</Text>}\\n        footer={<Text>Footer</Text>}\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        useHistory={false}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the dialog</Text>\\n        </Box>\\n      </Dialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,Dialog,Button,Box,Text}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <Dialog\n          header={<Text>Header</Text>}\n          footer={<Text>Footer</Text>}\n          isVisible={on}\n          onRequestClose={toggle}\n          useHistory={false}\n          getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {},\n          })}\n        >\n          <Box height={1800}>\n            <Text>Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle} title=\"Open dialog\" />\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"dialog-props\"}}>{`Dialog Props`}</MDXTag>\n<PropsTable of={Dialog} />\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDialogVariables.displayName = \"getDialogVariables\";\n    // @ts-ignore\n    getDialogVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogVariables\"] = { docgenInfo: getDialogVariables.__docgenInfo, name: \"getDialogVariables\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDialogStyles.displayName = \"getDialogStyles\";\n    // @ts-ignore\n    getDialogStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogStyles\"] = { docgenInfo: getDialogStyles.__docgenInfo, name: \"getDialogStyles\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nconst DialogBase = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\n\nexport const Dialog = DialogBase;\n\nexport default Dialog;\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/Dialog.tsx#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Dialog, DialogProps } from './Dialog';\nexport { default as ConfirmDialog, ConfirmDialogProps } from './ConfirmDialog';\n"],"sourceRoot":""}