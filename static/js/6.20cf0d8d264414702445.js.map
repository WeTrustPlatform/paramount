{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Inputs/PhoneNumberInput.styles.ts","webpack:///./src/components/Inputs/PhoneNumberInput.tsx","webpack:///./src/components/ListItem/ListItem.styles.ts","webpack:///./src/components/ListItem/ListItem.tsx","webpack:///./src/components/ListItem/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","_interopRequireDefault","withTheme","props","theme","createElement","default","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","Button","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","directionToFlexDirectionMap","horizontal","vertical","children","_props$direction","direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","cloneElement","borderBottomWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftWidth","Box","_ButtonGroup","_BackButton","_ref","containerStyle","_countriesList","_ListItem","_Modal","_PhoneNumberInput","_TextInput","countries","Object","keys","countryList","countryCode","key","PhoneNumberInputBase","_props$countryCode","phoneNumber","onChangeCountryCode","onChangePhoneNumber","header","innerRef","_props$useHistory","useHistory","textInputProps","_React$useState","useState","_React$useState2","_slicedToArray2","isModalOpen","setIsModalOpen","useContext","ThemeContext","getPhoneNumberInputStyles","dark","concat","phone","CloseableModal","visible","onRequestClose","onClose","FlatList","ListHeaderComponent","keyExtractor","item","getItemLayout","data","length","offset","renderItem","country","ListItem","label","event","preventDefault","ref","inputStyle","keyboardType","value","onChangeText","PhoneNumberInput","forwardRef","ForwardRefExoticComponent","getListItemVariables","base","focusBackgroundColor","selected","wrapper","isSelected","selectListVariables","sizeStyles","imageWrapperStyle","marginRight","leftWrapperStyle","textWrapperStyle","wrapperStyle","_props$rightIcon","rightIcon","leftIcon","getListItemStyles","avatarProps","accessibilityLabel","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","min","nextDot","timing","duration","toValue","start","_this$props","dots","o","marginLeft","opacity","width","Component","defaultProps","_LoadingDots","_","_ModalContent","rightSide","modalProps","Modal","TouchableOpacity","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModal","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","PureComponent","_ref$useHistory","HistoryModalweb","_HistoryModal","_focusTrap","ReactDOM","ModalBase","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","bottom","left","position","right","top","zIndex","ModalContent","maxWidth","_FormModal","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/6.6ec12600.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { withTheme } from '../../theme';\nimport Button, { ButtonProps } from './Button';\n\nconst BackButton = (props: ButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nconst ButtonBase = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonBase);\nexport default Button;\n","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\n","export { default as Button, ButtonProps } from './Button';\nexport { default as ButtonGroup, ButtonGroupProps } from './ButtonGroup';\nexport { default as BackButton } from './BackButton';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PhoneNumberInputSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PhoneNumberInputSize = keyof PhoneNumberInputSizes;\n\nexport interface PhoneNumberInputStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface PhoneNumberInputStylesProps {\n  size: PhoneNumberInputSize;\n}\n\nexport type GetPhoneNumberInputStyles = (\n  textInputStylesProps: PhoneNumberInputStylesProps,\n  theme: Theme,\n) => PhoneNumberInputStyles;\n\nexport const getPhoneNumberInputStyles: GetPhoneNumberInputStyles = (\n  { size },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n  };\n};\n","import { countries as countryList } from 'countries-list';\nimport * as React from 'react';\nimport { FlatList, TextInput as RNTextInput, View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button } from '../Button';\nimport { ListItem } from '../ListItem';\nimport { CloseableModal } from '../Modal';\nimport {\n  getPhoneNumberInputStyles,\n  PhoneNumberInputStyles,\n} from './PhoneNumberInput.styles';\nimport TextInput, { TextInputProps } from './TextInput';\nimport { GetTextInputStyles, TextInputStyles } from './TextInput.styles';\n\nexport interface PhoneNumberInputProps\n  extends Omit<TextInputProps, 'getStyles'> {\n  countryCode?: string;\n  onChangeCountryCode?: (countryCode: string) => void;\n  phoneNumber?: string;\n  onChangePhoneNumber?: (phoneNumber: string) => void;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactElement<any>;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles & PhoneNumberInputStyles>\n  >;\n}\n\nconst countries = (() => {\n  return Object.keys(countryList).map(countryCode => ({\n    countryCode,\n    key: countryCode,\n    ...countryList[countryCode],\n  }));\n})();\n\nconst PhoneNumberInputBase = (props: PhoneNumberInputProps) => {\n  const {\n    countryCode = 'US',\n    phoneNumber,\n    onChangeCountryCode,\n    onChangePhoneNumber,\n    header,\n    getStyles,\n    innerRef,\n    useHistory = false,\n    ...textInputProps\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const theme = React.useContext(ThemeContext);\n\n  const { containerStyle } = mergeStyles(getPhoneNumberInputStyles, getStyles)(\n    {},\n    theme,\n  );\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        onPress={() => setIsModalOpen(true)}\n        appearance=\"outline\"\n        getStyles={() => ({\n          buttonStyle: {\n            borderBottomRightRadius: 0,\n            borderColor: theme.colors.border.dark,\n            borderTopRightRadius: 0,\n            borderWidth: 1,\n          },\n        })}\n        iconAfter={\n          <Icon\n            size={20}\n            color={theme.colors.text.default}\n            name=\"chevron-down\"\n          />\n        }\n        title={`+${countryList[countryCode].phone}`}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        <FlatList\n          ListHeaderComponent={header}\n          keyExtractor={item => item.key}\n          getItemLayout={(data, index) => ({\n            index,\n            length: theme.controlHeights.medium,\n            offset: theme.controlHeights.medium * index,\n          })}\n          data={countries}\n          renderItem={({ item: country }) => {\n            return (\n              <ListItem\n                key={country.countryCode}\n                label={country.name}\n                onPress={event => {\n                  event.preventDefault();\n                  if (onChangeCountryCode) {\n                    onChangeCountryCode(country.countryCode);\n                  }\n                  setIsModalOpen(false);\n                }}\n              />\n            );\n          }}\n        />\n      </CloseableModal>\n      <TextInput\n        ref={innerRef}\n        name=\"phone\"\n        getStyles={() => ({\n          inputStyle: {\n            borderBottomLeftRadius: 0,\n            borderTopLeftRadius: 0,\n          },\n        })}\n        keyboardType=\"phone-pad\"\n        value={phoneNumber}\n        onChangeText={onChangePhoneNumber}\n        {...textInputProps}\n      />\n    </View>\n  );\n};\n\nexport const PhoneNumberInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => <PhoneNumberInputBase {...props} innerRef={ref} />,\n);\n\nexport default PhoneNumberInput;\ntry {\n    // @ts-ignore\n    PhoneNumberInput.displayName = \"PhoneNumberInput\";\n    // @ts-ignore\n    PhoneNumberInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"PhoneNumberInput\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/PhoneNumberInput.tsx#PhoneNumberInput\"] = { docgenInfo: PhoneNumberInput.__docgenInfo, name: \"PhoneNumberInput\", path: \"src/components/Inputs/PhoneNumberInput.tsx#PhoneNumberInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<TextInput>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Inputs/PhoneNumberInput.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Inputs/PhoneNumberInput.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\ntry {\n    // @ts-ignore\n    getListItemVariables.displayName = \"getListItemVariables\";\n    // @ts-ignore\n    getListItemVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getListItemVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.styles.ts#getListItemVariables\"] = { docgenInfo: getListItemVariables.__docgenInfo, name: \"getListItemVariables\", path: \"src/components/ListItem/ListItem.styles.ts#getListItemVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nconst ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport default ListItem;\ntry {\n    // @ts-ignore\n    ListItem.displayName = \"ListItem\";\n    // @ts-ignore\n    ListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.tsx#ListItem\"] = { docgenInfo: ListItem.__docgenInfo, name: \"ListItem\", path: \"src/components/ListItem/ListItem.tsx#ListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as ListItem, ListItemProps } from './ListItem';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport { Box } from '../Layout';\nimport ModalContent from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nconst CloseableModalBase = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport const CloseableModal = CloseableModalBase;\n\nexport default CloseableModal;\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport CloseableModal, { CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nconst FormModalBase = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n\nexport const FormModal = FormModalBase;\n\nexport default FormModal;\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport ModalBase from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModal extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport default ({ useHistory = false, ...props }: HistoryModalProps) => {\n  if (useHistory) return <HistoryModal {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModalweb.displayName = \"HistoryModalweb\";\n    // @ts-ignore\n    HistoryModalweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModalweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\"] = { docgenInfo: HistoryModalweb.__docgenInfo, name: \"HistoryModalweb\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as HistoryModal, HistoryModalProps } from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nclass ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n\nexport default ModalBase;\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nconst ModalContentBase = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const ModalContent = ModalContentBase;\n\nexport default ModalContent;\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\nexport { default as ModalBase, ModalBaseProps } from './ModalBase';\nexport { default as HistoryModal, HistoryModalProps } from './HistoryModal';\nexport { default as FormModal, FormModalProps } from './FormModal';\nexport {\n  default as CloseableModal,\n  CloseableModalProps,\n} from './CloseableModal';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}