{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Paragraph","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_6__","size","of","className","isMDXComponent","getParagraphSize","paragraphSizes","fontSize","getParagraphStyles","_ref$color","_ref$size","_ref$align","align","weight","sizeStyle","paragraphStyle","objectSpread","getTextColor","text","fontFamily","fontFamilies","fontWeight","getFontWeight","fontWeights","marginBottom","textSizes","medium","marginTop","textAlign","getStyles","textProps","objectWithoutProperties","mergeStyles","react","Text","esm_extends","accessibilityLabel","textColors","textColor","getTextSize","getTextStyles","_ref$isItalic","isItalic","transform","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","large","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","xsmall","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","React","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/25.9c64106e.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Paragraph } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"paragraph\"\n    }}>{`Paragraph`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"column\\\">\\n  <Paragraph size=\\\"small\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"medium\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"large\\\">Lorem ipsum dolar set amet</Paragraph>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Paragraph\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Paragraph size=\"small\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"medium\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"large\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Paragraph} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h3>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ParagraphStyles {\n  textStyle: ParagraphStyle;\n}\n\ngetStyles={(ParagraphProps, Theme) => ParagraphStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Paragraph paragraphStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { ParagraphSize, ParagraphSizes, Theme } from '../../theme/Theme';\nimport { ParagraphProps } from './Paragraph';\nimport { getFontWeight, getTextColor } from './Text.styles';\n\nexport interface ParagraphStyles {\n  paragraphStyle: TextStyle;\n}\n\nexport type GetParagraphStyles = (\n  props: ParagraphProps,\n  theme: Theme,\n) => ParagraphStyles;\n\nexport const getParagraphSize = (paragraphSizes: ParagraphSizes) => (\n  size: ParagraphSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetParagraphSize = paragraphSizes[size] as TextStyle;\n\n  return presetParagraphSize || { fontSize: size };\n};\n\nexport const getParagraphStyles: GetParagraphStyles = (\n  { color = 'default', size = 'medium', align = 'left', weight },\n  theme,\n) => {\n  const sizeStyle = getParagraphSize(theme.paragraphSizes)(size);\n\n  return {\n    paragraphStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      marginBottom: theme.textSizes.medium.fontSize,\n      marginTop: theme.textSizes.medium.fontSize,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetParagraphStyles,\n  getParagraphStyles,\n  ParagraphStyles,\n} from './Paragraph.styles';\nimport { TextAlign } from './types';\n\n// @ts-ignore: need to override for web purposes\nexport interface ParagraphProps extends TextProps {\n  /**\n   * Size of the paragraph.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the paragraph.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the paragraph.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Weight of the paragraph.\n   * @default paragraphSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<\n    GetParagraphStyles,\n    DeepPartial<ParagraphStyles>\n  >;\n}\n\nexport const Paragraph = (props: ParagraphProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { paragraphStyle } = mergeStyles(\n    getParagraphStyles,\n    getStyles,\n    theme.components.getParagraphStyles,\n  )(props, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      style={paragraphStyle}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}