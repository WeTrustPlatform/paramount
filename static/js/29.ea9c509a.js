(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"./src/components/SelectList/SelectList.mdx":function(e,t,l){var s=l("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=u;var a=s(l("./node_modules/@babel/runtime/helpers/extends.js")),i=s(l("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),m=(s(l("./node_modules/react/index.js")),l("./node_modules/@mdx-js/react/dist/index.es.js")),n=l("./node_modules/docz/dist/index.esm.js"),c=l("./src/components/index.ts"),d={},o="wrapper";function u(e){var t=e.components,l=(0,i.default)(e,["components"]);return(0,m.mdx)(o,(0,a.default)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"selectlist"},"SelectList"),(0,m.mdx)("p",null,"SelectList that supports single value or multiple values selected at the same item. ",(0,m.mdx)("inlineCode",{parentName:"p"},"SelectList")," is a compound component, which means that its children can be any component, and it will implicitly inject props such as ",(0,m.mdx)("inlineCode",{parentName:"p"},"isSelected")," or ",(0,m.mdx)("inlineCode",{parentName:"p"},"onSelect")," to them.\n",(0,m.mdx)("inlineCode",{parentName:"p"},"SelectListItem")," composes ",(0,m.mdx)("inlineCode",{parentName:"p"},"ListItem")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"SelectList")," composes ",(0,m.mdx)("inlineCode",{parentName:"p"},"FlatList")),(0,m.mdx)("h3",{id:"usage"},"Usage"),(0,m.mdx)(n.Playground,{__position:0,__code:'<SelectList\n  isMulti={false} // Single select\n  selectedValue="c"\n  onValueChange={(newValue, itemIndex) => {\n    console.log(newValue, itemIndex)\n  }}\n>\n  <SelectListItem\n    label="Usage"\n    value="c"\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\n    // isSelected\n    // onSelect\n    // index\n  />\n</SelectList>',__scope:{props:this?this.props:l,Playground:n.Playground,Props:n.Props,Box:c.Box,SelectList:c.SelectList,SelectListItem:c.SelectListItem,State:c.State},mdxType:"Playground"},(0,m.mdx)(c.SelectList,{isMulti:!1,selectedValue:"c",onValueChange:function(e,t){console.log(e,t)},mdxType:"SelectList"},(0,m.mdx)(c.SelectListItem,{label:"Usage",value:"c",mdxType:"SelectListItem"}))),(0,m.mdx)("h3",{id:"multi-select"},"Multi select"),(0,m.mdx)(n.Playground,{__position:1,__code:'<State initial={{ selectedValue: [\'js\', \'go\'] }}>\n  {({ state, setState }) => (\n    <SelectList\n      isMulti\n      selectedValue={state.selectedValue}\n      onValueChange={(newValue, itemIndex) => {\n        setState({ selectedValue: newValue })\n      }}\n    >\n      <SelectListItem label="C" value="c" />\n      <SelectListItem label="C#" value="c#" />\n      <SelectListItem label="C++" value="c++" />\n      <SelectListItem label="CSS" value="css" />\n      <SelectListItem label="Elixir" value="elixir" />\n      <SelectListItem label="Elm" value="elm" />\n      <SelectListItem label="Erlang" value="erlang" />\n      <SelectListItem label="Go" value="go" />\n      <SelectListItem label="Haskell" value="haskell" />\n      <SelectListItem label="HTML" value="html" />\n      <SelectListItem label="Java" value="java" />\n      <SelectListItem label="JavaScript" value="js" />\n      <SelectListItem label="Lua" value="lua" />\n      <SelectListItem label="Python" value="python" />\n      <SelectListItem label="R" value="r" />\n      <SelectListItem label="Ruby" value="ruby" />\n      <SelectListItem label="Rust" value="rust" />\n      <SelectListItem label="Switft" value="swift" />\n      <SelectListItem label="Typescript" value="typescript" />\n    </SelectList>\n  )}\n</State>',__scope:{props:this?this.props:l,Playground:n.Playground,Props:n.Props,Box:c.Box,SelectList:c.SelectList,SelectListItem:c.SelectListItem,State:c.State},mdxType:"Playground"},(0,m.mdx)(c.State,{initial:{selectedValue:["js","go"]},mdxType:"State"},function(e){var t=e.state,l=e.setState;return(0,m.mdx)(c.SelectList,{isMulti:!0,selectedValue:t.selectedValue,onValueChange:function(e,t){l({selectedValue:e})},mdxType:"SelectList"},(0,m.mdx)(c.SelectListItem,{label:"C",value:"c",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"C#",value:"c#",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"C++",value:"c++",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"CSS",value:"css",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Elixir",value:"elixir",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Elm",value:"elm",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Erlang",value:"erlang",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Go",value:"go",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Haskell",value:"haskell",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"HTML",value:"html",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Java",value:"java",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"JavaScript",value:"js",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Lua",value:"lua",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Python",value:"python",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"R",value:"r",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Ruby",value:"ruby",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Rust",value:"rust",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Switft",value:"swift",mdxType:"SelectListItem"}),(0,m.mdx)(c.SelectListItem,{label:"Typescript",value:"typescript",mdxType:"SelectListItem"}))})),(0,m.mdx)("h3",{id:"props"},"Props"),(0,m.mdx)(n.Props,{of:c.SelectList,mdxType:"Props"}))}u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/SelectList/SelectList.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=29.31c10c6e2dd30b5986cb.js.map