{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","FormField","TextInput","___WEBPACK_IMPORTED_MODULE_5__","label","description","error","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","children","_props$labelPosition","labelPosition","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","Label","_getOverrides4","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4__","position","style","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","color","paddingBottom","getStyle","_props$size","size","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledInput","Input","inputProps","StyledLeftIconWrapper","LeftIconWrapper","leftIconWrapperProps","StyledLeftIcon","LeftIcon","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","hasLeftIcon","hasRightIcon","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","backgroundColor","colors","background","greyLight","content","borderColor","border","borderWidth","text","muted","width","danger","paddingVertical","editable","name","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/16.599f2f09.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormField, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"formfield\"\n    }}>{`FormField`}</h1>\n    <p>{`Enriches a field in a form to contain label, description or error messages.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<FormField\\n  label=\\\"Label\\\"\\n  description=\\\"Description for the field\\\"\\n  error=\\\"Error message\\\"\\n>\\n  <TextInput />\\n</FormField>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormField,\n      TextInput\n    }} mdxType=\"Playground\">\n  <FormField label=\"Label\" description=\"Description for the field\" error=\"Error message\" mdxType=\"FormField\">\n    <TextInput mdxType=\"TextInput\" />\n  </FormField>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormField} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Label, LabelProps, Text, TextProps } from '../Typography';\n\ntype FormFieldLabelPosition = 'top' | 'left' | 'right';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: FormFieldLabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = 'top',\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR label={label} position={labelPosition} {...labelRProps}>\n        {children}\n      </LabelR>\n      <Description description={description} {...descriptionProps} />\n      <ErrorR error={error} {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        getStyle(props, style),\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[getStyle(props, style)]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}