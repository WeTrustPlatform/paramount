{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","paddingRight","height","justifyContent","___WEBPACK_IMPORTED_MODULE_6__","title","appearance","isLoading","of","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","react","alignItems","map","index","key","borderRadius","marginLeft","marginRight","width","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","_props$onPress","onPress","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","Dots_Dots","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/22.da1d9a80.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component to trigger an action`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}