{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","color","size","theme","useTheme","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","colors","text","__source","fileName","lineNumber","getTabStyles","shouldStretch","isActive","buttonStyle","backgroundColor","paddingLeft","paddingRight","containerStyle","objectSpread","background","greyDefault","padding","flex","focusColor","greyLight","textStyle","primary","muted","Tab","_props$isActive","getStyles","index","onPress","_props$shouldStretch","buttonProps","objectWithoutProperties","_mergeStyles","mergeStyles","components","react","View","style","_jsxFileName","Button","esm_extends","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Tabs","___WEBPACK_IMPORTED_MODULE_6__","activeTabIndex","_ref2","___WEBPACK_IMPORTED_MODULE_7__","onChange","Array","fill","map","v","i","___WEBPACK_IMPORTED_MODULE_8__","key","title","of","isMDXComponent","getTabsStyles","borderRadius","controlBorderRadius","medium","flexDirection","justifyContent","data","child","tabs","toArray","tabProps"],"mappings":"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","file":"static/js/31.af7f1c2c.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface GetTabStyleProps {\n  shouldStretch: boolean;\n  isActive: boolean;\n}\n\nexport type GetTabStyles = (props: GetTabStyleProps, theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = (\n  { shouldStretch, isActive },\n  theme,\n) => {\n  return {\n    buttonStyle: {\n      backgroundColor: isActive ? 'white' : 'transparent',\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      padding: 2,\n      ...(shouldStretch\n        ? {\n            flex: 1,\n          }\n        : {}),\n    },\n    focusColor: theme.colors.background.greyLight,\n    textStyle: {\n      color: isActive ? theme.colors.text.primary : theme.colors.text.muted,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { GetTabStyles, getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps\n  extends Omit<Omit<ButtonProps, 'onPress'>, 'getStyles'> {\n  index?: number;\n  isActive?: boolean;\n  shouldStretch?: boolean;\n  getStyles?: ReplaceReturnType<GetTabStyles, DeepPartial<TabStyles>>;\n  onPress?: (index: number) => void;\n}\n\nexport const Tab = (props: TabProps) => {\n  const {\n    isActive = false,\n    getStyles,\n    index,\n    onPress,\n    shouldStretch = true,\n    ...buttonProps\n  } = props;\n  const theme = useTheme();\n  const { containerStyle, buttonStyle, textStyle, focusColor } = mergeStyles(\n    getTabStyles,\n    getStyles,\n    theme.components.getTabStyles,\n  )({ isActive, shouldStretch }, theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        getStyles={() => ({ buttonStyle, focusColor, textStyle })}\n        onPress={() => {\n          if (index && onPress) onPress(index);\n        }}\n        {...buttonProps}\n      />\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Icon, State, Tabs, Tab } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTabIndex={state.activeTabIndex}\\n      onChange={index => setState({ activeTabIndex: index })}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n      })}\\n    >\\n      {new Array(4).fill(0).map((v, i) => {\\n        if (i === 0) {\\n          return (\\n            <Tab\\n              key={0}\\n              title=\\\"Custom\\\"\\n              onPress={() => setState({ activeTabIndex: 0 })}\\n              getStyles={() => ({\\n                containerStyle: {},\\n                buttonStyle: {},\\n                textStyle: {},\\n                focusColor: \\'#fafafa\\',\\n              })}\\n            />\\n          )\\n        }\\n        return <Tab key={i} title={`Tab ${i + 1}`} />\\n      })}\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      State,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTabIndex={state.activeTabIndex} onChange={index => setState({\n          activeTabIndex: index\n        })} getStyles={(props, theme) => ({\n          containerStyle: {}\n        })} mdxType=\"Tabs\">\n        {new Array(4).fill(0).map((v, i) => {\n            if (i === 0) {\n              return <Tab key={0} title=\"Custom\" onPress={() => setState({\n                activeTabIndex: 0\n              })} getStyles={() => ({\n                containerStyle: {},\n                buttonStyle: {},\n                textStyle: {},\n                focusColor: '#fafafa'\n              })} mdxType=\"Tab\" />;\n            }\n\n            return <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />;\n          })}\n      </Tabs>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n}\nexport type GetTabsStyles = (props: {}, theme: Theme) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      borderRadius: theme.controlBorderRadius.medium,\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  activeTabIndex?: number;\n  children: Array<React.ReactElement<TabProps>> | React.ReactElement<TabProps>;\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n\n  onChange: (index: number) => void;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const { children, activeTabIndex, onChange, getStyles } = props;\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getTabsStyles,\n    getStyles,\n    theme.components.getTabsStyles,\n  )({}, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    return {\n      index,\n      isActive: index === activeTabIndex,\n      onPress: i => onChange(i),\n      ...child.props,\n    };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  return (\n    <View style={containerStyle}>\n      {data.map((tabProps, index) => React.cloneElement(tabs[index], tabProps))}\n    </View>\n  );\n};\n"],"sourceRoot":""}