{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_react2","_interopRequireDefault","_docz","_Divider","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","Props","Divider","paddingVertical","size","position","getStyles","dividerStyle","of","isMDXComponent","getDividerColor","borderColors","borderColor","getDividerStyles","border","styleMap","horizontal","height","width","vertical","_mergeStyles2","_props$position","mergeStyles","_deepmerge","getDefaultStyles","getOverridingStyles","defaultStyles"],"mappings":"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","file":"static/js/25.6ae2e1f1.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","export * from './Box';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Divider } from './Divider';\nimport { Box } from '../Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box paddingVertical={40}>\\n  <Divider\\n    size={3}\\n    color=\\\"#67c6bb\\\"\\n    position=\\\"horizontal\\\"\\n    getStyles={(props, theme) => ({\\n      dividerStyle: {},\\n    })}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Divider,\n      Box\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={40} mdxType=\"Box\">\n    <Divider size={3} color=\"#67c6bb\" position=\"horizontal\" getStyles={(props, theme) => ({\n          dividerStyle: {}\n        })} mdxType=\"Divider\" />\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Divider} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { BorderColor, BorderColors, Theme } from '../../theme/ThemeInterface';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: BorderColor;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerColor = (borderColors: BorderColors) => (\n  borderColor: BorderColor,\n) => {\n  // @ts-ignore\n  const presetColor = borderColors[borderColor] as string | undefined;\n\n  return presetColor || borderColor;\n};\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const backgroundColor = getDividerColor(theme.colors.border)(\n    color || theme.colors.border.default,\n  );\n\n  const styleMap = {\n    horizontal: {\n      backgroundColor,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { BorderColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: BorderColor | string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nexport const Divider = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = useTheme();\n\n  const { dividerStyle } = mergeStyles(getDividerStyles, getStyles)(\n    { size, color, position },\n    theme,\n  );\n\n  return <View style={dividerStyle} />;\n};\n","import deepMerge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  return getOverridingStyles\n    ? deepMerge<TStyles>(defaultStyles, getOverridingStyles(\n        props,\n        theme,\n      ) as Partial<TStyles>)\n    : defaultStyles;\n};\n"],"sourceRoot":""}