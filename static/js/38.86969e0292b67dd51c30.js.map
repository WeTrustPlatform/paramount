{"version":3,"sources":["webpack:///./src/components/Drawer/Drawer.mdx","webpack:///./src/components/Drawer/Drawer.styles.ts","webpack:///./src/components/Drawer/Drawer.tsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_reactPowerplug","_Drawer","_Button","_Layout","_Typography","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","Toggle","Drawer","Button","Box","Spacing","Text","space","isVisible","onClose","console","log","offset","position","getStyles","theme","modalContainerStyle","containerStyle","_ref","on","toggle","Fragment","onPress","title","width","height","backgroundColor","_ref2","_ref3","_ref4","React","Component","getDrawerVariables","container","zIndex","modalContainer","alignItems","display","justifyContent","getDrawerStyles","drawerVariables","displayName","__docgenInfo","description","colors","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Modal","_Overlay","withTheme","children","_props$onClose","_props$position","_props$offset","_mergeStyles","mergeStyles","value","Animated","Value","spring","bounciness","speed","toValue","start","Modal","visible","transparent","onRequestClose","View","style","_objectSpread3","_defineProperty2","Overlay"],"mappings":"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","file":"static/js/38.d39774f6.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport Drawer from './Drawer';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"drawer\"}}>{`Drawer`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Drawer\\n  space=\\\"30%\\\"\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  offset={0}\\n  position=\\\"left\\\"\\n  getStyles={(props, theme) => ({\\n    modalContainerStyle: {},\\n    containerStyle: {},\\n  })}\\n/>'} __scope={{props: this ? this.props : props,Toggle,Drawer,Button,Box,Spacing,Text}}>\n  <Drawer\n    space=\"30%\"\n    isVisible={false}\n    onClose={() => console.log('Close')}\n    offset={0}\n    position=\"left\"\n    getStyles={(props, theme) => ({\n      modalContainerStyle: {},\n      containerStyle: {},\n    })}\n  />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variants\"}}>{`Variants`}</MDXTag>\n<Playground __position={1} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"top\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"left\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"right\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,Drawer,Button,Box,Spacing,Text}}>\n  <Toggle>\n    {({ on, toggle }) => (\n      <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" />\n        <Drawer space=\"30%\" isVisible={on} onClose={toggle}>\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n        </Drawer>\n      </>\n    )}\n  </Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open top drawer\" />\n      <Drawer space=\"30%\" position=\"top\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open left drawer\" />\n      <Drawer space=\"30%\" position=\"left\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open right drawer\" />\n      <Drawer space=\"30%\" position=\"right\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDrawerVariables.displayName = \"getDrawerVariables\";\n    // @ts-ignore\n    getDrawerVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\"] = { docgenInfo: getDrawerVariables.__docgenInfo, name: \"getDrawerVariables\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDrawerStyles.displayName = \"getDrawerStyles\";\n    // @ts-ignore\n    getDrawerStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\"] = { docgenInfo: getDrawerStyles.__docgenInfo, name: \"getDrawerStyles\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  theme: Theme;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nconst DrawerBase = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    theme,\n    getStyles,\n  } = props;\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  if (!isVisible) return null;\n\n  const value = new Animated.Value(-500);\n\n  Animated.spring(value, {\n    bounciness: 0,\n    speed: 70,\n    toValue: offset,\n  }).start();\n\n  return (\n    <Modal visible transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        <Animated.View\n          style={{\n            ...containerStyle,\n            [position]: value,\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </Animated.View>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\n\nexport const Drawer = withTheme(DrawerBase);\nexport default Drawer;\n"],"sourceRoot":""}