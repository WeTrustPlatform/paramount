{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Dialog/ConfirmDialog.tsx","webpack:///./src/components/Dialog/Dialog.mdx","webpack:///./src/components/Dialog/Dialog.tsx","webpack:///./src/components/Dialog/Modal.web.tsx","webpack:///./src/components/Dialog/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_fi","_theme","_Button","_interopRequireDefault","BackButton","props","theme","createElement","default","_extends2","appearance","isInline","iconBefore","FiArrowLeft","size","color","themeVariables","colors","text","withTheme","displayName","__docgenInfo","description","defaultValue","value","name","required","type","isLoading","isActive","isDisabled","onPress","iconAfter","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_reactNative","_Layout","_Loading","_Typography","Button","_props$appearance","children","_props$color","_props$isDisabled","_props$isInline","_props$isLoading","_props$onPress","_props$size","otherProps","_objectWithoutProperties2","_theme$getButtonStyle","getButtonStyles","buttonStyle","textStyle","focusColor","TouchableHighlight","accessibilityRole","underlayColor","disabled","style","View","alignItems","flexDirection","height","justifyContent","GridBox","paddingLeft","paddingRight","LoadingDots","Text","__class","_BackButton","_Dialog","ConfirmDialogHeader","_ref","title","onClose","padding","Heading","TouchableOpacity","FiX","ConfirmDialogFooter","_ref2","_ref2$color","onConfirm","cancelLabel","confirmLabel","ConfirmDialog","_props$cancelLabel","_props$confirmLabel","footer","header","dialogProps","isVisible","_react","_tag","_reactPowerplug","_docz","_","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","parentName","Playground","__position","__code","__scope","Toggle","Dialog","Box","initial","on","toggle","PropsTable","of","_ref3","Component","_Modal","_theme$getDialogStyle","getDialogStyles","modalContainerStyle","overlayStyle","containerStyle","bodyStyle","visible","transparent","onDismiss","TouchableWithoutFeedback","ReactDOM","ESC_KEY","Modal","el","modalRoot","content","createRef","handleKeyDown","event","keyCode","stopPropagation","document","getElementsByTagName","appendChild","current","focus","removeChild","createPortal","ref","onKeyDown","tabIndex","backgroundColor","bottom","left","position","right","top","zIndex","animated","animationType","onRequestClose","onShow","presentationStyle","supportedOrientations","onOrientationChange","hardwareAccelerated","_ConfirmDialog","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","dots","map","o","key","borderRadius","marginLeft","marginRight","opacity","width","defaultProps","_LoadingDots"],"mappings":"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","file":"static/js/6.13f64bb3.js","sourcesContent":["import * as React from 'react';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport { withTheme } from '../../theme';\nimport Button, { IButtonProps } from './Button';\n\nconst BackButton = (props: IButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <FiArrowLeft\n          size={24}\n          color={theme.themeVariables.colors.text.default}\n        />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": { \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the children. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableHighlight, View } from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n} from '../../theme/component-variables/buttonVariables';\nimport { GridBox } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\n\nexport interface IButtonProps {\n  children?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the children. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: () => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: ITheme;\n}\n\nconst ButtonWithoutTheme = (props: IButtonProps) => {\n  const {\n    appearance = 'primary',\n    children,\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n\n    ...otherProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = theme.getButtonStyles(\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  );\n\n  return (\n    <TouchableHighlight\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      {...otherProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <GridBox\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            <LoadingDots color={textStyle.color} />\n          ) : children ? (\n            <Text style={textStyle}>{children}</Text>\n          ) : null}\n        </GridBox>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonWithoutTheme);\nexport default Button;\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the children. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the children. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Button/Button.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Button, IButtonProps } from './Button';\nexport { default as BackButton } from './BackButton';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the children. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Button/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { FiX } from 'react-icons/fi';\nimport { TouchableOpacity } from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\nimport { ButtonColor } from '../../theme/component-variables/buttonVariables';\nimport { Button } from '../Button';\nimport { GridBox } from '../Layout';\nimport { Heading } from '../Typography';\nimport Dialog, { IDialogProps } from './Dialog';\n\nexport interface IConfirmDialogProps\n  extends IDialogProps,\n    IConfirmDialogHeaderProps,\n    IConfirmDialogFooterProps {}\n\nexport interface IConfirmDialogHeaderProps {\n  /** Title displayed in the header */\n  title?: string;\n  onClose?: () => void;\n  theme: ITheme;\n}\n\nconst ConfirmDialogHeader = ({\n  title,\n  theme,\n  onClose,\n}: IConfirmDialogHeaderProps) => (\n  <GridBox\n    padding={2}\n    flexDirection=\"row\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\n    <Heading>{title}</Heading>\n    <TouchableOpacity onPress={onClose}>\n      <FiX size={24} color={theme.themeVariables.colors.text.default} />\n    </TouchableOpacity>\n  </GridBox>\n);\n\nexport interface IConfirmDialogFooterProps {\n  color?: ButtonColor;\n  /** Label for cancel button */\n  cancelLabel?: string;\n  /** Label for confirm button */\n  confirmLabel?: string;\n  /** Handler for confirm button */\n  onConfirm?: () => void;\n  /** Handler for cancel button */\n  onClose?: () => void;\n}\n\nconst ConfirmDialogFooter = ({\n  color = 'primary',\n  onClose,\n  onConfirm,\n  cancelLabel,\n  confirmLabel,\n}: IConfirmDialogFooterProps) => (\n  <GridBox padding={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n    <Button appearance=\"minimal\" onPress={onClose}>\n      {cancelLabel}\n    </Button>\n    <GridBox paddingLeft={2}>\n      <Button color={color} onPress={onConfirm}>\n        {confirmLabel}\n      </Button>\n    </GridBox>\n  </GridBox>\n);\n\nconst ConfirmDialogWithoutTheme = (props: IConfirmDialogProps) => {\n  const {\n    cancelLabel = 'Cancel',\n    children,\n    confirmLabel = 'Confirm',\n    footer,\n    header,\n    onClose,\n    onConfirm,\n    title,\n    theme,\n    ...dialogProps\n  } = props;\n\n  return (\n    <Dialog\n      header={\n        header === null\n          ? null\n          : header || (\n              <ConfirmDialogHeader\n                theme={theme}\n                onClose={onClose}\n                title={title}\n              />\n            )\n      }\n      footer={\n        footer === null\n          ? null\n          : footer || (\n              <ConfirmDialogFooter\n                onClose={onClose}\n                onConfirm={onConfirm}\n                cancelLabel={cancelLabel}\n                confirmLabel={confirmLabel}\n              />\n            )\n      }\n      onClose={onClose}\n      {...dialogProps}\n    >\n      <GridBox padding={2}>{children}</GridBox>\n    </Dialog>\n  );\n};\n\nexport const ConfirmDialog = withTheme(ConfirmDialogWithoutTheme);\nexport default ConfirmDialog;\ntry {\n    // @ts-ignore\n    ConfirmDialog.displayName = \"ConfirmDialog\";\n    // @ts-ignore\n    ConfirmDialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"ConfirmDialog\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/ConfirmDialog.tsx#ConfirmDialog\"] = { docgenInfo: ConfirmDialog.__docgenInfo, name: \"ConfirmDialog\", path: \"src/components/Dialog/ConfirmDialog.tsx#ConfirmDialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/ConfirmDialog.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Dialog/ConfirmDialog.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Toggle } from 'react-powerplug';\nimport { Playground, PropsTable } from 'docz';\nimport { Dialog } from '.';\nimport { ConfirmDialog } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dialog\"}}>{`Dialog`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control. For a more out-of-box usage, you can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfirmDialog`}</MDXTag>{` below`}</MDXTag>\n<Playground __position={0} __code={`<Toggle initial={false}>\n  {({ on, toggle }) => (\n    <Box>\n      <Dialog\n        header={<Text>Header</Text>}\n        footer={<Text>Footer</Text>}\n        isVisible={on}\n        onClose={toggle}\n      >\n        <Box height={1800}>\n          <Text>Put any content in the dialog</Text>\n        </Box>\n      </Dialog>\n      <Button onPress={toggle}>Open dialog</Button>\n    </Box>\n  )}\n</Toggle>`} __scope={{props: this ? this.props : props,Toggle,Dialog,ConfirmDialog,Button,Box,Text}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <Dialog\n          header={<Text>Header</Text>}\n          footer={<Text>Footer</Text>}\n          isVisible={on}\n          onClose={toggle}\n        >\n          <Box height={1800}>\n            <Text>Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle}>Open dialog</Button>\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dialog-props\"}}>{`Dialog Props`}</MDXTag>\n<PropsTable of={Dialog} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"confirmdialog\"}}>{`ConfirmDialog`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Opposed to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag>{` (above), `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfirmDialog`}</MDXTag>{` has predefined styling and handlers; however, it still can pass props from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag></MDXTag>\n<Playground __position={2} __code={`<Toggle initial={false}>\n  {({ on, toggle }) => (\n    <Box>\n      <ConfirmDialog\n        title=\"Confirm dialog\"\n        isVisible={on}\n        onClose={toggle}\n        cancelLabel=\"Cancel label\"\n        confirmLabel=\"Confirm label\"\n      >\n        <Text>Add custom content here</Text>\n      </ConfirmDialog>\n      <Button onPress={toggle}>Open dialog</Button>\n    </Box>\n  )}\n</Toggle>`} __scope={{props: this ? this.props : props,Toggle,Dialog,ConfirmDialog,Button,Box,Text}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <ConfirmDialog\n          title=\"Confirm dialog\"\n          isVisible={on}\n          onClose={toggle}\n          cancelLabel=\"Cancel label\"\n          confirmLabel=\"Confirm label\"\n        >\n          <Text>Add custom content here</Text>\n        </ConfirmDialog>\n        <Button onPress={toggle}>Open dialog</Button>\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"confirmdialog-without-header\"}}>{`ConfirmDialog without header`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Opposed to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag>{` (above), `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfirmDialog`}</MDXTag>{` has predefined styling and handlers; however, it still can pass props from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag></MDXTag>\n<Playground __position={3} __code={`<Toggle initial={false}>\n  {({ on, toggle }) => (\n    <Box>\n      <ConfirmDialog\n        header={null}\n        isVisible={on}\n        onClose={toggle}\n        cancelLabel=\"Cancel label\"\n        confirmLabel=\"Confirm label\"\n      >\n        <Text>Add custom content here</Text>\n      </ConfirmDialog>\n      <Button onPress={toggle}>Open dialog</Button>\n    </Box>\n  )}\n</Toggle>`} __scope={{props: this ? this.props : props,Toggle,Dialog,ConfirmDialog,Button,Box,Text}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <ConfirmDialog\n          header={null}\n          isVisible={on}\n          onClose={toggle}\n          cancelLabel=\"Cancel label\"\n          confirmLabel=\"Confirm label\"\n        >\n          <Text>Add custom content here</Text>\n        </ConfirmDialog>\n        <Button onPress={toggle}>Open dialog</Button>\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"confirmdialog-props\"}}>{`ConfirmDialog Props`}</MDXTag>\n<PropsTable of={ConfirmDialog} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\nimport Modal from './Modal';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface IDialogProps {\n  children: React.ReactNode;\n  theme: ITheme;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n}\n\nconst DialogWithoutTheme = (props: IDialogProps) => {\n  const { children, footer, header, isVisible, onClose, theme } = props;\n\n  if (!isVisible) return null;\n\n  const {\n    modalContainerStyle,\n    overlayStyle,\n    containerStyle,\n    bodyStyle,\n  } = theme.getDialogStyles();\n\n  return (\n    <Modal visible={isVisible} transparent onDismiss={onClose}>\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <TouchableWithoutFeedback onPress={onClose}>\n          <View style={overlayStyle} />\n        </TouchableWithoutFeedback>\n      </View>\n    </Modal>\n  );\n};\n\nexport const Dialog = withTheme(DialogWithoutTheme);\nexport default Dialog;\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/Dialog.tsx#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Dialog/Dialog.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ModalProps } from 'react-native';\n\nconst ESC_KEY = 27;\n\nclass Modal extends React.Component<ModalProps> {\n  public el: HTMLDivElement;\n  public modalRoot: HTMLBodyElement;\n  public content: React.RefObject<HTMLDivElement> = React.createRef();\n\n  constructor(props: ModalProps) {\n    super(props);\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n  }\n\n  public componentDidMount() {\n    this.modalRoot.appendChild(this.el);\n    if (this.content.current) {\n      this.content.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.modalRoot.removeChild(this.el);\n  }\n\n  public handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { onDismiss } = this.props;\n\n    if (event.keyCode === ESC_KEY && onDismiss) {\n      event.stopPropagation();\n      onDismiss();\n    }\n  };\n\n  public render() {\n    const { transparent, visible } = this.props;\n\n    if (!visible) return null;\n\n    return (\n      <div>\n        {ReactDOM.createPortal(\n          <div\n            ref={this.content}\n            onKeyDown={this.handleKeyDown}\n            tabIndex={-1}\n            style={{\n              backgroundColor: transparent ? 'transparent' : 'white',\n              bottom: 0,\n              left: 0,\n              position: 'fixed',\n              right: 0,\n              top: 0,\n              zIndex: 1000,\n            }}\n          >\n            {this.props.children}\n          </div>,\n          this.el,\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Modal;\ntry {\n    // @ts-ignore\n    Modal.displayName = \"Modal\";\n    // @ts-ignore\n    Modal.__docgenInfo = { \"description\": \"\", \"displayName\": \"Modal\", \"props\": { \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Modal.web.tsx#Modal\"] = { docgenInfo: Modal.__docgenInfo, name: \"Modal\", path: \"src/components/Dialog/Modal.web.tsx#Modal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Dialog, IDialogProps } from './Dialog';\nexport { default as ConfirmDialog, IConfirmDialogProps } from './ConfirmDialog';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Dialog/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface ILoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<ILoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: ILoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/index.ts#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/index.ts#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}