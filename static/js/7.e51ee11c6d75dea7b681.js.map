{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_theme","_Icon","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","default","backgroundColor","background","content","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Box","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Box","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","getDividerColor","borderColors","getDividerStyles","_ref","position","styleMap","horizontal","width","vertical","dividerStyle","_Divider","Divider","_props$position","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","getTabStyles","containerStyle","bottom","_Tab","Tab","_props$isActive","buttonProps","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","Playground","__position","__code","__scope","Props","State","Tabs","defaultActiveTabIndex","onSetActiveTabIndex","console","log","activeTabIndex","undefined","distribution","tabContainerStyle","initial","_ref2","state","setState","of","isMDXComponent","getTabsStyles","flex","_Tabs","children","_props$defaultActiveT","_props$distribution","_React$useState","useState","_React$useState2","_slicedToArray2","localActiveTabIndex","setLocalActiveTabIndex","isControlled","data","Children","child","tabCommonProps","tabs","toArray","item","cloneElement","FlatList","renderItem"],"mappings":"uYAAAA,EAAAC,EAAAC,EAAA,kCAEAC,EAAAD,EAAA,wBACAE,EAAAF,EAAA,kCACAG,EAAAH,EAAA,sCAEaI,EAAa,SAACC,GACzB,IAAMC,GAAQ,EAAAL,EAAAM,YAEd,OACET,EAAAU,cAACL,EAAAM,QAAD,EAAAC,EAAA,UACEC,WAAW,UACXC,UAAQ,EACRC,WACEf,EAAAU,cAACN,EAAAY,KAAD,CAAMC,KAAK,aAAaC,KAAM,GAAIC,MAAOX,EAAMY,OAAOC,KAAb,UAE3CH,KAAK,SACDX,gmGCmCH,IAAMe,EAAqB,SAACd,GACjC,MAAO,CACLe,YAAa,CACXC,QAAS,CACPC,QAAS,CACPC,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCT,MAAOX,EAAMY,OAAOC,KAAb,QAEPQ,WAAYrB,EAAMY,OAAOO,WAAWG,aAGtCC,OAAQ,CACNL,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCT,MAAOX,EAAMY,OAAOC,KAAKU,OAEzBF,WAAYrB,EAAMY,OAAOO,WAAWG,aAEtCE,QAAS,CACPN,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCT,MAAOX,EAAMY,OAAOC,KAAKW,QAEzBH,WAAYrB,EAAMY,OAAOO,WAAWG,aAEtCG,UAAW,CACTP,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCT,MAAOX,EAAMY,OAAOC,KAAKY,UACrBzB,EAAMY,OAAOC,KAAKY,UAClBzB,EAAMY,OAAOC,KAAb,QAEJQ,WAAYrB,EAAMY,OAAOO,WAAWG,cAGxCE,QAAS,CACPP,QAAS,CACPC,gBAAiBlB,EAAMY,OAAOO,WAAWO,UACzCC,YAAa3B,EAAMY,OAAOgB,OAAb,QACbjB,MAAOX,EAAMY,OAAOC,KAAb,QAEPQ,WAAYrB,EAAMY,OAAOO,WAAWG,YACpCO,uBAAwB7B,EAAMY,OAAOO,WAAWW,SAGlDP,OAAQ,CACNL,gBAAiBlB,EAAMY,OAAOO,WAAWY,cACzCJ,YAAa3B,EAAMY,OAAOgB,OAAOL,OACjCZ,MAAOX,EAAMY,OAAOC,KAAKmB,MAEzBX,WAAYrB,EAAMY,OAAOO,WAAWc,WACpCJ,uBAAwB7B,EAAMY,OAAOO,WAAWe,aAGlDV,QAAS,CACPN,gBAAiBlB,EAAMY,OAAOO,WAAWgB,eACzCR,YAAa3B,EAAMY,OAAOgB,OAAOJ,QACjCb,MAAOX,EAAMY,OAAOC,KAAKmB,MAEzBX,WAAYrB,EAAMY,OAAOO,WAAWiB,YACpCP,uBAAwB7B,EAAMY,OAAOO,WAAWkB,cAGlDZ,UAAW,CACTP,gBAAiBlB,EAAMY,OAAOO,WAAWmB,iBACzCX,YAAa3B,EAAMY,OAAOgB,OAAOH,UACjCd,MAAOX,EAAMY,OAAOC,KAAKmB,MAEzBX,WAAYrB,EAAMY,OAAOO,WAAWoB,cACpCV,uBAAwB7B,EAAMY,OAAOO,WAAWqB,iBAIpDC,QAAS,CACPxB,QAAS,CACPC,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCO,YAAa3B,EAAMY,OAAOC,KAAb,QACb6B,YAAa,EACb/B,MAAOX,EAAMY,OAAOC,KAAb,QAEPQ,WAAYrB,EAAMY,OAAOO,WAAWG,aAGtCC,OAAQ,CACNL,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCO,YAAa3B,EAAMY,OAAOgB,OAAOL,OACjCmB,YAAa,EACb/B,MAAOX,EAAMY,OAAOC,KAAKU,OAEzBF,WAAYrB,EAAMY,OAAOO,WAAWe,aAGtCV,QAAS,CACPN,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCO,YAAa3B,EAAMY,OAAOgB,OAAOJ,QACjCkB,YAAa,EACb/B,MAAOX,EAAMY,OAAOC,KAAKW,QAEzBH,WAAYrB,EAAMY,OAAOO,WAAWkB,cAGtCZ,UAAW,CACTP,gBAAiBlB,EAAMY,OAAOO,WAAWC,QACzCO,YAAa3B,EAAMY,OAAOgB,OAAOH,UACjCiB,YAAa,EACb/B,MAAOX,EAAMY,OAAOC,KAAKY,UAEzBJ,WAAYrB,EAAMY,OAAOO,WAAWqB,kBAI1CG,SAAU,CACRzB,gBAAiBlB,EAAMY,OAAOO,WAAWyB,SAEzCjC,MAAOX,EAAMY,OAAOC,KAAKgC,OAE3BC,MAAO,CACLC,MAAO,CACLC,aAAchD,EAAMiD,oBAAoBF,MACxCG,SAAUlD,EAAMmD,UAAUJ,MAAMG,UAAY,GAC5CE,OAAQpD,EAAMqD,eAAeN,MAC7BO,YAA2C,EAA9BtD,EAAMuD,gBAAgBR,MACnCS,aAA4C,EAA9BxD,EAAMuD,gBAAgBR,OAGtCU,OAAQ,CACNT,aAAchD,EAAMiD,oBAAoBQ,OACxCP,SAAUlD,EAAMmD,UAAUM,OAAOP,UAAY,GAC7CE,OAAQpD,EAAMqD,eAAeI,OAC7BH,YAA4C,EAA/BtD,EAAMuD,gBAAgBE,OACnCD,aAA6C,EAA/BxD,EAAMuD,gBAAgBE,QAGtCC,MAAO,CACLV,aAAchD,EAAMiD,oBAAoBS,MACxCR,SAAUlD,EAAMmD,UAAUO,MAAMR,UAAY,GAC5CE,OAAQpD,EAAMqD,eAAeK,MAC7BJ,YAA2C,EAA9BtD,EAAMuD,gBAAgBG,MACnCF,aAA4C,EAA9BxD,EAAMuD,gBAAgBG,qmCAyBrC,IAAMC,EAAmC,SAACC,EAAkB5D,GAAU,IAEzEK,EAMEuD,EANFvD,WACAM,EAKEiD,EALFjD,MACAD,EAIEkD,EAJFlD,KACAmD,EAGED,EAHFC,WACAC,EAEEF,EAFFE,UACAxD,EACEsD,EADFtD,SAPyEyD,EAUnBjD,EACtDd,GADMe,EAVmEgD,EAUnEhD,YAAa+B,EAVsDiB,EAUtDjB,MAAOH,EAV+CoB,EAU/CpB,SAAaqB,GAVkC,EAAAC,EAAA,SAAAF,EAAA,oCAAAG,EAmBvEnD,EAAYV,GAAYM,GAJnBwD,EAfkED,EAezEvD,MACAU,EAhByE6C,EAgBzE7C,WACAQ,EAjByEqC,EAiBzErC,uBACGuC,GAlBsE,EAAAH,EAAA,SAAAC,EAAA,iDAAAG,EAqBtCvB,EAAMpC,GAAnCwC,EArBmEmB,EAqBnEnB,SAAaoB,GArBsD,EAAAL,EAAA,SAAAI,EAAA,cAsB5DE,EAAqD5B,EAA5DhC,MAAmC6D,GAtBgC,EAAAP,EAAA,SAsBPtB,EAtBO,WAwB3E,MAAO,CACLyB,aAAW,EAAAK,EAAA,YACLZ,GAAU,EAAAY,EAAA,YAELD,EACAF,IAHK,EAAAG,EAAA,YAMLH,EACAN,EACAI,EACCN,EAAY,CAAE5C,gBAAiBW,GAA2B,IAEhEvB,EACA,CACEoE,UAAW,aACXC,cAAe,MACfC,SAAU,QAEZ,IAENvD,aACAwD,UAAW,CACTC,WAAY,SACZnE,MAAOkD,EAAaU,EAA0BJ,EAC9CY,QAAS,OACT7B,WACA8B,WAAY,MACZC,eAAgB,SAChBC,UAAW,mnBCzQjB1F,EAAAC,EAAAC,EAAA,kCACAyF,EAAAzF,EAAA,iDASAC,EAAAD,EAAA,wBACA0F,EAAA1F,EAAA,8BACA2F,EAAA3F,EAAA,iCACA4F,EAAA5F,EAAA,qCACA6F,EAAA7F,EAAA,wCACAG,EAAAH,EAAA,uTA4FO,IAAMS,EAAS,SAACJ,GAAuB,IAAAyF,EAqBxCzF,EAnBFM,kBAF0C,IAAAmF,EAE7B,UAF6BA,EAAAC,GAqBxC1F,EAlBF2F,MAkBE3F,EAjBFY,cAJ0C,IAAA8E,EAIlC,UAJkCA,EAK1CE,EAgBE5F,EAhBF4F,UAEAC,GAcE7F,EAfF8F,KAeE9F,EAdF6F,WACArF,EAaER,EAbFQ,WAR0CuF,GAqBxC/F,EAZFgG,YAYEhG,EAXFiG,SAWEjG,EAVF8D,mBAX0C,IAAAiC,KAAAG,EAqBxClG,EATFO,gBAZ0C,IAAA2F,KAAAC,EAqBxCnG,EARF+D,iBAb0C,IAAAoC,KAAAC,EAqBxCpG,EAPFqG,eAd0C,IAAAD,EAchC,aAdgCA,EAAAE,EAqBxCtG,EAJFW,YAjB0C,IAAA2F,EAiBnC,SAjBmCA,EAkB1CC,EAGEvG,EAHFuG,OAEGC,GApBuC,EAAAtC,EAAA,SAqBxClE,EArBwC,mKAuBtCC,GAAQ,EAAAL,EAAAM,YAvB8BuG,GAyBG,EAAApB,EAAAqB,aAC7C9C,kBACAgC,EAF6C,CAI7C,CACEtF,aACAM,QACAkD,aACAvD,WACAwD,YACApD,QAEFV,GAZMoE,EAzBoCoC,EAyBpCpC,YAAaS,EAzBuB2B,EAyBvB3B,UAAWxD,EAzBYmF,EAyBZnF,WAehC,OACE7B,EAAAU,cAACiF,EAAAuB,oBAAD,EAAAtG,EAAA,UACEuG,YAAU,EACVC,kBAAkB,SAClBC,cAAexF,EACfsB,YAAakB,IAAcC,GAC3BsC,QAASA,EACTU,MAAO1C,EACPkC,OAAQA,GACJC,GAEJ/G,EAAAU,cAACiF,EAAA4B,KAAD,CACED,MAAO,CACLhC,WAAY,SACZH,cAAe,MACfvB,OAAQ,OACR6B,eAAgB,WAGjB1E,EACDf,EAAAU,cAACmF,EAAA2B,IAAD,CAAK1D,YAAa/C,EAAa,EAAI,EAAGiD,aAAcoC,EAAY,EAAI,GAGlEpG,EAAAU,cAAC+G,GAAD,EAAA7G,EAAA,YAAmBL,EAAnB,CAA0B8E,UAAWA,MAEtCe,8fAUT,IAAMqB,EAAgB,SAAClH,GAA8B,IAC3C+D,EAAmD/D,EAAnD+D,UAAWiC,EAAwChG,EAAxCgG,YAAaF,EAA2B9F,EAA3B8F,KAAMH,EAAqB3F,EAArB2F,MAAOb,EAAc9E,EAAd8E,UAE7C,OAAIf,EAAkBiC,GAAevG,EAAAU,cAACoF,EAAA4B,YAAD,CAAavG,MAAOkE,EAAUlE,QAC/DkF,IACAH,EAAclG,EAAAU,cAACqF,EAAA4B,KAAD,CAAMxB,UAAW,iBAAO,CAAEd,eAAea,GAEpD,4GC7LT,IAAA7F,EAAAH,EAAA,sCAAA0H,OAAAC,KAAAxH,GAAAyH,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA9H,EAAA0H,QACA,IAAAK,EAAAlI,EAAA,0CAAA0H,OAAAC,KAAAO,GAAAN,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAC,EAAAL,22CCoBO,IAAMM,EAAkB,SAACC,GAAD,OAAgC,SAC7DnG,GAKA,OAFoBmG,EAAanG,IAEXA,2NAGjB,IAAMoG,EAAqC,SAAAC,EAEhDhI,GACG,IAFDU,EAECsH,EAFDtH,KAAMC,EAELqH,EAFKrH,MAAOsH,EAEZD,EAFYC,SAGT/G,EAAkB2G,EAAgB7H,EAAMY,OAAOgB,OAA7BiG,CACtBlH,GAASX,EAAMY,OAAOgB,OAAb,SAGLsG,EAAW,CACfC,WAAY,CACVjH,kBACAkC,OAAQ1C,GAAQ,EAChB0H,MAAO,QAETC,SAAU,CACRnH,kBACAkC,OAAQ,OACRgF,MAAO1H,GAAQ,IAInB,MAAO,CACL4H,aAAcL,EAAWC,EAASD,GAAYC,EAASC,2aCpD3D,IAAA3I,EAAAC,EAAAC,EAAA,kCACAyF,EAAAzF,EAAA,iDAGAC,EAAAD,EAAA,wBACA0F,EAAA1F,EAAA,8BACA6I,EAAA7I,EAAA,kUAcO,IAAM8I,EAAU,SAACzI,GAAwB,IACtCW,EAAoDX,EAApDW,KAAMC,EAA8CZ,EAA9CY,MADgC8H,EACc1I,EAAvCkI,gBADyB,IAAAQ,EACd,aADcA,EACA9C,EAAc5F,EAAd4F,UACxC3F,GAAQ,EAAAL,EAAAM,YAENqI,GAAiB,EAAAlD,EAAAqB,aAAYsB,mBAAkBpC,EAA9B,CACvB,CAAEjF,OAAMC,QAAOsH,YACfjI,GAFMsI,aAKR,OAAO9I,EAAAU,cAACiF,EAAA4B,KAAD,CAAMD,MAAOwB,4SC7BtB,IAAAC,EAAA7I,EAAA,wCAAA0H,OAAAC,KAAAkB,GAAAjB,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAY,EAAAhB,wMCAA,IAAA/H,EAAAC,EAAAC,EAAA,kCACAgJ,EAAAjJ,EAAAC,EAAA,+CAaO,IAAMc,EAAO,SAAAwH,GAAsC,IAAnCvH,EAAmCuH,EAAnCvH,KAAME,EAA6BqH,EAA7BrH,MAAOD,EAAsBsH,EAAtBtH,KAE5BiI,EAAUD,EAAO,KAAAE,OAXzB,SAAyBnI,GACvB,IAIMoI,EAASpI,EAAKqI,QAAQ,UAJV,SAACC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOH,EAAOI,OAAO,GAAGD,cAAgBH,EAAOK,MAAM,GAKxBC,CAAgB1I,KAE7C,OAAOjB,EAAAU,cAACyI,EAAD,CAAShI,MAAOA,EAAOD,KAAMA,iSClBtC,IAAAd,EAAAF,EAAA,sCAAA0H,OAAAC,KAAAzH,GAAA0H,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA/H,EAAA2H,gaCAA/H,EAAAC,EAAAC,EAAA,kCACAyF,EAAAzF,EAAA,iDACA0J,EAAA1J,EAAA,6CAEM2J,GAAe,EAAAD,EAAAE,UAASvC,4TAO9B,IAAMwC,EAAQ,CAAC,IAAK,IAAK,KAEZrC,EAAc,SAACnH,GAA4B,IAAAsG,EAChBtG,EAA9BW,YAD8C,IAAA2F,EACvC,GADuCA,EAAAZ,EAChB1F,EAAnBY,aADmC,IAAA8E,EAC3B,OAD2BA,EAGhD+D,GAAQ,EAAAJ,EAAAK,UAASF,EAAMG,OAAQ,CACnCC,OAAQ,CAAEC,SAAU,KACpBC,KAAM,CAAEC,QAAS,GACjBC,OAAO,EACPC,GAAE,eAAAC,GAAA,EAAAC,EAAA,SAAAC,EAAA,QAAAC,KAAE,SAAAC,EAAMC,GAAN,OAAAH,EAAA,QAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAGMA,EAAK,CAAER,QAAS,IAHtB,cAAAU,EAAAF,KAAA,EAKMA,EAAK,CAAER,QAAS,IALtB,OAAAU,EAAAF,KAAA,gCAAAE,EAAAE,SAAAL,MAAF,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,KAUJ,OACEtL,EAAAU,cAACiF,EAAA4B,KAAD,CACED,MAAO,CACLhC,WAAY,SACZH,cAAe,MACfM,eAAgB,WAGjBuE,EAAMuB,IAAI,SAACjE,EAAOkE,GAAR,OACTxL,EAAAU,cAACmJ,EAAD,CACE9B,IAAKgC,EAAMyB,GAEXlE,MAAO,CACL5F,gBAAiBP,EACjBqC,aAAc,MACdI,OAAQ1C,EACRuK,WAAY,EACZC,YAAa,EACbpB,QAAShD,EAAMgD,QACf1B,MAAO1H,4TCjDnB,IAAAyK,EAAAzL,EAAA,4CAAA0H,OAAAC,KAAA8D,GAAA7D,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAwD,EAAA5D,qpBCaO,IAAM6D,EAA6B,SAAApL,GACxC,MAAO,CACLoE,YAAa,CACXpB,aAAc,GAEhBqI,eAAgB,GAChB/C,aAAc,CACZtF,aAAc,EACdsI,OAAQ,EACRrD,SAAU,YAEZpD,UAAW,ylBCxBfrF,EAAAC,EAAAC,EAAA,kCACAyF,EAAAzF,EAAA,iDAGAC,EAAAD,EAAA,wBACA0F,EAAA1F,EAAA,8BACAG,EAAAH,EAAA,oCAEA6I,EAAA7I,EAAA,qCACA6L,EAAA7L,EAAA,wRAUO,IAAM8L,EAAM,SAACzL,GAAoB,IAAA0L,EACkB1L,EAAhDiG,gBAD8B,IAAAyF,KACZ9F,EAA8B5F,EAA9B4F,UAAc+F,GADF,EAAAzH,EAAA,SACkBlE,EADlB,0BAEhCC,GAAQ,EAAAL,EAAAM,YAFwBuG,GAG2B,EAAApB,EAAAqB,aAC/D2E,eACAzF,EAF+D,CAG/D3F,GAHMqL,EAH8B7E,EAG9B6E,eAAgB/C,EAHc9B,EAGd8B,aAAclE,EAHAoC,EAGApC,YAAaS,EAHb2B,EAGa3B,UAKnD,OACErF,EAAAU,cAACiF,EAAA4B,KAAD,CAAMD,MAAOuE,GACX7L,EAAAU,cAACL,EAAAM,QAAD,EAAAC,EAAA,UACEO,MAAOqF,EAAW,UAAY,UAC9B3F,WAAW,UACXsF,UAAW,iBAAO,CAAEvB,cAAaS,eAC7B6G,IAEL1F,GACCxG,EAAAU,cAACqI,EAAAC,QAAD,CACE9H,KAAM,EACNC,MAAOqF,EAAW,UAAY,UAC9BL,UAAW,iBAAO,CAAE2C,0gBCrC5BqD,GADAC,EAAAlM,EAAA,kCACAA,EAAA,kDAEFmM,EAAAnM,EAAA,yCACAoM,EAAApM,EAAA,8DACAyF,EAAAzF,EAAA,iDACAE,EAAAF,EAAA,kCACAqM,EAAArM,EAAA,kCAOMsM,EAAc,GAGdC,EAAY,UACH,SAASC,EAATlE,GAGZ,IAFDmE,EAECnE,EAFDmE,WACGpM,GACF,EAAAkE,EAAA,SAAA+D,EAAA,gBACD,OAAO,EAAA2D,EAAAS,KAACH,GAAD,EAAA7L,EAAA,YAAe4L,EAAiBjM,EAAhC,CAAuCoM,WAAYA,EAAYE,QAAQ,eAG5E,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,QADR,SAGA,EAAAX,EAAAS,KAAA,KAAQ,CACNE,GAAM,SADR,UAGA,EAAAX,EAAAS,KAACP,EAAAU,WAAD,CAAYC,WAAY,EAAGC,OAAQ,seAAifC,QAAS,CAC3hB3M,MAAO8K,KAAOA,KAAK9K,MAAQA,EAC3BwM,wBACAI,cACAC,cACA7F,YACAvG,YACAqM,YACArB,WACCa,QAAQ,eACb,EAAAV,EAAAS,KAACL,EAAAc,KAAD,CAAMC,sBAAuB,EAAGC,oBAAqB,SAAA/B,GAAK,OAAIgC,QAAQC,IAAI,UAAWjC,IAAQkC,oBAAgBC,EAAW/G,aAAS+G,EAAWC,aAAa,MACrJzH,UAAW,SAAC5F,EAAOC,GAAR,MAAmB,CAC5BqL,eAAgB,GAEhBgC,kBAAmB,GACnBjJ,YAAa,GACbS,UAAW,GACXyD,aAAc,KACZ+D,QAAQ,SACd,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,QAAQ2G,QAAQ,SAC3B,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,QAAQ2G,QAAQ,SAC3B,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,QAAQ2G,QAAQ,WAG3B,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,cADR,eAGA,EAAAX,EAAAS,KAACP,EAAAU,WAAD,CAAYC,WAAY,EAAGC,OAAQ,qhBAA8hBC,QAAS,CACxkB3M,MAAO8K,KAAOA,KAAK9K,MAAQA,EAC3BwM,wBACAI,cACAC,cACA7F,YACAvG,YACAqM,YACArB,WACCa,QAAQ,eACb,EAAAV,EAAAS,KAACN,EAAAc,MAAD,CAAOU,QAAS,CACVJ,eAAgB,GACfb,QAAQ,SACZ,SAAAkB,GAAA,IACKC,EADLD,EACKC,MACAC,EAFLF,EAEKE,SAFL,OAGS,EAAA9B,EAAAS,KAACL,EAAAc,KAAD,CAAMO,aAAa,aAAaF,eAAgBM,EAAMN,eAAgB9G,QAAS,SAAA4E,GAAK,OAAIyC,EAAS,CACrGP,eAAgBlC,KACdqB,QAAQ,SACZ,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK3F,MAAM,EAAA8F,EAAAS,KAACxM,EAAAY,KAAD,CAAMC,KAAK,OAAOC,KAAM,GAAIC,MAAgC,IAAzB6M,EAAMN,eAAuB,UAAY,UAAWb,QAAQ,SAAWA,QAAQ,SAC7H,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,QAAQ2G,QAAQ,SAC3B,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK3H,YAAU,EAAC6B,MAAM,QAAQ2G,QAAQ,aAI1C,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,cADR,eAGA,EAAAX,EAAAS,KAACP,EAAAU,WAAD,CAAYC,WAAY,EAAGC,OAAQ,+bAA4dC,QAAS,CACtgB3M,MAAO8K,KAAOA,KAAK9K,MAAQA,EAC3BwM,wBACAI,cACAC,cACA7F,YACAvG,YACAqM,YACArB,WACCa,QAAQ,eACb,EAAAV,EAAAS,KAACL,EAAAc,KAAD,CAAMO,aAAa,aAAaf,QAAQ,SACtC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,SACjC,EAAAV,EAAAS,KAACL,EAAAP,IAAD,CAAK9F,MAAM,cAAc2G,QAAQ,WAGjC,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,SADR,UAGA,EAAAX,EAAAS,KAACP,EAAAc,MAAD,CAAOe,GAAIb,OAAMR,QAAQ,6LAI7BH,EAAWyB,gBAAiB,+9BClGrB,IAAMC,EAA+B,SAAA5F,EAAmBhI,GAC7D,MAAO,CACLoE,YAAa,GACbiH,eAAgB,CACdwC,KAAM,EACNlJ,cAAe,MACfM,eAAgB,cAElBqD,aAAc,GACd+E,kBACmB,QAVkDrF,EAA1BoF,aAWrC,CACES,KAAM,GAER,GACNhJ,UAAW,ylBCrCfrF,EAAAC,EAAAC,EAAA,kCACAyF,EAAAzF,EAAA,iDAGAC,EAAAD,EAAA,wBACA0F,EAAA1F,EAAA,8BAEAoO,EAAApO,EAAA,y1BAmBO,IAAMmN,EAAO,SAAC9M,GAAqB,IAEtCgO,EAOEhO,EAPFgO,SACAb,EAMEnN,EANFmN,eAHsCc,EASpCjO,EALF+M,6BAJsC,IAAAkB,EAId,EAJcA,EAKtC5H,EAIErG,EAJFqG,QACA2G,EAGEhN,EAHFgN,oBACApH,EAEE5F,EAFF4F,UAPsCsI,EASpClO,EADFqN,oBARsC,IAAAa,EAQvB,MARuBA,EAAAC,EAUc1O,EAAM2O,SAC1DrB,GAXsCsB,GAAA,EAAAC,EAAA,SAAAH,EAAA,GAUjCI,EAViCF,EAAA,GAUZG,EAVYH,EAAA,GAalCpO,GAAQ,EAAAL,EAAAM,YACRuO,KAAkBtB,IAAkB9G,GAdFI,GAqBpC,EAAApB,EAAAqB,aAAYmH,gBAAejI,EAA3B,CAAsC,CAAEyH,gBAAgBpN,GAL1DqL,EAhBsC7E,EAgBtC6E,eACAgC,EAjBsC7G,EAiBtC6G,kBACAxI,EAlBsC2B,EAkBtC3B,UACAT,EAnBsCoC,EAmBtCpC,YACAkE,EApBsC9B,EAoBtC8B,aAGImG,EAAOjP,EAAMkP,SAAS3D,IAAIgD,EAAU,SAACY,EAAO3D,GAChD,IAAK2D,EAAO,OAAO,KAEnB,IAAMC,EAAiB,CACrBjJ,UAAW,iBAAO,CAChBvB,cACAiH,eAAgBgC,EAChB/E,eACAzD,eAIJ,OAAO2J,GAAY,EAAA/J,EAAA,YAEVmK,EAFU,CAGb5I,SAAUgF,IAAUkC,EACpB9G,QAAS,kBAAMA,EAAQ4E,OAJV,EAAAvG,EAAA,YAOVmK,EAPU,CAQb5I,SAAUgF,IAAUsD,EACpBlI,QAAS,WACPmI,EAAuBvD,GACnB+B,GAAqBA,EAAoB/B,QAKjD6D,EAAOrP,EAAMkP,SAASI,QAAQf,GAEpC,MAAqB,QAAjBX,EAEA5N,EAAAU,cAACiF,EAAA4B,KAAD,CAAMD,MAAOuE,GACVoD,EAAK1D,IAAI,SAACgE,EAAM/D,GAAP,OAAiBxL,EAAMwP,aAAaH,EAAK7D,GAAQ+D,MAM/DvP,EAAAU,cAACiF,EAAA8J,SAAD,CACE9G,YAAU,EACVsG,KAAMA,EACNS,WAAY,SAAAlH,GAAA,IAAG+G,EAAH/G,EAAG+G,KAAM/D,EAAThD,EAASgD,MAAT,OAAqBxL,EAAMwP,aAAaH,EAAK7D,GAAQ+D,+RC3FvE,IAAAjB,EAAApO,EAAA,kCAAA0H,OAAAC,KAAAyG,GAAAxG,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAmG,EAAAvG,QACA,IAAAgE,EAAA7L,EAAA,iCAAA0H,OAAAC,KAAAkE,GAAAjE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA4D,EAAAhE","file":"static/js/7.c36169e7.js","sourcesContent":["import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Icon } from '../Icon';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Box paddingLeft={iconBefore ? 8 : 0} paddingRight={iconAfter ? 8 : 0}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Box>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import { TextStyle } from 'react-native';\n\nimport { BorderColor, BorderColors, Theme } from '../../theme/ThemeInterface';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: BorderColor;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerColor = (borderColors: BorderColors) => (\n  borderColor: BorderColor,\n) => {\n  // @ts-ignore\n  const presetColor = borderColors[borderColor] as string | undefined;\n\n  return presetColor || borderColor;\n};\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const backgroundColor = getDividerColor(theme.colors.border)(\n    color || theme.colors.border.default,\n  );\n\n  const styleMap = {\n    horizontal: {\n      backgroundColor,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { BorderColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: BorderColor | string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nexport const Divider = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = useTheme();\n\n  const { dividerStyle } = mergeStyles(getDividerStyles, getStyles)(\n    { size, color, position },\n    theme,\n  );\n\n  return <View style={dividerStyle} />;\n};\n","export * from './Divider';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport type GetTabStyles = (theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = theme => {\n  return {\n    buttonStyle: {\n      borderRadius: 0,\n    },\n    containerStyle: {},\n    dividerStyle: {\n      borderRadius: 0,\n      bottom: 0,\n      position: 'absolute',\n    },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { ButtonStyles, GetButtonStyles } from '../Button/Button.styles';\nimport { Divider } from '../Divider';\nimport { getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps extends ButtonProps {\n  isActive?: boolean;\n  getStyles?: ReplaceReturnType<\n    GetButtonStyles,\n    DeepPartial<ButtonStyles & TabStyles>\n  >;\n}\n\nexport const Tab = (props: TabProps) => {\n  const { isActive = false, getStyles, ...buttonProps } = props;\n  const theme = useTheme();\n  const { containerStyle, dividerStyle, buttonStyle, textStyle } = mergeStyles(\n    getTabStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        appearance=\"minimal\"\n        getStyles={() => ({ buttonStyle, textStyle })}\n        {...buttonProps}\n      />\n      {isActive && (\n        <Divider\n          size={4}\n          color={isActive ? 'primary' : 'default'}\n          getStyles={() => ({ dividerStyle })}\n        />\n      )}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { View } from 'react-native';\nimport { Icon } from '../Icon';\nimport { Tabs, Tab } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Tabs\\n  defaultActiveTabIndex={1}\\n  onSetActiveTabIndex={index => console.log(\\'Clicked\\', index)}\\n  activeTabIndex={undefined}\\n  onPress={undefined}\\n  distribution=\\\"fit\\\" // or \\'scrollable\\'\\n  getStyles={(props, theme) => ({\\n    containerStyle: {}, // Only applied when distribution=\\\"fit\\\"\\n    tabContainerStyle: {},\\n    buttonStyle: {},\\n    textStyle: {},\\n    dividerStyle: {},\\n  })}\\n>\\n  <Tab title=\\\"Tab 1\\\" />\\n  <Tab title=\\\"Tab 2\\\" />\\n  <Tab title=\\\"Tab 3\\\" />\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs defaultActiveTabIndex={1} onSetActiveTabIndex={index => console.log('Clicked', index)} activeTabIndex={undefined} onPress={undefined} distribution=\"fit\" // or 'scrollable'\n      getStyles={(props, theme) => ({\n        containerStyle: {},\n        // Only applied when distribution=\"fit\"\n        tabContainerStyle: {},\n        buttonStyle: {},\n        textStyle: {},\n        dividerStyle: {}\n      })} mdxType=\"Tabs\">\n    <Tab title=\"Tab 1\" mdxType=\"Tab\" />\n    <Tab title=\"Tab 2\" mdxType=\"Tab\" />\n    <Tab title=\"Tab 3\" mdxType=\"Tab\" />\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h3>\n    <Playground __position={1} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      distribution=\\\"scrollable\\\"\\n      activeTabIndex={state.activeTabIndex}\\n      onPress={index => setState({ activeTabIndex: index })}\\n    >\\n      <Tab\\n        icon={\\n          <Icon\\n            name=\\\"home\\\"\\n            size={24}\\n            color={state.activeTabIndex === 0 ? \\'#1b877a\\' : \\'#7e7e7e\\'}\\n          />\\n        }\\n      />\\n      <Tab title=\\\"Tab 2\\\" />\\n      <Tab isDisabled title=\\\"Tab 3\\\" />\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs distribution=\"scrollable\" activeTabIndex={state.activeTabIndex} onPress={index => setState({\n          activeTabIndex: index\n        })} mdxType=\"Tabs\">\n        <Tab icon={<Icon name=\"home\" size={24} color={state.activeTabIndex === 0 ? '#1b877a' : '#7e7e7e'} mdxType=\"Icon\" />} mdxType=\"Tab\" />\n        <Tab title=\"Tab 2\" mdxType=\"Tab\" />\n        <Tab isDisabled title=\"Tab 3\" mdxType=\"Tab\" />\n      </Tabs>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"scrollable\"\n    }}>{`Scrollable`}</h3>\n    <Playground __position={2} __code={'<Tabs distribution=\\\"scrollable\\\">\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n  <Tab title=\\\"Unnamed Tab\\\" />\\n</Tabs>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <Tabs distribution=\"scrollable\" mdxType=\"Tabs\">\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n    <Tab title=\"Unnamed Tab\" mdxType=\"Tab\" />\n  </Tabs>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { TabsDistribution } from './Tabs';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n  tabContainerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  dividerStyle: ViewStyle;\n}\n\nexport interface GetTabsStylesProps {\n  distribution: TabsDistribution;\n}\n\nexport type GetTabsStyles = (\n  props: GetTabsStylesProps,\n  theme: Theme,\n) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = ({ distribution }, theme) => {\n  return {\n    buttonStyle: {},\n    containerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n    dividerStyle: {},\n    tabContainerStyle:\n      distribution === 'fit'\n        ? {\n            flex: 1,\n          }\n        : {},\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { FlatList, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  activeTabIndex?: number;\n  children: Array<React.ReactElement<TabProps>>;\n  defaultActiveTabIndex?: number;\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n  distribution?: TabsDistribution;\n\n  onPress: (index: number) => void;\n  onSetActiveTabIndex?: (index: number) => void;\n}\n\nexport interface WrapperProps {\n  children: React.ReactNode;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const {\n    children,\n    activeTabIndex,\n    defaultActiveTabIndex = 0,\n    onPress,\n    onSetActiveTabIndex,\n    getStyles,\n    distribution = 'fit',\n  } = props;\n  const [localActiveTabIndex, setLocalActiveTabIndex] = React.useState(\n    defaultActiveTabIndex,\n  );\n  const theme = useTheme();\n  const isControlled = !!(activeTabIndex || onPress);\n  const {\n    containerStyle,\n    tabContainerStyle,\n    textStyle,\n    buttonStyle,\n    dividerStyle,\n  } = mergeStyles(getTabsStyles, getStyles)({ distribution }, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    const tabCommonProps = {\n      getStyles: () => ({\n        buttonStyle,\n        containerStyle: tabContainerStyle,\n        dividerStyle,\n        textStyle,\n      }),\n    };\n\n    return isControlled\n      ? {\n          ...tabCommonProps,\n          isActive: index === activeTabIndex,\n          onPress: () => onPress(index),\n        }\n      : {\n          ...tabCommonProps,\n          isActive: index === localActiveTabIndex,\n          onPress: () => {\n            setLocalActiveTabIndex(index);\n            if (onSetActiveTabIndex) onSetActiveTabIndex(index);\n          },\n        };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  if (distribution === 'fit') {\n    return (\n      <View style={containerStyle}>\n        {data.map((item, index) => React.cloneElement(tabs[index], item))}\n      </View>\n    );\n  }\n\n  return (\n    <FlatList\n      horizontal\n      data={data}\n      renderItem={({ item, index }) => React.cloneElement(tabs[index], item)}\n    />\n  );\n};\n","export * from './Tabs';\nexport * from './Tab';\n"],"sourceRoot":""}