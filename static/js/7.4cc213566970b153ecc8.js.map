{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["_changeColor","__webpack_require__","getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","focusColor","darken","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Object","keys","forEach","key","defineProperty","exports","enumerable","get","getCounterVariables","container","count","counter","width","getCounterStyles","counterVariables","containerStyle","countStyle","counterStyle","disabledStyle","_Box","_Icon","_Counter","Counter","component","max","min","onIncrement","onDecrement","isDecrementDisabled","isIncrementDisabled","Box","TouchableOpacity","activeOpacity","undefined","Icon","name","concat","Feather","_Text","_ref","IconTag","result","matches","toUpperCase","charAt","slice","convertToPascal","getTextColor","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","Playground","__position","__code","__scope","CounterContainer","Props","ProgressBar","initial","_ref2","incBy","decBy","percent","progressStyle","of","isMDXComponent","getProgressBarStyles","greyDefault","overflow","primaryDefault","_Animation","_ProgressBar","_props$percent","boundPercent","useSpring","springDefaultConfig","Platform","OS","interpolate","w","friction","tension"],"mappings":"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","file":"static/js/7.ef279133.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/ThemeInterface';\nimport { darken } from './changeColor';\n\nexport type ButtonColorProps = ViewStyle & {\n  backgroundColor: string;\n  color: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.button.default,\n          color: theme.colors.button.defaultText,\n\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.button.danger,\n          color: theme.colors.button.dangerText,\n\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.button.primary,\n          color: theme.colors.button.primaryText,\n\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.button.secondary,\n          color: theme.colors.button.secondaryText,\n\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.button.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.default,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (props: {}, theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = (props, theme) => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)({}, theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Box paddingRight={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Box paddingLeft={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n    </View>\n  );\n};\n","export * from './Counter';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { ProgressBar } from '.';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Counter } from '../Counter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, incBy, decBy }) => (\\n    <Box>\\n      <ProgressBar\\n        percent={count}\\n        size=\\\"large\\\"\\n        getStyles={(props, theme) => ({\\n          containerStyle: {},\\n          progressStyle: {},\\n        })}\\n      />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decBy(10)}\\n        onIncrement={() => incBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      ProgressBar,\n      Box,\n      Button,\n      Counter\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={0} mdxType=\"CounterContainer\">\n    {({\n          count,\n          incBy,\n          decBy\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={count} size=\"large\" getStyles={(props, theme) => ({\n            containerStyle: {},\n            progressStyle: {}\n          })} mdxType=\"ProgressBar\" />\n        <Counter count={count} onDecrement={() => decBy(10)} onIncrement={() => incBy(10)} min={0} max={100} mdxType=\"Counter\" />\n      </Box>}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/ThemeInterface';\n\nexport interface ProgressBarVariables {\n  container: ViewStyle;\n  progress: ViewStyle;\n}\n\nexport interface ProgressBarStylesProps {\n  size: ControlSize;\n}\n\nexport type GetProgressBarStyles = (\n  progressStylesProps: ProgressBarStylesProps,\n  theme: Theme,\n) => ProgressBarStyles;\n\nexport interface ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressBarStyles: GetProgressBarStyles = ({ size }, theme) => {\n  const height = theme.controlHeights[size] - 16;\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      borderRadius: 999,\n      height,\n      overflow: 'hidden',\n    },\n    progressStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 999,\n      height: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetProgressBarStyles,\n  getProgressBarStyles,\n  ProgressBarStyles,\n} from './ProgressBar.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface ProgressBarProps {\n  percent?: number;\n  size?: ControlSize;\n  getStyles?: ReplaceReturnType<\n    GetProgressBarStyles,\n    DeepPartial<ProgressBarStyles>\n  >;\n  testID?: string;\n}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, size = 'medium', getStyles, testID } = props;\n  const theme = useTheme();\n\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressBarStyles,\n    getStyles,\n  )({ size }, theme);\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <AnimatedView\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        // @ts-ignore\n        style={{\n          ...progressStyle,\n          width: width.interpolate(w => `${w}%`),\n        }}\n      />\n    </View>\n  );\n};\n","export * from './ProgressBar';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}