{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["State","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Icon","TextInput","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","size","onChangeText","text","leftIcon","___WEBPACK_IMPORTED_MODULE_7__","name","isInvalid","isClearable","onClear","console","log","of","className","isMDXComponent","getTextInputStyles","theme","_ref$size","_ref$isClearable","_ref$isDisabled","isDisabled","_ref$isInvalid","numberOfLines","hasLeftIcon","hasRightIcon","rightIcon","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","containerStyle","position","inputStyle","objectSpread","backgroundColor","colors","background","content","borderColor","border","borderWidth","color","width","greyDark","danger","paddingVertical","leftContainerStyle","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","placeholderTextColor","muted","rightContainerStyle","right","TextInputBase","getStyles","innerRef","_props$isClearable","_props$isDisabled","_props$onClear","textContentType","_props$onChangeText","placeholderTextColorProp","textInputProps","objectWithoutProperties","useTheme","_mergeStyles","mergeStyles","react","View","style","esm_extends","ref","editable","TouchableOpacity","onPress","Icon_web","TextInput_TextInputBase","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/16.4031938a.js","sourcesContent":["import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"TextInput\\\"\\n      size=\\\"large\\\"\\n      onChangeText={text => setState({ value: text })}\\n      leftIcon={<Icon name=\\\"menu\\\" />}\\n      isInvalid={false}\\n      isClearable // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"TextInput\" size=\"large\" onChangeText={text => setState({\n          value: text\n        })} leftIcon={<Icon name=\"menu\" mdxType=\"Icon\" />} isInvalid={false} isClearable // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={TextInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TextInputStyles {\n  inputStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\ngetStyles={(TextInputProps, Theme) => TextInputStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View leftContainerStyle>{leftIcon}</View>\n  <RNTextInput inputStyle placeholderTextColor />\n  <View rightContainerStyle>{rightIcon}</View>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { TextInputProps } from './TextInput';\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport type GetTextInputStyles = (\n  props: TextInputProps,\n  theme: Theme,\n) => Partial<TextInputStyles>;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    numberOfLines,\n    leftIcon,\n    rightIcon,\n  },\n  theme,\n) => {\n  const hasLeftIcon = !!leftIcon;\n  const hasRightIcon = !!(rightIcon || isClearable);\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    inputStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderRadius,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      height,\n      paddingLeft,\n      paddingRight,\n      width: '100%',\n      ...textSize,\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n      ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n      ...(numberOfLines\n        ? {\n            height: numberOfLines * height,\n            paddingVertical: 16,\n          }\n        : {}),\n      ...(hasLeftIcon && { paddingLeft: 40 }),\n      ...(hasRightIcon && { paddingRight: 40 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n      zIndex: 1,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { GetTextInputStyles, getTextInputStyles } from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Icon placed on the left side\n   */\n  leftIcon?: React.ReactNode;\n\n  /**\n   * Icon placed on the left side\n   */\n  rightIcon?: React.ReactNode;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n\n  /** Use `ref` instead */\n  innerRef?: React.Ref<RNTextInput>;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: GetTextInputStyles;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    getStyles,\n    innerRef,\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    leftIcon,\n    onClear = () => {\n      return;\n    },\n    rightIcon,\n    size = 'medium',\n    value,\n    textContentType,\n    onChangeText = () => {\n      return;\n    },\n    placeholderTextColor: placeholderTextColorProp,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    inputStyle,\n    placeholderTextColor,\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n  } = mergeStyles(getTextInputStyles, getStyles)(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {leftIcon && <View style={leftContainerStyle}>{leftIcon}</View>}\n      {/*\n      // @ts-ignore: name prop being passed for web */}\n      <RNTextInput\n        ref={innerRef}\n        style={inputStyle}\n        editable={!isDisabled}\n        placeholderTextColor={placeholderTextColorProp || placeholderTextColor}\n        name={textContentType}\n        value={value}\n        onChangeText={onChangeText}\n        textContentType={textContentType}\n        {...textInputProps}\n      />\n      {((value && isClearable) || rightIcon) && (\n        <View style={rightContainerStyle}>\n          {value && isClearable ? (\n            <TouchableOpacity\n              onPress={() => {\n                onChangeText('');\n                onClear();\n              }}\n            >\n              <Icon name=\"x\" color={theme.colors.text.default} />\n            </TouchableOpacity>\n          ) : (\n            rightIcon\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}