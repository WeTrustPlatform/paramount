{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Collapsible/Collapsible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Collapsible/Collapsible.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Collapsible","Toggle","___WEBPACK_IMPORTED_MODULE_7__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_6__","title","isOpen","onOpen","onClose","___WEBPACK_IMPORTED_MODULE_5__","marginVertical","justifyContent","alignItems","of","isMDXComponent","_props$initialIsOpen","initialIsOpen","_props$onOpen","_props$onClose","_props$overrides","overrides","_React$useState","React","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","isOpened","setIsOpened","isControlledUsage","isFinalOpened","handlePress","_getOverrides","getOverrides","StyledTouchable","onPress","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledContent","Content","_getOverrides6","contentProps","_getOverrides7","StyledIconOpen","IconOpen","_getOverrides8","iconOpenProps","_getOverrides9","StyledIconClose","IconClose","_getOverrides10","iconCloseProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","display","flexDirection","textProps","_Typography__WEBPACK_IMPORTED_MODULE_10__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","StyledIcon","showOpen","_Icon__WEBPACK_IMPORTED_MODULE_9__","name","text","_props$initial","useState","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set"],"mappings":"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","file":"static/js/22.405c76bb.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Collapsible, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"collapsible\"\n    }}>{`Collapsible`}</h1>\n    <p>{`Component to reveal and hide content`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Collapsible\\n      title={\\n        on ? \\'Close controlled collapsible\\' : \\'Open controlled collapsible\\'\\n      }\\n      isOpen={on}\\n      onOpen={toggle}\\n      onClose={toggle}\\n    >\\n      <Box\\n        marginVertical={16}\\n        justifyContent=\\\"center\\\"\\n        alignItems=\\\"center\\\"\\n        height={300}\\n        backgroundColor=\\\"#67c6bb\\\"\\n      />\\n    </Collapsible>\\n  )}\\n</Toggle>\\n<Collapsible title=\\\"Uncontrolled collapsible\\\">\\n  <Box\\n    marginVertical={16}\\n    justifyContent=\\\"center\\\"\\n    alignItems=\\\"center\\\"\\n    height={300}\\n    backgroundColor=\\\"#67c6bb\\\"\\n  />\\n</Collapsible>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Collapsible,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Collapsible title={on ? 'Close controlled collapsible' : 'Open controlled collapsible'} isOpen={on} onOpen={toggle} onClose={toggle} mdxType=\"Collapsible\">\n        <Box marginVertical={16} justifyContent=\"center\" alignItems=\"center\" height={300} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />\n      </Collapsible>}\n  </Toggle>\n  <Collapsible title=\"Uncontrolled collapsible\" mdxType=\"Collapsible\">\n    <Box marginVertical={16} justifyContent=\"center\" alignItems=\"center\" height={300} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />\n  </Collapsible>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Collapsible} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Icon } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\ninterface CollapsibleBaseProps {\n  /** Title of the collapsible */\n  title?: OptionalString;\n\n  /** Content revealed when collapsible is opened */\n  children?: React.ReactNode;\n\n  /**\n   * Set whether it is opened initially, for uncontrolled usage.\n   * @default false\n   */\n  initialIsOpen?: boolean;\n\n  /**\n   * When true, content of Collapsible is revealed\n   * @default false\n   */\n  isOpen?: boolean;\n\n  /** Called when header is pressed to open collapsible */\n  onOpen?: () => void;\n\n  /** Called when header is pressed to close collapsible */\n  onClose?: () => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CollapsibleOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconOpen: IconProps;\n  IconClose: IconProps;\n  Content: ContentProps;\n}\n\nexport interface CollapsibleProps\n  extends WithOverrides<CollapsibleBaseProps, CollapsibleOverrides> {}\n\nexport const Collapsible = (props: CollapsibleProps) => {\n  const {\n    title,\n    children,\n    initialIsOpen = false,\n    isOpen,\n    testID,\n    onOpen = () => {\n      return;\n    },\n    onClose = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n  const [isOpened, setIsOpened] = React.useState(initialIsOpen);\n\n  const isControlledUsage = typeof isOpen === 'boolean';\n  const isFinalOpened = isControlledUsage ? isOpen : isOpened;\n\n  const handlePress = React.useCallback(() => {\n    if (isControlledUsage) {\n      if (isOpen) {\n        onClose();\n      } else {\n        onOpen();\n      }\n    } else {\n      if (isOpened) {\n        setIsOpened(false);\n        onClose();\n      } else {\n        setIsOpened(true);\n        onOpen();\n      }\n    }\n  }, [isOpened, setIsOpened, isOpen, onClose, isControlledUsage]);\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    { testID, onPress: handlePress },\n    dlv(theme, 'overrides.Collapsible.Touchable'),\n    overrides.Touchable,\n  );\n\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    { title },\n    dlv(theme, 'overrides.Collapsible.Title'),\n    overrides.Title,\n  );\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    { isOpened: !!isFinalOpened },\n    dlv(theme, 'overrides.Collapsible.Content'),\n    overrides.Content,\n  );\n  const [IconOpen, iconOpenProps] = getOverrides(\n    StyledIconOpen,\n    props,\n    {},\n    dlv(theme, 'overrides.Collapsible.IconOpen'),\n    overrides.IconOpen,\n  );\n  const [IconClose, iconCloseProps] = getOverrides(\n    StyledIconClose,\n    props,\n    {},\n    dlv(theme, 'overrides.Collapsible.IconClose'),\n    overrides.IconClose,\n  );\n\n  return (\n    <>\n      <Touchable {...touchableProps}>\n        <Title {...titleProps} />\n        {isFinalOpened ? (\n          <IconClose {...iconCloseProps} />\n        ) : (\n          <IconOpen {...iconOpenProps} />\n        )}\n      </Touchable>\n      <Content {...contentProps}>{children}</Content>\n    </>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { style, children, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'row',\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: OptionalString;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text size=\"large\" style={[{}, getStyle(props, style)]} {...textProps}>\n      {title}\n    </Text>\n  );\n};\n\ninterface ContentProps extends ViewProps {\n  children?: React.ReactNode;\n  isOpened: boolean;\n}\n\nconst StyledContent = (props: ContentProps) => {\n  const { children, style, isOpened, ...viewProps } = props;\n\n  return (\n    <View style={[{ paddingLeft: 4 }, style]} {...viewProps}>\n      {isOpened && children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  showOpen?: boolean;\n}\n\nconst StyledIcon = (props: StyledIconProps) => {\n  const { showOpen } = props;\n  const theme = useTheme();\n\n  return (\n    <View style={{ paddingLeft: 4 }}>\n      <Icon\n        size=\"large\"\n        name={showOpen ? 'chevron-up' : 'chevron-down'}\n        color={theme.colors.text.default}\n      />\n    </View>\n  );\n};\n\n// tslint:disable-next-line\ninterface IconProps {}\n\nconst StyledIconOpen = () => <StyledIcon showOpen={false} />;\n\nconst StyledIconClose = () => <StyledIcon showOpen={true} />;\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n"],"sourceRoot":""}