{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","TextInput","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","isDisabled","isInvalid","textContentType","keyboardType","onChangeText","onSubmitEditing","e","console","log","leftIcon","___WEBPACK_IMPORTED_MODULE_7__","rightIcon","undefined","isClearable","onClear","getStyles","inputStyle","placeholderTextColor","muted","isMDXComponent","getTextInputStyles","numberOfLines","hasLeftIcon","hasRightIcon","controlHeight","controlHeights","containerStyle","position","focusedStyle","objectSpread","content","borderColor","border","borderRadius","controlBorderRadius","borderWidth","height","paddingLeft","controlPaddings","paddingRight","width","textSizes","greyDark","danger","paddingVertical","leftContainerStyle","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","rightContainerStyle","right","TextInputBase","innerRef","_props$isDisabled","_props$isInvalid","_props$leftIcon","_props$onClear","_props$rightIcon","_props$size","_props$onChangeText","textInputProps","objectWithoutProperties","_mergeStyles","mergeStyles","react","View","esm_extends","ref","editable","TouchableOpacity","onPress","Icon_web","TextInput_TextInputBase","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","flexDirection","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","small","medium","large","overlay","greyLight","greyDefault","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"8nBAcA,IAAMA,EAAW,CACfC,gBAAiB,SAACC,EAAwBC,GAExC,OAAIA,EAAMC,OAAOC,WAAWH,GAEnB,CAAED,gBAAiBE,EAAMC,OAAOC,WAAWH,IAE7C,CACLD,gBAAiBC,IAGrBI,UAAW,SAACA,EAA8BH,GAA/B,OACTA,EAAMI,WAAWD,IACnBE,MAAO,SAACA,EAAuBL,GAAxB,OAAyCA,EAAMM,gBAAgBD,KAG3DE,EAAM,SAACC,GAAoB,IAC9BC,EAAsDD,EAAtDC,SAAiBC,EAAqCF,EAA5CG,MAAkBC,EAA0BJ,EAA1BI,OAAWC,EADTC,OAAAC,EAAA,EAAAD,CACwBN,EADxB,+BAEhCR,EAAQgB,cACRC,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQN,EACjB,GAAIM,EAAM,CAER,IAAMC,EAAUvB,EAASsB,GAEzB,GAAIC,EAAS,CAEX,IAAMT,EAAQS,EAAQP,EAAWM,GAAOnB,GAExCiB,EAAkBI,KAAKV,QAGvBO,EAAWC,GAAQN,EAAWM,GAKpC,OACEG,EAAA,cAACC,EAAA,EAAD,CAAMX,OAAQA,EAAQD,MAAO,CAACO,EAAYD,EAAmBP,GAA7Dc,SAAA,CAAAC,mFAAAC,WAAA,KACGjB,k/BC3CA,IAAMkB,EAAQ,SAACnB,GAAsB,IAClCC,EAA8BD,EAA9BC,SADkCmB,EACJpB,EAApBqB,eADwB,IAAAD,KAAAE,EAEhBC,IAAMC,SAASH,GAFCI,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAgB,EAAA,GAEnCK,EAFmCF,EAAA,GAE5BG,EAF4BH,EAAA,GAQ1C,OAAOxB,EAAS,CAAE0B,QAAOC,SAJLL,IAAMM,YAAY,SAAAC,GACpCF,EAASE,IACR,6dCFE,IAAMC,EAAO,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAM1C,EAA6ByC,EAA7BzC,MAAO2C,EAAsBF,EAAtBE,KAC5B1C,EAAQgB,cAER2B,EAAUC,EAAO,KAAAC,OAZzB,SAAyBJ,GACvB,IAIMK,EAASL,EAAKM,QAAQ,UAJV,SAACC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOH,EAAOI,OAAO,GAAGD,cAAgBH,EAAOK,MAAM,GAMxBC,CAAgBX,KAE7C,OACEY,EAAA,cAACV,EAAD,CACE5C,MAAOA,EAAQuD,YAAatD,EAAMC,OAAOsD,KAA1BD,CAAgCvD,GAASA,EACxD2C,KAAMA,EAFRlB,SAAA,CAAAC,yFAAAC,WAAA,u5BCVE8B,EAAc,GAGdC,EAAY,UACH,SAASC,EAATlB,GAGZ,IAFDmB,EAECnB,EAFDmB,WACGnD,EACFM,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,gBACD,OAAO1B,OAAA8C,EAAA,EAAA9C,CAAC2C,EAAD3C,OAAA+C,EAAA,EAAA/C,CAAA,GAAe0C,EAAiBhD,EAAhC,CAAuCmD,WAAYA,EAAYG,QAAQ,YAAvEtC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,MAGLZ,OAAA8C,EAAA,EAAA9C,CAAA,KAAAA,OAAA+C,EAAA,EAAA/C,CAAQ,CACNkD,GAAM,aADR,CAAAxC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,mBAGAZ,OAAA8C,EAAA,EAAA9C,CAAA,KAAAU,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,mCAAkCZ,OAAA8C,EAAA,EAAA9C,CAAA,cAAYmD,WAAW,IAAvBzC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,kBAAlC,6CAAqIZ,OAAA8C,EAAA,EAAA9C,CAAA,IAAAA,OAAA+C,EAAA,EAAA/C,CAAA,CAAGmD,WAAW,KAAQ,CACvJC,KAAQ,0DADyH,CAAA1C,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,2BAGrIZ,OAAA8C,EAAA,EAAA9C,CAAA,KAAAA,OAAA+C,EAAA,EAAA/C,CAAQ,CACNkD,GAAM,SADR,CAAAxC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,eAGAZ,OAAA8C,EAAA,EAAA9C,CAACqD,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,szBAAi0BC,QAAS,CAC32B9D,MAAO+D,KAAOA,KAAK/D,MAAQA,EAC3BgE,eACAC,UACAlE,QACAoB,UACAY,SACAmC,eACCZ,QAAQ,aARXtC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KASFZ,OAAA8C,EAAA,EAAA9C,CAAC6D,EAAA,EAAD,CAAO9C,QAAS,CACV+C,MAAO,IACNd,QAAQ,QAFftC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KAGG,SAAAmD,GAAA,IACK1C,EADL0C,EACK1C,MACAC,EAFLyC,EAEKzC,SAFL,OAGStB,OAAA8C,EAAA,EAAA9C,CAACgE,EAAA,EAAD,CAAWF,MAAOzC,EAAMyC,MAAOG,YAAY,2BAA2BrC,KAAK,QAAQsC,YAAY,EAAOC,WAAW,EAAOC,gBAAgB,eAC9IC,aAAa,gBAAgBC,aAAc,SAAA7B,GAAI,OAAInB,EAAS,CAC1DwC,MAAOrB,KACL8B,gBAAiB,SAAAC,GAAC,OAAIC,QAAQC,IAAI,oBAAoBC,SAAU3E,OAAA8C,EAAA,EAAA9C,CAAC4E,EAAA,EAAD,CAAMjD,KAAK,OAAOC,KAAM,GAAIoB,QAAQ,OAApCtC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,MAA+CiE,eAAWC,EAAWC,aAAa,EACtJC,QAAS,kBAAMP,QAAQC,IAAI,aAC3BO,UAAW,SAACvF,EAAOR,GAAR,MAAmB,CAC5BgG,WAAY,GACZC,qBAAsBjG,EAAMC,OAAOsD,KAAK2C,QACtCpC,QAAQ,YARNtC,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,mMAcdgC,EAAWyC,gBAAiB,8qDClCrB,IAAMC,EAAyC,SAAA5D,EAEpDxC,GACG,IAFD0C,EAECF,EAFDE,KAAMsC,EAELxC,EAFKwC,WAAYC,EAEjBzC,EAFiByC,UAAWoB,EAE5B7D,EAF4B6D,cAAeC,EAE3C9D,EAF2C8D,YAAaC,EAExD/D,EAFwD+D,aAGrDC,EAAgBxG,EAAMyG,eAAe/D,GAE3C,MAAO,CACLgE,eAAgB,CACdC,SAAU,YAEZC,aAAc,GACdZ,WAAWlF,OAAA+F,EAAA,EAAA/F,CAAA,CACThB,gBAAiBE,EAAMC,OAAOC,WAAW4G,QACzCC,YAAa/G,EAAMC,OAAO+G,OAAb,QACbC,aAAcjH,EAAMkH,oBAAoBxE,GACxCyE,YAAa,EACbpH,MAAOC,EAAMC,OAAOsD,KAAb,QACP6D,OAAQpH,EAAMyG,eAAe/D,GAC7B2E,YAAarH,EAAMsH,gBAAgB5E,GACnC6E,aAAcvH,EAAMsH,gBAAgB5E,GACpC8E,MAAO,QACJxH,EAAMyH,UAAU/E,GACfsC,EACA,CAAElF,gBAAiBE,EAAMC,OAAOC,WAAWwH,UAC3C,GACAzC,EAAY,CAAE8B,YAAa/G,EAAMC,OAAO+G,OAAOW,QAAW,GAC1DtB,EACA,CACEe,OAAQf,EAAgBG,EACxBoB,gBAAiB,IAEnB,GACAtB,GAAe,CAAEe,YAAa,IAC9Bd,GAAgB,CAAEgB,aAAc,KAEtCM,mBAAoB,CAClBC,WAAY,SACZC,QAAS,OACTX,OAAQ,OACRY,eAAgB,SAChBC,KAAM,EACNC,kBAAmB,EACnBvB,SAAU,WACVwB,OAAQ,GAEVlC,qBAAsBjG,EAAMC,OAAOsD,KAAK2C,MACxCkC,oBAAqB,CACnBN,WAAY,SACZC,QAAS,OACTX,OAAQ,OACRY,eAAgB,SAChBE,kBAAmB,EACnBvB,SAAU,WACV0B,MAAO,EACPF,OAAQ,wmBC/Cd,IAAMG,EAAgB,SAAC9H,GAA0B,IAE7CuF,EAkBEvF,EAlBFuF,UACAwC,EAiBE/H,EAjBF+H,SACA1C,EAgBErF,EAhBFqF,YAJ6C2C,EAoB3ChI,EAfFwE,kBAL6C,IAAAwD,KAAAC,EAoB3CjI,EAdFyE,iBAN6C,IAAAwD,KAAAC,EAoB3ClI,EAbFiF,gBAP6C,IAAAiD,EAOlC,KAPkCA,EAQ7CrC,EAYE7F,EAZF6F,cAR6CsC,EAoB3CnI,EAXFsF,eAT6C,IAAA6C,EASnC,aATmCA,EAAAC,EAoB3CpI,EARFmF,iBAZ6C,IAAAiD,EAYjC,KAZiCA,EAAAC,EAoB3CrI,EAPFkC,YAb6C,IAAAmG,EAatC,SAbsCA,EAc7CjE,EAMEpE,EANFoE,MACAM,EAKE1E,EALF0E,gBAf6C4D,EAoB3CtI,EAJF4E,oBAhB6C,IAAA0D,EAgB9B,aAhB8BA,EAmB1CC,EAnB0CjI,OAAAkI,EAAA,EAAAlI,CAoB3CN,EApB2C,kKAqBzCR,EAAQgB,cArBiCiI,EA6B3CC,YAAY9C,EAAoBL,EAAhCmD,CACF,CACE5C,cAAeb,EACfc,gBAAiBZ,IAAaE,GAC9Bb,aACAC,YACAoB,gBACA3D,QAEF1C,GAdAgG,EAxB6CiD,EAwB7CjD,WACAC,EAzB6CgD,EAyB7ChD,qBACAS,EA1B6CuC,EA0B7CvC,eACAmB,EA3B6CoB,EA2B7CpB,mBACAO,EA5B6Ca,EA4B7Cb,oBAaF,OACEe,EAAA,cAACC,EAAA,EAAD,CAAMzI,MAAO+F,EAAblF,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KACEyH,EAAA,cAACC,EAAA,EAAD,CAAMzI,MAAOkH,EAAbrG,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KAAkC+D,GAGlC0D,EAAA,cAACzE,EAAA,EAAD5D,OAAAuI,EAAA,EAAAvI,CAAA,CACEwI,IAAKf,EACL5H,MAAOqF,EACPuD,UAAWvE,EACXiB,qBAAsBA,EACtBxD,KAAMyC,EACNmB,cAAeA,EACfzB,MAAOA,EACPQ,aAAcA,EACdF,gBAAiBA,GACb6D,EAVN,CAAAvH,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,OAYAyH,EAAA,cAACC,EAAA,EAAD,CAAMzI,MAAOyH,EAAb5G,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KACGkD,GAASiB,EACRsD,EAAA,cAACK,EAAA,EAAD,CACEC,QAAS,WACPrE,EAAa,IACbU,KAHJtE,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,KAMEyH,EAAA,cAACO,EAAA,EAAD,CAAMjH,KAAK,IAAIC,KAAM,GAAI3C,MAAOC,EAAMC,OAAOsD,KAAb,QAAhC/B,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,QAGFiE,GAAa,QAOVjB,EAAY3C,aACvB,SAACvB,EAAO8I,GACN,OAAOH,EAAA,cAACQ,EAAD7I,OAAAuI,EAAA,EAAAvI,CAAA,GAAmBN,EAAnB,CAA0B+H,SAAUe,EAApC9H,SAAA,CAAAC,SAAAsC,EAAArC,WAAA,02CC5EJ,IAAMkI,EAAgB,SAACC,GAAD,OAAgC,SAC3DC,GAD2D,OAExDD,EAAaC,8NAEX,IAAMC,EAAgB,SAACC,GAAD,OAA8B,SACzDC,GAEA,GAAKA,EAKL,OAHyBD,EAAYC,IAGVA,6NAGtB,IAAM3G,EAAe,SAAC4G,GAAD,OAA4B,SACtDC,GAKA,OAFoBD,EAAWC,IAETA,4NAGjB,IAAMC,EAAc,SAAC3C,GAAD,OAA0B,SACnD/E,GAKA,OAFuB+E,EAAU/E,IAER,CAAE2H,SAAU3H,oMAGhC,IAAM4H,EAA+B,SAAA9H,EAE1CxC,GACG,IAFD0C,EAECF,EAFDE,KAAM3C,EAELyC,EAFKzC,MAAO+J,EAEZtH,EAFYsH,WAAYS,EAExB/H,EAFwB+H,SAAUC,EAElChI,EAFkCgI,SAAUC,EAE5CjI,EAF4CiI,MAAOC,EAEnDlI,EAFmDkI,UAAWC,EAE9DnI,EAF8DmI,OAG3DC,EAAYR,EAAYpK,EAAMyH,UAAlB2C,CAA6B1H,GAE/C,MAAO,CACLmI,UAAU/J,OAAAgK,EAAA,EAAAhK,CAAA,GACL8J,EADI,CAEP7K,MAAOuD,EAAatD,EAAMC,OAAOsD,KAA1BD,CAAgCvD,GACvC+J,WAAYF,EAAc5J,EAAM6J,aAApBD,CAAkCE,GAC9CG,WACEF,EAAc/J,EAAMgK,YAApBD,CAAiCY,IAAWC,EAAUX,WACxDc,UAAWN,GACPF,EACA,CACES,UAAW,aACXC,cAAe,OAEjB,GACAT,GAAY,CACdU,UAAW,UAETR,GAAa,CACfS,cAAeT,26BCxER,IAAAU,EACJ,CACPC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WANEL,EASP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAdEL,EAiBR,CACHC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtBEL,EAyBL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9BEL,EAiCL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtCEL,EAyCN,CACLC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9CEL,EAiDP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtDEL,EAyDL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,0rDChEb,IAgBMvE,EAAoC,CACxCwE,MAAO,EAEPC,OAAQ,EAERC,MAAO,GAGH3L,EAAiB,CACrBC,WAAY,CACVqL,KAAM,QACNzE,QAAS,QACT+E,QAAS,kBAETC,UAAWV,EAAgBC,SAC3BU,YAAa,UACbrE,SAAU0D,EAAgBE,MAE1BU,aAAcZ,EAAaC,SAC3BY,eAAgBb,EAAaG,KAC7BW,YAAad,EAAaI,KAE1BW,eAAgBf,EAAeC,SAC/Be,iBAAkBhB,EAAeG,KACjCc,cAAejB,EAAeI,KAE9Bc,YAAalB,EAAYC,SACzBkB,cAAenB,EAAYG,KAC3BiB,WAAYpB,EAAYI,KAExBiB,UAAWrB,EAAaC,SACxBqB,YAAatB,EAAaG,KAC1BoB,SAAUvB,EAAaI,KAEvBoB,aAAcxB,EAAcC,SAC5BwB,eAAgBzB,EAAcG,KAC9BuB,YAAa1B,EAAcI,KAE3BuB,aAAc3B,EAAeC,SAC7B2B,eAAgB5B,EAAeG,KAC/B0B,YAAa7B,EAAeI,MAG9BxE,OAAQ,CACNkG,QAAS9B,EAAgBE,MAEzB6B,QAAS/B,EAAaK,QACtB2B,UAAWhC,EAAeK,QAE1B9D,OAAQyD,EAAYK,QACpB4B,KAAMjC,EAAaK,QACnB6B,QAASlC,EAAcK,QACvB8B,QAASnC,EAAeK,SAG1B+B,OAAQ,CACNC,SAAUrC,EAAgBE,MAC1BoC,aAActC,EAAgBK,QAE9ByB,QAAS9B,EAAgBC,SACzBsC,YAAavC,EAAgBK,QAE7B0B,QAAS/B,EAAaG,KACtBqC,YAAa,QAEbR,UAAWhC,EAAeG,KAC1BsC,cAAe,QAEflG,OAAQyD,EAAYG,KACpBuC,WAAY,SAGdvK,KAAM,CACJwK,KAAM3C,EAAgBK,QACtByB,QAAS9B,EAAgBK,QACzBvF,MAAOkF,EAAgBI,KACvBwC,MAAO,QACPC,SAAU,QAEVd,QAAS/B,EAAaK,QACtB2B,UAAWhC,EAAeK,QAE1B9D,OAAQyD,EAAYK,QACpB4B,KAAMjC,EAAaK,QACnB6B,QAASlC,EAAcK,QACvB8B,QAASnC,EAAeK,UAItBrL,EAAyB,CAC7B,CACED,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,EACfC,aAAc,GAEhB,CACElO,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,IACfC,aAAc,GAEhB,CACElO,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,GACfC,aAAc,IAEhB,CACElO,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,IACfC,aAAc,IAEhB,CACElO,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,GACfC,aAAc,GAEhB,CACElO,UAAW,EACX+N,YAAa9C,EAAgBI,KAC7B2C,aAAc,CAAE3G,MAAO,EAAGJ,OAAQ,GAClCgH,cAAe,IACfC,aAAc,IAmNLC,EAAsB,CACjCrO,SACAsO,MAjNmB,CACnBC,MAAO,CACLC,QAAS,CACP3O,gBAAiBsL,EAAgBG,KACjCxL,MAAO,SAGT2O,KAAM,CACJ5O,gBAAiBsL,EAAaG,KAC9BxL,MAAO,SAGT4O,IAAK,CACH7O,gBAAiBsL,EAAYG,KAC7BxL,MAAO,SAGT6O,OAAQ,CACN9O,gBAAiBsL,EAAeG,KAChCxL,MAAO,SAGT8O,OAAQ,CACN/O,gBAAiBsL,EAAeG,KAChCxL,MAAOqL,EAAeK,SAGxBqD,MAAO,CACLhP,gBAAiBsL,EAAcG,KAC/BxL,MAAO,SAGTgP,KAAM,CACJjP,gBAAiBsL,EAAaG,KAC9BxL,MAAO,SAGTiP,OAAQ,CACNlP,gBAAiBsL,EAAeG,KAChCxL,MAAO,UAIXkP,OAAQ,CACNR,QAAS,CACP3O,gBAAiBsL,EAAgBE,MACjCvL,MAAOqL,EAAgBK,SAGzBiD,KAAM,CACJ5O,gBAAiBsL,EAAaE,MAC9BvL,MAAOqL,EAAaK,SAGtBkD,IAAK,CACH7O,gBAAiBsL,EAAYE,MAC7BvL,MAAOqL,EAAYK,SAGrBmD,OAAQ,CACN9O,gBAAiBsL,EAAeE,MAChCvL,MAAOqL,EAAeK,SAGxBoD,OAAQ,CACN/O,gBAAiBsL,EAAeE,MAChCvL,MAAOqL,EAAeK,SAGxBqD,MAAO,CACLhP,gBAAiBsL,EAAcE,MAC/BvL,MAAOqL,EAAcK,SAGvBsD,KAAM,CACJjP,gBAAiBsL,EAAaE,MAC9BvL,MAAOqL,EAAaK,SAGtBuD,OAAQ,CACNlP,gBAAiBsL,EAAeE,MAChCvL,MAAOqL,EAAeK,WAkI1B5B,aA3HgB,QAAhBqF,IAASC,GACL,CACEC,QAAO,iKACPC,KAAI,mGACJ9L,KAAI,+JAEN,CACE6L,QAAS,SACTC,KAAM,SACN9L,KAAM,UAmHZyG,YAhH+B,CAC/BsF,KAAM,OACNhE,MAAO,MACPiE,OAAQ,UA+GRC,aA5GiC,CACjCC,SAAU,CACRpF,SAAU,GACVqF,eAAgB,GAChBC,WAAY,IAGdC,QAAS,CACPvF,SAAU,GACVqF,eAAgB,GAChBC,WAAY,IAGdE,OAAQ,CACNxF,SAAU,GACVqF,eAAgB,IAChBC,WAAY,IAGd/D,MAAO,CACLvB,SAAU,GACVqF,eAAgB,IAChBC,WAAY,IAGdhE,OAAQ,CACNtB,SAAU,GACVqF,eAAgB,IAChBC,WAAY,IAGdjE,MAAO,CACLrB,SAAU,GACVqF,eAAgB,IAChBC,WAAY,KA2EdG,eAvEqC,CACrCpE,MAAO,CACLrB,SAAU,GACVsF,WAAY,IAGdhE,OAAQ,CACNtB,SAAU,GACVsF,WAAY,IAGd/D,MAAO,CACLvB,SAAU,GACVsF,WAAY,KA2DdlI,UAvD2B,CAC3BmE,MAAO,CACLvB,SAAU,IAEZsB,OAAQ,CACNtB,SAAU,IAEZqB,MAAO,CACLrB,SAAU,IAEZ0F,OAAQ,CACN1F,SAAU,KA8CZjK,aAEA8G,sBACAT,eA3WmC,CACnCiF,MAAO,GAEPC,OAAQ,GAERC,MAAO,IAuWPtE,gBApXoC,CACpCoE,MAAO,EAEPC,OAAQ,GAERC,MAAO,IAiXPtL,gBAhDuC,CACvC0P,OAAQ,CACN/I,aAAc,KAEhBgJ,KAAM,CACJhJ,aAAc,KAEhBiJ,QAAS,CACPjJ,aAAcC,EAAoByE,QAEpCwE,cAAe,CACbC,uBAAwBlJ,EAAoByE,OAC5C0E,wBAAyBnJ,EAAoByE,QAE/C2E,YAAa,CACXF,uBAAwBlJ,EAAoByE,OAC5C4E,oBAAqBrJ,EAAoByE,QAE3C6E,aAAc,CACZH,wBAAyBnJ,EAAoByE,OAC7C8E,qBAAsBvJ,EAAoByE,QAE5C+E,WAAY,CACVH,oBAAqBrJ,EAAoByE,OACzC8E,qBAAsBvJ,EAAoByE,QAE5CgF,OAAQ,CACN1J,aAAc,IAuBhBtD,WAAY,utQCtGP,IAAMiN,EAAe7O,IAAM8O,cAAcvC,qfAOzC,IAAMwC,EAAc,SAAC9Q,GAC1B,OAAOA,EACH+Q,IAAiBzC,EAActO,GAC/BsO,6KAGC,IAAM0C,EAAgB,SAACxQ,GAA8B,IAClDC,EAAmCD,EAAnCC,SADkDwQ,EACfzQ,EAAzBoE,MAEZ5E,EAAQ8Q,OAH4C,IAAAG,EAChC3C,EADgC2C,GAK1D,OACEC,EAAAC,EAAAC,cAACR,EAAaS,SAAd,CAAuBzM,MAAO5E,EAA9BwB,SAAA,CAAAC,4EAAAC,WAAA,MAAsCjB,gLAInC,IAAMO,EAAW,WACtB,OAAOe,IAAMuP,WAAWV,8PC7T1BW,EAAAC,EAAAC,EAAA,sBAAAvI,IAAA,IAAAwI,EAAAH,EAAA,wCAAAI,EAAAJ,EAAAK,EAAAF,szBAiBO,IAAMxI,EAAc,SACzB2I,EACAC,EACAC,GAHyB,OAItB,SAACvR,EAAoBR,GACxB,IAEMgS,EAAkC,CAFlBH,EAAiBrR,EAAOR,IAY9C,OARI+R,GACFC,EAAO3Q,KAAK0Q,EAAevR,EAAOR,IAGhC8R,GACFE,EAAO3Q,KAAKyQ,EAAoBtR,EAAOR,IAGlCiS,IAAMC,IAAaF","file":"static/js/20.de619f58.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes of React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode>{` component (i.e. you can pass its props). `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react-native/docs/textinput\"\n      }}>{`See more details`}</a></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"Add your own placeholder\\\"\\n      size=\\\"large\\\"\\n      isDisabled={false}\\n      isInvalid={false}\\n      textContentType=\\\"emailAddress\\\" // Enables autofill\\n      keyboardType=\\\"email-address\\\"\\n      onChangeText={text => setState({ value: text })}\\n      onSubmitEditing={e => console.log(\\'Submit on enter\\')}\\n      leftIcon={<Icon name=\\\"menu\\\" size={24} />}\\n      rightIcon={undefined}\\n      isClearable={true} // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n      getStyles={(props, theme) => ({\\n        inputStyle: {},\\n        placeholderTextColor: theme.colors.text.muted,\\n      })}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"Add your own placeholder\" size=\"large\" isDisabled={false} isInvalid={false} textContentType=\"emailAddress\" // Enables autofill\n        keyboardType=\"email-address\" onChangeText={text => setState({\n          value: text\n        })} onSubmitEditing={e => console.log('Submit on enter')} leftIcon={<Icon name=\"menu\" size={24} mdxType=\"Icon\" />} rightIcon={undefined} isClearable={true} // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        getStyles={(props, theme) => ({\n          inputStyle: {},\n          placeholderTextColor: theme.colors.text.muted\n        })} mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  focusedStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport interface TextInputStylesProps {\n  size: ControlSize;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  numberOfLines?: number;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n}\n\nexport type GetTextInputStyles = (\n  textInputStylesProps: TextInputStylesProps,\n  theme: Theme,\n) => TextInputStyles;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  { size, isDisabled, isInvalid, numberOfLines, hasLeftIcon, hasRightIcon },\n  theme,\n) => {\n  const controlHeight = theme.controlHeights[size];\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    focusedStyle: {},\n    inputStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderRadius: theme.controlBorderRadius[size],\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size],\n      paddingRight: theme.controlPaddings[size],\n      width: '100%',\n      ...theme.textSizes[size],\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n      ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n      ...(numberOfLines\n        ? {\n            height: numberOfLines * controlHeight,\n            paddingVertical: 16,\n          }\n        : {}),\n      ...(hasLeftIcon && { paddingLeft: 40 }),\n      ...(hasRightIcon && { paddingRight: 40 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n      zIndex: 1,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  GetTextInputStyles,\n  getTextInputStyles,\n  TextInputStyles,\n} from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  children?: React.ReactNode;\n  innerRef?: React.Ref<RNTextInput>;\n  size?: ControlSize;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onClear?: () => void;\n  isClearable?: boolean;\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles>\n  >;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    getStyles,\n    innerRef,\n    isClearable,\n    isDisabled = false,\n    isInvalid = false,\n    leftIcon = null,\n    numberOfLines,\n    onClear = () => {\n      return;\n    },\n    rightIcon = null,\n    size = 'medium',\n    value,\n    textContentType,\n    onChangeText = () => {\n      return;\n    },\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    inputStyle,\n    placeholderTextColor,\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n  } = mergeStyles(getTextInputStyles, getStyles)(\n    {\n      hasLeftIcon: !!leftIcon,\n      hasRightIcon: !!(rightIcon || isClearable),\n      isDisabled,\n      isInvalid,\n      numberOfLines,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle}>\n      <View style={leftContainerStyle}>{leftIcon}</View>\n      {/*\n      // @ts-ignore: name prop being passed */}\n      <RNTextInput\n        ref={innerRef}\n        style={inputStyle}\n        editable={!isDisabled}\n        placeholderTextColor={placeholderTextColor}\n        name={textContentType}\n        numberOfLines={numberOfLines}\n        value={value}\n        onChangeText={onChangeText}\n        textContentType={textContentType}\n        {...textInputProps}\n      />\n      <View style={rightContainerStyle}>\n        {value && isClearable ? (\n          <TouchableOpacity\n            onPress={() => {\n              onChangeText('');\n              onClear();\n            }}\n          >\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </TouchableOpacity>\n        ) : (\n          rightIcon || null\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}