{"version":3,"sources":["webpack:///./src/components/SelectList/SelectList.mdx","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_countriesList","_docz","_Layout","_SelectList","_SelectListItem","_reactPowerplug","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","Playground","__position","__code","__scope","countryList","Box","SelectList","SelectListItem","State","isMulti","selectedValue","onValueChange","newValue","itemIndex","console","log","label","value","initial","_ref","state","setState","_ref2","height","Object","keys","map","countryCode","_objectSpread2","data","key","_ref3","PropsTable","of","React","Component","_interopRequireWildcard","Feather","color","size","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_Icon"],"mappings":"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","file":"static/js/27.2e25c6ec.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { countries as countryList } from 'countries-list';\nimport { Playground, PropsTable } from 'docz';\nimport { Box } from '../Layout';\nimport SelectList from './SelectList';\nimport SelectListItem from './SelectListItem';\nimport { State } from 'react-powerplug';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"selectlist\"}}>{`SelectList`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`SelectList that supports single value or multiple values selected at the same item. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SelectList`}</MDXTag>{` is a compound component, which means that its children can be any component, and it will implicitly inject props such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isSelected`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onSelect`}</MDXTag>{` to them.\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SelectListItem`}</MDXTag>{` composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ListItem`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<SelectList\\n  isMulti={false}\\n  selectedValue=\\\"c\\\"\\n  onValueChange={(newValue, itemIndex) => {\\n    console.log(newValue, itemIndex)\\n  }}\\n>\\n  <SelectListItem\\n    label=\\\"Usage\\\"\\n    value=\\\"c\\\"\\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\\n    // isSelected\\n    // onSelect\\n    // index\\n  />\\n</SelectList>'} __scope={{props: this ? this.props : props,countryList,Box,SelectList,SelectListItem,State}}>\n  <SelectList\n    isMulti={false}\n    selectedValue=\"c\"\n    onValueChange={(newValue, itemIndex) => {\n      console.log(newValue, itemIndex);\n    }}\n  >\n    <SelectListItem\n      label=\"Usage\"\n      value=\"c\"\n      // Props below are passed from `SelectList`, so it is not necessary to pass them here\n      // isSelected\n      // onSelect\n      // index\n    />\n  </SelectList>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"multi-select\"}}>{`Multi select`}</MDXTag>\n<Playground __position={1} __code={'<State initial={{ selectedValue: [\\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <SelectList\\n      isMulti\\n      selectedValue={state.selectedValue}\\n      onValueChange={(newValue, itemIndex) => {\\n        setState({ selectedValue: newValue })\\n      }}\\n    >\\n      <SelectListItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <SelectListItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <SelectListItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <SelectListItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <SelectListItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <SelectListItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <SelectListItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <SelectListItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <SelectListItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <SelectListItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <SelectListItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <SelectListItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <SelectListItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <SelectListItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <SelectListItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <SelectListItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <SelectListItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <SelectListItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <SelectListItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </SelectList>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,countryList,Box,SelectList,SelectListItem,State}}>\n  <State initial={{ selectedValue: ['js', 'go'] }}>\n    {({ state, setState }) => (\n      <SelectList\n        isMulti\n        selectedValue={state.selectedValue}\n        onValueChange={(newValue, itemIndex) => {\n          setState({ selectedValue: newValue });\n        }}\n      >\n        <SelectListItem label=\"C\" value=\"c\" />\n        <SelectListItem label=\"C#\" value=\"c#\" />\n        <SelectListItem label=\"C++\" value=\"c++\" />\n        <SelectListItem label=\"CSS\" value=\"css\" />\n        <SelectListItem label=\"Elixir\" value=\"elixir\" />\n        <SelectListItem label=\"Elm\" value=\"elm\" />\n        <SelectListItem label=\"Erlang\" value=\"erlang\" />\n        <SelectListItem label=\"Go\" value=\"go\" />\n        <SelectListItem label=\"Haskell\" value=\"haskell\" />\n        <SelectListItem label=\"HTML\" value=\"html\" />\n        <SelectListItem label=\"Java\" value=\"java\" />\n        <SelectListItem label=\"JavaScript\" value=\"js\" />\n        <SelectListItem label=\"Lua\" value=\"lua\" />\n        <SelectListItem label=\"Python\" value=\"python\" />\n        <SelectListItem label=\"R\" value=\"r\" />\n        <SelectListItem label=\"Ruby\" value=\"ruby\" />\n        <SelectListItem label=\"Rust\" value=\"rust\" />\n        <SelectListItem label=\"Switft\" value=\"swift\" />\n        <SelectListItem label=\"Typescript\" value=\"typescript\" />\n      </SelectList>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"large-selectlist\"}}>{`Large SelectList`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SelectList`}</MDXTag>{` composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`FlatList`}</MDXTag>{` from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-native`}</MDXTag></MDXTag>\n<Playground __position={2} __code={'<State initial={{ selectedValue: [\\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <Box height={400}>\\n      <SelectList\\n        isMulti\\n        selectedValue={state.selectedValue}\\n        onValueChange={(newValue, itemIndex) => {\\n          setState({ selectedValue: newValue })\\n        }}\\n      >\\n        {Object.keys(countryList)\\n          .map(countryCode => ({\\n            countryCode,\\n            value: countryCode,\\n            label: countryList[countryCode].name,\\n            ...countryList[countryCode],\\n          }))\\n          .map(data => (\\n            <SelectListItem\\n              key={data.value}\\n              label={data.label}\\n              value={data.label}\\n            />\\n          ))}\\n      </SelectList>\\n    </Box>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,countryList,Box,SelectList,SelectListItem,State}}>\n  <State initial={{ selectedValue: ['js', 'go'] }}>\n    {({ state, setState }) => (\n      <Box height={400}>\n        <SelectList\n          isMulti\n          selectedValue={state.selectedValue}\n          onValueChange={(newValue, itemIndex) => {\n            setState({ selectedValue: newValue });\n          }}\n        >\n          {Object.keys(countryList)\n            .map(countryCode => ({\n              countryCode,\n              value: countryCode,\n              label: countryList[countryCode].name,\n              ...countryList[countryCode],\n            }))\n            .map(data => (\n              <SelectListItem\n                key={data.value}\n                label={data.label}\n                value={data.label}\n              />\n            ))}\n        </SelectList>\n      </Box>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"single-select\"}}>{`Single select`}</MDXTag>\n<Playground __position={3} __code={'<State initial={{ selectedValue: \\'go\\' }}>\\n  {({ state, setState }) => (\\n    <SelectList\\n      selectedValue={state.selectedValue}\\n      onValueChange={(newValue, itemIndex) => {\\n        setState({ selectedValue: newValue })\\n      }}\\n    >\\n      <SelectListItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <SelectListItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <SelectListItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <SelectListItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <SelectListItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <SelectListItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <SelectListItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <SelectListItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <SelectListItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <SelectListItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <SelectListItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <SelectListItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <SelectListItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <SelectListItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <SelectListItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <SelectListItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <SelectListItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <SelectListItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <SelectListItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </SelectList>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,countryList,Box,SelectList,SelectListItem,State}}>\n  <State initial={{ selectedValue: 'go' }}>\n    {({ state, setState }) => (\n      <SelectList\n        selectedValue={state.selectedValue}\n        onValueChange={(newValue, itemIndex) => {\n          setState({ selectedValue: newValue });\n        }}\n      >\n        <SelectListItem label=\"C\" value=\"c\" />\n        <SelectListItem label=\"C#\" value=\"c#\" />\n        <SelectListItem label=\"C++\" value=\"c++\" />\n        <SelectListItem label=\"CSS\" value=\"css\" />\n        <SelectListItem label=\"Elixir\" value=\"elixir\" />\n        <SelectListItem label=\"Elm\" value=\"elm\" />\n        <SelectListItem label=\"Erlang\" value=\"erlang\" />\n        <SelectListItem label=\"Go\" value=\"go\" />\n        <SelectListItem label=\"Haskell\" value=\"haskell\" />\n        <SelectListItem label=\"HTML\" value=\"html\" />\n        <SelectListItem label=\"Java\" value=\"java\" />\n        <SelectListItem label=\"JavaScript\" value=\"js\" />\n        <SelectListItem label=\"Lua\" value=\"lua\" />\n        <SelectListItem label=\"Python\" value=\"python\" />\n        <SelectListItem label=\"R\" value=\"r\" />\n        <SelectListItem label=\"Ruby\" value=\"ruby\" />\n        <SelectListItem label=\"Rust\" value=\"rust\" />\n        <SelectListItem label=\"Switft\" value=\"swift\" />\n        <SelectListItem label=\"Typescript\" value=\"typescript\" />\n      </SelectList>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list\"}}>{`Select List`}</MDXTag>\n<PropsTable of={SelectList} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"select-list-item\"}}>{`Select List Item`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Extends `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TouchableHighlightProps`}</MDXTag>{`. Read from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`activeOpacity`}</MDXTag>{` and above for component specific props`}</MDXTag>\n<PropsTable of={SelectListItem} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}