{"version":3,"sources":["webpack:///./src/components/Checkbox/Checkbox.mdx","webpack:///./src/components/Checkbox/Checkbox.tsx","webpack:///./src/components/Checkbox/LabeledCheckbox.tsx","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_Checkbox","_LabeledCheckbox","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","Checkbox","LabeledCheckbox","isChecked","isDisabled","label","parentName","PropsTable","of","React","Component","_interopRequireWildcard","_reactNative","_icons","withTheme","_props$isChecked","_props$isDisabled","checkedIcon","_props$onChange","onChange","theme","touchableHighlightProps","_theme$getCheckboxSty","getCheckboxStyles","checkboxStyle","checkboxFocusBackgroundColor","TouchableHighlight","_extends2","accessible","style","underlayColor","onPress","disabled","View","alignItems","display","justifyContent","Icon","size","color","themeVariables","colors","text","plain","displayName","__docgenInfo","description","defaultValue","required","type","activeOpacity","onHideUnderlay","onShowUnderlay","delayLongPress","delayPressIn","delayPressOut","hitSlop","onLayout","onLongPress","onPressIn","onPressOut","pressRetentionOffset","testID","accessibilityLabel","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","__class","_theme","_Layout","_Typography","_props$position","position","restProps","Box","flexDirection","Text","Spacing","paddingX","Feather","_ref","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","allowFontScaling","ellipsizeMode","lineBreakMode","numberOfLines","adjustsFontSizeToFit","minimumFontScale","suppressHighlighting","selectable","selectionColor","textBreakStrategy","_Icon","icons"],"mappings":"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","file":"static/js/11.d88a73f1.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Checkbox from './Checkbox';\nimport LabeledCheckbox from './LabeledCheckbox';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"checkboxes\"}}>{`Checkboxes`}</MDXTag>\n<Playground __position={0} __code={`<Checkbox />\n<Checkbox isChecked />\n<Checkbox isDisabled />\n<Checkbox isChecked isDisabled />`} __scope={{props: this ? this.props : props,Checkbox,LabeledCheckbox}}>\n  <Checkbox />\n  <Checkbox isChecked />\n  <Checkbox isDisabled />\n  <Checkbox isChecked isDisabled />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"labeled-checkboxes\"}}>{`Labeled Checkboxes`}</MDXTag>\n<Playground __position={1} __code={`<LabeledCheckbox label=\"Default\" />\n<LabeledCheckbox label=\"Checked\" isChecked />\n<LabeledCheckbox label=\"Disabled\" isDisabled />\n<LabeledCheckbox label=\"Checked and disabled\" isChecked isDisabled />`} __scope={{props: this ? this.props : props,Checkbox,LabeledCheckbox}}>\n  <LabeledCheckbox label=\"Default\" />\n  <LabeledCheckbox label=\"Checked\" isChecked />\n  <LabeledCheckbox label=\"Disabled\" isDisabled />\n  <LabeledCheckbox label=\"Checked and disabled\" isChecked isDisabled />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Extends `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TouchableHighlightProps`}</MDXTag>{`. Read from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`activeOpacity`}</MDXTag>{` and above for component specific props`}</MDXTag>\n<PropsTable of={Checkbox} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableHighlight,\n  TouchableHighlightProps,\n  View,\n} from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { ITheme, withTheme } from '../../theme';\n\nexport interface ICheckboxProps {\n  theme: ITheme;\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  checkedIcon?: React.ReactNode;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n}\n\nconst CheckboxBase = (props: ICheckboxProps & TouchableHighlightProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    checkedIcon,\n    onChange = () => null,\n    theme,\n    ...touchableHighlightProps\n  } = props;\n\n  const {\n    checkboxStyle,\n    checkboxFocusBackgroundColor,\n  } = theme.getCheckboxStyles(isChecked, isDisabled);\n\n  return (\n    <TouchableHighlight\n      accessible\n      style={checkboxStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      onPress={onChange}\n      disabled={isDisabled}\n      {...touchableHighlightProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        {isChecked\n          ? checkedIcon || (\n              <Icon\n                name=\"check\"\n                size={20}\n                color={theme.themeVariables.colors.text.plain}\n              />\n            )\n          : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Checkbox = withTheme(CheckboxBase);\nexport default Checkbox;\ntry {\n    // @ts-ignore\n    Checkbox.displayName = \"Checkbox\";\n    // @ts-ignore\n    Checkbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"Checkbox\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"activeOpacity\": { \"defaultValue\": null, \"description\": \"Determines what the opacity of the wrapped view should be when touch is active.\", \"name\": \"activeOpacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onHideUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is hidden\", \"name\": \"onHideUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShowUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is shown\", \"name\": \"onShowUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"//FIXME: not in doc but available in examples\\n@see https://facebook.github.io/react-native/docs/view.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"underlayColor\": { \"defaultValue\": null, \"description\": \"The color of the underlay that will show through when the touch is active.\", \"name\": \"underlayColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"delayLongPress\": { \"defaultValue\": null, \"description\": \"Delay in ms, from onPressIn, before onLongPress is called.\", \"name\": \"delayLongPress\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressIn\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the start of the touch, before onPressIn is called.\", \"name\": \"delayPressIn\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressOut\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the release of the touch, before onPressOut is called.\", \"name\": \"delayPressOut\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"If true, disable all interactions for this component.\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far your touch can start away from the button.\\nThis is added to pressRetentionOffset when moving off of the button.\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch hits\\ntwo overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n{nativeEvent: {layout: {x, y, width, height}}}\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"Called when the touch is released,\\nbut not if cancelled (e.g. by a scroll that steals the responder lock).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressIn\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressIn\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressOut\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"pressRetentionOffset\": { \"defaultValue\": null, \"description\": \"When the scroll view is disabled, this defines how far your\\ntouch may move off of the button, before deactivating the button.\\nOnce deactivated, try moving it back and you'll see that the button\\nis once again reactivated! Move it back and forth several times\\nwhile the scroll view is disabled. Ensure you pass in a constant\\nto reduce memory allocations.\", \"name\": \"pressRetentionOffset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"disabled\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#Checkbox\"] = { docgenInfo: Checkbox.__docgenInfo, name: \"Checkbox\", path: \"src/components/Checkbox/Checkbox.tsx#Checkbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"activeOpacity\": { \"defaultValue\": null, \"description\": \"Determines what the opacity of the wrapped view should be when touch is active.\", \"name\": \"activeOpacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onHideUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is hidden\", \"name\": \"onHideUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShowUnderlay\": { \"defaultValue\": null, \"description\": \"Called immediately after the underlay is shown\", \"name\": \"onShowUnderlay\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"//FIXME: not in doc but available in examples\\n@see https://facebook.github.io/react-native/docs/view.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"underlayColor\": { \"defaultValue\": null, \"description\": \"The color of the underlay that will show through when the touch is active.\", \"name\": \"underlayColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"delayLongPress\": { \"defaultValue\": null, \"description\": \"Delay in ms, from onPressIn, before onLongPress is called.\", \"name\": \"delayLongPress\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressIn\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the start of the touch, before onPressIn is called.\", \"name\": \"delayPressIn\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"delayPressOut\": { \"defaultValue\": null, \"description\": \"Delay in ms, from the release of the touch, before onPressOut is called.\", \"name\": \"delayPressOut\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"If true, disable all interactions for this component.\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far your touch can start away from the button.\\nThis is added to pressRetentionOffset when moving off of the button.\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch hits\\ntwo overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n{nativeEvent: {layout: {x, y, width, height}}}\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"Called when the touch is released,\\nbut not if cancelled (e.g. by a scroll that steals the responder lock).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressIn\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressIn\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onPressOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressOut\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"pressRetentionOffset\": { \"defaultValue\": null, \"description\": \"When the scroll view is disabled, this defines how far your\\ntouch may move off of the button, before deactivating the button.\\nOnce deactivated, try moving it back and you'll see that the button\\nis once again reactivated! Move it back and forth several times\\nwhile the scroll view is disabled. Ensure you pass in a constant\\nto reduce memory allocations.\", \"name\": \"pressRetentionOffset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"disabled\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/Checkbox.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport Checkbox, { ICheckboxProps } from '../Checkbox/Checkbox';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface ILabeledCheckboxProps extends ICheckboxProps {\n  label?: string;\n  position?: 'left' | 'right';\n  color?: TextColor;\n  size?: TextSize;\n}\n\nconst LabeledCheckboxBase = (props: ILabeledCheckboxProps) => {\n  const { label, position = 'right', color, size, ...restProps } = props;\n\n  if (!label) {\n    return <Checkbox {...restProps} />;\n  }\n\n  return (\n    <Box flexDirection=\"row\" alignItems=\"center\">\n      {position === 'left' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n      <Spacing paddingX={1}>\n        <Checkbox {...restProps} />\n      </Spacing>\n      {position === 'right' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport const LabeledCheckbox = withTheme(LabeledCheckboxBase);\nexport default LabeledCheckbox;\ntry {\n    // @ts-ignore\n    LabeledCheckbox.displayName = \"LabeledCheckbox\";\n    // @ts-ignore\n    LabeledCheckbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"LabeledCheckbox\", \"props\": { \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"dark\\\" | \\\"default\\\" | \\\"muted\\\" | \\\"plain\\\" | \\\"selected\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/LabeledCheckbox.tsx#LabeledCheckbox\"] = { docgenInfo: LabeledCheckbox.__docgenInfo, name: \"LabeledCheckbox\", path: \"src/components/Checkbox/LabeledCheckbox.tsx#LabeledCheckbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"dark\\\" | \\\"default\\\" | \\\"muted\\\" | \\\"plain\\\" | \\\"selected\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/LabeledCheckbox.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/LabeledCheckbox.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIcon\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"image\\\" | \\\"link\\\" | \\\"search\\\" | \\\"none\\\" | \\\"button\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\ntry {\n    // @ts-ignore\n    icons.displayName = \"icons\";\n    // @ts-ignore\n    icons.__docgenInfo = { \"description\": \"\", \"displayName\": \"icons\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIcon\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"allowFontScaling\": { \"defaultValue\": null, \"description\": \"Specifies whether fonts should scale to respect Text Size accessibility settings.\\nThe default is `true`.\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ellipsizeMode\": { \"defaultValue\": null, \"description\": \"This can be one of the following values:\\n\\n- `head` - The line is displayed so that the end fits in the container and the missing text\\nat the beginning of the line is indicated by an ellipsis glyph. e.g., \\\"...wxyz\\\"\\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\\nmissing text in the middle is indicated by an ellipsis glyph. \\\"ab...yz\\\"\\n- `tail` - The line is displayed so that the beginning fits in the container and the\\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., \\\"abcd...\\\"\\n- `clip` - Lines are not drawn past the edge of the text container.\\n\\nThe default is `tail`.\\n\\n`numberOfLines` must be set in conjunction with this prop.\\n\\n> `clip` is working only for iOS\", \"name\": \"ellipsizeMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"lineBreakMode\": { \"defaultValue\": null, \"description\": \"Line Break mode. Works only with numberOfLines.\\nclip is working only for iOS\", \"name\": \"lineBreakMode\", \"required\": false, \"type\": { \"name\": \"\\\"head\\\" | \\\"middle\\\" | \\\"tail\\\" | \\\"clip\\\"\" } }, \"numberOfLines\": { \"defaultValue\": null, \"description\": \"Used to truncate the text with an ellipsis after computing the text\\nlayout, including line wrapping, such that the total number of lines\\ndoes not exceed this number.\\n\\nThis prop is commonly used with `ellipsizeMode`.\", \"name\": \"numberOfLines\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"This function is called on press.\\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onLongPress\": { \"defaultValue\": null, \"description\": \"This function is called on long press.\\ne.g., `onLongPress={this.increaseSize}>``\\n     *\", \"name\": \"onLongPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"style\": { \"defaultValue\": null, \"description\": \"@see https://facebook.github.io/react-native/docs/text.html#style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<TextStyle>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"adjustsFontSizeToFit\": { \"defaultValue\": null, \"description\": \"Specifies whether font should be scaled down automatically to fit given style constraints.\", \"name\": \"adjustsFontSizeToFit\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"minimumFontScale\": { \"defaultValue\": null, \"description\": \"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).\", \"name\": \"minimumFontScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"suppressHighlighting\": { \"defaultValue\": null, \"description\": \"When `true`, no visual change is made when text is pressed down. By\\ndefault, a gray oval highlights the text on press down.\", \"name\": \"suppressHighlighting\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectable\": { \"defaultValue\": null, \"description\": \"Lets the user select text, to use the native copy and paste functionality.\", \"name\": \"selectable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectionColor\": { \"defaultValue\": null, \"description\": \"The highlight color of the text.\", \"name\": \"selectionColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"textBreakStrategy\": { \"defaultValue\": null, \"description\": \"Set text break strategy on Android API Level 23+\\ndefault is `highQuality`.\", \"name\": \"textBreakStrategy\", \"required\": false, \"type\": { \"name\": \"\\\"simple\\\" | \\\"highQuality\\\" | \\\"balanced\\\"\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"image\\\" | \\\"link\\\" | \\\"search\\\" | \\\"none\\\" | \\\"button\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/index.ts#icons\"] = { docgenInfo: icons.__docgenInfo, name: \"icons\", path: \"src/icons/index.ts#icons\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}