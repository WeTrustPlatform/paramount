{"version":3,"sources":["webpack:///./src/components/Checkbox/Checkbox.mdx","webpack:///./src/components/Checkbox/Checkbox.tsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_Checkbox","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","Playground","__position","__code","__scope","Checkbox","label","isChecked","isDisabled","PropsTable","of","React","Component","_interopRequireWildcard","_fi","_reactNative","withTheme","theme","_props$isChecked","_props$isDisabled","_props$checkedIcon","checkedIcon","FiCheck","size","color","themeVariables","colors","text","plain","testID","_props$onChange","onChange","_theme$getCheckboxSty","getCheckboxStyles","checkboxStyle","checkboxFocusBackgroundColor","TouchableHighlight","style","underlayColor","onPress","disabled","View","alignItems","display","justifyContent","displayName","__docgenInfo","description","defaultValue","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","__class"],"mappings":"0pBACEA,EAAAC,EAAAC,EAAA,kCACAC,EAAAD,EAAA,4CACAE,EAAAF,EAAA,uCACFG,EAAAJ,EAAAC,EAAA,2CAEqBI,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,SAAAC,EAAAC,SAAAC,KAAAL,IACjBE,GAAA,EAAAI,EAAAF,SAAAC,MAAA,EAAAE,EAAAH,SAAAJ,GAAAQ,KAAAH,KAAMJ,KACDQ,OAAS,KAFGP,2EAIV,IAAAQ,EAC0BL,KAAKJ,MAA9BU,EADDD,EACCC,WAAeV,GADhB,EAAAW,EAAAR,SAAAM,EAAA,gBAGP,OAAOhB,EAAAU,QAAAS,cAAChB,EAAAiB,OAAD,CACEC,KAAK,UAELJ,WAAYA,GACzBjB,EAAAU,QAAAS,cAAChB,EAAAiB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,UAAvD,SACAtB,EAAAU,QAAAS,cAAChB,EAAAiB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,uBAAvD,sBACAtB,EAAAU,QAAAS,cAACf,EAAAmB,WAAD,CAAYC,WAAY,EAAGC,OAAM,iLAGgCC,QAAS,CAACnB,MAAOI,KAAOA,KAAKJ,MAAQA,EAAMoB,qBAC1G3B,EAAAU,QAAAS,cAACd,EAAAK,QAAD,CAAUkB,MAAM,YAChB5B,EAAAU,QAAAS,cAACd,EAAAK,QAAD,CAAUkB,MAAM,UAAUC,WAAS,IACnC7B,EAAAU,QAAAS,cAACd,EAAAK,QAAD,CAAUkB,MAAM,WAAWE,YAAU,IACrC9B,EAAAU,QAAAS,cAACd,EAAAK,QAAD,CAAUkB,MAAM,uBAAuBC,WAAS,EAACC,YAAU,KAE7D9B,EAAAU,QAAAS,cAAChB,EAAAiB,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYV,MAAO,CAACe,GAAK,UAAvD,SACAtB,EAAAU,QAAAS,cAACf,EAAA2B,WAAD,CAAYC,GAAIL,oBAxBwBM,UAAMC,yOCN9C,IAAAD,EAAAE,EAAAjC,EAAA,kCACAkC,EAAAlC,EAAA,0CACAmC,EAAAnC,EAAA,iDAmDayB,GAAW,EAjDxBzB,EAAA,wBAiDwBoC,WAtCK,SAAC/B,GAA0B,IAC9CgC,EAAUhC,EAAVgC,MAD8CC,EAUlDjC,EAPFsB,iBAHoD,IAAAW,KAAAC,EAUlDlC,EANFuB,kBAJoD,IAAAW,KAAAC,EAUlDnC,EALFoC,mBALoD,IAAAD,EAMlDT,EAAAd,cAACiB,EAAAQ,QAAD,CAASC,KAAM,GAAIC,MAAOP,EAAMQ,eAAeC,OAAOC,KAAKC,QANTR,EAQpDS,EAEE5C,EAFF4C,OARoDC,EAUlD7C,EADF8C,gBAToD,IAAAD,EASzC,kBAAM,MATmCA,EAAAE,EAelDf,EAAMgB,kBAAkB1B,EAAWC,GAFrC0B,EAboDF,EAapDE,cACAC,EAdoDH,EAcpDG,6BAGF,OACExB,EAAAd,cAACkB,EAAAqB,mBAAD,CACEC,MAAOH,EACPI,cAAeH,EACfI,QAASR,EACTF,OAAQA,EACRW,SAAUhC,GAEVG,EAAAd,cAACkB,EAAA0B,KAAD,CACEJ,MAAO,CACLK,WAAY,SACZC,QAAS,OACTC,eAAgB,WAGjBrC,GAAac,yBAOPhB,cACf,IAEIA,EAASwC,YAAc,WAEvBxC,EAASyC,aAAe,CAAEC,YAAe,GAAIF,YAAe,WAAY5D,MAAS,CAAEsB,UAAa,CAAEyC,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,YAAakD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,YAAeS,WAAc,CAAEwC,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,aAAckD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,YAAesB,YAAe,CAAE2B,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,cAAekD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,cAAiB8B,OAAU,CAAEmB,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,SAAUkD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,WAAcgC,SAAY,CAAEiB,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,WAAYkD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,yCAEjqB,qBAA5BoD,0BAEPA,wBAAwB,iDAAmD,CAAEC,WAAY/C,EAASyC,aAAc/C,KAAM,WAAYsD,KAAM,kDAEhJ,MAAOC,IAA2C,IAE9CC,QAAQV,YAAc,UAEtBU,QAAQT,aAAe,CAAEC,YAAe,GAAIF,YAAe,UAAW5D,MAAS,CAAEsB,UAAa,CAAEyC,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,YAAakD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,YAAeS,WAAc,CAAEwC,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,aAAckD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,YAAesB,YAAe,CAAE2B,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,cAAekD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,cAAiB8B,OAAU,CAAEmB,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,SAAUkD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,WAAcgC,SAAY,CAAEiB,aAAgB,KAAMD,YAAe,GAAIhD,KAAQ,WAAYkD,UAAY,EAAOC,KAAQ,CAAEnD,KAAQ,yCAE/pB,qBAA5BoD,0BAEPA,wBAAwB,gDAAkD,CAAEC,WAAYG,QAAQT,aAAc/C,KAAM,UAAWsD,KAAM,iDAE7I,MAAOC","file":"static/js/15.93dffcf9.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Checkbox from './Checkbox';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"labeled-checkboxes\"}}>{`Labeled Checkboxes`}</MDXTag>\n<Playground __position={0} __code={`<Checkbox label=\"Default\" />\n<Checkbox label=\"Checked\" isChecked />\n<Checkbox label=\"Disabled\" isDisabled />\n<Checkbox label=\"Checked and disabled\" isChecked isDisabled />`} __scope={{props: this ? this.props : props,Checkbox}}>\n  <Checkbox label=\"Default\" />\n  <Checkbox label=\"Checked\" isChecked />\n  <Checkbox label=\"Disabled\" isDisabled />\n  <Checkbox label=\"Checked and disabled\" isChecked isDisabled />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Checkbox} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport { FiCheck } from 'react-icons/fi';\nimport { GestureResponderEvent, TouchableHighlight, View } from 'react-native';\n\nimport { ITheme, withTheme } from '../../theme';\n\nexport interface ICheckboxProps {\n  theme: ITheme;\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  checkedIcon?: React.ReactNode;\n  testID?: string;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n}\n\nconst CheckboxWithoutTheme = (props: ICheckboxProps) => {\n  const { theme } = props;\n  const {\n    isChecked = false,\n    isDisabled = false,\n    checkedIcon = (\n      <FiCheck size={20} color={theme.themeVariables.colors.text.plain} />\n    ),\n    testID,\n    onChange = () => null,\n  } = props;\n\n  const {\n    checkboxStyle,\n    checkboxFocusBackgroundColor,\n  } = theme.getCheckboxStyles(isChecked, isDisabled);\n\n  return (\n    <TouchableHighlight\n      style={checkboxStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      onPress={onChange}\n      testID={testID}\n      disabled={isDisabled}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        {isChecked && checkedIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Checkbox = withTheme(CheckboxWithoutTheme);\nexport default Checkbox;\ntry {\n    // @ts-ignore\n    Checkbox.displayName = \"Checkbox\";\n    // @ts-ignore\n    Checkbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"Checkbox\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#Checkbox\"] = { docgenInfo: Checkbox.__docgenInfo, name: \"Checkbox\", path: \"src/components/Checkbox/Checkbox.tsx#Checkbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/Checkbox.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}