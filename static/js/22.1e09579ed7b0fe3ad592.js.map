{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Divider/Divider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Divider","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","Divider","Box","paddingVertical","size","color","position","getStyles","theme","dividerStyle","of","isMDXComponent","getDividerStyles","styleMap","horizontal","backgroundColor","colors","border","height","width","vertical","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_props$position","useTheme","mergeStyles","createElement","View","style","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","elevation","elevations","shape","_shape","_x","apply","arguments","toString","children","propStyle","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","_Box","hasGrid","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","Spacing","marshalledProps","_objectSpread2","gridPointMultiplier","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Spacing","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles"],"mappings":"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","file":"static/js/22.72d39636.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Divider } from './Divider';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box paddingVertical={40}>\\n  <Divider\\n    size={3}\\n    color=\\\"#67c6bb\\\"\\n    position=\\\"horizontal\\\"\\n    getStyles={(props, theme) => ({\\n      dividerStyle: {},\\n    })}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Divider,\n      Box\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={40} mdxType=\"Box\">\n    <Divider size={3} color=\"#67c6bb\" position=\"horizontal\" getStyles={(props, theme) => ({\n          dividerStyle: {}\n        })} mdxType=\"Divider\" />\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Divider} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: string;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const styleMap = {\n    horizontal: {\n      backgroundColor: color || theme.colors.border.default,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor: color || theme.colors.border.default,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nexport const Divider = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = useTheme();\n\n  const { dividerStyle } = mergeStyles(getDividerStyles, getStyles)(\n    { size, color, position },\n    theme,\n  );\n\n  return <View style={dividerStyle} />;\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { Box, BoxProps } from './Box';\n\nexport type GridScale =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18;\n\nconst DEFAULT_GRD_POINT_MULTPLIER = 8;\n\nexport interface SpacingProps extends BoxProps {\n  gridPointMultiplier?: number;\n  height?: GridScale;\n\n  margin?: GridScale;\n  marginBottom?: GridScale;\n  marginEnd?: GridScale;\n  marginHorizontal?: GridScale;\n  marginLeft?: GridScale;\n  marginRight?: GridScale;\n  marginStart?: GridScale;\n  marginTop?: GridScale;\n  marginVertical?: GridScale;\n\n  padding?: GridScale;\n  paddingBottom?: GridScale;\n  paddingEnd?: GridScale;\n  paddingHorizontal?: GridScale;\n  paddingLeft?: GridScale;\n  paddingRight?: GridScale;\n  paddingStart?: GridScale;\n  paddingTop?: GridScale;\n  paddingVertical?: GridScale;\n}\n\nconst hasGrid = {\n  height: true,\n\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n};\n\nexport const Spacing = (props: SpacingProps) => {\n  const marshalledProps = { ...props };\n\n  for (const prop in props) {\n    // @ts-ignore\n    if (hasGrid[prop]) {\n      // @ts-ignore\n      marshalledProps[prop] =\n        // @ts-ignore\n        props[prop] *\n        (props.gridPointMultiplier || DEFAULT_GRD_POINT_MULTPLIER);\n    }\n  }\n\n  return <Box {...marshalledProps} />;\n};\n","export * from './Box';\nexport * from './Spacing';\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}