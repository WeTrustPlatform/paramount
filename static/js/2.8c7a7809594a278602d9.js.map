{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Code.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/List.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","elevation","theme","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_ListItem","BulletItem","icon","listItemProps","iconColor","ListItem","_extends2","mark","_List","BulletedList","List","listType","_Text","Code","appearance","textProps","code","Text","fontFamily","styles","backgroundColor","colors","background","greyDefault","StyleSheet","create","default","paddingBottom","paddingLeft","paddingRight","paddingTop","getHeadingSize","headingSizes","size","fontSize","getHeadingStyles","_ref","align","color","weight","sizeStyle","headingStyle","_objectSpread2","getTextColor","text","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","_mergeStyles2","_Heading","Heading","accessibilityLevel","_props$size","_props$align","_props$color","getStyles","mergeStyles","accessibilityRole","Platform","OS","aria-level","Label","finalChildren","Children","map","listItem","index","isValidElement","cloneElement","margin","marginLeft","padding","paddingLeftMap","large","medium","small","xsmall","flexDirection","alignItems","marginVertical","width","isInline","NumberedItem","concat","NumberedList","getParagraphSize","paragraphSizes","getParagraphStyles","paragraphStyle","getFontFamily","marginBottom","marginTop","_Paragraph","Paragraph","_props$fontFamily","accessibilityLabel","textColors","textColor","getTextSize","textSizes","getTextStyles","isItalic","transform","textStyle","alignSelf","fontStyle","textTransform","_props$isInline","_props$isItalic","_Code","_Label","_NumberedList","_BulletItem","_NumberedItem","_BulletedList","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles"],"mappings":"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","file":"static/js/2.2516a34c.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","export * from './Box';\n","import * as React from 'react';\n\nimport { TextColor } from '../../theme/ThemeInterface';\nimport { ListItem, ListItemProps } from './ListItem';\n\nexport interface BulletItemProps extends ListItemProps {\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n  iconColor?: TextColor;\n}\n\nexport const BulletItem = (props: BulletItemProps) => {\n  const { icon, iconColor, ...listItemProps } = props;\n\n  return <ListItem mark={icon} {...listItemProps} />;\n};\n","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface BulletedListProps {\n  size?: TextSize;\n  icon?: React.ReactNode;\n  iconColor?: TextColor;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const BulletedList = (props: BulletedListProps) => {\n  return <List listType=\"ul\" {...props} />;\n};\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Text, TextProps } from './Text';\n\nexport interface CodeProps extends TextProps {\n  appearance?: 'default' | 'minimal';\n}\n\nexport const Code = (props: CodeProps) => {\n  const { appearance, ...textProps } = props;\n  const theme = useTheme();\n\n  const code = <Text fontFamily=\"mono\" {...textProps} />;\n\n  if (appearance === 'default') {\n    return (\n      <View\n        style={[\n          styles.default,\n          {\n            backgroundColor: theme.colors.background.greyDefault,\n          },\n        ]}\n      >\n        {code}\n      </View>\n    );\n  }\n\n  return code;\n};\n\nconst styles = StyleSheet.create({\n  default: {\n    borderRadius: 2,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    paddingTop: 3,\n  },\n});\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingVariables {\n  size: HeadingSizes;\n}\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport interface HeadingStylesProps {\n  size: HeadingSize;\n  align: TextAlign;\n  color: TextColor;\n  weight?: FontWeight;\n}\n\nexport type GetHeadingStyles = (\n  headingStylesProps: HeadingStylesProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size, align, color, weight },\n  theme,\n) => {\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return {\n    headingStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.heading,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, HeadingSize, TextColor } from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  children: React.ReactNode;\n  size?: HeadingSize;\n  align?: TextAlign;\n  color?: TextColor;\n  weight?: FontWeight;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { headingStyle } = mergeStyles(getHeadingStyles, getStyles)(\n    { size, align, color, weight },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport { Text, TextProps } from './Text';\n\nexport const Label = (props: TextProps) => {\n  const { children, ...textProps } = props;\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Box } from '../Box';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : null,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Box margin={0} marginLeft={8} padding={0}>\n        {finalChildren}\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Box } from '../Box';\nimport { Text, TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 24,\n  medium: 16,\n  small: 16,\n  xsmall: 8,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark: React.ReactNode;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft =\n    typeof size === 'number' ? 16 : (paddingLeftMap[size] as 1 | 2 | 3);\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Box flexDirection=\"row\" alignItems=\"center\" marginVertical={8}>\n        <Box>{mark}</Box>\n        <Box width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Box>\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemProps } from './ListItem';\nimport { Text } from './Text';\n\nexport interface NumberedItemProps extends ListItemProps {\n  index: number;\n  children: React.ReactNode;\n}\n\nexport const NumberedItem = (props: NumberedItemProps) => {\n  const { index, ...listItemProps } = props;\n\n  return (\n    <ListItem\n      mark={\n        <Text size={listItemProps.size} {...listItemProps}>{`${index}.`}</Text>\n      }\n      {...listItemProps}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface NumberedListProps {\n  size?: TextSize;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const NumberedList = (props: NumberedListProps) => {\n  return <List listType=\"ol\" {...props} />;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  ParagraphSizes,\n  TextColor,\n  TextColors,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { getFontFamily, getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface ParagraphVariables {\n  color: TextColors;\n  size: ParagraphSizes;\n  fontFamily: FontFamilies;\n}\n\nexport interface ParagraphStylesProps {\n  align: TextAlign;\n  size: ParagraphSize;\n  color: TextColor;\n  fontFamily: FontFamily;\n  weight?: FontWeight;\n}\n\nexport interface ParagraphStyles {\n  paragraphStyle: TextStyle;\n}\n\nexport type GetParagraphStyles = (\n  paragraphStylesProps: ParagraphStylesProps,\n  theme: Theme,\n) => ParagraphStyles;\n\nexport const getParagraphSize = (paragraphSizes: ParagraphSizes) => (\n  size: ParagraphSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetParagraphSize = paragraphSizes[size] as TextStyle;\n\n  return presetParagraphSize || { fontSize: size };\n};\n\nexport const getParagraphStyles: GetParagraphStyles = (\n  { size, color, fontFamily, align, weight },\n  theme,\n) => {\n  const sizeStyle = getParagraphSize(theme.paragraphSizes)(size);\n\n  return {\n    paragraphStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      marginBottom: '1em',\n      marginTop: '1em',\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  TextColor,\n} from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetParagraphStyles,\n  getParagraphStyles,\n  ParagraphStyles,\n} from './Paragraph.styles';\nimport { TextAlign } from './types';\n\n// @ts-ignore: need to override for web purposes\nexport interface ParagraphProps extends TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: ParagraphSize;\n  weight?: FontWeight;\n  align?: TextAlign;\n  fontFamily?: FontFamily;\n\n  getStyles?: ReplaceReturnType<\n    GetParagraphStyles,\n    DeepPartial<ParagraphStyles>\n  >;\n}\n\nexport const Paragraph = (props: ParagraphProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { paragraphStyle } = mergeStyles(getParagraphStyles, getStyles)(\n    { align, size, color, fontFamily, weight },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      style={paragraphStyle}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextVariables {\n  size: TextSizes;\n  fontFamily: FontFamilies;\n}\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontFamily,\n  FontWeight,\n  TextColor,\n  TextSize,\n} from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(getTextStyles, getStyles)(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export * from './Code';\nexport * from './Heading';\nexport * from './Label';\nexport * from './NumberedList';\nexport * from './Paragraph';\nexport * from './BulletItem';\nexport * from './NumberedItem';\nexport * from './Text';\nexport * from './BulletedList';\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}