{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Button","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","Button","Box","color","appearance","size","isLoading","isActive","isDisabled","isInline","iconBefore","iconAfter","iconLoading","title","onPress","console","log","getStyles","theme","buttonStyle","textStyle","focusColor","parentName","of","isMDXComponent","getButtonVariables","appearances","minimal","backgroundColor","colors","background","white","text","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","_getButtonVariables","baseStyles","_appearances$appearan","textColor","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","alignItems","display","fontWeight","justifyContent","textAlign","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_props$appearance","_props$color","icon","_props$isDisabled","_props$isInline","_props$isLoading","_props$onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","map","index","key","marginLeft","marginRight","width","_LoadingDots","Object","keys","forEach","defineProperty","exports","enumerable","get"],"mappings":"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","file":"static/js/28.e6306afe.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Button\\n  color=\\\"primary\\\"\\n  appearance=\\\"primary\\\"\\n  size=\\\"large\\\"\\n  isLoading={false}\\n  isActive={false}\\n  isDisabled={false}\\n  isInline={false}\\n  iconBefore={null}\\n  iconAfter={null}\\n  iconLoading={null}\\n  title=\\\"Usage\\\"\\n  onPress={() => console.log(\\'Pressed!\\')}\\n  getStyles={(props, theme) => ({\\n    buttonStyle: {},\\n    textStyle: {},\\n    focusColor: \\'\\',\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button color=\"primary\" appearance=\"primary\" size=\"large\" isLoading={false} isActive={false} isDisabled={false} isInline={false} iconBefore={null} iconAfter={null} iconLoading={null} title=\"Usage\" onPress={() => console.log('Pressed!')} getStyles={(props, theme) => ({\n        buttonStyle: {},\n        textStyle: {},\n        focusColor: ''\n      })} mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"primary-appearance-default\"\n    }}>{`Primary appearance (default)`}</h3>\n    <Playground __position={1} __code={'<Button color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"outline-appearance\"\n    }}>{`Outline appearance`}</h3>\n    <Playground __position={2} __code={'<Button appearance=\\\"outline\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button appearance=\"outline\" color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"minimal-appearance\"\n    }}>{`Minimal appearance`}</h3>\n    <Playground __position={3} __code={'<Button appearance=\\\"minimal\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button appearance=\"minimal\" color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"loading-primary-button\"\n    }}>{`Loading Primary button`}</h3>\n    <Playground __position={4} __code={'<Button isLoading appearance=\\\"primary\\\" color=\\\"primary\\\" title=\\\"Default\\\" />\\n<Button isLoading appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button isLoading appearance=\\\"minimal\\\" color=\\\"primary\\\" title=\\\"Secondary\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button isLoading appearance=\"primary\" color=\"primary\" title=\"Default\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"outline\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"minimal\" color=\"primary\" title=\"Secondary\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"loading-secondary-button\"\n    }}>{`Loading Secondary button`}</h3>\n    <Playground __position={5} __code={'<Button isLoading appearance=\\\"primary\\\" color=\\\"secondary\\\" title=\\\"Default\\\" />\\n<Button isLoading appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Primary\\\" />\\n<Button isLoading appearance=\\\"minimal\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button isLoading appearance=\"primary\" color=\"secondary\" title=\"Default\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"outline\" color=\"secondary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"minimal\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"other-props\"\n    }}>{`Other props`}</h3>\n    <Playground __position={6} __code={'<Box>\\n  <Button isInline color=\\\"primary\\\" title=\\\"Inline\\\" />\\n  <Button isDisabled color=\\\"primary\\\" title=\\\"Disabled\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Inline\" mdxType=\"Button\" />\n    <Button isDisabled color=\"primary\" title=\"Disabled\" mdxType=\"Button\" />\n  </Box>\n    </Playground>\n    <p>{`If `}<inlineCode parentName=\"p\">{`isInline`}</inlineCode>{` does not inline the button, try wrapping it with `}<inlineCode parentName=\"p\">{`Box`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n"],"sourceRoot":""}