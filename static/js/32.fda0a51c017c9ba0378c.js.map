{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","of","className","isMDXComponent","getLabelStyles","theme","getStyles","rest","objectWithoutProperties","labelStyle","getTextStyles","textStyle","children","textProps","useTheme","mergeStyles","react","Text","esm_extends","accessibilityRole","Platform","OS"],"mappings":"6qBAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,YAAvEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGLR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,iBAAgBR,OAAAE,EAAA,EAAAF,CAAA,cAAYU,WAAW,IAAvBL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,cAChBR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACW,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,6DAA8DC,QAAS,CACxGf,MAAOgB,KAAOA,KAAKhB,MAAQA,EAC3BiB,eACAC,UACAC,QACAC,WACCf,QAAQ,aANXC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAOFR,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAKhB,QAAQ,MAAbC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACER,OAAAE,EAAA,EAAAF,CAACqB,EAAA,EAAD,CAAOjB,QAAQ,QAAfC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,qCAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACW,EAAA,EAAD,CAAOW,GAAIH,IAAOf,QAAQ,QAA1BC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,iBADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,uBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,cAAaR,OAAAE,EAAA,EAAAF,CAAA,cAAYU,WAAW,IAAvBL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kBAAb,SACAR,OAAAE,EAAA,EAAAF,CAAA,OAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKR,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMU,WAAW,OAAU,GAA3B,CAAAL,SAAA,CAAAC,SAAAC,EAAAC,WAAA,0GAMLR,OAAAE,EAAA,EAAAF,CAAA,KAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eACAR,OAAAE,EAAA,EAAAF,CAAA,OAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKR,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMU,WAAW,OAAU,CAC5Ba,UAAa,gBADZ,CAAAlB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,0NAOTZ,EAAW4B,gBAAiB,qjCChDrB,IAAMC,EAAiC,SAAC1B,EAAO2B,GACrB3B,EAAvB4B,UADsD,IACxCC,EADwC5B,OAAA6B,EAAA,EAAA7B,CAC/BD,EAD+B,eAI9D,MAAO,CAAE+B,WAFaC,YAAcH,EAAMF,GAAlCM,siBCFH,IAAMb,EAAQ,SAACpB,GAAsB,IAClCkC,EAAsClC,EAAtCkC,SAAUN,EAA4B5B,EAA5B4B,UAAcO,EADUlC,OAAA6B,EAAA,EAAA7B,CACID,EADJ,0BAEpC2B,EAAQS,cAENL,EAAeM,YACrBX,EACAE,EACAD,EAAM5B,WAAW2B,eAHIW,CAIrBrC,EAAO2B,GAJDI,WAMR,OACEO,EAAA,cAACC,EAAA,EAADtC,OAAAuC,EAAA,EAAAvC,CAAA,CAEEwC,kBAAmC,QAAhBC,IAASC,GAAe,QAAU,OACrDf,UAAW,iBAAO,CAAEK,UAAWF,KAC3BI,EAJN,CAAA7B,SAAA,CAAAC,4FAAAE,WAAA,MAMGyB","file":"static/js/32.aac1b180.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label>Lorem ipsum dolar set amet</Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label mdxType=\"Label\">Lorem ipsum dolar set amet</Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`LabelStyles {\n  labelStyle: LabelStyle;\n}\n\ngetStyles={(LabelProps, Theme) => LabelStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Text labelStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { LabelProps } from './Label';\nimport { getTextStyles } from './Text.styles';\n\nexport interface LabelStyles {\n  labelStyle: TextStyle;\n}\n\nexport type GetLabelStyles = (\n  props: LabelProps,\n  theme: Theme,\n) => Partial<LabelStyles>;\n\nexport const getLabelStyles: GetLabelStyles = (props, theme) => {\n  const { getStyles, ...rest } = props;\n  const { textStyle } = getTextStyles(rest, theme);\n\n  return { labelStyle: textStyle };\n};\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetLabelStyles, getLabelStyles } from './Label.styles';\nimport { Text, TextProps } from './Text';\n\n// tslint:disable-next-line\n// @ts-ignore\nexport interface LabelProps extends TextProps {\n  /** Callback to get element styles. */\n  getStyles?: GetLabelStyles;\n}\n\nexport const Label = (props: LabelProps) => {\n  const { children, getStyles, ...textProps } = props;\n  const theme = useTheme();\n\n  const { labelStyle } = mergeStyles(\n    getLabelStyles,\n    getStyles,\n    theme.components.getLabelStyles,\n  )(props, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      getStyles={() => ({ textStyle: labelStyle })}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n"],"sourceRoot":""}