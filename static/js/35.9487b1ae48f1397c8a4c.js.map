{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Paragraph","Box","color","align","size","fontFamily","weight","getStyles","theme","paragraphStyle","flexDirection","of","isMDXComponent"],"mappings":"uYAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,wCACAG,EAAAH,EAAA,oCAOMI,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAT,EAAAa,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAE5E,EAAAf,EAAAa,KAAA,KAAQ,CACNG,GAAM,aADR,cAGA,EAAAhB,EAAAa,KAAA,qCAA+B,EAAAb,EAAAa,KAAA,cAAYI,WAAW,KAAvB,QAA/B,6CACA,EAAAjB,EAAAa,KAAA,UAAG,EAAAb,EAAAa,KAAA,UAAQI,WAAW,KAAnB,WAAH,mDAAiG,EAAAjB,EAAAa,KAAA,cAAYI,WAAW,KAAvB,aAAjG,UAAgK,EAAAjB,EAAAa,KAAA,cAAYI,WAAW,KAAvB,SAAhK,mCAAoP,EAAAjB,EAAAa,KAAA,cAAYI,WAAW,KAAvB,iBAApP,SAAsT,EAAAjB,EAAAa,KAAA,cAAYI,WAAW,KAAvB,0BAAtT,wHACA,EAAAjB,EAAAa,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAhB,EAAAa,KAACV,EAAAe,WAAD,CAAYC,WAAY,EAAGC,OAAQ,4RAAuSC,QAAS,CACjVV,MAAOW,KAAOA,KAAKX,MAAQA,EAC3BO,wBACAK,cACAC,sBACAC,WACCV,QAAQ,eACb,EAAAf,EAAAa,KAACR,EAAAoB,IAAD,CAAKV,QAAQ,QACX,EAAAf,EAAAa,KAACT,EAAAoB,UAAD,CAAWE,MAAM,UAAUC,MAAM,OAAOC,KAAK,QACzCC,WAAW,OAAOC,OAAO,SAASC,UAAW,SAACpB,EAAOqB,GAAR,MAAmB,CAC9DC,eAAgB,KACdlB,QAAQ,aAHhB,iCAQA,EAAAf,EAAAa,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAhB,EAAAa,KAACV,EAAAe,WAAD,CAAYC,WAAY,EAAGC,OAAQ,8OAAuPC,QAAS,CACjSV,MAAOW,KAAOA,KAAKX,MAAQA,EAC3BO,wBACAK,cACAC,sBACAC,WACCV,QAAQ,eACb,EAAAf,EAAAa,KAACR,EAAAoB,IAAD,CAAKS,cAAc,SAASnB,QAAQ,QAClC,EAAAf,EAAAa,KAACT,EAAAoB,UAAD,CAAWI,KAAK,QAAQb,QAAQ,aAAhC,+BACA,EAAAf,EAAAa,KAACT,EAAAoB,UAAD,CAAWI,KAAK,SAASb,QAAQ,aAAjC,+BACA,EAAAf,EAAAa,KAACT,EAAAoB,UAAD,CAAWI,KAAK,QAAQb,QAAQ,aAAhC,iCAGA,EAAAf,EAAAa,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAhB,EAAAa,KAACV,EAAAoB,MAAD,CAAOY,GAAIX,YAAWT,QAAQ,wMAIlCP,EAAW4B,gBAAiB","file":"static/js/35.4f907660.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Paragraph } from '.';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"paragraph\"\n    }}>{`Paragraph`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component (i.e. you can pass its props)`}</p>\n    <p><strong parentName=\"p\">{`Note!!!`}</strong>{` In web environment sometimes you need to wrap `}<inlineCode parentName=\"p\">{`Paragraph`}</inlineCode>{` in a `}<inlineCode parentName=\"p\">{`<Box>`}</inlineCode>{` or provide a parent node with `}<inlineCode parentName=\"p\">{`display: flex`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`flex-direction: column`}</inlineCode>{` for centering to work properly. In React Native it is non issue because all nodes be default have these properties`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box>\\n  <Paragraph\\n    color=\\\"primary\\\"\\n    align=\\\"left\\\"\\n    size=\\\"large\\\" // small - large or number\\n    fontFamily=\\\"text\\\"\\n    weight=\\\"normal\\\"\\n    getStyles={(props, theme) => ({\\n      paragraphStyle: {},\\n    })}\\n  >\\n    Lorem ipsum dolar set amet\\n  </Paragraph>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Paragraph,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Paragraph color=\"primary\" align=\"left\" size=\"large\" // small - large or number\n        fontFamily=\"text\" weight=\"normal\" getStyles={(props, theme) => ({\n          paragraphStyle: {}\n        })} mdxType=\"Paragraph\">\n      Lorem ipsum dolar set amet\n    </Paragraph>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <Playground __position={1} __code={'<Box flexDirection=\\\"column\\\">\\n  <Paragraph size=\\\"small\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"medium\\\">Lorem ipsum dolar set amet</Paragraph>\\n  <Paragraph size=\\\"large\\\">Lorem ipsum dolar set amet</Paragraph>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Paragraph,\n      Box\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Paragraph size=\"small\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"medium\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n    <Paragraph size=\"large\" mdxType=\"Paragraph\">Lorem ipsum dolar set amet</Paragraph>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Paragraph} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}