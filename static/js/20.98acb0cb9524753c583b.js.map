{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","Button","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","___WEBPACK_IMPORTED_MODULE_5__","title","description","intent","overrides","Action","component","___WEBPACK_IMPORTED_MODULE_7__","appearance","color","of","isMDXComponent","getSpacing","size","theme","spacing","Spacing","_props$size","_props$orientation","orientation","style","viewProps","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","propToFn","backgroundColor","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","alignItems","flexDirection","justifyContent","map","index","key","borderRadius","marginLeft","marginRight","_props$appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","_props$overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","Dots_Dots","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/20.85d9713e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`Give feedback to the user about an action or state`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box paddingVertical={8}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert\\n    intent=\\\"danger\\\"\\n    title=\\\"Danger\\\"\\n    description=\\\"Message\\\"\\n    overrides={{\\n      Action: {\\n        component: () => (\\n          <Button title=\\\"Action\\\" appearance=\\\"minimal\\\" color=\\\"primary\\\" />\\n        ),\\n      },\\n    }}\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" overrides={{\n          Action: {\n            component: () => <Button title=\"Action\" appearance=\"minimal\" color=\"primary\" mdxType=\"Button\" />\n          }\n        }} mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}