{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["alertVariables","theme","body","flex","container","_objectSpread2","default","backgroundColor","colors","background","white","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","title","danger","borderLeftColor","border","info","success","warning","getAlertStyles","_ref","intent","_alertVariables","intentStyle","_objectWithoutProperties2","bodyStyle","containerStyle","textStyle","titleStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Layout","_Typography","_Alert","Alert","props","description","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","createElement","View","style","Spacing","paddingRight","justifyContent","Icon","name","size","color","text","resolveIcon","Text","isBold","TouchableOpacity","onPress","paddingLeft","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Button","BackButton","Button","_extends2","appearance","isInline","iconBefore","getButtonVariables","appearances","minimal","focusColor","greyDefault","primary","secondary","greyLight","borderColor","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","fontSize","textSizes","height","controlHeights","controlPaddings","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","alignSelf","flexWrap","alignItems","fontWeight","textAlign","_Loading","_props$appearance","_props$color","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","TouchableHighlight","accessible","accessibilityRole","underlayColor","LoadingDots","_BackButton","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","width","Component","defaultProps","_LoadingDots","_react","_interopRequireDefault","_react2","_docz","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","ToastContext","ToastProvider","Toast","Box","Consumer","_ref2","notify","offset","_ref3","Fragment","of","isMDXComponent","getToastVariables","base","paddingBottom","paddingTop","backgroundDanger","textDanger","backgroundInfo","textInfo","backgroundSuccess","successDefault","textSuccess","backgroundWarning","warningDefault","textWarning","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","getToastStyles","DEFAULT_VALUE","ToastBase","closeTimer","state","value","onRemove","_this$props$duration","_this$props$offset","sequence","spring","bounciness","speed","delay","_this$props2","toastSettings","transform","translateY","withTheme","defaultToastInstance","defaultToastContext","createContext","_Toast","_Toast2","_ToastContext","hasCustomId","ToastProviderBase","removeToast","setState","previousState","toasts","filter","toast","toastInstance","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","String","startsWith","err","return","concat","_toConsumableArray2","slice","uniqueId","idCounter","_this2","children","currentToast","_slicedToArray2","Provider","_ToastProvider","Feather","IconTag","result","replace","matches","toUpperCase","charAt","convertToPascal","_Icon"],"mappings":"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","file":"static/js/10.40b19122.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.white,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { Icon } from '../../icons';\nimport { Theme, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent, theme: Theme) => {\n  switch (intent) {\n    case 'success':\n      return (\n        <Icon name=\"check-circle\" size={24} color={theme.colors.text.success} />\n      );\n    case 'warning':\n      return (\n        <Icon\n          name=\"alert-triangle\"\n          size={24}\n          color={theme.colors.text.warning}\n        />\n      );\n    case 'danger':\n      return (\n        <Icon name=\"alert-circle\" size={24} color={theme.colors.text.danger} />\n      );\n    default:\n      return <Icon name=\"info\" size={24} color={theme.colors.text.info} />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(getAlertStyles, getStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Spacing paddingRight={2} justifyContent=\"center\">\n          {resolveIcon(intent, theme)}\n        </Spacing>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text isBold>{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Spacing paddingLeft={2}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Spacing>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","export * from './Alert';\n","import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { ToastContext, ToastProvider, Toast } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider getStyles={(props, theme) => ({\n        containerStyle: {}\n      })} mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null,\n              // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000 // ...Alert props e.g. getStyles\n\n            });\n          }} title=\"Use\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <>\n          <Button onPress={() => notify({\n              title: 'Title',\n              description: 'Description',\n              isCloseable: true\n            })} title=\"Open default toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'success',\n              title: 'Title'\n            })} color=\"primary\" title=\"Open success toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'danger',\n              title: 'Title'\n            })} color=\"danger\" title=\"Open danger toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'warning',\n              title: 'Title'\n            })} color=\"secondary\" title=\"Open warning toast\" mdxType=\"Button\" />\n        </>}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { Platform, TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants';\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ToastVariables {\n  base: ViewStyle;\n  /** The area on screen where the toast appears */\n  container: ViewStyle;\n\n  textSuccess: TextStyle;\n  backgroundSuccess: ViewStyle;\n  textDanger: TextStyle;\n  backgroundDanger: ViewStyle;\n  textWarning: TextStyle;\n  backgroundWarning: ViewStyle;\n  textInfo: TextStyle;\n  backgroundInfo: ViewStyle;\n}\n\nexport const getToastVariables = (theme: Theme): ToastVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderRadius: theme.controlBorderRadius.medium,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n      ...theme.elevations[2],\n    },\n\n    backgroundDanger: {\n      backgroundColor: theme.colors.background.dangerDefault,\n    },\n    textDanger: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundInfo: {\n      backgroundColor: theme.colors.background.white,\n    },\n    textInfo: {\n      color: theme.colors.text.default,\n    },\n\n    backgroundSuccess: {\n      backgroundColor: theme.colors.background.successDefault,\n    },\n    textSuccess: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundWarning: {\n      backgroundColor: theme.colors.background.warningDefault,\n    },\n    textWarning: {\n      color: theme.colors.text.white,\n    },\n\n    container: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n  };\n};\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface ToastStylesProps {\n  intent: Intent;\n}\n\nexport type GetToastStyles = (\n  toastStylesProps: ToastStylesProps,\n  theme: Theme,\n) => ToastStyles;\n\nexport const getToastStyles: GetToastStyles = ({ intent }, theme) => {\n  const toastVariables = getToastVariables(theme);\n\n  return {\n    containerStyle: toastVariables.container,\n  };\n};\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Alert, AlertProps } from '../Alert';\n\n// Animation taken from https://medium.com/@norbajunior/react-native-facebook-and-instagram-like-top-bar-notifications-with-animated-api-43c48d0443dd\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\nexport interface ToastProps extends ToastInstance {\n  theme: Theme;\n}\n\nexport interface ToastState {\n  value: Animated.Value;\n}\n\nconst DEFAULT_VALUE = 500;\n\nclass ToastBase extends React.Component<ToastProps, ToastState> {\n  public closeTimer: number | null = null;\n\n  constructor(props: ToastProps) {\n    super(props);\n\n    this.state = {\n      value: new Animated.Value(-DEFAULT_VALUE),\n    };\n  }\n\n  public componentDidMount() {\n    const { onRemove, duration = 3000, offset = 16 } = this.props;\n    const { value } = this.state;\n\n    Animated.sequence([\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: offset,\n      }),\n      Animated.delay(duration),\n      Animated.spring(value, {\n        bounciness: 8,\n        speed: 25,\n        toValue: -DEFAULT_VALUE,\n      }),\n    ]).start(() => onRemove());\n  }\n\n  public render() {\n    const {\n      component,\n      offset,\n      duration,\n      id,\n      onRemove,\n      ...toastSettings\n    } = this.props;\n\n    return (\n      <Animated.View\n        style={{\n          transform: [{ translateY: this.state.value }],\n        }}\n      >\n        {component || <Alert {...toastSettings} onClose={onRemove} />}\n      </Animated.View>\n    );\n  }\n}\n\nexport const Toast = withTheme(ToastBase);\n","import * as React from 'react';\n\nimport { ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  theme: Theme;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nexport interface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\nclass ToastProviderBase extends React.Component<\n  ToastProviderProps,\n  ToastProviderState\n> {\n  public static idCounter: number = 0;\n\n  constructor(props: ToastProviderProps) {\n    super(props);\n\n    this.state = {\n      toasts: [],\n    };\n  }\n\n  public removeToast = (id: ToastId) => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.filter(toast => toast.id !== id),\n      };\n    });\n  };\n\n  public notify = (toastSettings: ToastSettings) => {\n    const toastInstance = this.createToastInstance(toastSettings);\n\n    // If there's a custom toast D passed, close existing toasts with the same custom D\n    if (hasCustomId(toastSettings)) {\n      for (const toast of this.state.toasts) {\n        // Since unique D is still appended to a custom D, skip the unique D and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          this.removeToast(toast.id);\n        }\n      }\n    }\n\n    this.setState(previousState => {\n      return {\n        // Immediately remove the current toast\n        toasts: [...previousState.toasts.slice(1), toastInstance],\n      };\n    });\n\n    return toastInstance;\n  };\n\n  public createToastInstance = (\n    toastSettings: ToastSettings,\n  ): ToastInstance => {\n    const uniqueId = ++ToastProviderBase.idCounter;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () => this.removeToast(id),\n      ...toastSettings,\n    };\n  };\n\n  public render() {\n    const { children, theme, getStyles } = this.props;\n    const { toasts } = this.state;\n    const [currentToast] = toasts;\n\n    // Intent does not matter here\n    // Consider using a different style getter for toast provider\n    const { containerStyle } = mergeStyles(getToastStyles, getStyles)(\n      { intent: 'info' },\n      theme,\n    );\n\n    return (\n      <ToastContext.Provider\n        value={{\n          danger: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'danger' }),\n          notify: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings }),\n          removeToast: (id: ToastId) => this.removeToast(id),\n          success: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'success' }),\n          warning: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'warning' }),\n        }}\n      >\n        {children}\n        <View style={containerStyle}>\n          {currentToast && <Toast key={currentToast.id} {...currentToast} />}\n        </View>\n      </ToastContext.Provider>\n    );\n  }\n}\n\nexport const ToastProvider = withTheme(ToastProviderBase);\n","export * from './Toast';\nexport * from './ToastContext';\nexport * from './ToastProvider';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}