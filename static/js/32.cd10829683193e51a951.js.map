{"version":3,"sources":["webpack:///./src/components/Dialog/ConfirmDialog.mdx","webpack:///./src/components/Dialog/ConfirmDialog.tsx","webpack:///./src/components/Dialog/Dialog.styles.ts","webpack:///./src/components/Dialog/Dialog.tsx","webpack:///./src/components/Dialog/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_reactPowerplug","_docz","_","_Button","_Layout","_Typography","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","Playground","__position","__code","__scope","Toggle","ConfirmDialog","Button","Box","Text","initial","_ref","on","toggle","title","isVisible","onRequestClose","cancelLabel","confirmLabel","header","undefined","footer","useHistory","onConfirm","console","log","getStyles","theme","modalContainerStyle","containerStyle","bodyStyle","onPress","PropsTable","of","React","Component","_interopRequireWildcard","_reactNative","_icons","_theme","_Dialog","ConfirmDialogHeader","Spacing","padding","flexDirection","justifyContent","alignItems","Heading","TouchableOpacity","Icon","size","color","colors","text","ConfirmDialogFooter","_ref2","_ref2$color","appearance","paddingLeft","withTheme","_props$cancelLabel","children","_props$confirmLabel","dialogProps","_extends2","getDialogVariables","body","maxHeight","container","backgroundColor","elevation","maxWidth","minWidth","position","zIndex","modalContainer","display","height","width","getDialogStyles","dialogVariables","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_mergeStyles2","_Modal","_Overlay","Dialog","_props$onRequestClose","useContext","ThemeContext","_mergeStyles","mergeStyles","Modal","visible","transparent","View","style","Overlay","_ConfirmDialog"],"mappings":"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","file":"static/js/32.c69363a5.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Toggle } from 'react-powerplug';\nimport { Playground, PropsTable } from 'docz';\nimport { ConfirmDialog } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"confirmdialog\"}}>{`ConfirmDialog`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Opposed to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag>{` (below), `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfirmDialog`}</MDXTag>{` has predefined styling and handlers; however, it still can pass props from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dialog`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <ConfirmDialog\\n        title=\\\"Title\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        cancelLabel=\\\"Cancel\\\"\\n        confirmLabel=\\\"Confirm\\\"\\n        header={undefined}\\n        footer={undefined}\\n        useHistory={false}\\n        onConfirm={() => console.log(\\'Confirmed\\')}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Text>Add custom content here</Text>\\n      </ConfirmDialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,ConfirmDialog,Button,Box,Text}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <ConfirmDialog\n          title=\"Title\"\n          isVisible={on}\n          onRequestClose={toggle}\n          cancelLabel=\"Cancel\"\n          confirmLabel=\"Confirm\"\n          header={undefined}\n          footer={undefined}\n          useHistory={false}\n          onConfirm={() => console.log('Confirmed')}\n          getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {},\n          })}\n        >\n          <Text>Add custom content here</Text>\n        </ConfirmDialog>\n        <Button onPress={toggle} title=\"Open dialog\" />\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"confirmdialog-props\"}}>{`ConfirmDialog Props`}</MDXTag>\n<PropsTable of={ConfirmDialog} />\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { Button } from '../Button';\nimport { ButtonColor } from '../Button/Button.styles';\nimport { Spacing } from '../Layout';\nimport { Heading } from '../Typography';\nimport Dialog, { DialogProps } from './Dialog';\n\nexport interface ConfirmDialogProps\n  extends DialogProps,\n    ConfirmDialogHeaderProps,\n    ConfirmDialogFooterProps {}\n\nexport interface ConfirmDialogHeaderProps {\n  /** Title displayed in the header */\n  title?: string;\n  onRequestClose?: () => void;\n  theme: Theme;\n}\n\nconst ConfirmDialogHeader = ({\n  title,\n  theme,\n  onRequestClose,\n}: ConfirmDialogHeaderProps) => (\n  <Spacing\n    padding={2}\n    flexDirection=\"row\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\n    <Heading>{title}</Heading>\n    <TouchableOpacity onPress={onRequestClose}>\n      <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n    </TouchableOpacity>\n  </Spacing>\n);\n\nexport interface ConfirmDialogFooterProps {\n  color?: ButtonColor;\n  /** Label for cancel button */\n  cancelLabel?: string;\n  /** Label for confirm button */\n  confirmLabel?: string;\n  /** Handler for confirm button */\n  onConfirm?: () => void;\n  /** Handler for cancel button */\n  onRequestClose?: () => void;\n}\n\nconst ConfirmDialogFooter = ({\n  color = 'primary',\n  onRequestClose,\n  onConfirm,\n  cancelLabel,\n  confirmLabel,\n}: ConfirmDialogFooterProps) => (\n  <Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n    <Button appearance=\"minimal\" onPress={onRequestClose} title={cancelLabel} />\n    <Spacing paddingLeft={2}>\n      <Button color={color} onPress={onConfirm} title={confirmLabel} />\n    </Spacing>\n  </Spacing>\n);\n\nconst ConfirmDialogBase = (props: ConfirmDialogProps) => {\n  const {\n    cancelLabel = 'Cancel',\n    children,\n    confirmLabel = 'Confirm',\n    footer,\n    header,\n    onRequestClose,\n    onConfirm,\n    title,\n    theme,\n    ...dialogProps\n  } = props;\n\n  return (\n    <Dialog\n      header={\n        header === null\n          ? null\n          : header || (\n              <ConfirmDialogHeader\n                theme={theme}\n                onRequestClose={onRequestClose}\n                title={title}\n              />\n            )\n      }\n      footer={\n        footer === null\n          ? null\n          : footer || (\n              <ConfirmDialogFooter\n                onRequestClose={onRequestClose}\n                onConfirm={onConfirm}\n                cancelLabel={cancelLabel}\n                confirmLabel={confirmLabel}\n              />\n            )\n      }\n      onRequestClose={onRequestClose}\n      {...dialogProps}\n    >\n      <Spacing padding={2}>{children}</Spacing>\n    </Dialog>\n  );\n};\n\nexport const ConfirmDialog = withTheme(ConfirmDialogBase);\nexport default ConfirmDialog;\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDialogVariables.displayName = \"getDialogVariables\";\n    // @ts-ignore\n    getDialogVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogVariables\"] = { docgenInfo: getDialogVariables.__docgenInfo, name: \"getDialogVariables\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDialogStyles.displayName = \"getDialogStyles\";\n    // @ts-ignore\n    getDialogStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogStyles\"] = { docgenInfo: getDialogStyles.__docgenInfo, name: \"getDialogStyles\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nconst DialogBase = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\n\nexport const Dialog = DialogBase;\n\nexport default Dialog;\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/Dialog.tsx#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Dialog, DialogProps } from './Dialog';\nexport { default as ConfirmDialog, ConfirmDialogProps } from './ConfirmDialog';\n"],"sourceRoot":""}