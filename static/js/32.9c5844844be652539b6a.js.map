{"version":3,"sources":["webpack:///./src/components/Popover/Popover.mdx","webpack:///./src/components/Popover/Popover.styles.ts","webpack:///./src/components/Popover/Popover.tsx","webpack:///./src/components/Popover/index.ts"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_","_Button","_Layout","_Typography","_reactPowerplug","layoutProps","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_ref","children","document","body","style","height","position","createElement","_this$props","components","_objectWithoutProperties2","MDXTag","name","Layout","_extends2","id","parentName","Playground","__position","__code","__scope","Popover","Button","Box","Spacing","Text","Toggle","isVisible","onClose","console","log","content","width","getStyles","theme","popoverStyle","title","paddingBottom","zIndex","flexDirection","justifyContent","_ref2","on","toggle","onPress","isInline","_ref3","_ref4","PropsTable","of","React","Component","getPopoverVariables","popover","_objectSpread2","backgroundColor","colors","background","white","padding","elevations","getPopoverStyles","displayName","__docgenInfo","description","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","controlPaddings","controlHeights","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Positioner","_Popover","getContentStyles","useTheme","mergeStyles","Positioner","params","View","Object","keys","forEach","key","defineProperty","exports","enumerable","get"],"mappings":"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","file":"static/js/32.af8e7b8e.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Popover } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\nimport { Toggle } from 'react-powerplug';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = ({ children }) => {\n  document.body.style.height = 'initial';\n  document.body.style.position = 'relative';\n  return <div>{children}</div>;\n}\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)}\n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"popover\"}}>{`Popover`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Popover`}</MDXTag>{` composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Positioner`}</MDXTag>{` and adds only a white box wrapping. Content that can be anything. Popover just applies some styles for the content. For more low-level usage, use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Positioner`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Popover\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  position=\\\"top-right\\\"\\n  content={() => <Box width={200} height={200} />}\\n  getStyles={(props, theme) => ({\\n    popoverStyle: {},\\n  })}\\n  // ...Positioner props\\n>\\n  <Button title=\\\"Child\\\" />\\n</Popover>'} __scope={{props: this ? this.props : props,Popover,Button,Box,Spacing,Text,Toggle}}>\n  <Popover\n    isVisible={false}\n    onClose={() => console.log('Close')}\n    position=\"top-right\"\n    content={() => <Box width={200} height={200} />}\n    getStyles={(props, theme) => ({\n      popoverStyle: {},\n    })}\n    // ...Positioner props\n  >\n    <Button title=\"Child\" />\n  </Popover>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variants\"}}>{`Variants`}</MDXTag>\n<Playground __position={1} __code={'<Spacing paddingBottom={8} zIndex={1}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-right\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-left\\\"\\n          content={() => (\\n            <Box width={200} height={200}>\\n              <Text>\\n                Content that can be anything. Popover just applies some styles\\n                for the content. For more low-level usage, use `Positioner`\\n              </Text>\\n            </Box>\\n          )}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Spacing>'} __scope={{props: this ? this.props : props,Popover,Button,Box,Spacing,Text,Toggle}}>\n  <Spacing paddingBottom={8} zIndex={1}>\n    <Box flexDirection=\"row\" justifyContent=\"space-between\">\n      <Toggle>\n        {({ on, toggle }) => (\n          <Popover\n            isVisible={on}\n            onClose={toggle}\n            position=\"top-right\"\n            content={() => (\n              <Box width={200} height={200}>\n                <Text>\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>\n            )}\n          >\n            <Button onPress={toggle} isInline title=\"Top right\" />\n          </Popover>\n        )}\n      </Toggle>\n      <Toggle>\n        {({ on, toggle }) => (\n          <Popover\n            isVisible={on}\n            onClose={toggle}\n            position=\"top\"\n            content={() => (\n              <Box width={200} height={200}>\n                <Text>\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>\n            )}\n          >\n            <Button onPress={toggle} isInline title=\"Top\" />\n          </Popover>\n        )}\n      </Toggle>\n      <Toggle>\n        {({ on, toggle }) => (\n          <Popover\n            isVisible={on}\n            onClose={toggle}\n            position=\"top-left\"\n            content={() => (\n              <Box width={200} height={200}>\n                <Text>\n                  Content that can be anything. Popover just applies some styles\n                  for the content. For more low-level usage, use `Positioner`\n                </Text>\n              </Box>\n            )}\n          >\n            <Button onPress={toggle} isInline title=\"Top left\" />\n          </Popover>\n        )}\n      </Toggle>\n    </Box>\n  </Spacing>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Popover} />\n           </MDXTag>\n  }\n}\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PopoverVariables {\n  popover: ViewStyle;\n}\n\nexport const getPopoverVariables = (theme: Theme): PopoverVariables => {\n  return {\n    popover: {\n      backgroundColor: theme.colors.background.white,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n  };\n};\n\nexport interface PopoverStyles {\n  popoverStyle: TextStyle;\n}\n\nexport type GetPopoverStyles = (theme: Theme) => PopoverStyles;\n\nexport const getPopoverStyles: GetPopoverStyles = theme => {\n  const popoverVariables = getPopoverVariables(theme);\n\n  return {\n    popoverStyle: popoverVariables.popover,\n  };\n};\ntry {\n    // @ts-ignore\n    getPopoverVariables.displayName = \"getPopoverVariables\";\n    // @ts-ignore\n    getPopoverVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getPopoverVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Popover/Popover.styles.ts#getPopoverVariables\"] = { docgenInfo: getPopoverVariables.__docgenInfo, name: \"getPopoverVariables\", path: \"src/components/Popover/Popover.styles.ts#getPopoverVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getPopoverStyles.displayName = \"getPopoverStyles\";\n    // @ts-ignore\n    getPopoverStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getPopoverStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Popover/Popover.styles.ts#getPopoverStyles\"] = { docgenInfo: getPopoverStyles.__docgenInfo, name: \"getPopoverStyles\", path: \"src/components/Popover/Popover.styles.ts#getPopoverStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  GetPopoverStyles,\n  getPopoverStyles,\n  PopoverStyles,\n} from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  getContentStyles?: ReplaceReturnType<\n    GetPopoverStyles,\n    DeepPartial<PopoverStyles>\n  >;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getContentStyles } = props;\n  const theme = useTheme();\n  const { popoverStyle } = mergeStyles(getPopoverStyles, getContentStyles)(\n    theme,\n  );\n\n  return (\n    <Positioner\n      {...props}\n      content={params => <View style={popoverStyle}>{content(params)}</View>}\n    />\n  );\n};\ntry {\n    // @ts-ignore\n    Popover.displayName = \"Popover\";\n    // @ts-ignore\n    Popover.__docgenInfo = { \"description\": \"\", \"displayName\": \"Popover\", \"props\": { \"getContentStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getContentStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPopoverStyles, DeepPartial<PopoverStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Popover/Popover.tsx#Popover\"] = { docgenInfo: Popover.__docgenInfo, name: \"Popover\", path: \"src/components/Popover/Popover.tsx#Popover\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Popover';\n"],"sourceRoot":""}