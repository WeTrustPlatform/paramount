{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Button","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","paddingRight","height","justifyContent","___WEBPACK_IMPORTED_MODULE_6__","color","title","appearance","isLoading","of","parentName","className","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","theme","useTheme","_props$size","size","_props$color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","react","style","alignItems","map","index","key","backgroundColor","borderRadius","marginLeft","marginRight","width","getButtonAppearances","minimal","default","background","content","danger","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","_props$appearance","iconAfter","iconBefore","isDisabled","hasIconAfter","hasIconBefore","_buttonAppearances$ap","textColor","touchableStyle","objectWithoutProperties","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","medium","textSize","textSizes","buttonContentWrapperStyle","innerButtonWrapperStyle","textStyle","objectSpread","muted","display","fontWeight","textAlign","disabled","getStyles","_props$isDisabled","_props$isLoading","_props$onPress","onPress","testID","accessibilityHint","accessibilityLabel","_props$accessible","accessible","_mergeStyles","mergeStyles","TouchableOpacity","accessibilityRole","Button_jsxFileName","Button_ButtonContent","esm_extends","ButtonContent","iconLoading","icon","Dots_Dots","white","Text","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/24.66dee7ad.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component to trigger an action`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box flexDirection=\\\"row\\\">\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"outline\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"minimal\\\" title=\\\"Default\\\" />\\n    <Button color=\\\"default\\\" appearance=\\\"primary\\\" title=\\\"Default\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"outline\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"minimal\\\" title=\\\"Primary\\\" />\\n    <Button color=\\\"primary\\\" appearance=\\\"primary\\\" title=\\\"Primary\\\" isLoading />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"outline\\\" title=\\\"Secondary\\\" />\\n    <Button color=\\\"secondary\\\" appearance=\\\"minimal\\\" title=\\\"Secondary\\\" />\\n    <Button\\n      color=\\\"secondary\\\"\\n      appearance=\\\"primary\\\"\\n      title=\\\"Secondary\\\"\\n      isLoading\\n    />\\n  </Box>\\n  <Box paddingRight={16} height={240} justifyContent=\\\"space-between\\\">\\n    <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"outline\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"minimal\\\" title=\\\"Danger\\\" />\\n    <Button color=\\\"danger\\\" appearance=\\\"primary\\\" title=\\\"Danger\\\" isLoading />\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"row\" mdxType=\"Box\">\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"outline\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"minimal\" title=\"Default\" mdxType=\"Button\" />\n      <Button color=\"default\" appearance=\"primary\" title=\"Default\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"outline\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"minimal\" title=\"Primary\" mdxType=\"Button\" />\n      <Button color=\"primary\" appearance=\"primary\" title=\"Primary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"outline\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"minimal\" title=\"Secondary\" mdxType=\"Button\" />\n      <Button color=\"secondary\" appearance=\"primary\" title=\"Secondary\" isLoading mdxType=\"Button\" />\n    </Box>\n    <Box paddingRight={16} height={240} justifyContent=\"space-between\" mdxType=\"Box\">\n      <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"outline\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"minimal\" title=\"Danger\" mdxType=\"Button\" />\n      <Button color=\"danger\" appearance=\"primary\" title=\"Danger\" isLoading mdxType=\"Button\" />\n    </Box>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\ngetStyles={(ButtonProps, Theme) => ButtonStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<TouchableOpacity touchableStyle>\n  <View innerButtonWrapperStyle>\n    {iconBefore}\n    <View buttonContentWrapperStyle>\n      <Text textStyle />\n    </View>\n    {iconAfter}\n  </View>\n</TouchableOpacity>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport type GetButtonStyles = (\n  props: ButtonProps,\n  theme: Theme,\n) => Partial<ButtonStyles>;\n\nexport const getButtonStyles: GetButtonStyles = (props, theme) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isDisabled,\n    isLoading,\n    size = 'medium',\n  } = props;\n  const hasIconAfter = !!iconAfter;\n  const hasIconBefore = !!iconBefore;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...touchableStyle\n  } = buttonAppearances[appearance][color];\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] * 2,\n        paddingRight: theme.controlPaddings[size] * 2,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      };\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    buttonContentWrapperStyle: {\n      paddingLeft: hasIconBefore ? 8 : 0,\n      paddingRight: hasIconAfter ? 8 : 0,\n    },\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n      ...textSize,\n    },\n    touchableStyle: {\n      borderRadius,\n      height,\n      paddingLeft,\n      paddingRight,\n      ...touchableStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Dots } from '../LoadingIndicators';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps {\n  /** Title of the button */\n  title?: string;\n\n  /** Icon in place of title */\n  icon?: React.ReactNode;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Sets an icon before the text. */\n  iconBefore?: React.ReactNode;\n\n  /** Sets an icon after the text. */\n  iconAfter?: React.ReactNode;\n\n  /** Sets an icon at loading state. */\n  iconLoading?: React.ReactNode;\n\n  /** Label for screen readers */\n  accessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  accessibilityHint?: string;\n\n  /**\n   * When true, indicates that the view is an accessibility element.\n   * @default true\n   */\n  accessible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetButtonStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    getStyles,\n    iconAfter,\n    iconBefore,\n    isDisabled = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    testID,\n\n    accessibilityHint,\n    accessibilityLabel,\n    accessible = true,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    textStyle,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    props,\n    theme,\n  );\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={touchableStyle}\n      testID={testID}\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessible={accessible}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle?: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <>\n        {iconLoading || (\n          <Dots color={textStyle ? textStyle.color : theme.colors.text.white} />\n        )}\n      </>\n    );\n  }\n  if (icon) return <>{icon}</>;\n  if (title) {\n    return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n  }\n\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}