{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","defaultProps","size","isClearable","isDisabled","isInvalid","onClear","onValueChange","onChangeText","TextInput","_props$isClearable","_props$isDisabled","_props$isInvalid","_props$onClear","_props$onValueChange","_props$onChangeText","_props$size","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","LeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_jsxFileName","hasLeftIcon","hasRightIcon","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","_props$isDisabled2","_props$isInvalid2","_props$onValueChange2","_props$onChangeText2","_props$size2","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","text","width","greyDark","danger","paddingVertical","editable","muted","name","alignItems","display","justifyContent","left","paddingHorizontal","position","zIndex","right","_props$isClearable2","_props$onClear2","_props$onValueChange3","_props$onChangeText3","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","label","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingBottom","_props$position2","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/14.de198ff2.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nconst defaultProps = {\n  size: 'medium' as const,\n  isClearable: false,\n  isDisabled: false,\n  isInvalid: false,\n  onClear: () => {\n    return;\n  },\n  onValueChange: () => {\n    return;\n  },\n  onChangeText: () => {\n    return;\n  },\n};\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    isClearable = defaultProps.isClearable,\n    isDisabled = defaultProps.isDisabled,\n    isInvalid = defaultProps.isInvalid,\n    onClear = defaultProps.onClear,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    size = defaultProps.size,\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isInvalid?: boolean;\n  hasLeftIcon?: boolean;\n  hasRightIcon?: boolean;\n  onValueChange?: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled = defaultProps.isDisabled,\n    isInvalid = defaultProps.isInvalid,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    size = defaultProps.size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange?: (value: string) => void;\n  onChangeText?: (text: string) => void;\n  value?: string;\n  isClearable?: boolean;\n  onClear?: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const {\n    isClearable = defaultProps.isClearable,\n    onClear = defaultProps.onClear,\n    onValueChange = defaultProps.onValueChange,\n    onChangeText = defaultProps.onChangeText,\n    value,\n  } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, TextInput, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label label=\\\"Lorem ipsum dolar set amet\\\">\\n    <TextInput />\\n  </Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      TextInput,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label label=\"Lorem ipsum dolar set amet\" mdxType=\"Label\">\n      <TextInput mdxType=\"TextInput\" />\n    </Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: string | false;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nconst defaultProps = {\n  position: 'top' as const,\n};\n\nexport const Label = (props: LabelProps) => {\n  const {\n    children,\n    position = defaultProps.position,\n    overrides = {},\n    label,\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: string | false;\n  position?: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const {\n    label,\n    position = defaultProps.position,\n    style,\n    ...textProps\n  } = props;\n\n  if (!label) return null;\n\n  let textStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, style]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}