{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react","_interopRequireDefault","_react2","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","this","Props","Toggle","Drawer","Box","space","isVisible","onClose","console","log","offset","position","modalContainerStyle","containerStyle","_ref2","on","toggle","Fragment","width","_ref3","_ref4","_ref5","isMDXComponent","getDrawerVariables","container","zIndex","modalContainer","getDrawerStyles","drawerVariables","_Modal","_Overlay","_Drawer","children","_props$onClose","_props$position","_props$offset","value","Animated","Value","spring","bounciness","speed","toValue","start","Modal","visible","transparent","onRequestClose","_objectSpread3","_defineProperty2","Overlay","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","_this$props","dots","map","o","marginLeft","marginRight","opacity","Component","defaultProps","_LoadingDots","_ModalContent","CloseableModal","rightSide","modalProps","ModalContent","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_props$transparent","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/9.520dc55d.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { Drawer } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Drawer\\n  space=\\\"30%\\\"\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  offset={0}\\n  position=\\\"left\\\"\\n  getStyles={(props, theme) => ({\\n    modalContainerStyle: {},\\n    containerStyle: {},\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      Drawer,\n      Button,\n      Box,\n      Spacing,\n      Text\n    }} mdxType=\"Playground\">\n  <Drawer space=\"30%\" isVisible={false} onClose={() => console.log('Close')} offset={0} position=\"left\" getStyles={(props, theme) => ({\n        modalContainerStyle: {},\n        containerStyle: {}\n      })} mdxType=\"Drawer\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"top\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"left\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"right\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      Drawer,\n      Button,\n      Box,\n      Spacing,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"top\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"left\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"right\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  if (!isVisible) return null;\n\n  const value = new Animated.Value(-500);\n\n  Animated.spring(value, {\n    bounciness: 0,\n    speed: 70,\n    toValue: offset,\n  }).start();\n\n  return (\n    <Modal visible transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        <Animated.View\n          style={{\n            ...containerStyle,\n            [position]: value,\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </Animated.View>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\n","export * from './Drawer';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}