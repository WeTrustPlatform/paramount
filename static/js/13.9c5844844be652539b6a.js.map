{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Drawer/Drawer.mdx","webpack:///./src/components/Drawer/Drawer.styles.ts","webpack:///./src/components/Drawer/Drawer.tsx","webpack:///./src/components/Drawer/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/components/Overlay/Overlay.styles.ts","webpack:///./src/components/Overlay/Overlay.tsx","webpack:///./src/components/Overlay/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","value","accessibilityLabel","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react","_interopRequireDefault","_tag","_docz","_reactPowerplug","_","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","Playground","__position","__code","__scope","Toggle","Drawer","Box","space","isVisible","onClose","console","log","offset","position","modalContainerStyle","containerStyle","_ref","on","toggle","Fragment","width","_ref2","_ref3","_ref4","Component","getDrawerVariables","container","zIndex","modalContainer","getDrawerStyles","drawerVariables","_Modal","_Overlay","_Drawer","children","_props$onClose","_props$position","_props$offset","Animated","Value","spring","bounciness","speed","toValue","start","Modal","visible","transparent","onRequestClose","_objectSpread3","_defineProperty2","Overlay","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","dots","map","o","marginLeft","marginRight","opacity","defaultProps","_LoadingDots","_ModalContent","CloseableModal","rightSide","modalProps","ModalContent","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","overlayVariables","overlayStyle","_props$transparent","getOverlayStyles","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"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","file":"static/js/13.75276c04.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Button';\nexport * from './BackButton';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { Drawer } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"drawer\"}}>{`Drawer`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Drawer\\n  space=\\\"30%\\\"\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  offset={0}\\n  position=\\\"left\\\"\\n  getStyles={(props, theme) => ({\\n    modalContainerStyle: {},\\n    containerStyle: {},\\n  })}\\n/>'} __scope={{props: this ? this.props : props,Toggle,Drawer,Button,Box,Spacing,Text}}>\n  <Drawer\n    space=\"30%\"\n    isVisible={false}\n    onClose={() => console.log('Close')}\n    offset={0}\n    position=\"left\"\n    getStyles={(props, theme) => ({\n      modalContainerStyle: {},\n      containerStyle: {},\n    })}\n  />\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variants\"}}>{`Variants`}</MDXTag>\n<Playground __position={1} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"top\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"left\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"right\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,Drawer,Button,Box,Spacing,Text}}>\n  <Toggle>\n    {({ on, toggle }) => (\n      <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" />\n        <Drawer space=\"30%\" isVisible={on} onClose={toggle}>\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n        </Drawer>\n      </>\n    )}\n  </Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open top drawer\" />\n      <Drawer space=\"30%\" position=\"top\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open left drawer\" />\n      <Drawer space=\"30%\" position=\"left\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n<Toggle>\n  {({ on, toggle }) => (\n    <>\n      <Button onPress={toggle} title=\"Open right drawer\" />\n      <Drawer space=\"30%\" position=\"right\" isVisible={on} onClose={toggle}>\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" />\n      </Drawer>\n    </>\n  )}\n</Toggle>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDrawerVariables.displayName = \"getDrawerVariables\";\n    // @ts-ignore\n    getDrawerVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\"] = { docgenInfo: getDrawerVariables.__docgenInfo, name: \"getDrawerVariables\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDrawerStyles.displayName = \"getDrawerStyles\";\n    // @ts-ignore\n    getDrawerStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDrawerStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\"] = { docgenInfo: getDrawerStyles.__docgenInfo, name: \"getDrawerStyles\", path: \"src/components/Drawer/Drawer.styles.ts#getDrawerStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  if (!isVisible) return null;\n\n  const value = new Animated.Value(-500);\n\n  Animated.spring(value, {\n    bounciness: 0,\n    speed: 70,\n    toValue: offset,\n  }).start();\n\n  return (\n    <Modal visible transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        <Animated.View\n          style={{\n            ...containerStyle,\n            [position]: value,\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </Animated.View>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\ntry {\n    // @ts-ignore\n    Drawer.displayName = \"Drawer\";\n    // @ts-ignore\n    Drawer.__docgenInfo = { \"description\": \"\", \"displayName\": \"Drawer\", \"props\": { \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc\", \"name\": \"onClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"offset\": { \"defaultValue\": null, \"description\": \"Amount to offset from the edge of window @default 0\", \"name\": \"offset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"space\": { \"defaultValue\": null, \"description\": \"Amount of % screen to take up.\", \"name\": \"space\", \"required\": false, \"type\": { \"name\": \"ReactText\" } }, \"position\": { \"defaultValue\": null, \"description\": \"Which side to draw from @default bottom\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"Position\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Drawer/Drawer.tsx#Drawer\"] = { docgenInfo: Drawer.__docgenInfo, name: \"Drawer\", path: \"src/components/Drawer/Drawer.tsx#Drawer\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Drawer';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModal.displayName = \"HistoryModal\";\n    // @ts-ignore\n    HistoryModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModal\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModal\"] = { docgenInfo: HistoryModal.__docgenInfo, name: \"HistoryModal\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getOverlayVariables.displayName = \"getOverlayVariables\";\n    // @ts-ignore\n    getOverlayVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getOverlayVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\"] = { docgenInfo: getOverlayVariables.__docgenInfo, name: \"getOverlayVariables\", path: \"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\ntry {\n    // @ts-ignore\n    Overlay.displayName = \"Overlay\";\n    // @ts-ignore\n    Overlay.__docgenInfo = { \"description\": \"\", \"displayName\": \"Overlay\", \"props\": { \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.tsx#Overlay\"] = { docgenInfo: Overlay.__docgenInfo, name: \"Overlay\", path: \"src/components/Overlay/Overlay.tsx#Overlay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}