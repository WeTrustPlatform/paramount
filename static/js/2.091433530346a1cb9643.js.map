{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts"],"names":["_changeColor","__webpack_require__","getButtonAppearances","theme","minimal","default","backgroundColor","colors","background","content","color","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_buttonAppearances$ap","textColor","buttonStyle","_objectWithoutProperties2","_objectSpread2","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","disabled","alignSelf","flexDirection","flexWrap","focusColor","darken","textStyle","alignItems","muted","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","components","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","event","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","modalProps","ModalBase","Component","HistoryModal","_ref","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Animation","_hooks","children","transparent","_props$shouldLockBody","shouldLockBodyScroll","_props$animationType","animationType","isUnmounting","targetElement","useElement","_React$useState","useState","_React$useState2","_slicedToArray2","isInView","setIsInView","elementRef","useRef","focusTrapRef","useLockBodyScroll","isLocked","useEffect","deactivateFocus","current","deactivate","initialFocus","onDeactivate","activate","_useSpring","useSpring","onRest","springDefaultConfig","y","createPortal","div","tabIndex","ref","bottom","left","position","right","top","transform","interpolate","v","concat","zIndex","prototype","hasOwnProperty","call","_exportNames","_Modal","friction","tension","_usePrevious","_useMeasure","_useElement","_useLockBodyScroll","_exenv","id","element","rootElem","rootElement","rootContainer","document","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childNodes","canUseDOM","originalStyle","getComputedStyle","overflow","unlock","initialMeasurements","pageX","pageY","x","adjustPageY","Platform","OS","scrollY","useMeasure","onMeasure","measurements","setMeasurements","handleMeasure","useCallback","layout","handle","findNodeHandle","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","Dimensions","onLayout","usePrevious","value"],"mappings":"8aAGAA,EAAAC,EAAA,68BAkBO,IAAMC,EAAuB,SAACC,GACnC,MAAO,CACLC,QAAS,CACPC,QAAS,CACPC,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCC,MAAOP,EAAMI,OAAOI,KAAb,SAGTC,OAAQ,CACNN,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCC,MAAOP,EAAMI,OAAOI,KAAKC,QAE3BC,QAAS,CACPP,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCC,MAAOP,EAAMI,OAAOI,KAAKE,SAE3BC,UAAW,CACTR,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCC,MAAOP,EAAMI,OAAOI,KAAKG,YAG7BD,QAAS,CACPR,QAAS,CACPC,gBAAiBH,EAAMI,OAAOQ,OAAb,QACjBL,MAAOP,EAAMI,OAAOQ,OAAOC,YAE3BC,uBAAwBd,EAAMI,OAAOC,WAAWU,SAGlDN,OAAQ,CACNN,gBAAiBH,EAAMI,OAAOQ,OAAOH,OACrCF,MAAOP,EAAMI,OAAOQ,OAAOI,WAE3BF,uBAAwBd,EAAMI,OAAOC,WAAWY,aAGlDP,QAAS,CACPP,gBAAiBH,EAAMI,OAAOQ,OAAOF,QACrCH,MAAOP,EAAMI,OAAOQ,OAAOM,YAE3BJ,uBAAwBd,EAAMI,OAAOC,WAAWc,cAGlDR,UAAW,CACTR,gBAAiBH,EAAMI,OAAOQ,OAAOD,UACrCJ,MAAOP,EAAMI,OAAOQ,OAAOQ,cAE3BN,uBAAwBd,EAAMI,OAAOC,WAAWgB,iBAIpDC,QAAS,CACPpB,QAAS,CACPC,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCiB,YAAavB,EAAMI,OAAOI,KAAb,QACbgB,YAAa,EACbjB,MAAOP,EAAMI,OAAOI,KAAb,SAGTC,OAAQ,CACNN,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCiB,YAAavB,EAAMI,OAAOqB,OAAOhB,OACjCe,YAAa,EACbjB,MAAOP,EAAMI,OAAOI,KAAKC,QAG3BC,QAAS,CACPP,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCiB,YAAavB,EAAMI,OAAOqB,OAAOf,QACjCc,YAAa,EACbjB,MAAOP,EAAMI,OAAOI,KAAKE,SAG3BC,UAAW,CACTR,gBAAiBH,EAAMI,OAAOC,WAAWC,QACzCiB,YAAavB,EAAMI,OAAOqB,OAAOd,UACjCa,YAAa,EACbjB,MAAOP,EAAMI,OAAOI,KAAKG,6mCA6B1B,IAAMe,EAAmC,SAACC,EAAkB3B,GAAU,IAEzE4B,EAQED,EARFC,WACArB,EAOEoB,EAPFpB,MACAsB,EAMEF,EANFE,KACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,UACAC,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,WACAC,EACEP,EADFO,UATyEC,EAYjDpC,EAAqBC,GAMzB4B,GAAYrB,GAHzB6B,EAfkED,EAezE5B,MACAO,EAhByEqB,EAgBzErB,uBACGuB,GAjBsE,EAAAC,EAAA,SAAAH,EAAA,oCAoB3E,MAAO,CACLE,aAAW,EAAAE,EAAA,UACTC,aAAcxC,EAAMyC,oBAAoBZ,GACxCa,OAAQ1C,EAAM2C,eAAed,GAC7Be,YAA2C,EAA9B5C,EAAM6C,gBAAgBhB,GACnCiB,aAA4C,EAA9B9C,EAAM6C,gBAAgBhB,IACjCQ,EACCP,EACA,CACE3B,gBAAiBH,EAAMI,OAAOQ,OAAOmC,WAF7B,EAAAR,EAAA,YAKJR,EAAY,CAAE5B,gBAAiBW,GAA2B,IAEhEkB,EACA,CACEgB,UAAW,aACXC,cAAe,MACfC,SAAU,QAEZ,IAENC,WACiB,YAAfvB,GAA2C,YAAfA,EACxB5B,EAAMI,OAAOQ,OAAb,SACA,EAAAf,EAAAuD,QAAOf,EAAYlC,gBAAiB,KAC1CkD,UAAW,CACTC,WAAY,SACZ/C,MAAOuB,EAAa9B,EAAMI,OAAOI,KAAK+C,MAAQnB,EAC9CoB,QAAS,OACTC,WAAY,MACZC,eAAgB,SAChBC,UAAW,UAGbC,wBAAyB,CACvBN,WAAY,SACZL,cAAe,MACfP,OAAQ,OACRgB,eAAgB,UAGlBG,0BAA2B,CACzBjB,YAAaX,EAAa,EAAI,EAC9Ba,aAAcZ,EAAY,EAAI,4mBC/LpC4B,EAAAC,EAAAjE,EAAA,kCACAkE,EAAAlE,EAAA,iDASAmE,EAAAnE,EAAA,wBACAoE,EAAApE,EAAA,8BACAqE,EAAArE,EAAA,qCACAsE,EAAAtE,EAAA,wCACAuE,EAAAvE,EAAA,uTA0FO,IAAMwE,EAAS,SAACC,GAAuB,IAAAC,EAqBxCD,EAnBF3C,kBAF0C,IAAA4C,EAE7B,UAF6BA,EAAAC,GAqBxCF,EAlBFG,MAkBEH,EAjBFhE,cAJ0C,IAAAkE,EAIlC,UAJkCA,EAK1CE,EAgBEJ,EAhBFI,UAEAzC,GAcEqC,EAfFK,KAeEL,EAdFrC,WACAD,EAaEsC,EAbFtC,WAR0C4C,GAqBxCN,EAZFO,YAYEP,EAXFQ,SAWER,EAVFzC,mBAX0C,IAAA+C,KAAAG,EAqBxCT,EATFvC,gBAZ0C,IAAAgD,KAAAC,EAqBxCV,EARFxC,iBAb0C,IAAAkD,KAAAC,EAqBxCX,EAPFY,eAd0C,IAAAD,EAchC,aAdgCA,EAAAE,EAqBxCb,EAJF1C,YAjB0C,IAAAuD,EAiBnC,SAjBmCA,EAkB1CC,EAGEd,EAHFc,OAEGC,GApBuC,EAAAhD,EAAA,SAqBxCiC,EArBwC,mKAuBtCvE,GAAQ,EAAAiE,EAAAsB,YAvB8BC,GA+BxC,EAAAtB,EAAAuB,aAAY/D,kBAAiBiD,EAAW3E,EAAM0F,WAAWhE,gBAAzD,CACF,CACEE,aACArB,QACA2B,YACAD,aACAH,aACAE,WACAD,YACAF,QAEF7B,GAhBAqC,EA1B0CmD,EA0B1CnD,YACAgB,EA3B0CmC,EA2B1CnC,UACAF,EA5B0CqC,EA4B1CrC,WACAS,EA7B0C4B,EA6B1C5B,wBACAC,EA9B0C2B,EA8B1C3B,0BAeF,OACEC,EAAA6B,cAAC3B,EAAA4B,oBAAD,EAAAC,EAAA,UACEC,YAAU,EACVC,kBAAkB,SAClBC,cAAe7C,EACfJ,YAAajB,IAAcC,GAC3BoD,QAASA,EACTc,MAAO5D,EACPgD,OAAQA,GACJC,GAEJxB,EAAA6B,cAAC3B,EAAAkC,KAAD,CAAMD,MAAOrC,GACV3B,EACD6B,EAAA6B,cAAC3B,EAAAkC,KAAD,CAAMD,MAAOpC,GAGXC,EAAA6B,cAACQ,GAAD,EAAAN,EAAA,YAAmBtB,EAAnB,CAA0BlB,UAAWA,MAEtCnB,8fAUT,IAAMiE,EAAgB,SAAC5B,GAA8B,IAC3CxC,EAAyDwC,EAAzDxC,UAAW+C,EAA8CP,EAA9CO,YAAaF,EAAiCL,EAAjCK,KAAMF,EAA2BH,EAA3BG,MAAOrB,EAAoBkB,EAApBlB,UAAWxB,EAAS0C,EAAT1C,KAExD,OAAIE,EAAkB+C,GAAehB,EAAA6B,cAACxB,EAAAiC,YAAD,CAAa7F,MAAO8C,EAAU9C,QAC/DqE,IACAF,EAEAZ,EAAA6B,cAACvB,EAAAiC,KAAD,CAAMxE,KAAMA,EAAM8C,UAAW,iBAAO,CAAEtB,eACnCqB,GAKA,0IC5LT,IAAM4B,EAAM,SAACC,EAAaC,GAExB,IADAD,GAAY,GACLA,EAAIE,OAASD,GAClBD,EAAM,IAAMA,EAEd,OAAOA,GAIHG,EAAc,SAACnG,EAAeoG,EAAeC,GAKjDrG,GAHAA,EAAQA,EAAMsG,QAAQ,YAAa,KAGrBA,QAAQ,sCAAuC,iBAG7D,IAAMC,EAAaC,KAAKC,MAAc,IAARL,IAAgBC,GAAU,EAAI,GAEtDK,EAAW,6CACXC,EAAM3G,EAAM4G,MAChB,IAAIC,OACF,gBACEH,EACA,YACAA,EACA,YACAA,EACA,wCAGF,MAIEI,EAAUH,GAAiB,MAAVA,EAAI,GAAaA,EAAI,GAAK,KAE3CI,EAAYJ,EACd,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACrB3G,EACGsG,QACC,6DACA,SAACU,EAAWC,EAAMC,EAAMC,GACtB,OACEC,SAASH,EAAM,IACf,IACAG,SAASF,EAAM,IACf,IACAE,SAASD,EAAM,MAIpBE,MAAM,KAGb,OAASV,EACL,OACa,OAAVG,EAAiB,IAAM,IACxB,IACAN,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KAEf,KACAG,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KAEf,KACAG,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,MAEJ,OAAVS,EAAiB,KAAOA,EAAQ,IACjC,IAEF,CACE,IACAf,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,GAEFvB,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,GAEFvB,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,IAEFC,KAAK,KAGA1E,EAAS,SAAC7C,EAAeoG,GACpC,OAAOD,EAAYnG,EAAOoG,GAAO,qMAG5B,IAAMoB,EAAU,SAACxH,EAAeoG,GACrC,OAAOD,EAAYnG,EAAOoG,GAAO,4SC7GnC,IAAAtC,EAAAvE,EAAA,sCAAAkI,OAAAC,KAAA5D,GAAA6D,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAlE,EAAA8D,gaCAArE,EAAAC,EAAAjE,EAAA,kCACAkE,EAAAlE,EAAA,iDACA0I,EAAA1I,EAAA,6CAEM2I,GAAe,EAAAD,EAAAE,UAASxC,4TAO9B,IAAMyC,EAAQ,CAAC,IAAK,IAAK,KAEZvC,EAAc,SAAC7B,GAA4B,IAAAa,EAChBb,EAA9B1C,YAD8C,IAAAuD,EACvC,GADuCA,EAAAX,EAChBF,EAAnBhE,aADmC,IAAAkE,EAC3B,OAD2BA,EAGhDmE,GAAQ,EAAAJ,EAAAK,UAASF,EAAMlC,OAAQ,CACnCqC,OAAQ,CAAEC,SAAU,KACpBC,KAAM,CAAEC,QAAS,GACjBC,OAAO,EACPC,GAAE,eAAAC,GAAA,EAAAC,EAAA,SAAAC,EAAA,QAAAC,KAAE,SAAAC,EAAMC,GAAN,OAAAH,EAAA,QAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAGMA,EAAK,CAAER,QAAS,IAHtB,cAAAU,EAAAF,KAAA,EAKMA,EAAK,CAAER,QAAS,IALtB,OAAAU,EAAAF,KAAA,gCAAAE,EAAAE,SAAAL,MAAF,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,KAUJ,OACEnG,EAAA6B,cAAC3B,EAAAkC,KAAD,CACED,MAAO,CACL3C,WAAY,SACZL,cAAe,MACfS,eAAgB,WAGjBkF,EAAMsB,IAAI,SAACjE,EAAOkE,GAAR,OACTrG,EAAA6B,cAAC8C,EAAD,CACEN,IAAKQ,EAAMwB,GAEXlE,MAAO,CACL9F,gBAAiBI,EACjBiC,aAAc,MACdE,OAAQb,EACRuI,WAAY,EACZC,YAAa,EACbpB,QAAShD,EAAMgD,QACfqB,MAAOzI,4TCjDnB,IAAA0I,EAAAzK,EAAA,4CAAAkI,OAAAC,KAAAsC,GAAArC,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAgC,EAAApC,u3BCAArE,EAAAC,EAAAjE,EAAA,kCAGA0K,EAAA1K,EAAA,4CAEI2K,EAAU,EASRC,mNACGD,UAAYA,IAEZE,mBAAqB,SAACC,GAAqC,IACxDC,EAAYC,EAAKvG,MAAjBsG,QAEJD,EAAcC,UAAYA,IACxBA,EACFC,EAAKC,uBAELD,EAAKE,2BAKJC,qBAAuB,WAC5BH,EAAKI,uBAGAH,qBAAuB,WAGzBI,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,UAG1BU,QAAQG,WAAR,EAAAC,EAAA,YAEOJ,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAA,YACCJ,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAA,YAEFV,EAAKL,SAAU,MAGpB,IAKJgB,OAAOC,iBAAiB,WAAYZ,EAAKa,gBAAgB,MAIpDA,eAAiB,SAACC,GAAyB,IAAAC,EACZf,EAAKvG,MAAjCsG,EADwCgB,EACxChB,QAASiB,EAD+BD,EAC/BC,eAGbF,EAAMR,OACLQ,EAAMR,MAAMC,OACZO,EAAMR,MAAMC,MAAMP,EAAKL,WAC1BqB,IAEAhB,EAAKI,oBACLY,MAOCjB,GACDe,EAAMR,OACNQ,EAAMR,MAAMC,OACZO,EAAMR,MAAMC,MAAMP,EAAKL,UAEvBU,QAAQY,IAAI,MAKTC,gBAAkB,WAAM,IACrBF,EAAmBhB,EAAKvG,MAAxBuH,gBAGLX,QAAQC,OACPD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,WAC3BqB,IAGAhB,EAAKI,oBACLY,IACAX,QAAQY,IAAI,OAKTf,qBAAuB,WAE1BG,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,WAEzBK,EAAKI,oBACLC,QAAQY,IAAI,OAITb,kBAAoB,WACzBC,QAAQc,cAAR,EAAAV,EAAA,YAEOJ,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAA,YACCJ,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAA,YAEFV,EAAKL,SAAU,MAGpB,IAGFgB,OAAOS,oBAAoB,WAAYpB,EAAKa,gBAAgB,+EAG9C,IACHQ,GADG,EAAAtG,EAAA,YACYmE,KAAKzF,OAE/B,OAAOT,EAAA6B,cAAC6E,EAAA4B,WAAD,EAAAvG,EAAA,YAAesG,EAAf,CAA2BL,eAAgB9B,KAAKgC,0BArH5BlI,EAAMuI,WAyHxBC,EAAe,SAAAC,GAGH,IAAAC,EAAAD,EAFvBE,kBAEuB,IAAAD,KADpBjI,GACoB,EAAAjC,EAAA,SAAAiK,EAAA,gBACvB,OAAIE,EAAmB3I,EAAA6B,cAAC+E,EAAqBnG,GAEtCT,EAAA6B,cAAC6E,EAAA4B,UAAc7H,2TC7IxB,IAAAmI,EAAA5M,EAAA,+CAAAkI,OAAAC,KAAAyE,GAAAxE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAmE,EAAAvE,8VCAAwE,EAAAC,EAAA9M,EAAA,uCACAgE,EAAAC,EAAAjE,EAAA,kCACA+M,EAAA9I,EAAAjE,EAAA,sCACAgN,EAAAhN,EAAA,0CAEAiN,EAAAjN,EAAA,gCACAkN,EAAAlN,EAAA,wBAMasM,EAAY,SAAC7H,GAAoD,IAE1E0I,EAME1I,EANF0I,SACAC,EAKE3I,EALF2I,YACArC,EAIEtG,EAJFsG,QAJ0EsC,EAQxE5I,EAHF6I,4BAL0E,IAAAD,KAM1ErB,EAEEvH,EAFFuH,eAN0EuB,EAQxE9I,EADF+I,qBAP0E,IAAAD,EAO1D,OAP0DA,EASxEE,GAAe,EACbC,GAAgB,EAAAR,EAAAS,cAItB,IAAKD,EAAe,OAAO,KAdiD,IAAAE,EAgB5C5J,EAAM6J,SAAS9C,GAhB6B+C,GAAA,EAAAC,EAAA,SAAAH,EAAA,GAgBrEI,EAhBqEF,EAAA,GAgB3DG,EAhB2DH,EAAA,GAiBtEI,EAAalK,EAAMmK,OAAuB,MAC1CC,EAAepK,EAAMmK,OAAkB,OAE7C,EAAAjB,EAAAmB,mBAAkB,CAAEC,YAAahB,IAAwBvC,KAEzD/G,EAAMuK,UAAU,WACd,IAAMC,EAAkB,WAClBJ,EAAaK,UACfL,EAAaK,QAAQC,aAErBN,EAAaK,QAAU,OA2B3B,OAPI1D,GAfEmD,EAAWO,UAAYL,EAAaK,UAEtCL,EAAaK,SAAU,EAAA5B,EAAA,SAAgBqB,EAAWO,QAAS,CACzDE,aAAcT,EAAWO,QACzBG,aAAc,WACR5C,GAAkBjB,IAAY0C,GAChCzB,OAKNoC,EAAaK,QAAQI,YAMvBZ,GAAY,IAEZO,IAGK,WACLf,GAAe,EACfe,MAED,CAACzD,IA1DwE,IAAA+D,GA4DrD,EAAA9B,EAAA+B,WAAU,CAC/BC,OAAQ,kBAAOjE,GAAWiD,GAAYC,GAAY,IAElDjF,OAAQiG,sBAER9F,QAA2B,SAAlBqE,EAA4BzC,EAAU,EAAI,EAAK,EACxDmE,EAAqB,UAAlB1B,EAA6BzC,EAAU,EAAI,IAAO,IAN/C5B,EA5DoE2F,EA4DpE3F,QAAS+F,EA5D2DJ,EA4D3DI,EASjB,OAAOnC,EAASoC,aACdnL,EAAA6B,cAACmH,EAAApE,SAASwG,IAAV,CACEC,UAAW,EACXC,IAAKpB,EAEL/H,MAAO,CACL9F,gBAAiB+M,EAAc,cAAgB,QAC/CmC,OAAQ,EACR7L,QAASsK,EAAW,OAAS,OAC7B7K,cAAe,SACfqM,KAAM,EACNrG,UACAsG,SAAUnC,EAAuB,QAAU,WAC3CoC,MAAO,EACPC,IAAK,EACLC,UAAWV,EAAEW,YAAY,SAAAC,GAAC,oBAAAC,OAAkBD,EAAlB,QAC1BE,OAAQ,MAGTjF,EAAUoC,EAAW,MAExBO,wgBCtGJ,IAAAhD,EAAA1K,EAAA,4CAAAkI,OAAAC,KAAAuC,GAAAtC,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA+H,UAAAC,eAAAC,KAAAC,EAAA/H,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAiC,EAAArC,SACA,IAAAuE,EAAA5M,EAAA,+CAAAkI,OAAAC,KAAAyE,GAAAxE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA+H,UAAAC,eAAAC,KAAAC,EAAA/H,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAmE,EAAAvE,SACA,IAAAgI,EAAArQ,EAAA,+nBCFO,IAAMiP,EAAsB,CACjCqB,SAAU,GACVC,QAAS,uUCFX,IAAAC,EAAAxQ,EAAA,8BAAAkI,OAAAC,KAAAqI,GAAApI,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA+H,EAAAnI,QACA,IAAAoI,EAAAzQ,EAAA,6BAAAkI,OAAAC,KAAAsI,GAAArI,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAgI,EAAApI,QACA,IAAAqI,EAAA1Q,EAAA,6BAAAkI,OAAAC,KAAAuI,GAAAtI,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAiI,EAAArI,QACA,IAAAsI,EAAA3Q,EAAA,oCAAAkI,OAAAC,KAAAwI,GAAAvI,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAkI,EAAAtI,qMCHA,IAAAuI,EAAA5Q,EAAA,iCACAgE,EAAAC,EAAAjE,EAAA,kCAmBa2N,EAAa,SAACkD,GACzB,IAAMC,EAAU9M,EAAMmK,OAAgB,MAEtCnK,EAAMuK,UAAU,WACd,IAboBwC,EAadC,EArBY,SAACH,GACrB,IAAMI,EAAgBC,SAASrL,cAAc,OAI7C,OAFIgL,GAAII,EAAcE,aAAa,KAAMN,GAElCI,EAgBepL,CAAcgL,GAOlC,OApBoBE,EAgBLC,EAfbE,SAASE,KAAKC,kBAChBH,SAASE,KAAKE,aACZP,EACAG,SAASE,KAAKC,iBAAiBE,oBAc7BT,EAAQrC,SAASuC,EAAYQ,YAAYV,EAAQrC,SAE9C,WACDqC,EAAQrC,SAASqC,EAAQrC,QAAQgD,UACE,IAAnCT,EAAYU,WAAW/K,QAAeqK,EAAYS,WAEvD,IAUH,OAPOX,EAAQrC,SAAWkD,cAEtBb,EAAQrC,QAAUyC,SAASrL,cAAc,QAEpCiL,EAAQrC,gZC1CnB,IAAAzK,EAAAC,EAAAjE,EAAA,kCAEaqO,EAAoB,SAAA5B,GAAyC,IAAtC6B,EAAsC7B,EAAtC6B,SAClCtK,EAAMuK,UAAU,WACd,IAAMqD,EAAgBjG,OAAOkG,iBAAiBX,SAASE,MAAMU,SAMvDC,EAAS,WACbb,SAASE,KAAKjL,MAAM2L,SAAWF,GAMjC,OAHItD,EAPF4C,SAASE,KAAKjL,MAAM2L,SAAW,SAQ5BC,IAEE,kBAAMA,MACZ,CAACzD,onBClBNtK,EAAAC,EAAAjE,EAAA,kCACAkE,EAAAlE,EAAA,wlBAsBO,IAAMgS,EAAsB,CACjCpP,OAAQ,EACRqP,MAAO,EACPC,MAAO,EACP1H,MAAO,EACP2H,EAAG,EACHjD,EAAG,yOAGL,IAAMkD,EAAc,SAACF,GAGnB,MAAuB,QAAhBG,WAASC,GAAeJ,EAAQvG,OAAO4G,QAAUL,GAM7CM,EAAa,SAAC/N,GAA2B,IAC5CgO,EAAmBhO,EAAnBgO,UAAWnD,EAAQ7K,EAAR6K,IADiC1B,EAEZ5J,EAAM6J,SAASmE,GAFHlE,GAAA,EAAAC,EAAA,SAAAH,EAAA,GAE7C8E,EAF6C5E,EAAA,GAE/B6E,EAF+B7E,EAAA,GAI9C8E,EAAgB5O,EAAM6O,YAC1B,SAACC,GACC,IAAMC,GAAS,EAAA7O,EAAA8O,gBAAe1D,EAAIb,SAC5BwE,EAAmBP,EAErBK,GACFG,YAAUC,QAAQJ,EAAQ,SAACZ,EAAGjD,EAAG1E,EAAO5H,EAAQqP,EAAOC,GACrD,IAAMkB,GAAe,EAAA3Q,EAAA,YAChBwQ,EACAH,EAFgB,CAGnBb,QACAC,MAAOE,EAAYF,KAGrBS,EAAgBS,GAEZX,GAAWA,EAAUW,MAI/B,CAACV,IAGGW,EAAerP,EAAM6O,YACzB,SAACS,GAGC,IAAMR,EAASQ,EAAEC,YAAYT,OAC7BF,EAAcE,IAEhB,CAACF,EAAeF,IAGZc,EAAexP,EAAM6O,YAAY,WACrCD,KACC,CAACA,EAAeF,IAQnB,OANA1O,EAAMuK,UAAU,WAGd,OAFAkF,aAAW7H,iBAAiB,SAAU4H,GAE/B,kBAAMC,aAAWrH,oBAAoB,SAAUoH,KACrD,CAACd,IAEG,CACLA,eACAgB,SAAUL,EACVZ,UAAWG,+XC3Ff,IAAA5O,EAAAC,EAAAjE,EAAA,kCAEa2T,EAAc,SAAeC,GACxC,IAAMtE,EAAMtL,EAAMmK,OAAeyF,GAMjC,OAJA5P,EAAMuK,UAAU,WACde,EAAIb,QAAUmF,GACb,CAACA,IAEGtE,EAAIb","file":"static/js/2.7b010653.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme } from '../../theme/Theme';\nimport { darken } from './changeColor';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ControlSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = buttonAppearances[appearance][color];\n\n  return {\n    buttonStyle: {\n      borderRadius: theme.controlBorderRadius[size],\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size] * 2,\n      paddingRight: theme.controlPaddings[size] * 2,\n      ...buttonStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle, size } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) {\n    return (\n      <Text size={size} getStyles={() => ({ textStyle })}>\n        {title}\n      </Text>\n    );\n  }\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","export * from './usePrevious';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useLockBodyScroll';\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>(value);\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n"],"sourceRoot":""}