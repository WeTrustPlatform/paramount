{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Visible","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_7__","___WEBPACK_IMPORTED_MODULE_6__","large","xlarge","___WEBPACK_IMPORTED_MODULE_5__","backgroundColor","height","___WEBPACK_IMPORTED_MODULE_8__","align","color","medium","xsmall","small","of","isMDXComponent","children","config","currentScreenSize","visibles","combineConfig","currentScreenSizeIndex","ASC_ORDER_SCREEN_SIZES","indexOf","find","val","index","isVisible","useLayout","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/30.829b4804.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Visible, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"visible\"\n    }}>{`Visible`}</h1>\n    <p>{`Renders children when the current screen size matches defined sizes`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <p>{`Resize the window to see different blocks appearing responsively`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Visible large xlarge>\\n    <Box backgroundColor=\\\"#67c6bb\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Large and greater\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible medium>\\n    <Box backgroundColor=\\\"#1ca5F7\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Medium\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible xsmall small>\\n    <Box backgroundColor=\\\"#d26557\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Small and lower\\n      </Text>\\n    </Box>\\n  </Visible>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Visible,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Visible large xlarge mdxType=\"Visible\">\n      <Box backgroundColor=\"#67c6bb\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Large and greater\n        </Text>\n      </Box>\n    </Visible>\n    <Visible medium mdxType=\"Visible\">\n      <Box backgroundColor=\"#1ca5F7\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Medium\n        </Text>\n      </Box>\n    </Visible>\n    <Visible xsmall small mdxType=\"Visible\">\n      <Box backgroundColor=\"#d26557\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Small and lower\n        </Text>\n      </Box>\n    </Visible>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Visible} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { ASC_ORDER_SCREEN_SIZES, ScreenSize, useLayout } from './LayoutContext';\n\nexport interface VisibleConfig {\n  /**\n   * When true, render children only when the screen size is xsmall\n   */\n  xsmall?: boolean;\n\n  /**\n   * When true, render children only when the screen size is small\n   */\n  small?: boolean;\n\n  /**\n   * When true, render children only when the screen size is medium\n   */\n  medium?: boolean;\n\n  /**\n   * When true, render children only when the screen size is large\n   */\n  large?: boolean;\n\n  /**\n   * When true, render children only when the screen size is xlarge\n   */\n  xlarge?: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children?: React.ReactNode;\n}\n\nconst combineConfig = (config: VisibleConfig) => {\n  const { xsmall, small, medium, large, xlarge } = config;\n\n  return [xsmall, small, medium, large, xlarge];\n};\n\nconst isVisible = (config: VisibleConfig, currentScreenSize: ScreenSize) => {\n  const visibles = combineConfig(config);\n  const currentScreenSizeIndex = ASC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  return !!visibles.find(\n    (val, index) => index === currentScreenSizeIndex && !!val,\n  );\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentScreenSize } = useLayout();\n\n  if (isVisible(config, currentScreenSize)) return <>{children}</>;\n\n  return <></>;\n};\n"],"sourceRoot":""}