{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Button","Dialog","Heading","Icon","Text","Toggle","___WEBPACK_IMPORTED_MODULE_11__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","header","padding","flexDirection","justifyContent","alignItems","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_6__","icon","___WEBPACK_IMPORTED_MODULE_9__","name","size","onPress","footer","appearance","title","paddingLeft","console","log","isVisible","onRequestClose","useHistory","getStyles","modalContainerStyle","containerStyle","bodyStyle","height","___WEBPACK_IMPORTED_MODULE_10__","of","isMDXComponent","getDialogStyles","maxHeight","controlBorderRadius","medium","maxWidth","minWidth","position","zIndex","contentContainerStyle","display","width","overlayStyle","_props$shouldLockBody","shouldLockBodyScroll","_props$onRequestClose","_mergeStyles","mergeStyles","react","HistoryModal_web","visible","transparent","animationType","View","ScrollView","Overlay","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","useElement","element","rootElem","rootElement","rootContainer","document","createElement","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","ModalBase","_props$animationType","isUnmounting","targetElement","slicedToArray","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","createFocusTrap","initialFocus","onDeactivate","activate","_useSpring","useSpring","onRest","config","springDefaultConfig","opacity","y","ReactDOM","web_cjs","div","tabIndex","ref","bottom","left","right","top","transform","interpolate","v","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","objectSpread","defineProperty","addEventListener","handlePopstate","event","_this$props","go","handleEscapeKey","replaceState","removeEventListener","modalProps","esm_extends","ModalBase_web_ModalBase","HistoryModal_web_jsxFileName","HistoryModal","_ref$useHistory","objectWithoutProperties","HistoryModal_web_HistoryModalBase","getOverlayStyles","overlay","cursor","_props$transparent","TouchableWithoutFeedback","preventDefault","getHeadingSize","headingSizes","fontSize","getHeadingStyles","align","weight","sizeStyle","headingStyle","fontFamily","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","accessibilityLevel","_props$size","_props$align","_props$color","textProps","accessibilityRole","Platform","OS","aria-level","__webpack_require__","d","__webpack_exports__","friction","tension"],"mappings":"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","file":"static/js/13.c9780730.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Dialog, Heading, Icon, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dialog\"\n    }}>{`Dialog`}</h1>\n    <p>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <Dialog\\n        header={\\n          <Box\\n            padding={16}\\n            flexDirection=\\\"row\\\"\\n            justifyContent=\\\"space-between\\\"\\n            alignItems=\\\"center\\\"\\n          >\\n            <Heading>Title</Heading>\\n            <Button icon={<Icon name=\\\"x\\\" size={24} />} onPress={toggle} />\\n          </Box>\\n        }\\n        footer={\\n          <Box padding={16} flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n            <Button appearance=\\\"minimal\\\" onPress={toggle} title=\\\"Cancel\\\" />\\n            <Box paddingLeft={16}>\\n              <Button\\n                color=\\\"primary\\\"\\n                onPress={() => console.log(\\'Button clicked\\')}\\n                title=\\\"Accept\\\"\\n              />\\n            </Box>\\n          </Box>\\n        }\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        useHistory={false}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the dialog</Text>\\n        </Box>\\n      </Dialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Dialog,\n      Heading,\n      Icon,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Box mdxType=\"Box\">\n        <Dialog header={<Box padding={16} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mdxType=\"Box\">\n              <Heading mdxType=\"Heading\">Title</Heading>\n              <Button icon={<Icon name=\"x\" size={24} mdxType=\"Icon\" />} onPress={toggle} mdxType=\"Button\" />\n            </Box>} footer={<Box padding={16} flexDirection=\"row\" justifyContent=\"flex-end\" mdxType=\"Box\">\n              <Button appearance=\"minimal\" onPress={toggle} title=\"Cancel\" mdxType=\"Button\" />\n              <Box paddingLeft={16} mdxType=\"Box\">\n                <Button color=\"primary\" onPress={() => console.log('Button clicked')} title=\"Accept\" mdxType=\"Button\" />\n              </Box>\n            </Box>} isVisible={on} onRequestClose={toggle} useHistory={false} getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {}\n          })} mdxType=\"Dialog\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle} title=\"Open dialog\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"dialog-props\"\n    }}>{`Dialog Props`}</h3>\n    <Props of={Dialog} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n  contentContainerStyle: ViewStyle;\n  overlayStyle: ViewStyle;\n}\n\nexport type GetDialogStyles = (props: {}, theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = (props, theme) => {\n  return {\n    bodyStyle: {\n      maxHeight: 400,\n    },\n    containerStyle: {\n      backgroundColor: 'white',\n      borderRadius: theme.controlBorderRadius.medium,\n      elevation: 1,\n\n      /**\n       * On iOs the navigation bar and bottom bar take roughly 10% each, maxHeight offsets\n       * that amount so that it does not overflow the window\n       */\n      maxHeight: '80%',\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    contentContainerStyle: {},\n    modalContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    overlayStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { ScrollView, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** WWhether body can scroll while dialog is opened */\n  shouldLockBodyScroll?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    shouldLockBodyScroll = true,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = useTheme();\n\n  const {\n    modalContainerStyle,\n    containerStyle,\n    bodyStyle,\n    contentContainerStyle,\n    overlayStyle,\n  } = mergeStyles(getDialogStyles, getStyles, theme.components.getDialogStyles)(\n    {},\n    theme,\n  );\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onRequestClose}\n      shouldLockBodyScroll={shouldLockBodyScroll}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <ScrollView\n            contentContainerStyle={contentContainerStyle}\n            style={bodyStyle}\n          >\n            {children}\n          </ScrollView>\n          {footer}\n        </View>\n        <Overlay\n          getStyles={() => ({ overlayStyle })}\n          onPress={onRequestClose}\n        />\n      </View>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => !visible && isInView && setIsInView(false),\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  return {\n    overlayStyle: {\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(\n    getOverlayStyles,\n    getStyles,\n    theme.components.getOverlayStyles,\n  )({ transparent }, theme);\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n  Theme,\n} from '../../theme/Theme';\nimport { getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport interface HeadingStylesProps {\n  size: HeadingSize;\n  align: TextAlign;\n  color: TextColor;\n  weight?: FontWeight;\n}\n\nexport type GetHeadingStyles = (\n  headingStylesProps: HeadingStylesProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size, align, color, weight },\n  theme,\n) => {\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return {\n    headingStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.heading,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, HeadingSize, TextColor } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  children: React.ReactNode;\n  size?: HeadingSize;\n  align?: TextAlign;\n  color?: TextColor;\n  weight?: FontWeight;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { headingStyle } = mergeStyles(\n    getHeadingStyles,\n    getStyles,\n    theme.components.getHeadingStyles,\n  )({ size, align, color, weight }, theme);\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}