{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Avatar","Box","___WEBPACK_IMPORTED_MODULE_5__","source","uri","width","height","name","size","of","isMDXComponent","_props$size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","imageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4__","onError","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","justifyContent","overflow","position","textProps","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","getSpacing","spacing","Spacing","_props$orientation","orientation","viewProps","objectWithoutProperties","react","View","esm_extends","propToFn","colors","background","elevation","elevations","shape","containerShapes","space","spaceBottom","spaceEnd","spaceHorizontal","spaceLeft","spaceRight","spaceStart","spaceTop","spaceVertical","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","__webpack_require__","d","__webpack_exports__"],"mappings":"oqBAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,YAAvEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAELR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,UADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,gBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6DACAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACU,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,qLAA0LC,QAAS,CACpOd,MAAOe,KAAOA,KAAKf,MAAQA,EAC3BgB,eACAC,UACAC,WACAC,SACCd,QAAQ,aANXC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAOFR,OAAAE,EAAA,EAAAF,CAACmB,EAAA,EAAD,CAAQC,OAAQ,CACVC,IAAK,gCACLC,MAAO,IACPC,OAAQ,KAEVC,KAAK,aAAaC,KAAK,QAAQrB,QAAQ,SAL3CC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAOER,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACU,EAAA,EAAD,CAAOgB,GAAIT,IAAQb,QAAQ,QAA3BC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6LAIJZ,EAAW+B,gBAAiB,64CCMrB,IAAMV,EAAS,SAAClB,GAAuB,IAE1CqB,EAOErB,EAPFqB,OACAI,EAMEzB,EANFyB,KAH0CI,EASxC7B,EALF0B,YAJ0C,IAAAG,EAInC,SAJmCA,EAAAC,EASxC9B,EAJF+B,eAL0C,IAAAD,KAAAE,EASxChC,EAHFiC,aAN0C,IAAAD,EAMlC,OANkCA,EAO1CE,EAEElC,EAFFkC,OAP0CC,EASxCnC,EADFoC,iBAR0C,IAAAD,EAQ9B,GAR8BA,EAWtCE,EAAQC,cAX8BC,EAYcC,YACxD,GAb0CC,EAAAxC,OAAAyC,EAAA,EAAAzC,CAAAsC,EAAA,GAYrCI,EAZqCF,EAAA,GAYdG,EAZcH,EAAA,GAetCI,GAAoBxB,GAAUsB,EAfQG,EAiBlBC,YACxBC,EACAhD,EACAiD,IAAIZ,EAAO,yBACXD,EAAUc,MArBgCC,EAAAlD,OAAAyC,EAAA,EAAAzC,CAAA6C,EAAA,GAiBrCI,EAjBqCC,EAAA,GAiB/BC,EAjB+BD,EAAA,GAAAE,EAuBVN,YAChCO,EACAtD,EACAiD,IAAIZ,EAAO,4BACXD,EAAUmB,UA3BgCC,EAAAvD,OAAAyC,EAAA,EAAAzC,CAAAoD,EAAA,GAuBrCE,EAvBqCC,EAAA,GAuB3BC,EAvB2BD,EAAA,GAAAE,EA6BfX,YAC3BY,EACA3D,EACAiD,IAAIZ,EAAO,0BACXD,EAAUwB,OAjCgCC,EAAA5D,OAAAyC,EAAA,EAAAzC,CAAAyD,EAAA,GA6BrCI,EA7BqCD,EAAA,GA6B7BE,EA7B6BF,EAAA,GAoC5C,OACEG,EAAA,cAACd,EAADjD,OAAAG,EAAA,EAAAH,CAAA,CACEwB,KAAMA,EACNC,KAAMA,EACNK,QAASA,EACTE,MAAOA,EACPC,OAAQA,GACJkB,EANN,CAAA9C,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAQGoC,GACCmB,EAAA,cAACT,EAADtD,OAAAG,EAAA,EAAAH,CAAA,CACEwB,KAAMA,EACNC,KAAMA,EACNK,QAASA,EACTE,MAAOA,GACHwB,EALN,CAAAnD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,SAQAoC,KAAsBxB,GACtB2C,EAAA,cAACF,EAAD7D,OAAAG,EAAA,EAAAH,CAAA,CACEgE,QAAS,kBAAMrB,GAAyB,IACxCvB,OAAQA,GACJ0C,EAHN,CAAAzD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,oNAcD,IAAMyD,EAAW,SAACC,GACvB,IAAMC,EAAMC,OAAOF,GACfG,EAAO,EAEX,GAA0B,IAAtBF,EAAIG,OAAOC,OAAc,OAAOF,EACpC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAII,OAAQC,IAG9BH,GAAQA,GAAQ,GAAKA,EAFdF,EAAIM,WAAWD,GAKtBH,GAAQA,EAEV,OAAOK,KAAKC,IAAIN,mcAKlB,IAAMO,EAAiD,CACrDC,MAAO,EACPC,OAAQ,IACRC,MAAO,GAUHhC,EAAa,SAAChD,GAAqB,IAC/BkC,EAAwDlC,EAAxDkC,OAAQ+C,EAAgDjF,EAAhDiF,SAAUxD,EAAsCzB,EAAtCyB,KAAMC,EAAgC1B,EAAhC0B,KAAMK,EAA0B/B,EAA1B+B,QAASE,EAAiBjC,EAAjBiC,MAAOiD,EAAUlF,EAAVkF,MAChD7C,EAAQC,cACR6C,EAAc9C,EAAM+C,MAAMrD,EAAU,QAAU,UAC9CsD,EAAOpF,OAAOoF,KAAKF,GAEnBG,EAAcC,YAAc7D,GAC9BW,EAAMmD,eAAe9D,GAAQmD,EAAYnD,GACzCA,EAEJ,OACEsC,EAAA,cAACyB,EAAA,EAAD,CACEP,MAAO,CACL,CACEQ,WAAY,SACZC,gBACER,EACY,SAAVlD,EACKoD,EAAKnB,EAASzC,GAAQ4D,EAAKb,QAC5BvC,GACJ0D,gBACJC,aAAc,KACdC,QAAS,OACTrE,OAAQ8D,EACRQ,eAAgB,SAChBC,SAAU,SACVC,SAAU,WACVzE,MAAO+D,GAETJ,GAEFhD,OAAQA,EApBV5B,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAsBGwE,IAuBD3B,EAAiB,SAACtD,GAAyB,IACvCyB,EAAoDzB,EAApDyB,KAAMC,EAA8C1B,EAA9C0B,KAAMK,EAAwC/B,EAAxC+B,QAASE,EAA+BjC,EAA/BiC,MAAOiD,EAAwBlF,EAAxBkF,MAAUe,EADChG,OAAAC,EAAA,EAAAD,CACaD,EADb,2CAEzCqC,EAAQC,cAER6C,EAAc9C,EAAM+C,MAAMrD,EAAU,QAAU,UAC9CsD,EAAOpF,OAAOoF,KAAKF,GAEnBG,EAAcC,YAAc7D,GAC9BW,EAAMmD,eAAe9D,GAAQmD,EAAYnD,GACzCA,EAEEwE,EA7BY,SAACzE,GAAkC,IAAnB0E,EAAmBC,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAR,IAC7C,OAAK3E,EAEEA,EACJ6E,QAAQ,MAAO,KACfC,MAAM,KACNC,MAAM,EAAG,GACTC,IAAI,SAAAC,GAAC,OAAIA,GAAKA,EAAE,GAAGC,gBACnBC,KAAK,IAPUT,EA4BDU,CAAYpF,GAE7B,OACEuC,EAAA,cAAC8C,EAAA,EAAD7G,OAAAG,EAAA,EAAAH,CAAA,GACMgG,EADN,CAEEf,MAAO,CACL,CACEjD,MACEkD,EACY,SAAVlD,EACKoD,EAAKnB,EAASzC,GAAQ4D,EAAKb,QAC5BvC,GACJA,MACJ8E,SAAUzB,EAAc,EACxB0B,WAAY1B,GAEd2B,YAASjH,EAAOkF,IAbpB5E,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAgBGyF,IAKDvC,EAAc,SAAC3D,GAAsB,IACjCkF,EAAyBlF,EAAzBkF,MAAUnB,EADuB9D,OAAAC,EAAA,EAAAD,CACRD,EADQ,WAGzC,OACEgE,EAAA,cAACkD,EAAA,EAADjH,OAAAG,EAAA,EAAAH,CAAA,CACEiF,MAAO,CACL,CACE1D,OAAQ,OACRD,MAAO,QAET2D,IAEEnB,EARN,CAAAzD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,8iCC7NG,IAAM0G,EAAa,SAACzF,EAA4BW,GAA7B,MACR,kBAATX,EAAoBA,EAAOW,EAAM+E,QAAQ1F,4LAE3C,IAAM2F,EAAU,SAACrH,GAAwB,IAAA6B,EAM1C7B,EAJF0B,YAF4C,IAAAG,EAErC,SAFqCA,EAAAyF,EAM1CtH,EAHFuH,mBAH4C,IAAAD,EAG9B,WAH8BA,EAI5CpC,EAEElF,EAFFkF,MACGsC,EALyCvH,OAAAwH,EAAA,EAAAxH,CAM1CD,EAN0C,gCAOxCqC,EAAQC,cAEd,OACEoF,EAAA,cAACC,EAAA,EAAD1H,OAAA2H,EAAA,EAAA3H,CAAA,CACEiF,MAAO,CACW,aAAhBqC,EACI,CAAE/F,OAAQ2F,EAAWzF,EAAMW,IAC3B,CAAEd,MAAO4F,EAAWzF,EAAMW,IAC9B4E,YAASjH,EAAOkF,GAChB+B,YAASjH,EAAOiD,IAAIZ,EAAO,8BAEzBmF,EARN,CAAAlH,SAAA,CAAAC,2FAAAE,WAAA,6cCfJ,IAAMoH,EAAW,CACflC,gBAAiB,SAAC1D,EAAwBI,GAExC,OAAIA,EAAMyF,OAAOC,WAAW9F,GAEnB,CAAE0D,gBAAiBtD,EAAMyF,OAAOC,WAAW9F,IAE7C,CACL0D,gBAAiB1D,IAGrB+F,UAAW,SAACA,EAA8B3F,GAA/B,OACTA,EAAM4F,WAAWD,IACnBE,MAAO,SAACA,EAAuB7F,GAAxB,OAAyCA,EAAM8F,gBAAgBD,IACtEE,MAAOjB,EACPkB,YAAalB,EACbmB,SAAUnB,EACVoB,gBAAiBpB,EACjBqB,UAAWrB,EACXsB,WAAYtB,EACZuB,WAAYvB,EACZwB,SAAUxB,EACVyB,cAAezB,GAGJhG,EAAM,SAACnB,GAAoB,IAC9BiF,EAAoCjF,EAApCiF,SAAU/C,EAA0BlC,EAA1BkC,OAAW2G,EADS5I,OAAAwH,EAAA,EAAAxH,CACMD,EADN,uBAEhCqC,EAAQC,cACRwG,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQH,EACjB,GAAIG,EAAM,CAER,IAAMC,EAAUpB,EAASmB,GAEzB,GAAIC,EAAS,CAEX,IAAM/D,EAAQ+D,EAAQJ,EAAWG,GAAO3G,GAExCyG,EAAkBI,KAAKhE,QAGvB6D,EAAWC,GAAQH,EAAWG,GAKpC,OACEtB,EAAA,cAACC,EAAA,EAAD,CAAMzF,OAAQA,EAAQgD,MAAO,CAAC6D,EAAYD,GAA1CxI,SAAA,CAAAC,mFAAAE,WAAA,KACGwE,kQC5EPkE,EAAAC,EAAAC,EAAA,sBAAA9D,IAAO,IAAMA,EAAgB,SAC3B7D,GAEA,MAAoB,kBAATA","file":"static/js/17.c8e09435.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"avatar\"\n    }}>{`Avatar`}</h1>\n    <p>{`Display avatar image, with default for name initials`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Avatar\\n  source={{ uri: \\'https://picsum.photos/200/200\\', width: 200, height: 200 }}\\n  // Fallbacks to name if source is not provided\\n  name=\\\"Bill Gates\\\"\\n  size=\\\"large\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Box\n    }} mdxType=\"Playground\">\n  <Avatar source={{\n        uri: 'https://picsum.photos/200/200',\n        width: 200,\n        height: 200\n      }} // Fallbacks to name if source is not provided\n      name=\"Bill Gates\" size=\"large\" mdxType=\"Avatar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Avatar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const imageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n  const [ImageR, imageProps] = getOverrides(\n    StyledImage,\n    props,\n    dlv(theme, 'overrides.Avatar.Image'),\n    overrides.Image,\n  );\n\n  return (\n    <Root\n      name={name}\n      size={size}\n      isSolid={isSolid}\n      color={color}\n      testID={testID}\n      {...rootProps}\n    >\n      {imageUnavailable && (\n        <Initials\n          name={name}\n          size={size}\n          isSolid={isSolid}\n          color={color}\n          {...initialsProps}\n        />\n      )}\n      {!imageUnavailable && !!source && (\n        <ImageR\n          onError={() => setHasImageFailedLoading(true)}\n          source={source}\n          {...imageProps}\n        />\n      )}\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n  space: getSpacing,\n  spaceBottom: getSpacing,\n  spaceEnd: getSpacing,\n  spaceHorizontal: getSpacing,\n  spaceLeft: getSpacing,\n  spaceRight: getSpacing,\n  spaceStart: getSpacing,\n  spaceTop: getSpacing,\n  spaceVertical: getSpacing,\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}