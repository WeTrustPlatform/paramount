{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","getButtonAppearances","minimal","default","background","content","danger","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","_props$appearance","appearance","iconAfter","iconBefore","isDisabled","isLoading","hasIconAfter","hasIconBefore","_buttonAppearances$ap","textColor","touchableStyle","objectWithoutProperties","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","textSize","textSizes","buttonContentWrapperStyle","innerButtonWrapperStyle","textStyle","objectSpread","muted","display","fontWeight","textAlign","disabled","Button","getStyles","_props$isDisabled","_props$isLoading","_props$onPress","onPress","testID","accessibilityHint","accessibilityLabel","_props$accessible","accessible","_mergeStyles","mergeStyles","components","TouchableOpacity","accessibilityRole","Button_jsxFileName","Button_ButtonContent","esm_extends","ButtonContent","iconLoading","icon","title","Dots_Dots","white","Text","Toggle","children","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","initialMeasurements","pageX","pageY","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","onMeasure","ref","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","viewProps","isRenderProp","_useMeasure","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Box","Popover","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","of","className","isMDXComponent","getPositionerStyles","containerStyle","positionerStyle","isPositionerMeasurementsMeasured","zIndex","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","Positioner","_props$position","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","getPopoverStyles","popoverStyle","padding","elevations","restProps","Positioner_Positioner","Popover_jsxFileName","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/8.83f2784c.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport type GetButtonStyles = (\n  props: ButtonProps,\n  theme: Theme,\n) => Partial<ButtonStyles>;\n\nexport const getButtonStyles: GetButtonStyles = (props, theme) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isDisabled,\n    isLoading,\n    size = 'medium',\n  } = props;\n  const hasIconAfter = !!iconAfter;\n  const hasIconBefore = !!iconBefore;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...touchableStyle\n  } = buttonAppearances[appearance][color];\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] * 2,\n        paddingRight: theme.controlPaddings[size] * 2,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      };\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    buttonContentWrapperStyle: {\n      paddingLeft: hasIconBefore ? 8 : 0,\n      paddingRight: hasIconAfter ? 8 : 0,\n    },\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n      ...textSize,\n    },\n    touchableStyle: {\n      borderRadius,\n      height,\n      paddingLeft,\n      paddingRight,\n      ...touchableStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Dots } from '../LoadingIndicators';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps {\n  /** Title of the button */\n  title?: string;\n\n  /** Icon in place of title */\n  icon?: React.ReactNode;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Sets an icon before the text. */\n  iconBefore?: React.ReactNode;\n\n  /** Sets an icon after the text. */\n  iconAfter?: React.ReactNode;\n\n  /** Sets an icon at loading state. */\n  iconLoading?: React.ReactNode;\n\n  /** Label for screen readers */\n  accessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  accessibilityHint?: string;\n\n  /**\n   * When true, indicates that the view is an accessibility element.\n   * @default true\n   */\n  accessible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetButtonStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    getStyles,\n    iconAfter,\n    iconBefore,\n    isDisabled = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    testID,\n\n    accessibilityHint,\n    accessibilityLabel,\n    accessible = true,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    textStyle,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    props,\n    theme,\n  );\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={touchableStyle}\n      testID={testID}\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessible={accessible}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle?: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <>\n        {iconLoading || (\n          <Dots color={textStyle ? textStyle.color : theme.colors.text.white} />\n        )}\n      </>\n    );\n  }\n  if (icon) return <>{icon}</>;\n  if (title) {\n    return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n  }\n\n  return <></>;\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, managing its\\n              open and closed state is in your control\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, managing its\n                open and closed state is in your control\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`PopoverStyles {\n  popoverStyle: ViewStyle;\n  positionerStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\ngetStyles={(PopoverProps, Theme) => PopoverStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<>\n  <View positionerStyle>\n    <View popoverStyle>{content}</View>\n  </View>\n  <View containerStyle>{children}</View>\n</>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport interface PositionerStyleProps {\n  isPositionerMeasurementsMeasured: boolean;\n}\n\nexport type GetPositionerStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => Partial<PositionerStyles>;\n\nexport const getPositionerStyles: GetPositionerStyles = (props, theme) => {\n  const { isPositionerMeasurementsMeasured } = props;\n\n  return {\n    containerStyle: {},\n    positionerStyle: {\n      opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\n\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport { GetPositionerStyles, getPositionerStyles } from './Positioner.styles';\n\nexport const POSITION = {\n  TOP: 'top' as const,\n  TOP_LEFT: 'top-left' as const,\n  TOP_RIGHT: 'top-right' as const,\n\n  BOTTOM: 'bottom' as const,\n  BOTTOM_LEFT: 'bottom-left' as const,\n  BOTTOM_RIGHT: 'bottom-right' as const,\n\n  LEFT: 'left' as const,\n  RIGHT: 'right' as const,\n};\n\nexport type Position =\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'right';\n\nexport interface PositionerProps {\n  /**\n   * Position of the content.\n   * @default \"bottom\"\n   */\n  position?: Position;\n\n  /**\n   * Wrapped component to open the positioner over.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Content revealed when positioner is opened.\n   */\n  content?: React.ReactNode;\n\n  /**\n   * When true, displays positioner.\n   */\n  isVisible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetPositionerStyles;\n}\n\ninterface GetPositionerPositionParams {\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    getStyles,\n    children,\n    content,\n    isVisible,\n    position = POSITION.BOTTOM,\n  } = props;\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const theme = useTheme();\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const { positionerStyle, containerStyle } = mergeStyles(\n    getPositionerStyles,\n    getStyles,\n    theme.components.getPositionerStyles,\n  )({ isPositionerMeasurementsMeasured }, theme);\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  return (\n    <>\n      {isVisible && (\n        <ViewMeasure\n          style={{\n            ...positionStyle,\n            ...positionerStyle,\n          }}\n          onMeasure={setPositionerMeasurements}\n        >\n          {content}\n        </ViewMeasure>\n      )}\n      <ViewMeasure style={containerStyle} onMeasure={setTargetMeasurements}>\n        {children}\n      </ViewMeasure>\n    </>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport {\n  getPositionerStyles,\n  PositionerStyleProps,\n  PositionerStyles,\n} from '../Positioner/Positioner.styles';\n\nexport interface PopoverStyles extends PositionerStyles {\n  popoverStyle: ViewStyle;\n}\n\nexport type GetPopoverStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => Partial<PopoverStyles>;\n\nexport const getPopoverStyles: GetPopoverStyles = (props, theme) => {\n  return {\n    popoverStyle: {\n      backgroundColor: theme.colors.background.content,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    ...getPositionerStyles(props, theme),\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport { GetPopoverStyles, getPopoverStyles } from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  /** Callback to get element styles. */\n  getStyles?: GetPopoverStyles;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getStyles, ...restProps } = props;\n  const theme = useTheme();\n  const { popoverStyle } = mergeStyles(\n    getPopoverStyles,\n    getStyles,\n    theme.components.getPopoverStyles,\n  )({ isPositionerMeasurementsMeasured: false }, theme);\n\n  return (\n    <Positioner\n      {...restProps}\n      getStyles={getStyles}\n      content={<View style={popoverStyle}>{content}</View>}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}