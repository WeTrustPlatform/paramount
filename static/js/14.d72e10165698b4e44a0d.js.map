{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["getAlertStyles","_ref","theme","_ref$intent","intent","bodyStyle","flex","containerStyle","Object","objectSpread","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","descriptionStyle","titleStyle","Alert","props","title","description","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","components","react","View","style","__source","fileName","_jsxFileName","lineNumber","Box","paddingRight","justifyContent","Icon_web","name","size","color","resolveIcon","Text","textStyle","weight","propToFn","elevation","shape","containerShapes","children","viewStyles","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","ToastContext","ToastProvider","Toast","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","Consumer","_ref2","notify","___WEBPACK_IMPORTED_MODULE_6__","onPress","of","isMDXComponent","component","onRemove","_props$duration","duration","toastSettings","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","React","timer","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2__","_Alert__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","defaultToastInstance","defaultToastContext","danger","removeToast","success","warning","useToast","getToastStyles","left","marginBottom","marginLeft","marginRight","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","wrapperStyle","width","AnimatedView","animated","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","toConsumableArray","payload","toast","REMOVE_TOAST","filter","Error","idCounterRef","_React$useReducer","_React$useReducer2","slicedToArray","dispatch","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","String","startsWith","err","transitions","useTransition","config","springDefaultConfig","enter","translateY","from","leave","Provider","map","item","transitionStyle","key","transform","esm_extends","friction","tension"],"mappings":"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","file":"static/js/14.c4c2a43c.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme';\nimport { AlertProps } from './Alert';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\nexport type GetAlertStyles = (props: AlertProps, theme: Theme) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent = 'info' }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    descriptionStyle: {},\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\n/**\n * Alert properties\n */\nexport interface AlertProps {\n  /** Title of the alert. */\n  title?: string;\n\n  /** Description of the alert. */\n  description?: string;\n\n  /** Replace the icon of the alert on the left. Set to null to remove icon */\n  icon?: React.ReactNode;\n\n  /**\n   * Intent of the alert.\n   * @default info\n   */\n  intent?: Intent;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\n/**\n * Alert with intent\n */\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    bodyStyle,\n    descriptionStyle,\n    titleStyle,\n  } = mergeStyles(getAlertStyles, getStyles, theme.components.getAlertStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon === null\n        ? null\n        : icon || (\n            <Box paddingRight={16} justifyContent=\"center\">\n              {resolveIcon(intent)}\n            </Box>\n          )}\n      <View style={bodyStyle}>\n        <Text getStyles={() => ({ textStyle: titleStyle })} weight=\"bold\">\n          {title}\n        </Text>\n        <Text getStyles={() => ({ textStyle: descriptionStyle })}>\n          {description}\n        </Text>\n      </View>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, ToastContext, ToastProvider, Toast } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Put `}<inlineCode parentName=\"p\">{`ToastProvider`}</inlineCode>{` at the top level component to wrap components that make use of `}<inlineCode parentName=\"p\">{`ToastContext`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<ToastProvider>{children}</ToastProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` you can use to create toasts from anywhere in the application.`}</p>\n    <Playground __position={0} __code={'<ToastProvider>\\n  {/*\\n    We use `ToastContext.Consumer` here due to limitations in docs\\n    Use `const { notify } = useToast()` inside your function component\\n   */}\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() =>\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n          })\\n        }\\n        title=\\\"Open toast\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    {\n          /*\n           We use `ToastContext.Consumer` here due to limitations in docs\n           Use `const { notify } = useToast()` inside your function component\n          */\n        }\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => notify({\n            title: 'Title',\n            description: 'Description'\n          })} title=\"Open toast\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends AlertProps {\n  /**\n   * Duration for how long the toast should stay active.\n   * @default 3000\n   */\n  duration?: number;\n\n  /**\n   * Custom component to override the entire toast.\n   */\n  component?: React.ReactNode;\n\n  /**\n   * Assign an id to the toast so you can remove it later.\n   */\n  id?: ToastId;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  /**\n   * (Ignore) Assign an id to the toast so you can remove it later.\n   */\n  id: ToastId;\n\n  /**\n   * (Ignore) Callback invoked when the duration is up.\n   */\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const { component, id, onRemove, duration = 3000, ...toastSettings } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\nexport type GetToastStyles = (props: {}, theme: Theme) => ToastStyles;\n\n// @ts-ignore: Compat with web\nexport const getToastStyles: GetToastStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n    wrapperStyle: {\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children, getStyles } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const theme = useTheme();\n\n  const { containerStyle, wrapperStyle } = mergeStyles(\n    getToastStyles,\n    getStyles,\n    theme.components.getToastStyles,\n  )({}, theme);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(state.toasts, toast => toast.id, {\n    config: springDefaultConfig,\n\n    enter: { translateY: 10 },\n    from: { translateY: -500 },\n    leave: { translateY: -500 },\n  });\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View style={containerStyle}>\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              ...wrapperStyle,\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}