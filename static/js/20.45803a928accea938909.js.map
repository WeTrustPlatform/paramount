{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Badge/Badge.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Badge/Badge.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Badge","Box","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_5__","title","color","isSolid","size","shape","of","isMDXComponent","_props$size","_props$color","_props$isSolid","_props$shape","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","rootProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","children","style","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","shapeStyles","containerShapes","colors","fills","solid","subtle","isControlSize","small","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alignItems","alignSelf","backgroundColor","display","flexDirection","justifyContent","textProps","_Typography__WEBPACK_IMPORTED_MODULE_10__","weight","textTransform","propToFn","background","elevation","elevations","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/20.03007954.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Badge, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"badge\"\n    }}>{`Badge`}</h1>\n    <p>{`Display to indicate status or feat of service`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Badge title=\\\"Badge\\\" color=\\\"teal\\\" isSolid size=\\\"large\\\" shape=\\\"pill\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Badge,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Badge title=\"Badge\" color=\"teal\" isSolid size=\"large\" shape=\"pill\" mdxType=\"Badge\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Badge} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ContainerShape, ControlSize, FillColor } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from '../Typography';\n\ninterface BadgeBaseProps {\n  /** Title of the badge */\n  title?: OptionalString;\n\n  /**\n   * Color of the badge\n   * @default \"neutral\"\n   */\n  color?: FillColor;\n\n  /**\n   * Size of the badge\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Shape of the container\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * When true, display in solid mode\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface BadgeOverrides {\n  Root: RootProps;\n  Title: TitleProps;\n}\n\nexport interface BadgeProps\n  extends WithOverrides<BadgeBaseProps, BadgeOverrides> {}\n\nexport const Badge = (props: BadgeProps) => {\n  const {\n    size = 'medium',\n    color = 'neutral',\n    isSolid = false,\n    shape = 'rounded',\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Badge.Root'),\n    overrides.Root,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Badge.Title'),\n    overrides.Title,\n  );\n\n  return (\n    <Root\n      size={size}\n      color={color}\n      isSolid={isSolid}\n      shape={shape}\n      testID={testID}\n      {...rootProps}\n    >\n      <Title\n        size={size}\n        color={color}\n        isSolid={isSolid}\n        title={title}\n        {...titleProps}\n      />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  color: FillColor;\n  size: ControlSize | number;\n  shape: ContainerShape;\n  isSolid: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { size, color, isSolid, shape, children, style, ...viewProps } = props;\n  const theme = useTheme();\n  const shapeStyles = theme.containerShapes[shape];\n  const fills = isSolid ? theme.fills.solid : theme.fills.subtle;\n\n  const colors = fills[color];\n  const { height, paddingLeft, paddingRight } = isControlSize(size)\n    ? {\n        small: {\n          height: theme.controlHeights.small,\n          paddingLeft: theme.controlPaddings.small,\n          paddingRight: theme.controlPaddings.small,\n        },\n\n        medium: {\n          height: theme.controlHeights.medium,\n          paddingLeft: theme.controlPaddings.medium,\n          paddingRight: theme.controlPaddings.medium,\n        },\n\n        large: {\n          height: theme.controlHeights.large,\n          paddingLeft: theme.controlPaddings.large,\n          paddingRight: theme.controlPaddings.large,\n        },\n      }[size]\n    : {\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      };\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          alignSelf: 'flex-start',\n          backgroundColor: colors.backgroundColor,\n          display: 'flex',\n          flexDirection: 'row',\n          height,\n          justifyContent: 'center',\n          paddingLeft,\n          paddingRight,\n          ...shapeStyles,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  color: FillColor;\n  title?: OptionalString;\n  isSolid: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { size, color, isSolid, title, style, ...textProps } = props;\n  const theme = useTheme();\n  const fills = isSolid ? theme.fills.solid : theme.fills.subtle;\n\n  const colors = fills[color];\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[{ color: colors.color, textTransform: 'uppercase' }, style]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}