{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Counter","CounterState","___WEBPACK_IMPORTED_MODULE_6__","initial","_ref2","count","increment","decrement","___WEBPACK_IMPORTED_MODULE_5__","onDecrement","onIncrement","of","parentName","className","isMDXComponent","getCounterStyles","theme","containerStyle","display","flexDirection","countStyle","justifyContent","minWidth","counterStyle","alignItems","borderColor","colors","border","primary","borderRadius","borderWidth","height","width","decrementWrapperStyle","paddingRight","disabledStyle","incrementWrapperStyle","paddingLeft","textStyle","_props$count","component","max","min","getStyles","useTheme","_mergeStyles","mergeStyles","isDecrementDisabled","isIncrementDisabled","react","View","style","TouchableOpacity","objectSpread","disabled","onPress","undefined","Icon_web","name","size","color","text","muted","Text","align","concat","children","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrementBy","incrementBy","set","Icon","IconTag","Feather","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","_ref$color","_ref$size","_ref$align","weight","_ref$isItalic","isItalic","transform","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","background","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","secondary","danger","info","success","warning","button","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","backgroundColor","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","containerShapes","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/18.e68930e2.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Counter, CounterState } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterState initial={0}>\\n  {({ count, increment, decrement }) => (\\n    <Counter count={count} onDecrement={decrement} onIncrement={increment} />\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Counter,\n      CounterState\n    }} mdxType=\"Playground\">\n  <CounterState initial={0} mdxType=\"CounterState\">\n    {({\n          count,\n          increment,\n          decrement\n        }) => <Counter count={count} onDecrement={decrement} onIncrement={increment} mdxType=\"Counter\" />}\n  </CounterState>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Counter} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h3>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`CounterStyles {\n  containerStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  countStyle: ViewStyle;\n  decrementWrapperStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  incrementWrapperStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\ngetStyles={(CounterProps, Theme) => CounterStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View decrementWrapperStyle>\n    <TouchableOpacity counterStyle>{icon}</TouchableOpacity>\n  </View>\n  <View countStyle>\n    <Text textStyle>{count}</Text>\n  </View>\n  <View incrementWrapperStyle>\n    <TouchableOpacity counterStyle>{icon}</TouchableOpacity>\n  </View>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { CounterProps } from './Counter';\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  countStyle: ViewStyle;\n  decrementWrapperStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  incrementWrapperStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (\n  props: CounterProps,\n  theme: Theme,\n) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    countStyle: {\n      justifyContent: 'center',\n      minWidth: 24,\n    },\n    counterStyle: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    decrementWrapperStyle: { paddingRight: 16 },\n    disabledStyle: {\n      borderColor: theme.colors.border.default,\n    },\n    incrementWrapperStyle: { paddingLeft: 16 },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  /** Count to be displayed. */\n  count?: number;\n\n  /** Minimum count for the counter. Upon reaching the limit, it will disable decrement button. */\n  min?: number;\n\n  /** Maximum count for the counter. Upon reaching the limit, it will disable increment button. */\n  max?: number;\n\n  /** Custom component in place of count */\n  component?: React.ReactNode;\n\n  /** Called when increment button is pressed */\n  onIncrement?: () => void;\n\n  /** Called when decrement button is pressed */\n  onDecrement?: () => void;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count = 0,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    decrementWrapperStyle,\n    disabledStyle,\n    incrementWrapperStyle,\n    textStyle,\n  } = mergeStyles(\n    getCounterStyles,\n    getStyles,\n    theme.components.getCounterStyles,\n  )(props, theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <View style={decrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n      {component || (\n        <View style={countStyle}>\n          <Text\n            align=\"center\"\n            getStyles={() => ({ textStyle })}\n          >{`${count}`}</Text>\n        </View>\n      )}\n      <View style={incrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}