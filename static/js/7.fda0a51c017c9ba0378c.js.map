{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","getButtonAppearances","minimal","default","background","content","danger","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","_props$appearance","appearance","iconAfter","iconBefore","isDisabled","isLoading","hasIconAfter","hasIconBefore","_buttonAppearances$ap","textColor","touchableStyle","objectWithoutProperties","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","textSize","textSizes","buttonContentWrapperStyle","innerButtonWrapperStyle","textStyle","objectSpread","muted","display","fontWeight","textAlign","disabled","Button","getStyles","_props$isDisabled","_props$isLoading","_props$onPress","onPress","testID","accessibilityHint","accessibilityLabel","_props$accessible","accessible","_mergeStyles","mergeStyles","components","TouchableOpacity","accessibilityRole","Button_jsxFileName","Button_ButtonContent","esm_extends","ButtonContent","iconLoading","icon","title","Dots_Dots","white","Text","State","children","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setState","newState","getTabStyles","_ref$shouldStretch","shouldStretch","_ref$isActive","isActive","containerStyle","greyDefault","padding","flex","Tab","_props$isActive","buttonProps","layoutProps","MDXLayout","MDXContent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Icon","Tabs","___WEBPACK_IMPORTED_MODULE_6__","activeTabIndex","_ref2","___WEBPACK_IMPORTED_MODULE_7__","onTabPress","Array","fill","v","i","___WEBPACK_IMPORTED_MODULE_8__","concat","of","className","isMDXComponent","getTabsStyles","data","child","tabs","toArray","tabProps","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/7.142ac51e.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport type GetButtonStyles = (\n  props: ButtonProps,\n  theme: Theme,\n) => Partial<ButtonStyles>;\n\nexport const getButtonStyles: GetButtonStyles = (props, theme) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isDisabled,\n    isLoading,\n    size = 'medium',\n  } = props;\n  const hasIconAfter = !!iconAfter;\n  const hasIconBefore = !!iconBefore;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...touchableStyle\n  } = buttonAppearances[appearance][color];\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] * 2,\n        paddingRight: theme.controlPaddings[size] * 2,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      };\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    buttonContentWrapperStyle: {\n      paddingLeft: hasIconBefore ? 8 : 0,\n      paddingRight: hasIconAfter ? 8 : 0,\n    },\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n      ...textSize,\n    },\n    touchableStyle: {\n      borderRadius,\n      height,\n      paddingLeft,\n      paddingRight,\n      ...touchableStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Dots } from '../LoadingIndicators';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps {\n  /** Title of the button */\n  title?: string;\n\n  /** Icon in place of title */\n  icon?: React.ReactNode;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Sets an icon before the text. */\n  iconBefore?: React.ReactNode;\n\n  /** Sets an icon after the text. */\n  iconAfter?: React.ReactNode;\n\n  /** Sets an icon at loading state. */\n  iconLoading?: React.ReactNode;\n\n  /** Label for screen readers */\n  accessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  accessibilityHint?: string;\n\n  /**\n   * When true, indicates that the view is an accessibility element.\n   * @default true\n   */\n  accessible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetButtonStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    getStyles,\n    iconAfter,\n    iconBefore,\n    isDisabled = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    testID,\n\n    accessibilityHint,\n    accessibilityLabel,\n    accessible = true,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    textStyle,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    props,\n    theme,\n  );\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={touchableStyle}\n      testID={testID}\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessible={accessible}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle?: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <>\n        {iconLoading || (\n          <Dots color={textStyle ? textStyle.color : theme.colors.text.white} />\n        )}\n      </>\n    );\n  }\n  if (icon) return <>{icon}</>;\n  if (title) {\n    return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n  }\n\n  return <></>;\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TabProps } from './Tab';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetTabStyles = (props: TabProps, theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = (\n  { shouldStretch = true, isActive = false },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      padding: 2,\n      ...(shouldStretch\n        ? {\n            flex: 1,\n          }\n        : {}),\n    },\n    textStyle: {\n      color: isActive ? theme.colors.text.primary : theme.colors.text.muted,\n    },\n    touchableStyle: {\n      backgroundColor: isActive ? 'white' : 'transparent',\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { GetTabStyles, getTabStyles } from './Tab.styles';\n\nexport interface TabProps\n  extends Omit<Omit<ButtonProps, 'onPress'>, 'getStyles'> {\n  /**\n   * Index of the tab.\n   */\n  index?: number;\n\n  /**\n   * Called when tab is pressed.\n   */\n  onPress?: (index?: number) => void;\n\n  /**\n   * When true, the tab would be highlighted as active.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the tab will fill empty spaces\n   * @default true\n   */\n  shouldStretch?: boolean;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: GetTabStyles;\n}\n\nexport const Tab = (props: TabProps) => {\n  const {\n    isActive = false,\n    getStyles,\n    index,\n    onPress,\n    shouldStretch = true,\n    ...buttonProps\n  } = props;\n  const theme = useTheme();\n  const { containerStyle, touchableStyle, textStyle } = mergeStyles(\n    getTabStyles,\n    getStyles,\n    theme.components.getTabStyles,\n  )(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        getStyles={() => ({ touchableStyle, textStyle })}\n        onPress={() => {\n          if ((index === 0 || index) && onPress) onPress(index);\n          else if (onPress) onPress();\n        }}\n        {...buttonProps}\n      />\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Icon, State, Tabs, Tab } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTabIndex={state.activeTabIndex}\\n      onTabPress={index => setState({ activeTabIndex: index })}\\n    >\\n      {new Array(4).fill(0).map((v, i) => (\\n        <Tab key={i} title={`Tab ${i + 1}`} />\\n      ))}\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      State,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTabIndex={state.activeTabIndex} onTabPress={index => setState({\n          activeTabIndex: index\n        })} mdxType=\"Tabs\">\n        {new Array(4).fill(0).map((v, i) => <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />)}\n      </Tabs>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tabs-props\"\n    }}>{`Tabs Props`}</h2>\n    <Props of={Tabs} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tabs-customization\"\n    }}>{`Tabs Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TabsStyles {\n  containerStyle: ViewStyle;\n}\n\ngetStyles={(TabsProps, Theme) => TabsStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View style={containerStyle}>{tabs}</View>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tab-props\"\n    }}>{`Tab Props`}</h2>\n    <p>{`Extends `}<inlineCode parentName=\"p\">{`ButtonProps`}</inlineCode></p>\n    <Props of={Tab} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tab-customization\"\n    }}>{`Tab Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TabStyles {\n  containerStyle: ViewStyle;\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\ngetStyles={(TabProps, Theme) => TabStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View style={containerStyle}>\n  <Button touchableStyle textStyle>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { TabsProps } from './Tabs';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n}\n\nexport type GetTabsStyles = (\n  props: TabsProps,\n  theme: Theme,\n) => Partial<TabsStyles>;\n\nexport const getTabsStyles: GetTabsStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      borderRadius: theme.controlBorderRadius.medium,\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  /**\n   * Current active tab index.\n   */\n  activeTabIndex?: number;\n\n  /**\n   * Called when a Tab is pressed\n   */\n  onTabPress: (index?: number) => void;\n\n  /**\n   * `Tab` components\n   */\n  children: Array<React.ReactElement<TabProps>> | React.ReactElement<TabProps>;\n\n  /** Callback to get element styles. */\n  getStyles?: GetTabsStyles;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const { children, activeTabIndex, onTabPress, getStyles } = props;\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getTabsStyles,\n    getStyles,\n    theme.components.getTabsStyles,\n  )(props, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    return {\n      index,\n      isActive: index === activeTabIndex,\n      onPress: i => onTabPress(i),\n      ...child.props,\n    };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  return (\n    <View style={containerStyle}>\n      {data.map((tabProps, index) => React.cloneElement(tabs[index], tabProps))}\n    </View>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}