{"version":3,"sources":["webpack:///./docs/CustomizeTheme.mdx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","href","React","Component"],"mappings":"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","file":"static/js/30.d6e57186.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"customize-theme\"}}>{`Customize Theme`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Paramount uses three-tier theming system. It means you can customize the styles at three layers, with each level being more granular`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"1-use-themeprovider\"}}>{`1. Use ThemeProvider`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First and foremost, in order to theme the library you need to use React Context's Provider`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { ThemeProvider, createTheme } from 'paramount-ui'\n\nconst theme = createTheme()\n\n// in the outmost component insert the provider and pass Theme Object as value\n<ThemeProvider value={theme}>\n  ...\n</ThemeProvider>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"2-theme-object\"}}>{`2. Theme Object`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Theme object has 3 parts. `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"theme/ThemeInterface.ts\"}}>{`See Theme interface`}</MDXTag>{`. You can choose to customize whichever part you want`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`const theme = createTheme(themeVariables, componentVariables)\n\n// or\n\nconst theme = {\n  themeVariables: customThemeVariables,\n  componentVariables: customComponentVariables,\n  ...styleGetters\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"theme-variables-tier-1\"}}>{`Theme variables (Tier 1)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Those are variables that define overall look of the design system. These high level variables should be enough to provide basic style changes such as color, font sizes, control paddings/heights etc. `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"theme/ThemeInterface.ts\"}}>{`See ThemeVariables interface`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`const themeVariables = {\n  ...defaultThemeVariables,\n  colors: {\n    background: { ... },\n    border: { ... },\n    icon: { ... },\n    intent: { ... },\n    text: { ... },\n    brand: { ... },\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"component-variables-tier-2\"}}>{`Component variables (Tier 2)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Those are variables applied to individual components. They inherit some variables from tier-1 theme variables but can be overriden specifically for each component. These variables usually provide styling for different component states, look etc.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`const buttonVariables = {\n  appearances: {\n    minimal: {\n      default: {\n        backgroundColor: 'blue',\n        ...\n      },\n      danger: { ... },\n      primary: { ... },\n      secondary: { ... },\n    },\n    primary: {\n      default: { ... },\n      danger: { ... },\n      primary: { ... },\n      secondary: { ... },\n    },\n    outline: {\n      default: { ... },\n      danger: { ... },\n      primary: { ... },\n      secondary: { ... }\n    },\n  },\n  disabled: { ... },\n  sizes: {\n    small: { ... },\n    medium: { ... },\n    large: { ... },\n  },\n}\n\nconst theme = {\n  ...createTheme(themeVariables, {\n    ...componentVariables,\n    button: buttonVariables, // <= Insert here\n  }),\n  ...styleGetters,\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"component-style-getters-tier-3\"}}>{`Component style getters (Tier 3)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These are functions that return style for components. This allows for complete control over how a component looks depending on given props. They inherit component variables.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`const getButtonStyles = buttonVariables => (appearance, color, ...componentProps) => {\n  return {\n    buttonStyle: {\n      backgroundColor: buttonVariables[appearance],\n    },\n    focusColor: { ... },\n    textStyle: { ... },\n  }\n}\n\nconst theme = {\n  ...createTheme(themeVariables, componentVariables),\n  ...styleGetters,\n  getButtonStyles, // <= Insert here\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"use-dangerouslysetinlinestyle\"}}>{`Use dangerouslySetInlineStyle`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`All components also expose a prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dangerouslySetInlineStyle`}</MDXTag>{` which you can use to style individual children of a component. Using these is equivalent to tier-2 component variables; however style getters cannot access these styles. It is recommended that you only use theme, so that your components are consistent`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`  <Text\n    dangerouslySetInlineStyle={{\n      textStyle: {\n        ...textStyle,\n      },\n    }}\n  >\n    {children}\n  </Text>\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}