{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","TextInput","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","LeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","RightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","_jsxFileName","hasLeftIcon","hasRightIcon","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","controlHeights","controlPaddings","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","content","borderColor","border","borderWidth","text","greyDark","danger","editable","muted","name","alignItems","display","justifyContent","left","position","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","label","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"8lCA8BO,IAAMA,EAAa,SAACC,EAA4BC,GAA7B,MACR,kBAATD,EAAoBA,EAAOC,EAAMC,QAAQF,4LAE3C,IAAMG,EAAU,SAACC,GAAwB,IAAAC,EAM1CD,EAJFJ,YAF4C,IAAAK,EAErC,SAFqCA,EAAAC,EAM1CF,EAHFG,mBAH4C,IAAAD,EAG9B,WAH8BA,EAI5CE,EAEEJ,EAFFI,MACGC,EALyCC,OAAAC,EAAA,EAAAD,CAM1CN,EAN0C,gCAOxCH,EAAQW,cAEd,OACEC,EAAA,cAACC,EAAA,EAADJ,OAAAK,EAAA,EAAAL,CAAA,CACEF,MAAO,CACW,aAAhBD,EACI,CAAES,OAAQjB,EAAWC,EAAMC,IAC3B,CAAEgB,MAAOlB,EAAWC,EAAMC,IAC9BiB,YAASd,EAAOI,GAChBU,YAASd,EAAOe,IAAIlB,EAAO,8BAEzBQ,EARN,CAAAW,SAAA,CAAAC,2FAAAC,WAAA,6cCXJ,IAAMC,EAOF,CACFC,gBAAiB,SAACC,EAAiCxB,GAEjD,OAAIA,EAAMyB,OAAOC,WAAWF,GAEnB,CAAED,gBAAiBvB,EAAMyB,OAAOC,WAAWF,IAG7C,CAAED,gBAAiBC,IAE5BG,UAAW,SAACA,EAAmB3B,GAApB,OAAqCA,EAAM4B,WAAWD,IAEjEE,MAAO,SAACA,EAAuB7B,GAAxB,OAAyCA,EAAM8B,gBAAgBD,IAEtEE,MAAO,SAAChC,EAA4BC,GAA7B,MAA+C,CACpDgC,QAASlC,EAAWC,EAAMC,KAE5BiC,YAAa,SAAClC,EAA4BC,GAA7B,MAA+C,CAC1DkC,cAAepC,EAAWC,EAAMC,KAElCmC,SAAU,SAACpC,EAA4BC,GAA7B,MAA+C,CACvDoC,WAAYtC,EAAWC,EAAMC,KAE/BqC,gBAAiB,SAACtC,EAA4BC,GAA7B,MAA+C,CAC9DsC,kBAAmBxC,EAAWC,EAAMC,KAEtCuC,UAAW,SAACxC,EAA4BC,GAA7B,MAA+C,CACxDwC,YAAa1C,EAAWC,EAAMC,KAEhCyC,WAAY,SAAC1C,EAA4BC,GAA7B,MAA+C,CACzD0C,aAAc5C,EAAWC,EAAMC,KAEjC2C,WAAY,SAAC5C,EAA4BC,GAA7B,MAA+C,CACzD4C,aAAc9C,EAAWC,EAAMC,KAEjC6C,SAAU,SAAC9C,EAA4BC,GAA7B,MAA+C,CACvD8C,WAAYhD,EAAWC,EAAMC,KAE/B+C,cAAe,SAAChD,EAA4BC,GAA7B,MAA+C,CAC5DgD,gBAAiBlD,EAAWC,EAAMC,MAIzBiD,EAAM,SAAC9C,GAAoB,IAC9B+C,EAAoC/C,EAApC+C,SAAUC,EAA0BhD,EAA1BgD,OAAWC,EADS3C,OAAAC,EAAA,EAAAD,CACMN,EADN,uBAEhCH,EAAQW,cACR0C,EAAoB,GACpBC,EAAwB,GAE9B,IAAK,IAAMC,KAAQH,EACjB,GAAIG,EAAM,CACR,IAAMC,EAAUlC,EAASiC,GAEzB,GAAIC,EAAS,CAEX,IAAMjD,EAAQiD,EAAQJ,EAAWG,GAAkBvD,GAEnDqD,EAAkBI,KAAKlD,QAGvB+C,EAAWC,GAA2BH,EAAWG,GAKvD,OACE3C,EAAA,cAACC,EAAA,EAAD,CAAMsC,OAAQA,EAAQ5C,MAAO,CAAC+C,EAAYD,GAA1ClC,SAAA,CAAAC,mFAAAC,WAAA,MACG6B,2zDC9CA,IAAMQ,EAAY,SAACvD,GAA0B,IAAAC,EAkB9CD,EAhBFJ,YAFgD,IAAAK,EAEzC,SAFyCA,EAAAuD,EAkB9CxD,EAfFyD,mBAHgD,IAAAD,KAAAE,EAkB9C1D,EAdF2D,kBAJgD,IAAAD,KAAAE,EAkB9C5D,EAbF6D,iBALgD,IAAAD,KAAAE,EAkB9C9D,EAZF+D,eANgD,IAAAD,EAMtC,aANsCA,EAAAE,EAkB9ChE,EATFiE,qBATgD,IAAAD,EAShC,aATgCA,EAAAE,EAkB9ClE,EANFmE,oBAZgD,IAAAD,EAYjC,aAZiCA,EAehDE,EAGEpE,EAHFoE,MAfgDC,EAkB9CrE,EAFFsE,iBAhBgD,IAAAD,EAgBpC,GAhBoCA,EAiB7CE,EAjB6CjE,OAAAkE,EAAA,EAAAlE,CAkB9CN,EAlB8C,8GAmB5CH,EAAQW,cAnBoCiE,EAqBxBC,YACxBC,EACA3E,EACAe,IAAIlB,EAAO,4BACXyE,EAAUM,MAzBsCC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAmE,EAAA,GAqB3CG,EArB2CC,EAAA,GAqBrCE,EArBqCF,EAAA,GAAAG,EA2BtBN,YAC1BO,EACAjF,EACAe,IAAIlB,EAAO,6BACXyE,EAAUY,OA/BsCC,EAAA7E,OAAAwE,EAAA,EAAAxE,CAAA0E,EAAA,GA2B3CE,EA3B2CC,EAAA,GA2BpCC,EA3BoCD,EAAA,GAAAE,EAiCFX,YAC9CY,EACAtF,EACAe,IAAIlB,EAAO,uCACXyE,EAAUiB,iBArCsCC,EAAAlF,OAAAwE,EAAA,EAAAxE,CAAA+E,EAAA,GAiC3CE,EAjC2CC,EAAA,GAiC1BC,EAjC0BD,EAAA,GAAAE,EAuChBhB,YAChCiB,EACA3F,EACAe,IAAIlB,EAAO,gCACXyE,EAAUsB,UA3CsCC,EAAAvF,OAAAwE,EAAA,EAAAxE,CAAAoF,EAAA,GAuC3CE,EAvC2CC,EAAA,GAuCjCC,EAvCiCD,EAAA,GAAAE,EA6CArB,YAChDsB,EACAhG,EACAe,IAAIlB,EAAO,wCACXyE,EAAU2B,kBAjDsCC,EAAA5F,OAAAwE,EAAA,EAAAxE,CAAAyF,EAAA,GA6C3CE,EA7C2CC,EAAA,GA6CzBC,EA7CyBD,EAAA,GAAAE,GAmDd1B,YAClC2B,EACArG,EACAe,IAAIlB,EAAO,iCACXyE,EAAUgC,WAvDsCC,GAAAjG,OAAAwE,EAAA,EAAAxE,CAAA8F,GAAA,GAmD3CE,GAnD2CC,GAAA,GAmDhCC,GAnDgCD,GAAA,GA0DlD,OACEE,EAAA,cAAC7B,EAADtE,OAAAoG,EAAA,EAAApG,CAAA,GAAUyE,EAAV,CAAA/D,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OACEuF,EAAA,cAAClB,EAADjF,OAAAoG,EAAA,EAAApG,CAAA,GAAqBmF,EAArB,CAAAzE,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OACEuF,EAAA,cAACb,EAADtF,OAAAoG,EAAA,EAAApG,CAAA,CACEmD,YAAaA,EACbM,QAASA,EACTE,cAAeA,EACfG,MAAOA,EACPD,aAAcA,GACV2B,EANN,CAAA9E,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,SASFuF,EAAA,cAACvB,EAAD5E,OAAAoG,EAAA,EAAApG,CAAA,CACEsG,cAAetC,EAAUsB,SACzBiB,gBAAiBpD,IAAea,EAAUgC,WAC1C1G,KAAMA,EACN+D,WAAYA,EACZE,UAAWA,EACXI,cAAeA,EACfG,MAAOA,EACPD,aAAcA,GACVI,EACAa,EAVN,CAAApE,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,QAYAuF,EAAA,cAACR,EAAD3F,OAAAoG,EAAA,EAAApG,CAAA,GAAsB6F,EAAtB,CAAAnF,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OACEuF,EAAA,cAACH,GAADhG,OAAAoG,EAAA,EAAApG,CAAA,CACEmD,YAAaA,EACbM,QAASA,EACTE,cAAeA,EACfG,MAAOA,EACPD,aAAcA,GACVqC,GANN,CAAAxF,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,2NAmBR,IAAMyD,EAAa,SAAC3E,GAAqB,IAC/B+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADWC,OAAAkE,EAAA,EAAAlE,CACGN,EADH,sBAGvC,OACEyG,EAAA,cAACK,EAAA,EAADxG,OAAAoG,EAAA,EAAApG,CAAA,CAAMF,MAAO,CAACA,IAAYC,EAA1B,CAAAW,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OACG6B,IAeDkC,EAAc,SAACjF,GAAsB,IAEvC2D,EAYE3D,EAZF2D,WACAE,EAWE7D,EAXF6D,UACAI,EAUEjE,EAVFiE,cACAE,EASEnE,EATFmE,aACAvE,EAQEI,EARFJ,KACAQ,EAOEJ,EAPFI,MACA2G,EAME/G,EANF+G,cACAC,EAKEhH,EALFgH,gBACAJ,EAIE5G,EAJF4G,YACAC,EAGE7G,EAHF6G,aACAI,EAEEjH,EAFFiH,qBACG1C,EAboCjE,OAAAkE,EAAA,EAAAlE,CAcrCN,EAdqC,gKAenCH,EAAQW,cAf2B0G,EAuBrCC,YAAcvH,GACd,CACEwH,aAAcvH,EAAMwH,oBAAoBzH,GACxCgB,OAAQf,EAAMyH,eAAe1H,GAC7ByC,YAAaxC,EAAM0H,gBAAgB3H,GACnC2C,aAAc1C,EAAM0H,gBAAgB3H,GACpC4H,SAAU3H,EAAM4H,UAAU7H,IAE5B,CACEwH,aAAcvH,EAAMwH,oBAAoBK,OACxC9G,OAAQhB,EACRyC,YAAaxC,EAAM0H,gBAAgBG,OACnCnF,aAAc1C,EAAM0H,gBAAgBG,OACpCF,SAAU3H,EAAM4H,UAAUC,QAlB9BN,EAlBuCF,EAkBvCE,aACAxG,EAnBuCsG,EAmBvCtG,OACAyB,EApBuC6E,EAoBvC7E,YACAE,EArBuC2E,EAqBvC3E,aACAiF,EAtBuCN,EAsBvCM,SAiBF,OAEEf,EAAA,cAACkB,EAAA,EAADrH,OAAAoG,EAAA,EAAApG,CAAA,CACEF,MAAO,CAACE,OAAAsH,EAAA,EAAAtH,CAAA,CAEJc,gBAAiBvB,EAAMyB,OAAOC,WAAWsG,QACzCC,YAAajI,EAAMyB,OAAOyG,OAAb,QACbX,eACAY,YAAa,EACb3G,MAAOxB,EAAMyB,OAAO2G,KAAb,QACPrH,SACAyB,cACAE,eACA1B,MAAO,QACJ2G,EACC7D,EACA,CAAEvC,gBAAiBvB,EAAMyB,OAAOC,WAAW2G,UAC3C,GACArE,EAAY,CAAEiE,YAAajI,EAAMyB,OAAOyG,OAAOI,QAAW,GAC1DpB,EACA,CACEnG,OAAQmG,EAAgBnG,EACxBiC,gBAAiB,IAEnB,GACA+D,GAAe,CAAEvE,YAAa,IAC9BwE,GAAgB,CAAEtE,aAAc,KAEtCnC,GAEFgI,UAAWzE,EACXsD,qBAAsBA,GAAwBpH,EAAMyB,OAAO2G,KAAKI,MAChEC,KAAMtB,EACND,cAAeA,EACfC,gBAAiBA,EACjB7C,aAAc,SAAA8D,GACZhE,EAAcgE,GACd9D,EAAa8D,KAEX1D,EArCN,CAAAvD,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,SA4CEoE,EAAwB,SAACtF,GAAgC,IACrD+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADiCC,OAAAkE,EAAA,EAAAlE,CACnBN,EADmB,sBAG7D,OACEyG,EAAA,cAACK,EAAA,EAADxG,OAAAoG,EAAA,EAAApG,CAAA,CACEF,MAAO,CACL,CACEmI,WAAY,SACZC,QAAS,OACT5H,OAAQ,OACR6H,eAAgB,SAChBC,KAAM,EACNvG,kBAAmB,EACnBwG,SAAU,WACVC,OAAQ,GAEVxI,IAEEC,EAdN,CAAAW,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OAgBG6B,IAODiD,EAAyB,SAAChG,GAAiC,IACvD+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADmCC,OAAAkE,EAAA,EAAAlE,CACrBN,EADqB,sBAG/D,OACEyG,EAAA,cAACK,EAAA,EAADxG,OAAAoG,EAAA,EAAApG,CAAA,CACEF,MAAO,CACL,CACEmI,WAAY,SACZC,QAAS,OACT5H,OAAQ,OACR6H,eAAgB,SAChBtG,kBAAmB,EACnBwG,SAAU,WACVE,MAAO,EACPD,OAAQ,GAEVxI,IAEEC,EAdN,CAAAW,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OAgBG6B,IAaD4C,EAAiB,SAAC3F,GACtB,OAAOyG,EAAA,cAAAA,EAAA,gBAGHJ,EAAkB,SAACrG,GAA2B,IAC1CyD,EAA6DzD,EAA7DyD,YAAaM,EAAgD/D,EAAhD+D,QAASE,EAAuCjE,EAAvCiE,cAAeE,EAAwBnE,EAAxBmE,aAAcC,EAAUpE,EAAVoE,MACrDvE,EAAQW,cAEd,OAAK4D,GAAUX,EAGbgD,EAAA,cAACqC,EAAA,EAAD,CACEC,QAAS,WACP5E,EAAa,IACbF,EAAc,IACdF,KAJJ/C,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,MAOEuF,EAAA,cAACuC,EAAA,EAAD,CAAMV,KAAK,IAAIjH,MAAOxB,EAAMyB,OAAO2G,KAAb,QAAtBjH,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,QAV+B,uqBCnU/B+H,EAAc,GAGdC,EAAY,UACH,SAASC,EAATjC,GAGZ,IAFDkC,EAEClC,EAFDkC,WACGpJ,EACFM,OAAA+I,EAAA,EAAA/I,CAAA4G,EAAA,gBACD,OAAO5G,OAAAgJ,EAAA,EAAAhJ,CAAC4I,EAAD5I,OAAAoG,EAAA,EAAApG,CAAA,GAAe2I,EAAiBjJ,EAAhC,CAAuCoJ,WAAYA,EAAYG,QAAQ,YAAvEvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,MAGLZ,OAAAgJ,EAAA,EAAAhJ,CAAA,KAAAA,OAAAoG,EAAA,EAAApG,CAAQ,CACNkJ,GAAM,SADR,CAAAxI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,eAGAZ,OAAAgJ,EAAA,EAAAhJ,CAAA,KAAAU,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,iBAAgBZ,OAAAgJ,EAAA,EAAAhJ,CAAA,cAAYmJ,WAAW,IAAvBzI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,cAChBZ,OAAAgJ,EAAA,EAAAhJ,CAAA,KAAAA,OAAAoG,EAAA,EAAApG,CAAQ,CACNkJ,GAAM,SADR,CAAAxI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,eAGAZ,OAAAgJ,EAAA,EAAAhJ,CAACoJ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,6FAAgGC,QAAS,CAC1I7J,MAAO8J,KAAOA,KAAK9J,MAAQA,EAC3B+J,eACAC,UACAlH,QACAS,cACA0G,WACCV,QAAQ,aAPXvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,KAQFZ,OAAAgJ,EAAA,EAAAhJ,CAAC4J,EAAA,EAAD,CAAKX,QAAQ,MAAbvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,KACEZ,OAAAgJ,EAAA,EAAAhJ,CAAC6J,EAAA,EAAD,CAAOC,MAAM,6BAA6Bb,QAAQ,QAAlDvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,KACEZ,OAAAgJ,EAAA,EAAAhJ,CAAC+J,EAAA,EAAD,CAAWd,QAAQ,YAAnBvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,SAIFZ,OAAAgJ,EAAA,EAAAhJ,CAAA,KAAAA,OAAAoG,EAAA,EAAApG,CAAQ,CACNkJ,GAAM,SADR,CAAAxI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,eAGAZ,OAAAgJ,EAAA,EAAAhJ,CAACoJ,EAAA,EAAD,CAAOY,GAAIL,IAAOV,QAAQ,QAA1BvI,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,gMAIJiI,EAAWoB,gBAAiB,02CCfrB,IAAMN,EAAQ,SAACjK,GAAsB,IAClC+C,EAAsD/C,EAAtD+C,SADkCyH,EACoBxK,EAA5C2I,gBADwB,IAAA6B,EACb,MADaA,EAAAnG,EACoBrE,EAA1BsE,iBADM,IAAAD,EACM,GADNA,EACU+F,EAAUpK,EAAVoK,MAC9CvK,EAAQW,cAF4BiE,EAIhBC,YACxBC,EACA3E,EACAe,IAAIlB,EAAO,wBACXyE,EAAUM,MAR8BC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAmE,EAAA,GAInCG,EAJmCC,EAAA,GAI7BE,EAJ6BF,EAAA,GAAAG,EAUVN,YAC9B+F,EACAzK,EACAe,IAAIlB,EAAO,2BACXyE,EAAUoG,SAd8BvF,EAAA7E,OAAAwE,EAAA,EAAAxE,CAAA0E,EAAA,GAUnC0F,EAVmCvF,EAAA,GAU1BwF,EAV0BxF,EAAA,GAAAE,EAgBNX,YAClCkG,EACA5K,EACAe,IAAIlB,EAAO,6BACXyE,EAAUuG,WApB8BrF,EAAAlF,OAAAwE,EAAA,EAAAxE,CAAA+E,EAAA,GAgBnCwF,EAhBmCrF,EAAA,GAgBxBsF,EAhBwBtF,EAAA,GAuB1C,OACEuF,EAAA,cAACnG,EAADtE,OAAAoG,EAAA,EAAApG,CAAA,GAAUyE,EAAV,CAAA/D,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,MACgB,QAAbyH,GACCoC,EAAA,cAACF,EAADvK,OAAAoG,EAAA,EAAApG,CAAA,CAAWqI,SAAUA,EAAUyB,MAAOA,GAAWU,EAAjD,CAAA9J,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OAEF6J,EAAA,cAACL,EAADpK,OAAAoG,EAAA,EAAApG,CAAA,CAASqI,SAAUA,GAAcgC,EAAjC,CAAA3J,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,MACgB,SAAbyH,GACCoC,EAAA,cAACF,EAADvK,OAAAoG,EAAA,EAAApG,CAAA,CAAWqI,SAAUA,EAAUyB,MAAOA,GAAWU,EAAjD,CAAA9J,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OAED6B,EACa,UAAb4F,GACCoC,EAAA,cAACF,EAADvK,OAAAoG,EAAA,EAAApG,CAAA,CAAWqI,SAAUA,EAAUyB,MAAOA,GAAWU,EAAjD,CAAA9J,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,sNAaV,IAAMyD,EAAa,SAAC3E,GAAqB,IAC/B+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADWC,OAAA+I,EAAA,EAAA/I,CACGN,EADH,sBAGvC,OACE+K,EAAA,cAACC,EAAA,EAAD1K,OAAAoG,EAAA,EAAApG,CAAA,CAAMF,MAAO,CAACA,IAAYC,EAA1B,CAAAW,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,MACG6B,IASD0H,EAAgB,SAACzK,GAAwB,IACrC+C,EAA4C/C,EAA5C+C,SAAU3C,EAAkCJ,EAAlCI,MAAOuI,EAA2B3I,EAA3B2I,SAAatI,EADOC,OAAA+I,EAAA,EAAA/I,CACON,EADP,iCAGzCiL,EAA0B,GAE9B,OAAQtC,GACN,IAAK,OACHsC,EAAe,CACbC,cAAe,MACf3C,WAAY,SACZhG,aAAc,GAEhB,MACF,IAAK,QACH0I,EAAe,CACbC,cAAe,MACf3C,WAAY,SACZlG,YAAa,GAEf,MACF,IAAK,MAGL,QACE4I,EAAe,CAAElJ,cAAe,GAIpC,OACEgJ,EAAA,cAACC,EAAA,EAAD1K,OAAAoG,EAAA,EAAApG,CAAA,CAAMF,MAAO,CAAC6K,EAAc7K,IAAYC,EAAxC,CAAAW,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OACG6B,IAUD6H,EAAkB,SAAC5K,GAA0B,IACzCoK,EAAyCpK,EAAzCoK,MAAOzB,EAAkC3I,EAAlC2I,SAAUvI,EAAwBJ,EAAxBI,MAAU+K,EADc7K,OAAA+I,EAAA,EAAA/I,CACAN,EADA,8BAGjD,IAAKoK,EAAO,OAAO,KAEnB,IAAIgB,EAAuB,GAE3B,OAAQzC,GACN,IAAK,OACHyC,EAAY,CAAE7I,aAAc,GAC5B,MACF,IAAK,QACH6I,EAAY,CAAE/I,YAAa,GAC3B,MACF,IAAK,MAGL,QACE+I,EAAY,CAAErJ,cAAe,GAIjC,OACEgJ,EAAA,cAACM,EAAA,EAAD/K,OAAAoG,EAAA,EAAApG,CAAA,CACEF,MAAO,CAACgL,EAAWtK,YAASd,EAAOI,IAEnCkL,kBAAmC,QAAhBC,IAASC,GAAe,QAAU,QACjDL,EAJN,CAAAnK,SAAA,CAAAC,SAAA0F,EAAAzF,WAAA,OAMGkJ,iECpKPqB,EAAAC,EAAAC,EAAA,sBAAAxE,IAAO,IAAMA,EAAgB,SAC3BvH,GAEA,MAAoB,kBAATA","file":"static/js/14.9be35c12.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...leftIconProps}\n        />\n      </LeftIconWrapper>\n      <Input\n        hasLeftIcon={!!overrides.LeftIcon}\n        hasRightIcon={!!(isClearable || overrides.RightIcon)}\n        size={size}\n        isDisabled={isDisabled}\n        isInvalid={isInvalid}\n        onValueChange={onValueChange}\n        value={value}\n        onChangeText={onChangeText}\n        {...textInputProps}\n        {...inputProps}\n      />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon\n          isClearable={isClearable}\n          onClear={onClear}\n          onValueChange={onValueChange}\n          value={value}\n          onChangeText={onChangeText}\n          {...rightIconProps}\n        />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: theme.colors.text.default,\n          height,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isDisabled\n            ? { backgroundColor: theme.colors.background.greyDark }\n            : {}),\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                height: numberOfLines * height,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, TextInput, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label label=\\\"Lorem ipsum dolar set amet\\\">\\n    <TextInput />\\n  </Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      TextInput,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label label=\"Lorem ipsum dolar set amet\" mdxType=\"Label\">\n      <TextInput mdxType=\"TextInput\" />\n    </Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}