{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["getAlertStyles","_ref","theme","_ref$intent","intent","bodyStyle","flex","containerStyle","Object","objectSpread","alignItems","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","justifyContent","padding","elevations","descriptionStyle","leftWrapperStyle","titleStyle","Alert","props","title","description","icon","_props$intent","getStyles","testID","_props$actionNode","actionNode","useTheme","_mergeStyles","mergeStyles","components","react","View","style","__source","fileName","_jsxFileName","lineNumber","Box","paddingRight","Icon_web","name","color","resolveIcon","Text","textStyle","weight","propToFn","elevation","shape","containerShapes","children","viewStyles","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","_ref$color","_ref$size","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_getTextSize$fontSize","getTextSize","textSizes","fontSize","iconSize","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","DESC_ORDER_SCREEN_SIZES","LayoutContext","useLayout","breakpoints","small","large","xlarge","containerSizes","currentScreenSize","getResponsiveValue","values","xsmall","undefined","gridColumnCount","gutterWidth","reverse","React","getCurrentScreenSize","layout","windowScaledSize","Dimensions","get","find","screenSize","width","LayoutProvider","value","deepmerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","currentScreenSizeIndex","indexOf","nearestSize","index","deriveResponsiveValue","Toast","component","onRemove","id","_props$duration","duration","toastSettings","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","timer","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2__","_Alert__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ToastContext","defaultToastInstance","defaultToastContext","danger","notify","removeToast","success","warning","useToast","AnimatedView","animated","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","payload","toast","REMOVE_TOAST","filter","Error","ToastProvider","offset","idCounterRef","_React$useReducer","_React$useReducer2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","dispatch","toastInstance","uniqueId","current","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","String","startsWith","err","transitions","useTransition","config","springDefaultConfig","enter","translateY","from","leave","react__WEBPACK_IMPORTED_MODULE_4__","_ToastContext__WEBPACK_IMPORTED_MODULE_10__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","left","marginBottom","marginLeft","marginRight","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","map","item","transitionStyle","key","transform","_Toast__WEBPACK_IMPORTED_MODULE_9__","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextStyles","_ref$align","align","_ref$isItalic","isItalic","sizeStyle","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","textProps","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","friction","tension","palette","lightest","light","base","dark","darkest","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","defaultTheme","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlHeights","controlPaddings","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/1.7f2e44f3.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme';\nimport { AlertProps } from './Alert';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\nexport type GetAlertStyles = (\n  props: AlertProps,\n  theme: Theme,\n) => Partial<AlertStyles>;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent = 'info' }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    descriptionStyle: {},\n    leftWrapperStyle: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n    },\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport type Intent = 'danger' | 'info' | 'success' | 'warning';\n\n/**\n * Alert properties\n */\nexport interface AlertProps {\n  /** Title of the alert. */\n  title?: string;\n\n  /** Description of the alert. */\n  description?: string;\n\n  /** Replace the icon of the alert on the left. Set to null to remove icon */\n  icon?: React.ReactNode;\n\n  /**\n   * Intent of the alert.\n   * @default info\n   */\n  intent?: Intent;\n\n  /**\n   * Component displayed on the right side of the alert.\n   * @default null\n   */\n  actionNode?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: GetAlertStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" color=\"info\" />;\n  }\n};\n\n/**\n * Alert with intent\n */\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n    actionNode = null,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    leftWrapperStyle,\n    containerStyle,\n    bodyStyle,\n    descriptionStyle,\n    titleStyle,\n  } = mergeStyles(getAlertStyles, getStyles, theme.components.getAlertStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <View style={leftWrapperStyle}>\n        {icon === null\n          ? null\n          : icon || (\n              <Box paddingRight={16} justifyContent=\"center\">\n                {resolveIcon(intent)}\n              </Box>\n            )}\n        <View style={bodyStyle}>\n          <Text getStyles={() => ({ textStyle: titleStyle })} weight=\"bold\">\n            {title}\n          </Text>\n          <Text getStyles={() => ({ textStyle: descriptionStyle })}>\n            {description}\n          </Text>\n        </View>\n      </View>\n      {actionNode}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor, getTextSize } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({\n  name,\n  color = 'default',\n  size = 'medium',\n}: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n  const { fontSize = 16 } = getTextSize(theme.textSizes)(size);\n  const iconSize = typeof size === 'string' ? fontSize + 8 : size;\n\n  return (\n    <IconTag color={getTextColor(theme.colors.text)(color)} size={iconSize} />\n  );\n};\n","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport interface ContainerSizes {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ContainerSize = keyof ContainerSizes;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface Layout {\n  breakpoints: Breakpoints;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  containerSizes: ContainerSizes;\n}\n\nexport interface LayoutContext extends Layout {\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n}\n\nexport const defaultLayout: LayoutContext = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  Layout,\n  LayoutContext,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<Layout>;\n}\n\nexport const getCurrentScreenSize = (layout: Layout) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return values[screenSize] !== undefined && values[screenSize] !== null;\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepmerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import * as React from 'react';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends AlertProps {\n  /**\n   * Duration for how long the toast should stay active.\n   * @default 3000\n   */\n  duration?: number;\n\n  /**\n   * Custom component to override the entire toast.\n   */\n  component?: React.ReactNode;\n\n  /**\n   * Assign an id to the toast so you can remove it later.\n   */\n  id?: ToastId;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  /**\n   * (Ignore) Assign an id to the toast so you can remove it later.\n   */\n  id: ToastId;\n\n  /**\n   * (Ignore) Callback invoked when the duration is up.\n   */\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const { component, id, onRemove, duration = 3000, ...toastSettings } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport type ToastPosition = 'top' | 'bottom';\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst getTransitionConfig = (offset: number, position: ToastPosition) => {\n  if (position === 'top') {\n    return {\n      config: springDefaultConfig,\n\n      enter: { translateY: offset },\n      from: { translateY: -500 },\n      leave: { translateY: -500 },\n    };\n  }\n\n  return {\n    config: springDefaultConfig,\n\n    enter: { translateY: -offset },\n    from: { translateY: 500 },\n    leave: { translateY: 500 },\n  };\n};\n\nconst OFFSET = 16;\nconst POSITION = 'top';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n}\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(\n    state.toasts,\n    toast => toast.id,\n    getTransitionConfig(OFFSET, POSITION),\n  );\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View\n        // @ts-ignore: Compat with web\n        style={{\n          left: 32,\n          marginBottom: 0,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 0,\n          maxWidth: 560,\n          // @ts-ignore: Compat with web\n          position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n          right: 32,\n          top: 0,\n          zIndex: 100,\n        }}\n      >\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              position: 'absolute',\n              width: '100%',\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  props: TextProps,\n  theme: Theme,\n) => Partial<TextStyles>;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: GetTextStyles;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport { defaultLayout } from '../components';\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.teal.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  layout: defaultLayout,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Layout, LayoutProvider, ToastProvider } from '../components';\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Layout\n  layout: Layout;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: Partial<{\n    getAlertStyles: GetAlertStyles;\n    getAvatarStyles: GetAvatarStyles;\n    getBadgeStyles: GetBadgeStyles;\n    getButtonStyles: GetButtonStyles;\n    getCheckboxStyles: GetCheckboxStyles;\n    getCollapsibleStyles: GetCollapsibleStyles;\n    getCounterStyles: GetCounterStyles;\n    getDialogStyles: GetDialogStyles;\n    getDividerStyles: GetDividerStyles;\n    getDrawerStyles: GetDrawerStyles;\n    getFormFieldStyles: GetFormFieldStyles;\n    getColumnStyles: GetColumnStyles;\n    getContainerStyles: GetContainerStyles;\n    getRowStyles: GetRowStyles;\n    getTextInputStyles: GetTextInputStyles;\n    getLabelStyles: GetLabelStyles;\n    getListItemStyles: GetListItemStyles;\n    getOverlayStyles: GetOverlayStyles;\n    getPickerButtonStyles: GetPickerButtonStyles;\n    getPopoverStyles: GetPopoverStyles;\n    getPositionerStyles: GetPositionerStyles;\n    getProgressBarStyles: GetProgressBarStyles;\n    getRatingStyles: GetRatingStyles;\n    getWheelPickerStyles: GetWheelPickerStyles;\n    getSliderStyles: GetSliderStyles;\n    getSwitchStyles: GetSwitchStyles;\n    getTabStyles: GetTabStyles;\n    getTabsStyles: GetTabsStyles;\n    getHeadingStyles: GetHeadingStyles;\n    getTextStyles: GetTextStyles;\n    getParagraphStyles: GetParagraphStyles;\n  }>;\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <LayoutProvider value={theme.layout}>\n        <ToastProvider>{children}</ToastProvider>\n      </LayoutProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}