{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","_props$size","size","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","height","marginLeft","marginRight","width","defaultProps","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","_props$appearance2","_props$color2","_props$isDisabled2","_props$isLoading2","_props$size2","objectWithoutProperties","buttonAppearances","minimal","default","content","danger","secondary","overlay","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","_props$appearance3","_props$color3","_props$isDisabled3","_props$size3","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","_props$appearance4","_props$color4","Dots_Dots","Toggle","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","initialMeasurements","pageX","pageY","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","onMeasure","ref","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","viewProps","isRenderProp","_useMeasure","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Popover","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","Positioner","_props$isVisible","_props$position","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","isPositionerMeasurementsMeasured","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","StyledRoot","Root","rootProps","Target","targetProps","_props$isPositionerMe","viewMeasureProps","zIndex","restProps","StyledContent","Content","contentProps","Positioner_Positioner","Popover_jsxFileName","padding","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/8.483614cb.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nconst defaultProps = {\n  appearance: 'primary' as const,\n  color: 'default' as const,\n  isDisabled: false,\n  isLoading: false,\n  size: 'medium' as const,\n};\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable\n      appearance={appearance}\n      color={color}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      size={size}\n      onPress={onPress}\n      testID={testID}\n      {...touchableProps}\n    >\n      <IconBefore\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconBeforeProps}\n      />\n      {isLoading ? (\n        <Loading appearance={appearance} color={color} {...loadingProps} />\n      ) : (\n        <Title\n          appearance={appearance}\n          color={color}\n          isDisabled={isDisabled}\n          size={size}\n          title={title}\n          {...titleProps}\n        />\n      )}\n      <IconAfter\n        appearance={appearance}\n        color={color}\n        isDisabled={isDisabled}\n        isLoading={isLoading}\n        size={size}\n        {...iconAfterProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.overlay\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    isLoading = defaultProps.isLoading,\n    size = defaultProps.size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          height,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: OptionalString;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n    isDisabled = defaultProps.isDisabled,\n    size = defaultProps.size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        style,\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color?: ButtonColor;\n  appearance?: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const {\n    appearance = defaultProps.appearance,\n    color = defaultProps.color,\n  } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size?: ControlSize | number;\n  color?: ButtonColor;\n  title?: OptionalString;\n  appearance?: ButtonAppearance;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, managing its\\n              open and closed state is in your control\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, managing its\n                open and closed state is in your control\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { ViewStyle } from 'react-native';\n\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { ViewMeasure, ViewMeasureProps } from '../Helpers';\n\nexport const POSITION = {\n  TOP: 'top' as const,\n  TOP_LEFT: 'top-left' as const,\n  TOP_RIGHT: 'top-right' as const,\n\n  BOTTOM: 'bottom' as const,\n  BOTTOM_LEFT: 'bottom-left' as const,\n  BOTTOM_RIGHT: 'bottom-right' as const,\n\n  LEFT: 'left' as const,\n  RIGHT: 'right' as const,\n};\n\nexport type PositionerPosition =\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'right';\n\nexport interface PositionerBaseProps {\n  /**\n   * Position of the content.\n   * @default \"bottom\"\n   */\n  position?: PositionerPosition;\n\n  /**\n   * Wrapped component to open the positioner over.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Content revealed when positioner is opened.\n   */\n  content?: React.ReactNode;\n\n  /**\n   * When true, displays positioner.\n   */\n  isVisible?: boolean;\n}\n\nexport interface PositionerOverrides {\n  Root: RootProps;\n  Target: ViewMeasureProps;\n}\n\nexport interface PositionerProps\n  extends WithOverrides<PositionerBaseProps, PositionerOverrides> {}\n\ninterface GetPositionerPositionParams {\n  position: PositionerPosition;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst defaultProps = {\n  isVisible: false,\n  position: POSITION.BOTTOM,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    children,\n    content,\n    isVisible = defaultProps.isVisible,\n    position = defaultProps.position,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Positioner.Root'),\n    overrides.Root,\n  );\n  const [Target, targetProps] = getOverrides(\n    ViewMeasure,\n    props,\n    dlv(theme, 'overrides.Positioner.Target'),\n    overrides.Target,\n  );\n\n  return (\n    <>\n      {isVisible && (\n        <Root\n          positionStyle={positionStyle}\n          isPositionerMeasurementsMeasured={isPositionerMeasurementsMeasured}\n          onMeasure={setPositionerMeasurements}\n          {...rootProps}\n        >\n          {content}\n        </Root>\n      )}\n      <Target onMeasure={setTargetMeasurements} {...targetProps}>\n        {children}\n      </Target>\n    </>\n  );\n};\n\ninterface RootProps extends ViewMeasureProps {\n  isPositionerMeasurementsMeasured?: boolean;\n  positionStyle?: ViewStyle;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    style,\n    positionStyle,\n    isPositionerMeasurementsMeasured = false,\n    ...viewMeasureProps\n  } = props;\n\n  return (\n    <ViewMeasure\n      style={[\n        {\n          opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        positionStyle,\n        style,\n      ]}\n      {...viewMeasureProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport {\n  Positioner,\n  PositionerBaseProps,\n  PositionerOverrides,\n} from '../Positioner';\n\nexport interface PopoverOverrides extends PositionerOverrides {\n  Content: ViewProps;\n}\n\nexport interface PopoverProps\n  extends WithOverrides<PositionerBaseProps, PopoverOverrides> {}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, overrides = {}, ...restProps } = props;\n  const theme = useTheme();\n\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    dlv(theme, 'overrides.Popover.Content'),\n    overrides.Content,\n  );\n\n  return (\n    <Positioner\n      content={<Content {...contentProps}>{content}</Content>}\n      // TODO: pass overrides from theme\n      overrides={overrides}\n      {...restProps}\n    />\n  );\n};\n\nconst StyledContent = (props: ViewProps) => {\n  const { style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          padding: 16,\n          ...theme.elevations[2],\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}