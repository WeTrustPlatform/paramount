{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","Button","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","___WEBPACK_IMPORTED_MODULE_5__","title","description","intent","actionNode","___WEBPACK_IMPORTED_MODULE_7__","appearance","color","of","parentName","className","isMDXComponent","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","View","Dots","theme","useTheme","_props$size","size","_props$color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","react","style","alignItems","flexDirection","justifyContent","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","getButtonAppearances","minimal","default","background","content","danger","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","_props$appearance","iconAfter","iconBefore","isDisabled","isLoading","hasIconAfter","hasIconBefore","_buttonAppearances$ap","textColor","touchableStyle","objectWithoutProperties","isControlSize","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","textSize","textSizes","buttonContentWrapperStyle","innerButtonWrapperStyle","textStyle","objectSpread","muted","display","fontWeight","textAlign","disabled","getStyles","_props$isDisabled","_props$isLoading","_props$onPress","onPress","testID","accessibilityHint","accessibilityLabel","_props$accessible","accessible","_mergeStyles","mergeStyles","TouchableOpacity","accessibilityRole","Button_jsxFileName","Button_ButtonContent","esm_extends","ButtonContent","iconLoading","icon","Dots_Dots","white","Text","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/23.a763bbc1.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box, Button } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <p>{`Give feedback to the user about an action or state`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box paddingVertical={8}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={8}>\\n  <Alert\\n    intent=\\\"danger\\\"\\n    title=\\\"Danger\\\"\\n    description=\\\"Message\\\"\\n    actionNode={\\n      <Button title=\\\"Action\\\" appearance=\\\"minimal\\\" color=\\\"primary\\\" />\\n    }\\n  />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box,\n      Button\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={8} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" actionNode={<Button title=\"Action\" appearance=\"minimal\" color=\"primary\" mdxType=\"Button\" />} mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\ngetStyles={(AlertProps, Theme) => AlertStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View leftWrapperStyle>\n    {icon}\n    <View bodyStyle>\n      <Text titleStyle>{title}</Text>\n      <Text descriptionStyle>{description}</Text>\n    </View>\n  </View>\n  {action}\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  touchableStyle: ViewStyle;\n  textStyle: TextStyle;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport type GetButtonStyles = (\n  props: ButtonProps,\n  theme: Theme,\n) => Partial<ButtonStyles>;\n\nexport const getButtonStyles: GetButtonStyles = (props, theme) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    iconAfter,\n    iconBefore,\n    isDisabled,\n    isLoading,\n    size = 'medium',\n  } = props;\n  const hasIconAfter = !!iconAfter;\n  const hasIconBefore = !!iconBefore;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...touchableStyle\n  } = buttonAppearances[appearance][color];\n  const { borderRadius, height, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] * 2,\n        paddingRight: theme.controlPaddings[size] * 2,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      };\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  return {\n    buttonContentWrapperStyle: {\n      paddingLeft: hasIconBefore ? 8 : 0,\n      paddingRight: hasIconAfter ? 8 : 0,\n    },\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n      ...textSize,\n    },\n    touchableStyle: {\n      borderRadius,\n      height,\n      paddingLeft,\n      paddingRight,\n      ...touchableStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Dots } from '../LoadingIndicators';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps {\n  /** Title of the button */\n  title?: string;\n\n  /** Icon in place of title */\n  icon?: React.ReactNode;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Sets an icon before the text. */\n  iconBefore?: React.ReactNode;\n\n  /** Sets an icon after the text. */\n  iconAfter?: React.ReactNode;\n\n  /** Sets an icon at loading state. */\n  iconLoading?: React.ReactNode;\n\n  /** Label for screen readers */\n  accessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  accessibilityHint?: string;\n\n  /**\n   * When true, indicates that the view is an accessibility element.\n   * @default true\n   */\n  accessible?: boolean;\n\n  /** Callback to get element styles. */\n  getStyles?: GetButtonStyles;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    getStyles,\n    iconAfter,\n    iconBefore,\n    isDisabled = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    testID,\n\n    accessibilityHint,\n    accessibilityLabel,\n    accessible = true,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    textStyle,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    props,\n    theme,\n  );\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={touchableStyle}\n      testID={testID}\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessible={accessible}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle?: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <>\n        {iconLoading || (\n          <Dots color={textStyle ? textStyle.color : theme.colors.text.white} />\n        )}\n      </>\n    );\n  }\n  if (icon) return <>{icon}</>;\n  if (title) {\n    return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n  }\n\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}