{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Alert","Box","___WEBPACK_IMPORTED_MODULE_5__","title","description","isCloseable","intent","component","getStyles","theme","bodyStyle","containerStyle","___WEBPACK_IMPORTED_MODULE_6__","paddingVertical","of","isMDXComponent","getAlertStyles","flex","objectSpread","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","textStyle","titleStyle","onClose","_props$isCloseable","icon","_props$intent","testID","useTheme","_mergeStyles","mergeStyles","react","View","style","paddingRight","justifyContent","Icon_web","name","size","color","resolveIcon","Text","weight","TouchableOpacity","onPress","paddingLeft","text","propToFn","elevation","shape","containerShapes","children","propStyle","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isInline","isItalic","align","transform","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","small","large","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","React","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/18.6204c08f.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Alert, Box } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Alert\\n  title=\\\"Title\\\"\\n  description=\\\"Message\\\"\\n  isCloseable\\n  intent=\\\"success\\\"\\n  component={null} // Overrides body\\n  getStyles={(props, theme) => ({\\n    bodyStyle: {},\\n    containerStyle: {},\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box\n    }} mdxType=\"Playground\">\n  <Alert title=\"Title\" description=\"Message\" isCloseable intent=\"success\" component={null} // Overrides body\n      getStyles={(props, theme) => ({\n        bodyStyle: {},\n        containerStyle: {}\n      })} mdxType=\"Alert\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Box paddingVertical={16}>\\n  <Alert title=\\\"Info\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={16}>\\n  <Alert intent=\\\"success\\\" title=\\\"Success\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={16}>\\n  <Alert intent=\\\"warning\\\" title=\\\"Warning\\\" description=\\\"Message\\\" />\\n</Box>\\n<Box paddingVertical={16}>\\n  <Alert intent=\\\"danger\\\" title=\\\"Danger\\\" description=\\\"Message\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Alert,\n      Box\n    }} mdxType=\"Playground\">\n  <Box paddingVertical={16} mdxType=\"Box\">\n    <Alert title=\"Info\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={16} mdxType=\"Box\">\n    <Alert intent=\"success\" title=\"Success\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={16} mdxType=\"Box\">\n    <Alert intent=\"warning\" title=\"Warning\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n  <Box paddingVertical={16} mdxType=\"Box\">\n    <Alert intent=\"danger\" title=\"Danger\" description=\"Message\" mdxType=\"Alert\" />\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Alert} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    textStyle: {},\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\n/**\n * Alert properties\n */\nexport interface AlertProps {\n  /** Title of the alert */\n  title?: string;\n  /** Description of the alert */\n  description?: string;\n  /** Used to locate this view in end-to-end tests */\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  /** Callback when close button is pressed */\n  onClose?: () => void;\n  /** Determines whether to display close button */\n  isCloseable?: boolean;\n  /** Replace the icon of the alert on the left */\n  icon?: React.ReactNode | null;\n  /**\n   * Intent of the alert\n   * @default info\n   */\n  intent?: Intent;\n\n  /** Callback to get element styles */\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\n/**\n * Alert with intent\n */\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(\n    getAlertStyles,\n    getStyles,\n    theme.components.getAlertStyles,\n  )({ intent }, theme);\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Box paddingRight={16} justifyContent=\"center\">\n          {resolveIcon(intent)}\n        </Box>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text weight=\"bold\">{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Box paddingLeft={16}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Box>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}