{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Layout.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["layoutProps","MDXLayout","_ref","children","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","___WEBPACK_IMPORTED_MODULE_5__","__source","fileName","_jsxFileName","lineNumber","MDXContent","_ref2","components","props","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","href","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","LayoutProvider","useLayout","Text","currentScreenSize","___WEBPACK_IMPORTED_MODULE_7__","concat","getResponsiveValue","color","xsmall","large","number","isMDXComponent","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","DESC_ORDER_SCREEN_SIZES","LayoutContext","react__WEBPACK_IMPORTED_MODULE_0__","breakpoints","small","medium","xlarge","containerSizes","values","undefined","gridColumnCount","gutterWidth","slice","reverse","React","getCurrentScreenSize","layout","windowScaledSize","Dimensions","get","find","screenSize","width","value","deepmerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","currentScreenSizeIndex","indexOf","nearestSize","index","deriveResponsiveValue","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","size","fontSize","getTextStyles","theme","_ref$color","_ref$size","_ref$align","align","weight","_ref$isItalic","isItalic","transform","sizeStyle","textStyle","colors","text","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","getStyles","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","useTheme","mergeStyles","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","style","palette","lightest","light","base","dark","darkest","controlBorderRadius","background","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","backgroundColor","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlHeights","controlPaddings","containerShapes","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/26.d01074e1.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { LayoutProvider, useLayout, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = ({ children }) => <LayoutProvider>{children}</LayoutProvider>\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h1>\n    <p>{`Paramount provides building blocks to create responsive layout via components `}<inlineCode parentName=\"p\">{`Visible`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Row and Column`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Container`}</inlineCode>{` and convenience functions (`}<a parentName=\"p\" {...{\n        \"href\": \"#usage\"\n      }}>{`see Usage`}</a>{`)`}</p>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Put `}<inlineCode parentName=\"p\">{`LayoutProvider`}</inlineCode>{` at the top level component to wrap components that make use of `}<inlineCode parentName=\"p\">{`LayoutContext`}</inlineCode>{`. For options, `}<a parentName=\"p\" {...{\n        \"href\": \"#options\"\n      }}>{`see Configuration Options`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<LayoutProvider value={options}>{children}</LayoutProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useLayout`}</inlineCode>{` that you can import to make use of utility functions for layout`}</p>\n    <h3 {...{\n      \"id\": \"currentscreensize\"\n    }}>{`currentScreenSize`}</h3>\n    <p>{`Retrieves the current screen size`}</p>\n    <Playground __position={0} __code={'() => {\\n  const { currentScreenSize } = useLayout()\\n  return <Text>{`currentScreenSize: ${currentScreenSize}`}</Text>\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LayoutProvider,\n      useLayout,\n      Text\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          currentScreenSize\n        } = useLayout();\n        return <Text mdxType=\"Text\">{`currentScreenSize: ${currentScreenSize}`}</Text>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"getresponsivevalue\"\n    }}>{`getResponsiveValue`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const { getResponsiveValue } = useLayout()\\n  const color = getResponsiveValue({\\n    xsmall: \\'red\\',\\n    large: \\'blue\\',\\n  })\\n  const number = getResponsiveValue({\\n    xsmall: 0,\\n    large: 1,\\n  })\\n  return <Text>{`color: ${color}, number: ${number}`}</Text>\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LayoutProvider,\n      useLayout,\n      Text\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          getResponsiveValue\n        } = useLayout();\n        const color = getResponsiveValue({\n          xsmall: 'red',\n          large: 'blue'\n        });\n        const number = getResponsiveValue({\n          xsmall: 0,\n          large: 1\n        });\n        return <Text mdxType=\"Text\">{`color: ${color}, number: ${number}`}</Text>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsive-components\"\n    }}>{`Responsive Components`}</h3>\n    <p><inlineCode parentName=\"p\">{`Visible`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Row and Column`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Container`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`These are all the available configuration options, as well as the default layout configuration`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport interface ContainerSizes {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ContainerSize = keyof ContainerSizes;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  containerSizes: ContainerSizes;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  LayoutContext,\n  LayoutInterface,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentScreenSize = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return values[screenSize] !== undefined && values[screenSize] !== null;\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepmerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}