{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useFreezeBody.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","content","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","isWindowAboveMinWidth","minWidth","Dimensions","width","isWindowBelowMaxWidth","maxWidth","Responsive","children","isAboveMinWidth","isBelowMaxWidth","matches","_useMeasure2","ViewMeasure","onMeasure","viewProps","isRenderProp","_useMeasure","useMeasure","forwardRef","onLayout","ref","measurements","_ViewMeasure","_Responsive","_useElement","_useFreezeBody","useElement","id","rootElemRef","useRef","useEffect","rootElem","parentElem","rootContainer","document","setAttribute","createRootElement","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","useFreezeBody","_ref","isFrozen","unfreeze","overflow","createRef","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","e","nativeEvent","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","Modal","ModalContent","Box","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","Component","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Animation","_Helpers","transparent","_props$isBackgroundSc","isBackgroundScrollable","_props$animationType","animationType","isUnmounting","targetElement","isInView","setIsInView","elementRef","focusTrapRef","deactivateFocus","deactivate","initialFocus","onDeactivate","activate","_useSpring","useSpring","onRest","springDefaultConfig","createPortal","div","tabIndex","bottom","left","position","right","top","transform","interpolate","v","concat","zIndex","prototype","hasOwnProperty","call","_exportNames","_FormModal","_Modal","friction","tension","Feather","IconTag","result","replace","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/3.84869c3f.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from './useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useFreezeBody';\n","import * as React from 'react';\n\nconst createRootElement = (id: string) => {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id: string) => {\n  const rootElemRef = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const parentElem = createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(parentElem);\n\n    if (rootElemRef.current) {\n      parentElem.appendChild(rootElemRef.current);\n    }\n\n    return () => {\n      if (rootElemRef.current) rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!rootElemRef.current) {\n      // @ts-ignore\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useFreezeBody = ({ isFrozen }: { isFrozen: boolean }) => {\n  React.useEffect(() => {\n    const freeze = () => {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    };\n\n    const unfreeze = () => {\n      document.body.style.overflow = '';\n      document.body.style.height = '';\n    };\n\n    if (isFrozen) freeze();\n    else unfreeze();\n\n    return () => unfreeze();\n  }, [isFrozen]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useFreezeBody } from '../Helpers';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    isBackgroundScrollable = false,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement('modal');\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useFreezeBody({ isFrozen: !!(!isBackgroundScrollable && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => {\n      if (!visible) setIsInView(false);\n    },\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: isBackgroundScrollable ? 'absolute' : 'fixed',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 400,\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}