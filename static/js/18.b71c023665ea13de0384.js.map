{"version":3,"sources":["webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/ButtonGroup.mdx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts"],"names":["getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","plain","color","text","focusColor","tint2","danger","primary","secondary","tint1","borderColor","border","loadingBackgroundColor","overlay","focus","focusLight","outline","borderWidth","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","displayName","__docgenInfo","description","props","defaultValue","name","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Layout","_Loading","_Typography","_Button","Button","withTheme","_props$appearance","title","_props$color","getStyles","iconAfter","iconBefore","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","_react","_interopRequireDefault","_tag","_docz","_ButtonGroup","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","Playground","__position","__code","__scope","ButtonGroup","Box","direction","Component","directionToFlexDirectionMap","horizontal","vertical","children","_props$direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","cloneElement","borderBottomWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftWidth","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","dots","o","key","marginLeft","marginRight","opacity","width","defaultProps","value","_LoadingDots"],"mappings":"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","file":"static/js/18.957895d7.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.tint2,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.tint1,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.danger.default,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.danger.focus,\n          loadingBackgroundColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primary.default,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primary.focus,\n          loadingBackgroundColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondary.default,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondary.focus,\n          loadingBackgroundColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.tint2,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.danger.focusLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primary.focusLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.plain,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondary.focusLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: Theme;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nconst ButtonBase = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    theme,\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Button = withTheme(ButtonBase);\nexport default Button;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport { Box } from '../Layout';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"vertical-button-group\"}}>{`Vertical button group`}</MDXTag>\n<Playground __position={0} __code={'<ButtonGroup>\\n  <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n  <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n  <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n  <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n</ButtonGroup>'} __scope={{props: this ? this.props : props,Button,ButtonGroup,Box}}>\n  <ButtonGroup>\n    <Button color=\"default\" title=\"Default\" />\n    <Button color=\"primary\" title=\"Primary\" />\n    <Button color=\"secondary\" title=\"Secondary\" />\n    <Button color=\"danger\" title=\"Danger\" />\n  </ButtonGroup>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"vertical-button-group-1\"}}>{`Vertical button group`}</MDXTag>\n<Playground __position={1} __code={'<ButtonGroup>\\n  <Button appearance=\\\"outline\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />\\n</ButtonGroup>'} __scope={{props: this ? this.props : props,Button,ButtonGroup,Box}}>\n  <ButtonGroup>\n    <Button appearance=\"outline\" color=\"default\" title=\"Default\" />\n    <Button appearance=\"outline\" color=\"primary\" title=\"Primary\" />\n    <Button appearance=\"outline\" color=\"secondary\" title=\"Secondary\" />\n    <Button appearance=\"outline\" color=\"danger\" title=\"Danger\" />\n  </ButtonGroup>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"horizontal-button-group\"}}>{`Horizontal button group`}</MDXTag>\n<Playground __position={2} __code={'<ButtonGroup direction=\\\"horizontal\\\">\\n  <Button color=\\\"default\\\" title=\\\"Default\\\" />\\n  <Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n  <Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n  <Button color=\\\"danger\\\" title=\\\"Danger\\\" />\\n</ButtonGroup>'} __scope={{props: this ? this.props : props,Button,ButtonGroup,Box}}>\n  <ButtonGroup direction=\"horizontal\">\n    <Button color=\"default\" title=\"Default\" />\n    <Button color=\"primary\" title=\"Primary\" />\n    <Button color=\"secondary\" title=\"Secondary\" />\n    <Button color=\"danger\" title=\"Danger\" />\n  </ButtonGroup>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"horizontal-button-group-1\"}}>{`Horizontal button group`}</MDXTag>\n<Playground __position={3} __code={'<ButtonGroup direction=\\\"horizontal\\\">\\n  <Button appearance=\\\"outline\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n  <Button appearance=\\\"outline\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />\\n</ButtonGroup>'} __scope={{props: this ? this.props : props,Button,ButtonGroup,Box}}>\n  <ButtonGroup direction=\"horizontal\">\n    <Button appearance=\"outline\" color=\"default\" title=\"Default\" />\n    <Button appearance=\"outline\" color=\"primary\" title=\"Primary\" />\n    <Button appearance=\"outline\" color=\"secondary\" title=\"Secondary\" />\n    <Button appearance=\"outline\" color=\"danger\" title=\"Danger\" />\n  </ButtonGroup>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nclass LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n\nexport default LoadingDots;\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as LoadingDots } from './LoadingDots';\n"],"sourceRoot":""}