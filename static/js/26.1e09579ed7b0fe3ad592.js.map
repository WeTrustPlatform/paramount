{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_Button","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","Button","Box","color","appearance","size","isLoading","isActive","isDisabled","isInline","iconBefore","iconAfter","iconLoading","title","onPress","console","log","getStyles","theme","buttonStyle","textStyle","focusColor","parentName","of","isMDXComponent","getButtonVariables","appearances","minimal","backgroundColor","colors","background","white","text","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","_getButtonVariables","baseStyles","_appearances$appearan","textColor","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","alignItems","display","fontWeight","justifyContent","textAlign","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_props$appearance","_props$color","_props$isDisabled","_props$isInline","_props$isLoading","_props$onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","key","marginLeft","marginRight","opacity","width","Component","defaultProps","_LoadingDots","Object","keys","forEach","defineProperty","exports","enumerable","get"],"mappings":"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","file":"static/js/26.7217b58d.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from './Button';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Button\\n  color=\\\"primary\\\"\\n  appearance=\\\"primary\\\"\\n  size=\\\"large\\\"\\n  isLoading={false}\\n  isActive={false}\\n  isDisabled={false}\\n  isInline={false}\\n  iconBefore={null}\\n  iconAfter={null}\\n  iconLoading={null}\\n  title=\\\"Usage\\\"\\n  onPress={() => console.log(\\'Pressed!\\')}\\n  getStyles={(props, theme) => ({\\n    buttonStyle: {},\\n    textStyle: {},\\n    focusColor: \\'\\',\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button color=\"primary\" appearance=\"primary\" size=\"large\" isLoading={false} isActive={false} isDisabled={false} isInline={false} iconBefore={null} iconAfter={null} iconLoading={null} title=\"Usage\" onPress={() => console.log('Pressed!')} getStyles={(props, theme) => ({\n        buttonStyle: {},\n        textStyle: {},\n        focusColor: ''\n      })} mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"primary-appearance-default\"\n    }}>{`Primary appearance (default)`}</h3>\n    <Playground __position={1} __code={'<Button color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"outline-appearance\"\n    }}>{`Outline appearance`}</h3>\n    <Playground __position={2} __code={'<Button appearance=\\\"outline\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button appearance=\\\"outline\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button appearance=\"outline\" color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button appearance=\"outline\" color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"minimal-appearance\"\n    }}>{`Minimal appearance`}</h3>\n    <Playground __position={3} __code={'<Button appearance=\\\"minimal\\\" color=\\\"default\\\" title=\\\"Default\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />\\n<Button appearance=\\\"minimal\\\" color=\\\"danger\\\" title=\\\"Danger\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button appearance=\"minimal\" color=\"default\" title=\"Default\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n  <Button appearance=\"minimal\" color=\"danger\" title=\"Danger\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"loading-primary-button\"\n    }}>{`Loading Primary button`}</h3>\n    <Playground __position={4} __code={'<Button isLoading appearance=\\\"primary\\\" color=\\\"primary\\\" title=\\\"Default\\\" />\\n<Button isLoading appearance=\\\"outline\\\" color=\\\"primary\\\" title=\\\"Primary\\\" />\\n<Button isLoading appearance=\\\"minimal\\\" color=\\\"primary\\\" title=\\\"Secondary\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button isLoading appearance=\"primary\" color=\"primary\" title=\"Default\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"outline\" color=\"primary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"minimal\" color=\"primary\" title=\"Secondary\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"loading-secondary-button\"\n    }}>{`Loading Secondary button`}</h3>\n    <Playground __position={5} __code={'<Button isLoading appearance=\\\"primary\\\" color=\\\"secondary\\\" title=\\\"Default\\\" />\\n<Button isLoading appearance=\\\"outline\\\" color=\\\"secondary\\\" title=\\\"Primary\\\" />\\n<Button isLoading appearance=\\\"minimal\\\" color=\\\"secondary\\\" title=\\\"Secondary\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Button isLoading appearance=\"primary\" color=\"secondary\" title=\"Default\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"outline\" color=\"secondary\" title=\"Primary\" mdxType=\"Button\" />\n  <Button isLoading appearance=\"minimal\" color=\"secondary\" title=\"Secondary\" mdxType=\"Button\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"other-props\"\n    }}>{`Other props`}</h3>\n    <Playground __position={6} __code={'<Box>\\n  <Button isInline color=\\\"primary\\\" title=\\\"Inline\\\" />\\n  <Button isDisabled color=\\\"primary\\\" title=\\\"Disabled\\\" />\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Button isInline color=\"primary\" title=\"Inline\" mdxType=\"Button\" />\n    <Button isDisabled color=\"primary\" title=\"Disabled\" mdxType=\"Button\" />\n  </Box>\n    </Playground>\n    <p>{`If `}<inlineCode parentName=\"p\">{`isInline`}</inlineCode>{` does not inline the button, try wrapping it with `}<inlineCode parentName=\"p\">{`Box`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n"],"sourceRoot":""}