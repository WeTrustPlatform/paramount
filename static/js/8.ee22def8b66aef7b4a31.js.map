{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/WheelPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/WheelPickerCommon.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/WheelPicker.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","TextInput","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","hasLeftIcon","LeftIcon","hasRightIcon","RightIcon","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5___default","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_jsxFileName","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","minHeight","controlHeights","controlPaddings","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","greyLight","content","borderColor","border","borderWidth","text","muted","danger","editable","name","alignItems","display","justifyContent","left","position","zIndex","right","Fragment","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","WheelPicker","Icon","___WEBPACK_IMPORTED_MODULE_6__","month","day","year","_ref2","___WEBPACK_IMPORTED_MODULE_5__","flexDirection","___WEBPACK_IMPORTED_MODULE_7__","data","label","console","log","Array","fill","map","v","i","concat","of","isMDXComponent","ITEM_HEIGHT","makePaddedOptions","toConsumableArray","getOptionFromOptions","scrollPosition","index","Math","round","finalIndex","abs","length","useWheelPicker","_props$value","initialValue","scrollContainer","ref","optionsWithClones","slicedToArray","setValue","getOption","useMemo","timeout","useRef","scrollToValue","toValue","animated","arguments","undefined","findIndex","o","scrollTo","offset","handleChange","newValue","handleScroll","current","clearTimeout","setTimeout","selectedOption","handleEndDrag","useImperativeHandle","selectValue","handlePressUp","currentIndex","handlePressDown","flex","StyledListWrapper","StyledBottomOverlay","borderStyle","borderTopWidth","top","StyledUpperOverlay","borderBottomWidth","Arrow","direction","touchableProps","TouchableOpacity","Icon_web","StyledArrowUp","WheelPickerCommon_Arrow","StyledArrowDown","StyledWheelPickerItem","option","scrollSnapAlign","Text","align","forwardRef","_props$data","listRef","_useWheelPicker","behavior","useLayoutEffect","ArrowUp","arrowUpProps","ArrowDown","arrowDownProps","pointerEvents","UpperOverlay","upperOverlayProps","BottomOverlay","bottomOverlayProps","ListWrapper","listWrapperProps","WheelPicker_web_jsxFileName","onScroll","event","currentTarget","scrollTop","overflowY","scrollSnapType","_getOverrides13","Item","_getOverrides14","itemProps","key","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/8.8b9d2474.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    {\n      hasLeftIcon: !!overrides.LeftIcon,\n      hasRightIcon: !!(isClearable || overrides.RightIcon),\n      size,\n      isDisabled,\n      isInvalid,\n      onValueChange,\n      value,\n      onChangeText,\n      ...textInputProps,\n    },\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon {...leftIconProps} />\n      </LeftIconWrapper>\n      <Input {...inputProps} />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon {...rightIconProps} />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    minHeight,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                minHeight: numberOfLines * minHeight,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, WheelPicker, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"wheelpicker-experimental\"\n    }}>{`WheelPicker (Experimental)`}</h1>\n    <Playground __position={0} __code={'<State initial={{ month: \\'March\\', day: \\'15\\', year: \\'2019\\' }}>\\n  {({ state, setState }) => (\\n    <Box flexDirection=\\\"row\\\">\\n      <WheelPicker\\n        value={state.month}\\n        data={[\\n          { label: \\'January\\', value: \\'January\\' },\\n          { label: \\'February\\', value: \\'February\\' },\\n          { label: \\'March\\', value: \\'March\\' },\\n          { label: \\'April\\', value: \\'April\\' },\\n          { label: \\'May\\', value: \\'May\\' },\\n          { label: \\'June\\', value: \\'June\\' },\\n          { label: \\'July\\', value: \\'July\\' },\\n          { label: \\'August\\', value: \\'August\\' },\\n          { label: \\'September\\', value: \\'September\\' },\\n          { label: \\'October\\', value: \\'October\\' },\\n          { label: \\'November\\', value: \\'November\\' },\\n          { label: \\'December\\', value: \\'December\\' },\\n        ]}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ month: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.day}\\n        data={new Array(31)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${i + 1}`, value: `${i + 1}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ day: value })\\n        }}\\n      />\\n      <WheelPicker\\n        value={state.year}\\n        data={new Array(50)\\n          .fill(0)\\n          .map((v, i) => ({ label: `${2000 + i}`, value: `${2000 + i}` }))}\\n        onValueChange={value => {\\n          console.log(value)\\n          setState({ year: value })\\n        }}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      WheelPicker,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        month: 'March',\n        day: '15',\n        year: '2019'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box flexDirection=\"row\" mdxType=\"Box\">\n        <WheelPicker value={state.month} data={[{\n            label: 'January',\n            value: 'January'\n          }, {\n            label: 'February',\n            value: 'February'\n          }, {\n            label: 'March',\n            value: 'March'\n          }, {\n            label: 'April',\n            value: 'April'\n          }, {\n            label: 'May',\n            value: 'May'\n          }, {\n            label: 'June',\n            value: 'June'\n          }, {\n            label: 'July',\n            value: 'July'\n          }, {\n            label: 'August',\n            value: 'August'\n          }, {\n            label: 'September',\n            value: 'September'\n          }, {\n            label: 'October',\n            value: 'October'\n          }, {\n            label: 'November',\n            value: 'November'\n          }, {\n            label: 'December',\n            value: 'December'\n          }]} onValueChange={value => {\n            console.log(value);\n            setState({\n              month: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.day} data={new Array(31).fill(0).map((v, i) => ({\n            label: `${i + 1}`,\n            value: `${i + 1}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              day: value\n            });\n          }} mdxType=\"WheelPicker\" />\n        <WheelPicker value={state.year} data={new Array(50).fill(0).map((v, i) => ({\n            label: `${2000 + i}`,\n            value: `${2000 + i}`\n          }))} onValueChange={value => {\n            console.log(value);\n            setState({\n              year: value\n            });\n          }} mdxType=\"WheelPicker\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={WheelPicker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { WheelPicker } from './WheelPicker';\n\nexport const ITEM_HEIGHT = 40;\nexport const ITEM_COUNT = 3;\nexport const SCROLL_PICKER_HEIGHT = ITEM_HEIGHT * ITEM_COUNT;\n\nconst DEBOUNCE_TIME = 300;\n\nexport const makePaddedOptions = <TValue extends any>(\n  data: WheelPickerOption<TValue>[],\n) => {\n  return [\n    { value: 'emptyStart', label: '' },\n    ...data,\n    { value: 'emptyEnd', label: '' },\n  ] as WheelPickerOption<TValue>[];\n};\n\nexport const getOptionFromOptions = <TValue extends any>(\n  data: WheelPickerOption<TValue>[],\n) => (scrollPosition: number) => {\n  const index = Math.round(scrollPosition / ITEM_HEIGHT);\n\n  const finalIndex = Math.abs(\n    index >= data.length ? data.length - index : index,\n  );\n\n  return data[finalIndex];\n};\n\nexport interface ScrollContainer {\n  scrollTo: (params: { animated?: boolean; offset: number }) => void;\n}\n\nexport interface UseWheelPickerProps<TValue extends any> {\n  /**\n   * List of data to show.\n   */\n  data: WheelPickerOption<TValue>[];\n\n  /**\n   * Initial value of the picker.\n   *\n   * *This is not a controlled component*; you don't need to update the\n   * value during dragging.\n   */\n  value?: TValue;\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: (value: TValue) => void;\n\n  /**\n   * Scroll container\n   */\n  scrollContainer: ScrollContainer | null;\n\n  /**\n   * Methods of the WheelPicker\n   */\n  ref: React.Ref<WheelPicker<TValue>>;\n}\n\nexport const useWheelPicker = <TValue extends any>(\n  props: UseWheelPickerProps<TValue>,\n) => {\n  const {\n    data,\n    onValueChange = () => {\n      return;\n    },\n    value: initialValue = data[0].value,\n    scrollContainer,\n    ref,\n  } = props;\n  const optionsWithClones = makePaddedOptions(data);\n  const [value, setValue] = React.useState<TValue>(initialValue);\n  const getOption = React.useMemo(() => getOptionFromOptions(data), [data]);\n  const timeout = React.useRef<number | null>(null);\n\n  const scrollToValue = React.useCallback(\n    (toValue: TValue, animated = true) => {\n      if (!scrollContainer) return;\n\n      const index = optionsWithClones.findIndex(o => o.value === toValue);\n\n      scrollContainer.scrollTo({\n        animated,\n        offset: index * ITEM_HEIGHT - ITEM_HEIGHT,\n      });\n    },\n    [scrollContainer, optionsWithClones],\n  );\n\n  const handleChange = React.useCallback(\n    (newValue: TValue) => {\n      if (newValue !== value) {\n        onValueChange(newValue);\n        setValue(newValue);\n      }\n    },\n    [onValueChange, value],\n  );\n\n  const handleScroll = React.useCallback(\n    (offset: number) => {\n      if (!scrollContainer) return;\n\n      if (timeout.current) clearTimeout(timeout.current);\n\n      // @ts-ignore\n      timeout.current = setTimeout(() => {\n        const selectedOption = getOption(offset);\n        handleChange(selectedOption.value);\n      }, DEBOUNCE_TIME);\n    },\n    [scrollContainer, getOption, handleChange],\n  );\n\n  const handleEndDrag = React.useCallback(\n    (offset: number) => {\n      if (!scrollContainer) return;\n\n      const scrollPosition = Math.round(offset / ITEM_HEIGHT) * ITEM_HEIGHT;\n\n      scrollContainer.scrollTo({\n        offset: scrollPosition,\n      });\n\n      const selectedOption = getOption(scrollPosition);\n\n      handleChange(selectedOption.value);\n    },\n    [scrollContainer, getOption, handleChange],\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      selectValue: (newValue: TValue) => scrollToValue(newValue),\n    }),\n    [scrollToValue],\n  );\n\n  const handlePressUp = React.useCallback(() => {\n    if (!scrollContainer) return;\n    const currentIndex = data.findIndex(o => o.value === value);\n\n    if (currentIndex <= 0) return;\n    scrollToValue(data[currentIndex - 1].value);\n  }, [data, scrollContainer, scrollToValue, value]);\n\n  const handlePressDown = React.useCallback(() => {\n    if (!scrollContainer) return;\n\n    const currentIndex = data.findIndex(o => o.value === value);\n\n    if (currentIndex >= data.length - 1) return;\n    scrollToValue(data[currentIndex + 1].value);\n  }, [data, scrollContainer, scrollToValue, value]);\n\n  return {\n    handleEndDrag,\n    handlePressDown,\n    handlePressUp,\n    handleScroll,\n    optionsWithClones,\n    scrollToValue,\n  };\n};\n\nexport interface RootProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[{ alignItems: 'center', flex: 1, width: '100%' }, style]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface ListWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledListWrapper = (props: ListWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[{ flex: 1, height: SCROLL_PICKER_HEIGHT, width: '100%' }, style]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport interface OverlayProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nexport const StyledBottomOverlay = (props: OverlayProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          borderColor: theme.colors.border.default,\n          borderStyle: 'solid',\n          borderTopWidth: 1,\n          height: ITEM_HEIGHT,\n          position: 'absolute',\n          top: ITEM_HEIGHT * 2,\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const StyledUpperOverlay = (props: OverlayProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          borderBottomWidth: 1,\n          borderColor: theme.colors.border.default,\n          borderStyle: 'solid',\n          height: ITEM_HEIGHT,\n          position: 'absolute',\n          top: 0,\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\n// tslint:disable-next-line\nexport interface ArrowProps extends TouchableOpacityProps {}\n\nconst Arrow = (props: ArrowProps & { direction: 'up' | 'down' }) => {\n  const { direction, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          height: 48,\n          justifyContent: 'center',\n          width: 48,\n        },\n      ]}\n      {...touchableProps}\n    >\n      <Icon\n        color=\"link\"\n        size=\"large\"\n        name={direction === 'up' ? 'chevron-up' : 'chevron-down'}\n      />\n    </TouchableOpacity>\n  );\n};\n\nexport const StyledArrowUp = (props: ArrowProps) => (\n  <Arrow {...props} direction=\"up\" />\n);\nexport const StyledArrowDown = (props: ArrowProps) => (\n  <Arrow {...props} direction=\"down\" />\n);\n\nexport interface WheelPickerOption<TValue extends any> {\n  label: string;\n  value: TValue;\n}\n\nexport interface WheelPickerItemProps<TValue extends any> {\n  option: WheelPickerOption<TValue>;\n}\n\nexport const StyledWheelPickerItem = <TValue extends any>(\n  props: WheelPickerItemProps<TValue>,\n) => {\n  const { option } = props;\n  const { label } = option;\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        height: ITEM_HEIGHT,\n        justifyContent: 'center',\n        paddingHorizontal: 4,\n        // @ts-ignore\n        scrollSnapAlign: 'start',\n      }}\n    >\n      <Text align=\"center\">{label}</Text>\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides } from '../../utils/Overrides';\nimport { WheelPicker as WheelPickerRef, WheelPickerProps } from './WheelPicker';\nimport {\n  SCROLL_PICKER_HEIGHT,\n  StyledArrowDown,\n  StyledArrowUp,\n  StyledBottomOverlay,\n  StyledListWrapper,\n  StyledRoot,\n  StyledUpperOverlay,\n  StyledWheelPickerItem,\n  useWheelPicker,\n} from './WheelPickerCommon';\n\nexport const WheelPicker = React.forwardRef(\n  <TValue extends any>(\n    props: WheelPickerProps<TValue>,\n    ref: React.Ref<WheelPickerRef<TValue>>,\n  ) => {\n    const {\n      value,\n      data = [],\n      onValueChange = () => {\n        return;\n      },\n      overrides = {},\n    } = props;\n    const theme = useTheme();\n\n    const listRef = React.useRef<HTMLDivElement>(null);\n\n    const {\n      optionsWithClones,\n      handlePressDown,\n      handlePressUp,\n      handleScroll,\n      scrollToValue,\n    } = useWheelPicker({\n      onValueChange,\n      data,\n      ref,\n      scrollContainer: {\n        scrollTo: ({ animated, offset }) =>\n          listRef.current &&\n          listRef.current.scrollTo({\n            behavior: animated ? 'smooth' : 'auto',\n            top: offset,\n          }),\n      },\n      value,\n    });\n\n    React.useLayoutEffect(() => {\n      setTimeout(() => {\n        if (listRef.current && value) scrollToValue(value, false);\n      }, 50);\n    }, [scrollToValue, value]);\n\n    const [Root, rootProps] = getOverrides(\n      StyledRoot,\n      props,\n      {},\n      dlv(theme, 'overrides.WheelPicker.Root'),\n      overrides.Root,\n    );\n    const [ArrowUp, arrowUpProps] = getOverrides(\n      StyledArrowUp,\n      props,\n      { onPress: handlePressUp },\n      dlv(theme, 'overrides.WheelPicker.ArrowUp'),\n      overrides.ArrowUp,\n    );\n    const [ArrowDown, arrowDownProps] = getOverrides(\n      StyledArrowDown,\n      props,\n      { onPress: handlePressDown },\n      dlv(theme, 'overrides.WheelPicker.ArrowDown'),\n      overrides.ArrowDown,\n    );\n    const [UpperOverlay, upperOverlayProps] = getOverrides(\n      StyledUpperOverlay,\n      props,\n      { pointerEvents: 'none' },\n      dlv(theme, 'overrides.WheelPicker.UpperOverlay'),\n      overrides.UpperOverlay,\n    );\n    const [BottomOverlay, bottomOverlayProps] = getOverrides(\n      StyledBottomOverlay,\n      props,\n      { pointerEvents: 'none' },\n      dlv(theme, 'overrides.WheelPicker.BottomOverlay'),\n      overrides.BottomOverlay,\n    );\n    const [ListWrapper, listWrapperProps] = getOverrides(\n      StyledListWrapper,\n      props,\n      {},\n      dlv(theme, 'overrides.WheelPicker.ListWrapper'),\n      overrides.ListWrapper,\n    );\n\n    return (\n      <Root {...rootProps}>\n        <ArrowUp onPress={handlePressUp} {...arrowUpProps} />\n        <ListWrapper {...listWrapperProps}>\n          <div\n            ref={listRef}\n            onScroll={event => handleScroll(event.currentTarget.scrollTop)}\n            style={{\n              height: SCROLL_PICKER_HEIGHT,\n              overflowY: 'scroll' as const,\n              scrollSnapType: 'y mandatory',\n              width: '100%',\n            }}\n          >\n            {optionsWithClones.map(option => {\n              const [Item, itemProps] = getOverrides(\n                StyledWheelPickerItem,\n                props,\n                { option },\n                dlv(theme, 'overrides.WheelPicker.Item'),\n                overrides.Item,\n              );\n\n              return <Item key={`${option.value}`} {...itemProps} />;\n            })}\n          </div>\n          <UpperOverlay pointerEvents=\"none\" {...upperOverlayProps} />\n          <BottomOverlay pointerEvents=\"none\" {...bottomOverlayProps} />\n        </ListWrapper>\n        <ArrowDown onPress={handlePressDown} {...arrowDownProps} />\n      </Root>\n    );\n  },\n);\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}