{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts"],"names":["getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","event","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","modalProps","ModalBase","Component","HistoryModal","_ref","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Animation","_hooks","children","transparent","_props$shouldLockBody","shouldLockBodyScroll","_props$animationType","animationType","isUnmounting","targetElement","useElement","_React$useState","useState","_React$useState2","_slicedToArray2","isInView","setIsInView","elementRef","useRef","focusTrapRef","useLockBodyScroll","isLocked","useEffect","deactivateFocus","current","deactivate","initialFocus","onDeactivate","activate","_useSpring","useSpring","onRest","springDefaultConfig","y","createPortal","div","tabIndex","ref","bottom","left","position","right","top","transform","interpolate","v","concat","zIndex","prototype","hasOwnProperty","call","_exportNames","_Modal","friction","tension","_usePrevious","_useMeasure","_useElement","_useLockBodyScroll","_exenv","id","element","rootElem","rootElement","rootContainer","document","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childNodes","canUseDOM","originalStyle","getComputedStyle","overflow","unlock","initialMeasurements","pageX","pageY","x","useMeasure","undefined","forwardRef","createRef","onMeasure","measurements","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","onLayout","e","nativeEvent","usePrevious","value"],"mappings":"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","file":"static/js/3.ed4830b0.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useElement, useLockBodyScroll } from '../../hooks';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    shouldLockBodyScroll = true,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement();\n\n  // It will not work if targetElement is falsy so we exit early\n  // This may happen e.g. during SSR\n  if (!targetElement) return null;\n\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useLockBodyScroll({ isLocked: !!(shouldLockBodyScroll && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    onRest: () => {\n      if (!visible) setIsInView(false);\n    },\n\n    config: springDefaultConfig,\n\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: shouldLockBodyScroll ? 'fixed' : 'absolute',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 400,\n};\n","export * from './usePrevious';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useLockBodyScroll';\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps = {}) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n"],"sourceRoot":""}