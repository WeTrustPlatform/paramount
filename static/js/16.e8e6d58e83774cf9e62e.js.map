{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","FormField","TextInput","___WEBPACK_IMPORTED_MODULE_5__","label","description","error","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","children","_props$labelPosition","labelPosition","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","Label","position","_getOverrides4","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4__","style","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","color","paddingBottom","getStyle","_props$size","size","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","StyledInput","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","hasLeftIcon","LeftIcon","hasRightIcon","RightIcon","Input","inputProps","StyledLeftIconWrapper","LeftIconWrapper","leftIconWrapperProps","StyledLeftIcon","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","isControlSize","borderRadius","controlBorderRadius","minHeight","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","backgroundColor","colors","background","greyLight","content","borderColor","border","borderWidth","text","muted","width","danger","paddingVertical","editable","name","alignItems","display","height","justifyContent","left","paddingHorizontal","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/16.b46e67d9.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { FormField, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"formfield\"\n    }}>{`FormField`}</h1>\n    <p>{`Enriches a field in a form to contain label, description or error messages.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<FormField\\n  label=\\\"Label\\\"\\n  description=\\\"Description for the field\\\"\\n  error=\\\"Error message\\\"\\n>\\n  <TextInput />\\n</FormField>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormField,\n      TextInput\n    }} mdxType=\"Playground\">\n  <FormField label=\"Label\" description=\"Description for the field\" error=\"Error message\" mdxType=\"FormField\">\n    <TextInput mdxType=\"TextInput\" />\n  </FormField>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={FormField} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Label, LabelProps, Text, TextProps } from '../Typography';\n\ntype FormFieldLabelPosition = 'top' | 'left' | 'right';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: FormFieldLabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = 'top',\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    { label, position: labelPosition },\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description },\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    { error },\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR {...labelRProps}>{children}</LabelR>\n      <Description {...descriptionProps} />\n      <ErrorR {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        getStyle(props, style),\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[getStyle(props, style)]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    {\n      hasLeftIcon: !!overrides.LeftIcon,\n      hasRightIcon: !!(isClearable || overrides.RightIcon),\n      size,\n      isDisabled,\n      isInvalid,\n      onValueChange,\n      value,\n      onChangeText,\n      ...textInputProps,\n    },\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon {...leftIconProps} />\n      </LeftIconWrapper>\n      <Input {...inputProps} />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon {...rightIconProps} />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    minHeight,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                minHeight: numberOfLines * minHeight,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}