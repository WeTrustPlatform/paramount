{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.styles.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/RowAndColumn.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","getColumnCount","columns","currentScreenSize","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","getProportion","columnCount","gridColumnCount","concat","getColumnStyles","_ref","gutterWidth","offsetColumns","flexBasis","offsetColumnCount","columnStyle","flex","marginLeft","maxWidth","paddingLeft","paddingRight","splitColumnConfig","config","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","Column","getStyles","objectWithoutProperties","_useLayout","useLayout","React","GutterWidthContext","_splitColumnConfig","mergeStyles","components","react","View","getMaxWidth","containerSizes","undefined","getContainerStyles","size","containerStyle","marginRight","fluid","width","Container","_props$fluid","layout","objectSpread","__webpack_require__","d","__webpack_exports__","defaultLayout","ASC_ORDER_SCREEN_SIZES","LayoutContext","react__WEBPACK_IMPORTED_MODULE_0__","breakpoints","getResponsiveValue","values","slice","reverse","getCurrentScreenSize","windowScaledSize","Dimensions","get","LayoutProvider","value","deepmerge","_React$useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setCurrentScreenSize","handleDimensionsChange","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3__","_LayoutContext__WEBPACK_IMPORTED_MODULE_5__","Provider","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","deriveResponsiveValue","getRowStyles","hasGutter","rowStyle","flexDirection","flexWrap","Row","_props$hasGutter","_jsxFileName","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","paddingVertical","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","height","borderWidth","of","isMDXComponent","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","_ref$color","_ref$size","_ref$align","align","weight","_ref$isItalic","isItalic","transform","sizeStyle","textStyle","text","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","controlBorderRadius","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","paragraphSizes","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/6.bf2c266f.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ColumnConfigBase } from './Column';\nimport {\n  ColumnCount,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface ColumnStylesProps {\n  gutterWidth: number;\n  currentScreenSize: ScreenSize;\n  gridColumnCount: ColumnCount;\n  columns: ColumnConfigBase;\n  offsetColumns: ColumnConfigBase;\n}\n\nexport type GetColumnStyles = (\n  progressStylesProps: ColumnStylesProps,\n  theme: Theme,\n) => ColumnStyles;\n\nexport interface ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const getColumnStyles: GetColumnStyles = (\n  { gutterWidth, currentScreenSize, gridColumnCount, columns, offsetColumns },\n  theme,\n) => {\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return {\n    columnStyle: {\n      flex: 1,\n      flexBasis,\n      marginLeft,\n      maxWidth: flexBasis,\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ColumnStyles,\n  GetColumnStyles,\n  getColumnStyles,\n} from './Column.styles';\nimport { ColumnCount, useLayout } from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  xsmall?: ColumnCount;\n  small?: ColumnCount;\n  medium?: ColumnCount;\n  large?: ColumnCount;\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  offsetXsmall?: ColumnCount;\n  offsetSmall?: ColumnCount;\n  offsetMedium?: ColumnCount;\n  offsetLarge?: ColumnCount;\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetColumnStyles, DeepPartial<ColumnStyles>>;\n}\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n\nexport const Column = (props: ColumnProps) => {\n  const { children, getStyles, ...config } = props;\n  const { currentScreenSize, gridColumnCount } = useLayout();\n  const theme = useTheme();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const { columns, offsetColumns } = splitColumnConfig(config);\n  const { columnStyle } = mergeStyles(\n    getColumnStyles,\n    getStyles,\n    theme.components.getColumnStyles,\n  )(\n    { gutterWidth, currentScreenSize, gridColumnCount, columns, offsetColumns },\n    theme,\n  );\n\n  return <View style={columnStyle}>{children}</View>;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ContainerProps } from './Container';\nimport {\n  ContainerSizes,\n  DESC_ORDER_SCREEN_SIZES,\n  LayoutInterface,\n  ScreenSize,\n} from './LayoutContext';\n\nexport type GetContainerStyles = (\n  props: ContainerProps & LayoutInterface,\n  theme: Theme,\n) => ContainerStyles;\n\nexport interface ContainerStyles {\n  containerStyle: ViewStyle;\n}\n\nconst getMaxWidth = (\n  containerSizes: ContainerSizes,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (screenSize === 'xsmall') return false;\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!containerSizes[screenSize];\n  });\n\n  if (nearestSize === 'xsmall') return undefined;\n\n  return nearestSize ? containerSizes[nearestSize] : undefined;\n};\n\nexport const getContainerStyles: GetContainerStyles = (\n  { size, currentScreenSize, containerSizes, gutterWidth, fluid },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: fluid\n        ? '100%'\n        : size\n        ? containerSizes[size]\n        : getMaxWidth(containerSizes, currentScreenSize),\n      paddingLeft: gutterWidth / 2,\n      paddingRight: gutterWidth / 2,\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ContainerStyles,\n  GetContainerStyles,\n  getContainerStyles,\n} from './Container.styles';\nimport { ContainerSize, useLayout } from './LayoutContext';\n\nexport interface ContainerProps {\n  /** Children node */\n  children?: React.ReactNode;\n\n  /**\n   * When true, it will not contain the width and occupy fully the parent container\n   * @default false\n   */\n  fluid?: boolean;\n\n  /**\n   * The size of the container. It will override the internal responsive mechanism, and will force the\n   * containment of a particular screen size\n   */\n  size?: ContainerSize;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<\n    GetContainerStyles,\n    DeepPartial<ContainerStyles>\n  >;\n}\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, getStyles, size, fluid = false } = props;\n  const layout = useLayout();\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(\n    getContainerStyles,\n    getStyles,\n    theme.components.getContainerStyles,\n  )({ size, fluid, ...layout }, theme);\n\n  return <View style={containerStyle}>{children}</View>;\n};\n","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface ScreenSizes extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport interface ContainerSizes {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport type Breakpoint = keyof Breakpoints;\nexport type ContainerSize = keyof ContainerSizes;\nexport type ScreenSize = keyof ScreenSizes;\n\nexport interface GetResponsiveValueParam<\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n> {\n  xsmall?: TXlargeValue;\n  small?: TXsmallValue;\n  medium?: TSmallValue;\n  large?: TMediumValue;\n  xlarge?: TLargeValue;\n}\n\nexport type GetResponsiveValue = <\n  TXsmallValue = any,\n  TSmallValue = any,\n  TMediumValue = any,\n  TLargeValue = any,\n  TXlargeValue = any\n>(\n  values: GetResponsiveValueParam<\n    TXsmallValue,\n    TSmallValue,\n    TMediumValue,\n    TLargeValue,\n    TXlargeValue\n  >,\n) =>\n  | TXlargeValue\n  | TLargeValue\n  | TMediumValue\n  | TSmallValue\n  | TXsmallValue\n  | undefined;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  currentScreenSize: ScreenSize;\n  getResponsiveValue: GetResponsiveValue;\n  gridColumnCount: ColumnCount;\n  gutterWidth: number;\n  containerSizes: ContainerSizes;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1140,\n  },\n  currentScreenSize: 'small',\n  getResponsiveValue: values =>\n    values.xsmall ||\n    values.small ||\n    values.medium ||\n    values.large ||\n    values.xlarge ||\n    undefined,\n  gridColumnCount: 12,\n  gutterWidth: 30,\n};\n\nexport const ASC_ORDER_SCREEN_SIZES: Array<keyof ScreenSizes> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_SCREEN_SIZES: Array<\n  keyof ScreenSizes\n> = ASC_ORDER_SCREEN_SIZES.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n\nexport const useLayout = () => {\n  return React.useContext(LayoutContext);\n};\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  defaultLayout,\n  DESC_ORDER_SCREEN_SIZES,\n  GetResponsiveValueParam,\n  LayoutContext,\n  LayoutInterface,\n  ScreenSize,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  value?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentScreenSize = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentScreenSize = DESC_ORDER_SCREEN_SIZES.find(screenSize => {\n    if (screenSize === 'xsmall') {\n      return windowScaledSize.width < breakpoints.small;\n    }\n\n    const width = breakpoints[screenSize];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentScreenSize || 'xsmall';\n};\n\nconst deriveResponsiveValue = (\n  values: GetResponsiveValueParam,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!values[screenSize];\n  });\n\n  return nearestSize ? values[nearestSize] : undefined;\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, value } = props;\n\n  const layout = value ? deepmerge(defaultLayout, value) : defaultLayout;\n\n  const [currentScreenSize, setCurrentScreenSize] = React.useState(\n    getCurrentScreenSize(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentScreenSize(getCurrentScreenSize(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        ...layout,\n        currentScreenSize,\n        getResponsiveValue: values =>\n          deriveResponsiveValue(values, currentScreenSize),\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface RowStyleProps {\n  gutterWidth: number;\n  hasGutter: boolean;\n}\n\nexport type GetRowStyles = (props: RowStyleProps, theme: Theme) => RowStyles;\n\nexport interface RowStyles {\n  rowStyle: ViewStyle;\n}\n\nexport const getRowStyles: GetRowStyles = ({ hasGutter, gutterWidth }) => {\n  return {\n    rowStyle: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n      marginRight: hasGutter ? -gutterWidth / 2 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ColumnProps } from './Column';\nimport { defaultLayout, useLayout } from './LayoutContext';\nimport { GetRowStyles, getRowStyles, RowStyles } from './Row.styles';\n\nexport interface RowProps {\n  children:\n    | Array<React.ReactElement<ColumnProps>>\n    | React.ReactElement<ColumnProps>;\n  hasGutter?: boolean;\n  getStyles?: ReplaceReturnType<GetRowStyles, DeepPartial<RowStyles>>;\n}\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, getStyles } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  const { rowStyle } = mergeStyles(\n    getRowStyles,\n    getStyles,\n    theme.components.getRowStyles,\n  )({ gutterWidth, hasGutter }, theme);\n\n  return (\n    <View style={rowStyle}>\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"row-and-column\"\n    }}>{`Row and Column`}</h1>\n    <p><inlineCode parentName=\"p\">{`Column`}</inlineCode>{` renders at defined size per screen size. It will match nearest defined size that is smaller than or equal to current screen size\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` wraps `}<inlineCode parentName=\"p\">{`Column`}</inlineCode>{`s to inform about gutter and keep them in row`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for further configuration`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"row-props\"\n    }}>{`Row Props`}</h3>\n    <Props of={Row} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"column-props\"\n    }}>{`Column Props`}</h3>\n    <Props of={Column} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}