{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","getCheckboxStyles","_ref","isChecked","isDisabled","size","sizeValue","controlHeights","checkColor","text","white","checkboxFocusBackgroundColor","primaryDark","greyLight","checkboxStyle","objectSpread","alignItems","content","borderColor","border","borderWidth","height","justifyContent","width","primaryDefault","greyDark","controlBorderRadius","small","touchableStyle","Checkbox","_props$isChecked","_props$isDisabled","_props$isInteractive","isInteractive","_props$onChange","onChange","_props$shape","_props$size","getStyles","accessibilityProps","objectWithoutProperties","_mergeStyles","mergeStyles","components","react","TouchableHighlight","esm_extends","accessible","underlayColor","disabled","onPress","_jsxFileName","View","Icon_web","name","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getListItemStyles","containerStyle","borderBottomWidth","paddingLeft","controlPaddings","paddingRight","focusBackgroundColor","imageWrapperStyle","marginRight","leftWrapperStyle","flexDirection","textStyle","textSizes","textWrapperStyle","wrapperStyle","ListItem","label","description","_props$rightIcon","rightIcon","leftIcon","Text","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","SelectList","SelectListItem","___WEBPACK_IMPORTED_MODULE_6__","isMulti","selectedValue","onValueChange","newValue","itemIndex","console","log","___WEBPACK_IMPORTED_MODULE_7__","value","___WEBPACK_IMPORTED_MODULE_8__","_ref2","of","isMDXComponent","SelectListBase","innerRef","flatListProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","handleOnPress","itemValue","isSelected","Array","isArray","filter","val","childrenArray","toArray","data","map","child","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_FlatList__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","ref","keyExtractor","item","getItemLayout","_","index","length","medium","offset","renderItem","selectListItem","some","selVal","onSelect","_props$index","_props$isSelected","_props$onSelect","listItemProps","_ListItem__WEBPACK_IMPORTED_MODULE_4__","e","preventDefault","_Checkbox__WEBPACK_IMPORTED_MODULE_3__","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$align","_props$isInline","_props$isItalic","textProps","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","palette","lightest","light","base","dark","darkest","overlay","greyDefault","primaryLight","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","danger","info","success","warning","button","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","undefined","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","large","paragraphSizes","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/4.12fa6c41.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\nimport { CheckboxShape } from './Checkbox';\n\nexport interface CheckboxStylesProps {\n  isChecked: boolean;\n  isDisabled: boolean;\n  shape: CheckboxShape;\n  size: ControlSize;\n}\n\nexport interface CheckboxStyles {\n  touchableStyle: ViewStyle;\n  checkboxStyle: ViewStyle;\n  checkColor: string;\n  checkboxFocusBackgroundColor: string;\n}\n\nexport type GetCheckboxStyles = (\n  checkboxStylesProps: CheckboxStylesProps,\n  theme: Theme,\n) => CheckboxStyles;\n\nexport const getCheckboxStyles: GetCheckboxStyles = (\n  { isChecked, isDisabled, shape, size },\n  theme,\n) => {\n  const sizeValue = theme.controlHeights[size] - 16;\n\n  return {\n    checkColor: theme.colors.text.white,\n    checkboxFocusBackgroundColor: isChecked\n      ? theme.colors.background.primaryDark\n      : theme.colors.background.greyLight,\n\n    checkboxStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      height: sizeValue,\n      justifyContent: 'center',\n      width: sizeValue,\n      ...(isChecked\n        ? {\n            backgroundColor: theme.colors.background.primaryDefault,\n            borderColor: 'transparent',\n          }\n        : {}),\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.background.greyDark,\n            borderColor: theme.colors.border.default,\n          }\n        : {}),\n      ...{\n        circle: {\n          borderRadius: 999,\n        },\n        square: {\n          borderRadius: theme.controlBorderRadius.small,\n        },\n      }[shape],\n    },\n\n    touchableStyle: {},\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  CheckboxStyles,\n  GetCheckboxStyles,\n  getCheckboxStyles,\n} from './Checkbox.styles';\n\nexport type CheckboxShape = 'circle' | 'square';\n\nexport interface CheckboxProps extends AccessibilityProps {\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  /** Sometimes we just want the display of the checkbox  */\n  isInteractive?: boolean;\n  /** @default square */\n  shape?: CheckboxShape;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n  getStyles?: ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>;\n  testID?: string;\n  size?: ControlSize;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    isInteractive = true,\n    onChange = () => null,\n    shape = 'square',\n    size = 'medium',\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    touchableStyle,\n    checkboxStyle,\n    checkColor,\n    checkboxFocusBackgroundColor,\n  } = mergeStyles(\n    getCheckboxStyles,\n    getStyles,\n    theme.components.getCheckboxStyles,\n  )(\n    {\n      isChecked,\n      isDisabled,\n      shape,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible={isInteractive}\n      style={touchableStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      {...(isInteractive\n        ? {\n            disabled: isDisabled,\n            onPress: onChange,\n          }\n        : {\n            disabled: true,\n          })}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={checkboxStyle}>\n        {isChecked ? <Icon name=\"check\" size={20} color={checkColor} /> : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ControlSize;\n  isDisabled: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled },\n  theme,\n) => {\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      height: theme.controlHeights[size],\n      justifyContent: 'center',\n      paddingLeft: theme.controlPaddings[size],\n      paddingRight: theme.controlPaddings[size],\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ControlSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(\n    getListItemStyles,\n    getStyles,\n    theme.components.getListItemStyles,\n  )({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, SelectList, SelectListItem, State } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"selectlist\"\n    }}>{`SelectList`}</h1>\n    <p>{`SelectList that supports single value or multiple values selected at the same item. `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` is a compound component, which means that its children can be any component, and it will implicitly inject props such as `}<inlineCode parentName=\"p\">{`isSelected`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`onSelect`}</inlineCode>{` to them.\n`}<inlineCode parentName=\"p\">{`SelectListItem`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`ListItem`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SelectList`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`FlatList`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<SelectList\\n  isMulti={false} // Single select\\n  selectedValue=\\\"c\\\"\\n  onValueChange={(newValue, itemIndex) => {\\n    console.log(newValue, itemIndex)\\n  }}\\n>\\n  <SelectListItem\\n    label=\\\"Usage\\\"\\n    value=\\\"c\\\"\\n    // Props below are passed from `SelectList`, so it is not necessary to pass them here\\n    // isSelected\\n    // onSelect\\n    // index\\n  />\\n</SelectList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <SelectList isMulti={false} // Single select\n      selectedValue=\"c\" onValueChange={(newValue, itemIndex) => {\n        console.log(newValue, itemIndex);\n      }} mdxType=\"SelectList\">\n    <SelectListItem label=\"Usage\" value=\"c\" // Props below are passed from `SelectList`, so it is not necessary to pass them here\n        // isSelected\n        // onSelect\n        // index\n        mdxType=\"SelectListItem\" />\n  </SelectList>\n    </Playground>\n    <h3 {...{\n      \"id\": \"multi-select\"\n    }}>{`Multi select`}</h3>\n    <Playground __position={1} __code={'<State initial={{ selectedValue: [\\'js\\', \\'go\\'] }}>\\n  {({ state, setState }) => (\\n    <SelectList\\n      isMulti\\n      selectedValue={state.selectedValue}\\n      onValueChange={(newValue, itemIndex) => {\\n        setState({ selectedValue: newValue })\\n      }}\\n    >\\n      <SelectListItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <SelectListItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <SelectListItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <SelectListItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <SelectListItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <SelectListItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <SelectListItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <SelectListItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <SelectListItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <SelectListItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <SelectListItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <SelectListItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <SelectListItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <SelectListItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <SelectListItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <SelectListItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <SelectListItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <SelectListItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <SelectListItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </SelectList>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      SelectList,\n      SelectListItem,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        selectedValue: ['js', 'go']\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <SelectList isMulti selectedValue={state.selectedValue} onValueChange={(newValue, itemIndex) => {\n          setState({\n            selectedValue: newValue\n          });\n        }} mdxType=\"SelectList\">\n        <SelectListItem label=\"C\" value=\"c\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C#\" value=\"c#\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"C++\" value=\"c++\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"CSS\" value=\"css\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elixir\" value=\"elixir\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Elm\" value=\"elm\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Erlang\" value=\"erlang\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Go\" value=\"go\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Haskell\" value=\"haskell\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"HTML\" value=\"html\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Java\" value=\"java\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"JavaScript\" value=\"js\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Lua\" value=\"lua\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Python\" value=\"python\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"R\" value=\"r\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Ruby\" value=\"ruby\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Rust\" value=\"rust\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Switft\" value=\"swift\" mdxType=\"SelectListItem\" />\n        <SelectListItem label=\"Typescript\" value=\"typescript\" mdxType=\"SelectListItem\" />\n      </SelectList>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={SelectList} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListProps\n  extends Omit<\n    Omit<FlatListProps<SelectListItemBaseProps>, 'data'>,\n    'renderItem'\n  > {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  selectedValue: string | string[];\n  innerRef?: React.Ref<FlatList<SelectListItemBaseProps>>;\n  isMulti?: boolean;\n  onValueChange: (\n    itemValue: string | string[],\n    itemIndex: number,\n  ) => void | undefined;\n}\n\nconst SelectListBase = (props: SelectListProps): any => {\n  const {\n    selectedValue,\n    onValueChange,\n    isMulti,\n    children,\n    innerRef,\n    ...flatListProps\n  } = props;\n  const theme = useTheme();\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val !== itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n\n  return (\n    <FlatList\n      ref={innerRef}\n      keyExtractor={item => item.value}\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={data}\n      renderItem={({ item, index }) => {\n        const selectListItem = childrenArray[index];\n\n        const isSelected =\n          isMulti && Array.isArray(selectedValue)\n            ? selectedValue.some(selVal => selVal === item.value)\n            : selectedValue === item.value;\n\n        return React.cloneElement(selectListItem, {\n          index,\n          isSelected,\n          onSelect: handleOnPress,\n        });\n      }}\n      {...flatListProps}\n    />\n  );\n};\n\nexport const SelectList = React.forwardRef<\n  FlatList<SelectListItemBaseProps>,\n  SelectListProps\n>((props, ref) => {\n  return <SelectListBase {...props} innerRef={ref} />;\n});\n","import * as React from 'react';\n\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\n\nexport interface SelectListItemBaseProps {\n  index?: number;\n  isSelected?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  value: string;\n  label: string;\n}\n\nexport interface SelectListItemProps\n  extends SelectListItemBaseProps,\n    ListItemProps {\n  isDisabled?: boolean;\n}\n\nconst SelectListItemBase = (props: SelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    value,\n    ...listItemProps\n  } = props;\n\n  return (\n    <ListItem\n      onPress={e => {\n        e.preventDefault();\n        onSelect(value, index, isSelected);\n      }}\n      label={label}\n      rightIcon={\n        <Checkbox isInteractive={false} shape=\"circle\" isChecked={isSelected} />\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport const SelectListItem = React.memo(SelectListItemBase);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}