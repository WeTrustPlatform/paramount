{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutContext.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/LayoutProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.styles.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Visible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/Visible.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Grid/index.ts"],"names":["getColumnStyles","_ref","theme","hasGutter","gutterWidth","innerWrapperStyle","height","paddingLeft","paddingRight","outerWrapperStyle","minHeight","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Column","_LayoutContext","getColumnCount","columns","currentBreakpoint","matchedColumn","nearestColumn","currentBreakpointIndex","DESC_ORDER_BREAKPOINTS","indexOf","nearestBreakpoint","find","breakpoint","index","getNearestColumn","getProportion","columnCount","gridColumnCount","concat","splitColumnConfig","config","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetColumns","offsetLarge","offsetXlarge","Column","props","children","_props$hasGutter","getStyles","_objectWithoutProperties2","_React$useContext","useContext","LayoutContext","useTheme","_splitColumnConfig","_mergeStyles","mergeStyles","flexBasis","offsetColumnCount","marginLeft","createElement","View","style","_objectSpread2","getContainerStyles","maxWidth","containerWidth","width","flexDirection","justifyContent","_Container","Container","defaultLayout","breakpoints","ASC_ORDER_BREAKPOINTS","slice","reverse","createContext","merge","getCurrentBreakpoint","layout","windowScaledSize","Dimensions","get","LayoutProvider","layoutProps","layoutContext","_React$useState","useState","_React$useState2","_slicedToArray2","setCurrentBreakPoint","handleDimensionsChange","useCallback","useLayoutEffect","addEventListener","removeEventListener","Provider","value","getRowStyles","rowStyle","flexWrap","_Row","Row","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","_Box","_Typography","MDXLayout","MDXContent","components","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","CounterContainer","Props","Visible","Box","Text","largeUp","backgroundColor","align","color","smallDown","isMDXComponent","splitConfig","xsmallUp","xsmallDown","smallUp","mediumUp","mediumDown","largeDown","xlargeUp","visibleDowns","xlargeDown","visibleExacts","visibleUps","_splitConfig","isVisibleDown","filter","val","length","isVisibleUp","isVisibleExact","isVisible","Object","keys","forEach","key","defineProperty","exports","enumerable","_LayoutProvider","_Visible"],"mappings":"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","file":"static/js/15.9f9e3e8b.js","sourcesContent":["import { ViewStyle } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ColumnStylesProps {\n  hasGutter: boolean;\n  gutterWidth: number;\n}\nexport type GetColumnStyles = (\n  progressStylesProps: ColumnStylesProps,\n  theme: Theme,\n) => ColumnStyles;\n\nexport interface ColumnStyles {\n  outerWrapperStyle: Omit<ViewStyle, 'transform'>;\n  innerWrapperStyle: Omit<ViewStyle, 'transform'>;\n}\n\nexport const getColumnStyles: GetColumnStyles = (\n  { hasGutter, gutterWidth },\n  theme,\n) => {\n  return {\n    innerWrapperStyle: {\n      height: '100%',\n      paddingLeft: hasGutter ? gutterWidth : 0,\n      paddingRight: hasGutter ? gutterWidth : 0,\n    },\n    outerWrapperStyle: {\n      minHeight: 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetColumnStyles, getColumnStyles } from './Column.styles';\nimport {\n  ColumnCount,\n  DESC_ORDER_BREAKPOINTS,\n  FullBreakpoint,\n  LayoutContext,\n} from './LayoutContext';\n\ninterface ColumnStyles {\n  outerWrapperStyle: ViewStyle;\n  innerWrapperStyle: ViewStyle;\n}\n\nexport interface ColumnConfigBase {\n  xsmall?: ColumnCount;\n  small?: ColumnCount;\n  medium?: ColumnCount;\n  large?: ColumnCount;\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  offsetXsmall?: ColumnCount;\n  offsetSmall?: ColumnCount;\n  offsetMedium?: ColumnCount;\n  offsetLarge?: ColumnCount;\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig {\n  children?: React.ReactNode;\n  hasGutter?: boolean;\n  getStyles?: ReplaceReturnType<GetColumnStyles, DeepPartial<ColumnStyles>>;\n}\n\n// Find nearest matching column count\n// when currentBreakpoint = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentBreakpoint = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentBreakpoint: FullBreakpoint,\n) => {\n  const currentBreakpointIndex = DESC_ORDER_BREAKPOINTS.indexOf(\n    currentBreakpoint,\n  );\n\n  const nearestBreakpoint = DESC_ORDER_BREAKPOINTS.find((breakpoint, index) => {\n    if (currentBreakpointIndex >= index) return false;\n\n    return !!columns[breakpoint];\n  });\n\n  return nearestBreakpoint ? columns[nearestBreakpoint] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentBreakpoint: FullBreakpoint,\n) => {\n  const matchedColumn = columns[currentBreakpoint];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentBreakpoint);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n\nexport const Column = (props: ColumnProps) => {\n  const { children, hasGutter = true, getStyles, ...config } = props;\n  const { currentBreakpoint, gutterWidth, gridColumnCount } = React.useContext(\n    LayoutContext,\n  );\n  const theme = useTheme();\n  const { columns, offsetColumns } = splitColumnConfig(config);\n  const { outerWrapperStyle, innerWrapperStyle } = mergeStyles(\n    getColumnStyles,\n    getStyles,\n  )({ hasGutter, gutterWidth }, theme);\n\n  const columnCount = getColumnCount(columns, currentBreakpoint);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentBreakpoint);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return (\n    <View\n      style={{\n        flexBasis,\n        marginLeft,\n        ...outerWrapperStyle,\n      }}\n    >\n      <View style={innerWrapperStyle}>{children}</View>\n    </View>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ContainerStylesProps {\n  maxWidth: number;\n  containerWidth: number;\n}\nexport type GetContainerStyles = (\n  progressStylesProps: ContainerStylesProps,\n  theme: Theme,\n) => ContainerStyles;\n\nexport interface ContainerStyles {\n  outerWrapperStyle: ViewStyle;\n  innerWrapperStyle: ViewStyle;\n}\n\nexport const getContainerStyles: GetContainerStyles = (\n  { maxWidth, containerWidth },\n  theme,\n) => {\n  return {\n    innerWrapperStyle: {\n      maxWidth: maxWidth || containerWidth,\n      width: '100%',\n    },\n    outerWrapperStyle: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  ContainerStyles,\n  GetContainerStyles,\n  getContainerStyles,\n} from './Container.styles';\nimport { LayoutContext } from './LayoutContext';\n\nexport interface ContainerProps {\n  children: React.ReactNode;\n  maxWidth?: number;\n  getStyles?: ReplaceReturnType<\n    GetContainerStyles,\n    DeepPartial<ContainerStyles>\n  >;\n}\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, getStyles, maxWidth } = props;\n  const { maxWidth: containerWidth } = React.useContext(LayoutContext);\n  const theme = useTheme();\n\n  const { outerWrapperStyle, innerWrapperStyle } = mergeStyles(\n    getContainerStyles,\n    getStyles,\n  )({ maxWidth, containerWidth }, theme);\n\n  return (\n    <View style={outerWrapperStyle}>\n      <View style={innerWrapperStyle}>{children}</View>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nexport interface Breakpoints {\n  small: number;\n  medium: number;\n  large: number;\n  xlarge: number;\n}\n\nexport interface FullBreakpoints extends Breakpoints {\n  xsmall: number;\n}\n\nexport type ColumnCount =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport type Breakpoint = keyof Breakpoints;\nexport type FullBreakpoint = keyof FullBreakpoints;\n\nexport interface LayoutInterface {\n  breakpoints: Breakpoints;\n  maxWidth: number;\n  currentBreakpoint: FullBreakpoint;\n  gridColumnCount: number;\n  gutterWidth: number;\n}\n\nexport const defaultLayout: LayoutInterface = {\n  breakpoints: {\n    small: 480,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1280,\n  },\n  currentBreakpoint: 'small',\n  gridColumnCount: 12,\n  gutterWidth: 15,\n  maxWidth: 1440,\n};\n\nexport const ASC_ORDER_BREAKPOINTS: Array<keyof FullBreakpoints> = [\n  'xsmall',\n  'small',\n  'medium',\n  'large',\n  'xlarge',\n];\n\nexport const DESC_ORDER_BREAKPOINTS: Array<\n  keyof FullBreakpoints\n> = ASC_ORDER_BREAKPOINTS.slice(0).reverse();\n\nexport const LayoutContext = React.createContext(defaultLayout);\n","import * as merge from 'deepmerge';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport {\n  Breakpoint,\n  DESC_ORDER_BREAKPOINTS,\n  LayoutContext,\n  LayoutInterface,\n} from './LayoutContext';\n\nexport interface LayoutProviderProps {\n  children: React.ReactNode;\n  layout?: Partial<LayoutInterface>;\n}\n\nexport const getCurrentBreakpoint = (layout: LayoutInterface) => {\n  const { breakpoints } = layout;\n  const windowScaledSize = Dimensions.get('window');\n\n  const currentBreakpoint = DESC_ORDER_BREAKPOINTS.find(breakpoint => {\n    if (breakpoint === 'xsmall' && windowScaledSize.width < breakpoints.small) {\n      return true;\n    }\n\n    const width = breakpoints[breakpoint as Breakpoint];\n    if (windowScaledSize.width >= width) return true;\n\n    return false;\n  });\n\n  return currentBreakpoint || 'xsmall';\n};\n\nexport const LayoutProvider = (props: LayoutProviderProps) => {\n  const { children, layout: layoutProps } = props;\n  const layoutContext = React.useContext(LayoutContext);\n  const layout = layoutProps\n    ? merge(layoutContext, layoutProps)\n    : layoutContext;\n\n  const [currentBreakpoint, setCurrentBreakPoint] = React.useState(\n    getCurrentBreakpoint(layout),\n  );\n\n  const handleDimensionsChange = React.useCallback(() => {\n    setCurrentBreakPoint(getCurrentBreakpoint(layout));\n  }, []);\n\n  React.useLayoutEffect(() => {\n    Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () =>\n      Dimensions.removeEventListener('change', handleDimensionsChange);\n  }, []);\n\n  return (\n    <LayoutContext.Provider value={{ ...layout, currentBreakpoint }}>\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type GetRowStyles = (theme: Theme) => RowStyles;\n\nexport interface RowStyles {\n  rowStyle: ViewStyle;\n}\n\nexport const getRowStyles: GetRowStyles = theme => {\n  return {\n    rowStyle: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetRowStyles, getRowStyles, RowStyles } from './Row.styles';\n\nexport interface RowProps {\n  children: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetRowStyles, DeepPartial<RowStyles>>;\n}\n\nexport const Row = (props: RowProps) => {\n  const { children, getStyles } = props;\n  const theme = useTheme();\n\n  const { rowStyle } = mergeStyles(getRowStyles, getStyles)(theme);\n\n  return <View style={rowStyle}>{children}</View>;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { Visible, LayoutProvider } from '.';\nimport { Box } from '../Box';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"visible\"\n    }}>{`Visible`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Visible largeUp>\\n    <Box backgroundColor=\\\"#67c6bb\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Large Up\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible medium>\\n    <Box backgroundColor=\\\"#1ca5F7\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Medium\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible smallDown>\\n    <Box backgroundColor=\\\"#d26557\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Small Down\\n      </Text>\\n    </Box>\\n  </Visible>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      Visible,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Visible largeUp mdxType=\"Visible\">\n      <Box backgroundColor=\"#67c6bb\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Large Up\n        </Text>\n      </Box>\n    </Visible>\n    <Visible medium mdxType=\"Visible\">\n      <Box backgroundColor=\"#1ca5F7\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Medium\n        </Text>\n      </Box>\n    </Visible>\n    <Visible smallDown mdxType=\"Visible\">\n      <Box backgroundColor=\"#d26557\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Small Down\n        </Text>\n      </Box>\n    </Visible>\n  </LayoutProvider>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport {\n  ASC_ORDER_BREAKPOINTS,\n  FullBreakpoint,\n  LayoutContext,\n} from './LayoutContext';\n\nexport interface VisibleConfig {\n  xsmallUp: boolean;\n  xsmall: boolean;\n  xsmallDown: boolean;\n  smallUp: boolean;\n  small: boolean;\n  smallDown: boolean;\n  mediumUp: boolean;\n  medium: boolean;\n  mediumDown: boolean;\n  largeUp: boolean;\n  large: boolean;\n  largeDown: boolean;\n  xlargeUp: boolean;\n  xlarge: boolean;\n  xlargeDown: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children: React.ReactElement;\n}\n\nexport const splitConfig = (config: VisibleConfig) => {\n  const {\n    xsmallUp,\n    xsmall,\n    xsmallDown,\n    smallUp,\n    small,\n    smallDown,\n    mediumUp,\n    medium,\n    mediumDown,\n    largeUp,\n    large,\n    largeDown,\n    xlargeUp,\n    xlarge,\n    xlargeDown,\n  } = config;\n\n  return {\n    visibleDowns: [xsmallDown, smallDown, mediumDown, largeDown, xlargeDown],\n    visibleExacts: [xsmall, small, medium, large, xlarge],\n    visibleUps: [xsmallUp, smallUp, mediumUp, largeUp, xlargeUp],\n  };\n};\n\nconst isVisible = (\n  config: VisibleConfig,\n  currentBreakpoint: FullBreakpoint,\n) => {\n  const { visibleDowns, visibleUps, visibleExacts } = splitConfig(config);\n\n  const currentBreakpointIndex = ASC_ORDER_BREAKPOINTS.indexOf(\n    currentBreakpoint,\n  );\n  const isVisibleDown =\n    visibleDowns.filter(\n      (val, index) => index >= currentBreakpointIndex && !!val,\n    ).length > 0;\n\n  const isVisibleUp =\n    visibleUps.filter((val, index) => index <= currentBreakpointIndex && !!val)\n      .length > 0;\n\n  const isVisibleExact = !!visibleExacts.find(\n    (val, index) => index === currentBreakpointIndex && !!val,\n  );\n\n  return isVisibleDown || isVisibleUp || isVisibleExact;\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentBreakpoint } = React.useContext(LayoutContext);\n\n  if (isVisible(config, currentBreakpoint)) return children;\n\n  return null;\n};\n","export * from './Column';\nexport * from './Container';\nexport * from './LayoutContext';\nexport * from './LayoutProvider';\nexport * from './Row';\nexport * from './Visible';\n"],"sourceRoot":""}