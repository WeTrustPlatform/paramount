{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","marginLeft","marginRight","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","minHeight","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Fragment","Toggle","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","handleSet","on","toggle","set","initialMeasurements","pageX","pageY","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","onMeasure","ref","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","handleLayout","e","nativeEvent","handleResize","useEffect","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","isRenderProp","useRef","_useMeasure","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Popover","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","Positioner","_props$isVisible","_props$position","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","isPositionerMeasurementsMeasured","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","StyledRoot","Root","rootProps","Target","targetProps","_props$isPositionerMe","viewMeasureProps","zIndex","restProps","StyledContent","Content","contentProps","Positioner_Positioner","Popover_jsxFileName","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"smCA8BO,IAAMA,EAAa,SAACC,EAA4BC,GAA7B,MACR,kBAATD,EAAoBA,EAAOC,EAAMC,QAAQF,4LAE3C,IAAMG,EAAU,SAACC,GAAwB,IAAAC,EAM1CD,EAJFJ,YAF4C,IAAAK,EAErC,SAFqCA,EAAAC,EAM1CF,EAHFG,mBAH4C,IAAAD,EAG9B,WAH8BA,EAI5CE,EAEEJ,EAFFI,MACGC,EALyCC,OAAAC,EAAA,EAAAD,CAM1CN,EAN0C,gCAOxCH,EAAQW,cAEd,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,EAAA,EAAAP,CAAA,CACEF,MAAO,CACW,aAAhBD,EACI,CAAEW,OAAQnB,EAAWC,EAAMC,IAC3B,CAAEkB,MAAOpB,EAAWC,EAAMC,IAC9BmB,YAAShB,EAAOI,GAChBY,YAAShB,EAAOiB,IAAIpB,EAAO,8BAEzBQ,EARN,CAAAa,SAAA,CAAAC,2FAAAC,WAAA,6cCXJ,IAAMC,EAOF,CACFC,gBAAiB,SAACC,EAAiC1B,GAEjD,OAAIA,EAAM2B,OAAOC,WAAWF,GAEnB,CAAED,gBAAiBzB,EAAM2B,OAAOC,WAAWF,IAG7C,CAAED,gBAAiBC,IAE5BG,UAAW,SAACA,EAAmB7B,GAApB,OAAqCA,EAAM8B,WAAWD,IAEjEE,MAAO,SAACA,EAAuB/B,GAAxB,OAAyCA,EAAMgC,gBAAgBD,IAEtEE,MAAO,SAAClC,EAA4BC,GAA7B,MAA+C,CACpDkC,QAASpC,EAAWC,EAAMC,KAE5BmC,YAAa,SAACpC,EAA4BC,GAA7B,MAA+C,CAC1DoC,cAAetC,EAAWC,EAAMC,KAElCqC,SAAU,SAACtC,EAA4BC,GAA7B,MAA+C,CACvDsC,WAAYxC,EAAWC,EAAMC,KAE/BuC,gBAAiB,SAACxC,EAA4BC,GAA7B,MAA+C,CAC9DwC,kBAAmB1C,EAAWC,EAAMC,KAEtCyC,UAAW,SAAC1C,EAA4BC,GAA7B,MAA+C,CACxD0C,YAAa5C,EAAWC,EAAMC,KAEhC2C,WAAY,SAAC5C,EAA4BC,GAA7B,MAA+C,CACzD4C,aAAc9C,EAAWC,EAAMC,KAEjC6C,WAAY,SAAC9C,EAA4BC,GAA7B,MAA+C,CACzD8C,aAAchD,EAAWC,EAAMC,KAEjC+C,SAAU,SAAChD,EAA4BC,GAA7B,MAA+C,CACvDgD,WAAYlD,EAAWC,EAAMC,KAE/BiD,cAAe,SAAClD,EAA4BC,GAA7B,MAA+C,CAC5DkD,gBAAiBpD,EAAWC,EAAMC,MAIzBmD,EAAM,SAAChD,GAAoB,IAC9BiD,EAAoCjD,EAApCiD,SAAUC,EAA0BlD,EAA1BkD,OAAWC,EADS7C,OAAAC,EAAA,EAAAD,CACMN,EADN,uBAEhCH,EAAQW,cACR4C,EAAoB,GACpBC,EAAwB,GAE9B,IAAK,IAAMC,KAAQH,EACjB,GAAIG,EAAM,CACR,IAAMC,EAAUlC,EAASiC,GAEzB,GAAIC,EAAS,CAEX,IAAMnD,EAAQmD,EAAQJ,EAAWG,GAAkBzD,GAEnDuD,EAAkBI,KAAKpD,QAGvBiD,EAAWC,GAA2BH,EAAWG,GAKvD,OACE7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsC,OAAQA,EAAQ9C,MAAO,CAACiD,EAAYD,GAA1ClC,SAAA,CAAAC,mFAAAC,WAAA,MACG6B,wvCCxGDQ,EAAU,SAACC,EAAgBC,GAAjB,OAA4CD,GAE/CE,EAAiB,WAAM,IAAAC,EACbC,IAAMC,WAAWN,GAAS,GAAtCO,EADyB1D,OAAA2D,EAAA,EAAA3D,CAAAuD,EAAA,MAIlC,OAAOC,IAAMI,YAAY,WACvBF,EAAS,OACR,CAACA,yRCHAG,EAAeC,mBAASxD,2QAOvB,IAAMyD,EAAO,SAACrE,GACnB,IAAMH,EAAQW,cAD0BP,EAEiBD,EAAjDJ,YAFgC,IAAAK,EAEzB,GAFyBA,EAAAqE,EAEiBtE,EAAtCuB,aAFqB,IAAA+C,EAEbzE,EAAM2B,OAAO+C,KAAKC,QAFLF,EAGlCG,EAAcb,IAEdc,EAAQC,mBAAS,EAAG,CACxBC,OAAQ,CAAEC,SAAU,KACpBC,KAAM,CAAEC,QAAS,GACjBC,OAAQP,EACRQ,OAAO,EACPC,GAAE,eAAAC,EAAA7E,OAAA8E,EAAA,EAAA9E,CAAA+E,EAAA3E,EAAA4E,KAAE,SAAAC,EAAMC,GAAN,OAAAH,EAAA3E,EAAA+E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAEIA,EAAK,CAAET,QAAS,IAFpB,cAAAW,EAAAF,KAAA,EAIIA,EAAK,CAAET,QAAS,IAJpB,wBAAAW,EAAAE,SAAAL,MAAF,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,KAQJ,OACEvF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACER,MAAO,CACL6F,WAAY,SACZC,cAAe,MACfC,eAAgB,UAJpBjF,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KAOGsD,EAAM2B,IAAI,SAACjG,EAAOkG,GAAR,OACT7F,EAAAC,EAAAC,cAACwD,EAAD,CACEoC,IAAKD,EAELlG,MAAO,CACLkB,gBAAiBC,EACjBiF,aAAc,IACd1F,OAAQlB,EACR6G,WAAY,EACZC,YAAa,EACb3B,QAAS3E,EAAM2E,QACfhE,MAAOnB,GAVXsB,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,25BC2BD,IAAMuF,EAAS,SAAC3G,GAAuB,IAAA4G,EAaxC5G,EAXF6G,kBAF0C,IAAAD,EAE7B,UAF6BA,EAAAtC,EAaxCtE,EAVFuB,aAH0C,IAAA+C,EAGlC,UAHkCA,EAAAwC,EAaxC9G,EATF+G,kBAJ0C,IAAAD,KAAAE,EAaxChH,EARFiH,iBAL0C,IAAAD,KAAA/G,EAaxCD,EAPFJ,YAN0C,IAAAK,EAMnC,SANmCA,EAAAiH,EAaxClH,EANFmH,eAP0C,IAAAD,EAOhC,aAPgCA,EAU1CE,EAGEpH,EAHFoH,MACAlE,EAEElD,EAFFkD,OAX0CmE,EAaxCrH,EADFsH,iBAZ0C,IAAAD,EAY9B,GAZ8BA,EActCxH,EAAQW,cAd8B+G,EAgBRC,YAClCC,EACAzH,EACA,CACE6G,aACAtF,QACAwF,aACAE,YACArH,OACAuH,UACAjE,UAEFjC,IAAIpB,EAAO,8BACXyH,EAAUI,WA7BgCC,EAAArH,OAAA2D,EAAA,EAAA3D,CAAAiH,EAAA,GAgBrCG,EAhBqCC,EAAA,GAgB1BC,EAhB0BD,EAAA,GAAAE,EA+BhBL,YAC1BM,EACA9H,EACA,CACE6G,aACAtF,QACAwF,aACAnH,OACAwH,SAEFnG,IAAIpB,EAAO,0BACXyH,EAAUS,OA1CgCC,EAAA1H,OAAA2D,EAAA,EAAA3D,CAAAuH,EAAA,GA+BrCE,EA/BqCC,EAAA,GA+B9BC,EA/B8BD,EAAA,GAAAE,EA4CZV,YAC9BW,EACAnI,EACA,CACE6G,aACAtF,SAEFN,IAAIpB,EAAO,4BACXyH,EAAUc,SApDgCC,EAAA/H,OAAA2D,EAAA,EAAA3D,CAAA4H,EAAA,GA4CrCE,EA5CqCC,EAAA,GA4C5BC,EA5C4BD,EAAA,GAAAE,EAsDNf,YACpCgB,EACAxI,EACA,CACE6G,aACAtF,QACAwF,aACAE,YACArH,QAEFqB,IAAIpB,EAAO,+BACXyH,EAAUmB,YAjEgCC,EAAApI,OAAA2D,EAAA,EAAA3D,CAAAiI,EAAA,GAsDrCE,EAtDqCC,EAAA,GAsDzBC,EAtDyBD,EAAA,GAAAE,EAmERpB,YAClCgB,EACAxI,EACA,CACE6G,aACAtF,QACAwF,aACAE,YACArH,QAEFqB,IAAIpB,EAAO,8BACXyH,EAAUuB,WA9EgCC,EAAAxI,OAAA2D,EAAA,EAAA3D,CAAAsI,EAAA,GAmErCC,EAnEqCC,EAAA,GAmE1BC,EAnE0BD,EAAA,GAiF5C,OACErI,EAAAC,EAAAC,cAAC+G,EAADpH,OAAAO,EAAA,EAAAP,CAAA,GAAesH,EAAf,CAAA1G,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,OACEX,EAAAC,EAAAC,cAAC8H,EAADnI,OAAAO,EAAA,EAAAP,CAAA,GAAgBqI,EAAhB,CAAAzH,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,QACC6F,EAAYxG,EAAAC,EAAAC,cAACyH,EAAD9H,OAAAO,EAAA,EAAAP,CAAA,GAAagI,EAAb,CAAApH,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,QAAgCX,EAAAC,EAAAC,cAACoH,EAADzH,OAAAO,EAAA,EAAAP,CAAA,GAAW2H,EAAX,CAAA/G,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,QAC7CX,EAAAC,EAAAC,cAACkI,EAADvI,OAAAO,EAAA,EAAAP,CAAA,GAAeyI,EAAf,CAAA7H,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,oNAiBN,IA2EMqG,EAAkB,SAACzH,GAA0B,IAE/C6G,EAQE7G,EARF6G,WACAtF,EAOEvB,EAPFuB,MACAwF,EAME/G,EANF+G,WACAE,EAKEjH,EALFiH,UACArH,EAIEI,EAJFJ,KACAqD,EAGEjD,EAHFiD,SACA7C,EAEEJ,EAFFI,MACGwH,EAT4CtH,OAAAC,EAAA,EAAAD,CAU7CN,EAV6C,2EAW3CH,EAAQW,cACRyI,EAvFqB,SAC3BpJ,EACAoH,GAEA,MAAO,CACLiC,QAAS,CACPC,QAAS,CACP7H,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,SAE3CC,OAAQ,CACN/H,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,SAE3C5E,QAAS,CACPlD,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,SAE3CE,UAAW,CACThI,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,UAG7C5E,QAAS,CACP2E,QAAS,CACP7H,gBAAiB2F,EACbpH,EAAM2B,OAAOC,WAAW8H,UACxB1J,EAAM2B,OAAOgI,OAAb,SAENH,OAAQ,CACN/H,gBAAiB2F,EACbpH,EAAM2B,OAAOC,WAAWgI,YACxB5J,EAAM2B,OAAOgI,OAAOH,QAE1B7E,QAAS,CACPlD,gBAAiB2F,EACbpH,EAAM2B,OAAOC,WAAWiI,aACxB7J,EAAM2B,OAAOgI,OAAOhF,SAE1B8E,UAAW,CACThI,gBAAiB2F,EACbpH,EAAM2B,OAAOC,WAAWkI,eACxB9J,EAAM2B,OAAOgI,OAAOF,YAI5BM,QAAS,CACPT,QAAS,CACP7H,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,QACzCS,YAAahK,EAAM2B,OAAO+C,KAAb,QACbuF,YAAa,GAEfT,OAAQ,CACN/H,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,QACzCS,YAAahK,EAAM2B,OAAOuI,OAAOV,OACjCS,YAAa,GAEftF,QAAS,CACPlD,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,QACzCS,YAAahK,EAAM2B,OAAOuI,OAAOvF,QACjCsF,YAAa,GAEfR,UAAW,CACThI,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,QACzCS,YAAahK,EAAM2B,OAAOuI,OAAOT,UACjCQ,YAAa,KA0BOE,CAAqBnK,EAAOoH,GAZLgD,EAccC,YAC7DtK,GAEE,CACE4G,aAAc3G,EAAMsK,oBAAoBvK,GACxCwK,UAAWvK,EAAMwK,eAAezK,GAChC2C,YAAa1C,EAAMyK,gBAAgB1K,GAAQ,EAC3C6C,aAAc5C,EAAMyK,gBAAgB1K,GAAQ,GAE9C,CACE4G,aAAc3G,EAAMsK,oBAAoBI,OACxCH,UAAWxK,EACX2C,YAAa1C,EAAMyK,gBAAgBC,OAAS,EAC5C9H,aAAc5C,EAAMyK,gBAAgBC,OAAS,GAb3C/D,EAdyCyD,EAczCzD,aAAc4D,EAd2BH,EAc3BG,UAAW7H,EAdgB0H,EAchB1H,YAAaE,EAdGwH,EAcHxH,aAgB9C,OACEhC,EAAAC,EAAAC,cAAC6J,EAAA,EAADlK,OAAAO,EAAA,EAAAP,CAAA,CACEmK,kBAAkB,SAClBC,YAAa3D,IAAcE,GAC3B7G,MAAO,CAACE,OAAAqK,EAAA,EAAArK,CAAA,CAEJkG,eACA4D,YACA7H,cACAE,eACAyD,cAAe,MACfD,WAAY,SACZE,eAAgB,UACb8C,EAAkBpC,GAAYtF,GAC7BwF,GAAc,CAChBzF,gBAAiBzB,EAAM2B,OAAOgI,OAAOkB,WAGzCtK,IAEEwH,EAnBN,CAAA1G,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,OAqBG6B,IAWD2H,EAAqB,SAAC/K,GAC1B,MAAO,CACLqJ,QAAS,CACPC,QAAStJ,EAAM2B,OAAO+C,KAAb,QACT8E,OAAQxJ,EAAM2B,OAAO+C,KAAK8E,OAC1B7E,QAAS3E,EAAM2B,OAAO+C,KAAKC,QAC3B8E,UAAWzJ,EAAM2B,OAAO+C,KAAK+E,WAE/B9E,QAAS,CACP2E,QAAStJ,EAAM2B,OAAOgI,OAAOqB,YAC7BxB,OAAQxJ,EAAM2B,OAAOgI,OAAOsB,WAC5BtG,QAAS3E,EAAM2B,OAAOgI,OAAOuB,YAC7BzB,UAAWzJ,EAAM2B,OAAOgI,OAAOwB,eAGjCpB,QAAS,CACPT,QAAStJ,EAAM2B,OAAO+C,KAAb,QACT8E,OAAQxJ,EAAM2B,OAAO+C,KAAK8E,OAC1B7E,QAAS3E,EAAM2B,OAAO+C,KAAKC,QAC3B8E,UAAWzJ,EAAM2B,OAAO+C,KAAK+E,aAa7BxB,EAAc,SAAC9H,GAAsB,IAEvC6G,EAOE7G,EAPF6G,WACAtF,EAMEvB,EANFuB,MACAwF,EAKE/G,EALF+G,WACAnH,EAIEI,EAJFJ,KACAwH,EAGEpH,EAHFoH,MACAhH,EAEEJ,EAFFI,MACG6K,EARoC3K,OAAAC,EAAA,EAAAD,CASrCN,EATqC,4DAUnCH,EAAQW,cAER0K,EAAWhB,YAActK,GAC3BC,EAAMsL,UAAUvL,GAChBC,EAAMsL,UAAUZ,OAEpB,OAAKnD,EAGH3G,EAAAC,EAAAC,cAACyK,EAAA,EAAD9K,OAAAO,EAAA,EAAAP,CAAA,CACE+K,OAAO,OACPjL,MAAO,CAACE,OAAAqK,EAAA,EAAArK,CAAA,CAEJ2F,WAAY,SACZ1E,MAAOwF,EACHlH,EAAM2B,OAAO+C,KAAK+G,MAClBV,EAAmB/K,GAAOgH,GAAYtF,GAC1CgK,QAAS,OACTC,WAAY,MACZrF,eAAgB,SAChBsF,UAAW,SACXpJ,kBAAmB,GAChB6I,GAELlK,YAAShB,EAAOI,KAEd6K,EAjBN,CAAA/J,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,OAmBGgG,GAtBc,MAgCfe,EAAgB,SAACnI,GAAwB,IACrC6G,EAAsB7G,EAAtB6G,WAAYtF,EAAUvB,EAAVuB,MACd1B,EAAQW,cAEd,OAAOC,EAAAC,EAAAC,cAAC+K,EAAD,CAAMnK,MAAOqJ,EAAmB/K,GAAOgH,GAAYtF,GAAnDL,SAAA,CAAAC,SAAA6H,EAAA5H,WAAA,QAYHoH,EAAa,SAACxI,GAClB,OAAOS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiL,SAAA,q0BCxYF,IAAMC,EAAS,SAAC5L,GAAuB,IACpCiD,EAA8BjD,EAA9BiD,SADoC4I,EACN7L,EAApB8L,eAD0B,IAAAD,KAAAE,EAEpBjI,IAAMkI,SAASF,GAFKG,EAAA3L,OAAA4L,EAAA,EAAA5L,CAAAyL,EAAA,GAErCI,EAFqCF,EAAA,GAE/BG,EAF+BH,EAAA,GAItCI,EAAevI,IAAMI,YAAY,WACrCkI,GAASD,IACR,CAACA,IAEEG,EAAYxI,IAAMI,YAAY,SAACqI,GACnCH,EAAQG,IACP,IAEH,OAAOtJ,EAAS,CAAEsJ,GAAIJ,EAAMK,OAAQH,EAAcI,IAAKH,gnDCFlD,IAAMI,EAAsB,CACjC5L,OAAQ,EACR6L,MAAO,EACPC,MAAO,EACP7L,MAAO,EACP8L,EAAG,EACHC,EAAG,iNAGL,IAAMC,EAAc,SAACH,GAGnB,MAAuB,QAAhBI,IAASC,GAAeL,EAAQM,OAAOC,QAAUP,GAM7CQ,EAAa,SAACpN,GAA2B,IAC5CqN,EAAmBrN,EAAnBqN,UAAWC,EAAQtN,EAARsN,IADiCvB,EAEZjI,IAAMkI,SAASU,GAFHT,EAAA3L,OAAA2D,EAAA,EAAA3D,CAAAyL,EAAA,GAE7CwB,EAF6CtB,EAAA,GAE/BuB,EAF+BvB,EAAA,GAI9CwB,EAAgB3J,IAAMI,YAC1B,SAACwJ,GACC,IAAMC,EAASC,YAAeN,EAAIO,SAC5BC,EAAmBP,EAErBI,GACFI,IAAUC,QAAQL,EAAQ,SAACd,EAAGC,EAAG/L,EAAOD,EAAQ6L,EAAOC,GACrD,IAAMqB,EAAe3N,OAAAqK,EAAA,EAAArK,CAAA,GAChBwN,EACAJ,EAFgB,CAGnBf,QACAC,MAAOG,EAAYH,KAGrBY,EAAgBS,GAEZZ,GAAWA,EAAUY,MAI/B,CAACV,EAAcF,EAAWC,IAGtBY,EAAepK,IAAMI,YACzB,SAACiK,GAGC,IAAMT,EAASS,EAAEC,YAAYV,OAC7BD,EAAcC,IAEhB,CAACD,IAGGY,EAAevK,IAAMI,YAAY,WACrCuJ,KACC,CAACA,IAQJ,OANA3J,IAAMwK,UAAU,WAGd,OAFAC,IAAWC,iBAAiB,SAAUH,GAE/B,kBAAME,IAAWE,oBAAoB,SAAUJ,KACrD,CAACA,EAAcd,IAEX,CACLA,eACAmB,SAAUR,EACVb,UAAWI,41BC3ER,IAAMkB,EAAc,SAAC3O,GAA4B,IAC9CqN,EAAsCrN,EAAtCqN,UAAWpK,EAA2BjD,EAA3BiD,SAAa5C,EADsBC,OAAAC,EAAA,EAAAD,CACRN,EADQ,0BAEhD4O,EAAmC,oBAAb3L,EACtBqK,EAAMxJ,IAAM+K,OAAa,MAHuBC,EAInB1B,EAAW,CAAEC,YAAWC,QAAnDC,EAJ8CuB,EAI9CvB,aAAcmB,EAJgCI,EAIhCJ,SAEtB,OACEjO,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,EAAA,EAAAP,CAAA,CAAMgN,IAAKA,EAAKoB,SAAUA,GAAcrO,EAAxC,CAAAa,SAAA,CAAAC,+FAAAC,WAAA,MAIGwN,EAAe3L,EAASsK,GAAgBtK,28BCfzC8L,EAAc,GAGdC,EAAY,UACH,SAASC,EAAThF,GAGZ,IAFDiF,EAECjF,EAFDiF,WACGlP,EACFM,OAAA6O,EAAA,EAAA7O,CAAA2J,EAAA,gBACD,OAAO3J,OAAA8O,EAAA,EAAA9O,CAAC0O,EAAD1O,OAAA+O,EAAA,EAAA/O,CAAA,GAAeyO,EAAiB/O,EAAhC,CAAuCkP,WAAYA,EAAYI,QAAQ,YAAvEpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,MAGLd,OAAA8O,EAAA,EAAA9O,CAAA,KAAAA,OAAA+O,EAAA,EAAA/O,CAAQ,CACNiP,GAAM,WADR,CAAArO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,iBAGAd,OAAA8O,EAAA,EAAA9O,CAAA,KAAAY,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,iBAAgBd,OAAA8O,EAAA,EAAA9O,CAAA,cAAYkP,WAAW,IAAvBtO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,oBAChBd,OAAA8O,EAAA,EAAA9O,CAAA,KAAAA,OAAA+O,EAAA,EAAA/O,CAAQ,CACNiP,GAAM,SADR,CAAArO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,eAGAd,OAAA8O,EAAA,EAAA9O,CAACmP,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,ivBAA4vBC,QAAS,CACtyB5P,MAAO+F,KAAOA,KAAK/F,MAAQA,EAC3B6P,eACAC,UACA9M,QACA2D,WACAoJ,YACAnE,WACAR,UACCkE,QAAQ,aATXpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KAUFd,OAAA8O,EAAA,EAAA9O,CAAC0P,EAAA,EAAD,CAAKlP,OAAQ,IAAKwO,QAAQ,MAA1BpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KACEd,OAAA8O,EAAA,EAAA9O,CAAC2P,EAAA,EAAD,CAAQX,QAAQ,SAAhBpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KACG,SAAA8O,GAAA,IACK3D,EADL2D,EACK3D,GACAC,EAFL0D,EAEK1D,OAFL,OAGSlM,OAAA8O,EAAA,EAAA9O,CAAC6P,EAAA,EAAD,CAASC,UAAW7D,EAAI8D,SAAS,SAASjH,QAAS9I,OAAA8O,EAAA,EAAA9O,CAAC0P,EAAA,EAAD,CAAKjP,MAAO,IAAKD,OAAQ,IAAKwO,QAAQ,MAAtCpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KACrDd,OAAA8O,EAAA,EAAA9O,CAACgQ,EAAA,EAAD,CAAMhB,QAAQ,OAAdpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,2KAKAd,OAAA8O,EAAA,EAAA9O,CAACiQ,EAAA,EAAD,CAAQ1J,WAAW,UAAUtF,MAAM,SAAS4F,QAASqF,EAAQpF,MAAM,gBAAgBkI,QAAQ,SAA3FpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,OACMkO,QAAQ,UAPZpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,KAQNd,OAAA8O,EAAA,EAAA9O,CAACiQ,EAAA,EAAD,CAAQpJ,QAASqF,EAAQpF,MAAM,eAAekI,QAAQ,SAAtDpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,WAKNd,OAAA8O,EAAA,EAAA9O,CAAA,KAAAA,OAAA+O,EAAA,EAAA/O,CAAQ,CACNiP,GAAM,SADR,CAAArO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,eAGAd,OAAA8O,EAAA,EAAA9O,CAACmP,EAAA,EAAD,CAAOe,GAAIT,IAAST,QAAQ,QAA5BpO,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,+LAIJ6N,EAAWwB,gBAAiB,g1BCxDfC,EAAW,CACtBC,IAAK,MACLC,SAAU,WACVC,UAAW,YAEXC,OAAQ,SACRC,YAAa,cACbC,aAAc,eAEdC,KAAM,OACNC,MAAO,s+CAkDT,IA6DMxE,EAAsB,CAC1B5L,OAAQ,EACR6L,MAAO,EACPC,MAAO,EACP7L,MAAO,EACP8L,EAAG,EACHC,EAAG,GAGQqE,EAAa,SAACnR,GAA2B,IAElDiD,EAKEjD,EALFiD,SACAmG,EAIEpJ,EAJFoJ,QAHkDgI,EAOhDpR,EAHFoQ,iBAJkD,IAAAgB,KAAAC,EAOhDrR,EAFFqQ,gBALkD,IAAAgB,EAKvCX,EAASI,OAL8BO,EAAAhK,EAOhDrH,EADFsH,iBANkD,IAAAD,EAMtC,GANsCA,EAQ9CxH,EAAQW,cARsCuL,EAUAjI,IAAMkI,SACxDU,GAXkDT,EAAA3L,OAAA2D,EAAA,EAAA3D,CAAAyL,EAAA,GAU7CuF,EAV6CrF,EAAA,GAUzBsF,EAVyBtF,EAAA,GAAAuF,EAaQ1N,IAAMkI,SAChEU,GAdkD+E,EAAAnR,OAAA2D,EAAA,EAAA3D,CAAAkR,EAAA,GAa7CE,EAb6CD,EAAA,GAarBE,EAbqBF,EAAA,GAiB9CG,KACJF,EAAuB3Q,QAAS2Q,EAAuB5Q,QAGnD+Q,EAzFsB,SAACC,GAAwC,IAC7DzB,EAAyDyB,EAAzDzB,SAAUiB,EAA+CQ,EAA/CR,mBAAoBI,EAA2BI,EAA3BJ,uBAEtC,OAAQrB,GACN,KAAKK,EAASE,SACZ,MAAO,CACLmB,KAAM,EACNC,KAAMN,EAAuB5Q,OATd,IAWnB,KAAK4P,EAASC,IACZ,MAAO,CACLoB,KAAMT,EAAmBvQ,MAAQ,EACjCiR,KAAMN,EAAuB5Q,OAdd,GAefmR,UAAW,CACT,CACEC,YAAaR,EAAuB3Q,MAAQ,KAIpD,KAAK2P,EAASG,UACZ,MAAO,CACLsB,MAAO,EACPH,KAAMN,EAAuB5Q,OAxBd,IA0BnB,KAAK4P,EAASO,KACZ,MAAO,CACLc,KAAM,EAAIL,EAAuB3Q,MA5BlB,GA6BfiR,KAAMN,EAAuB5Q,OAAS,EAAIwQ,EAAmBxQ,OAAS,GAE1E,KAAK4P,EAASQ,MACZ,MAAO,CACLiB,MAAO,EAAIT,EAAuB3Q,MAjCnB,GAkCfiR,KAAMN,EAAuB5Q,OAAS,EAAIwQ,EAAmBxQ,OAAS,GAE1E,KAAK4P,EAASM,aACZ,MAAO,CACLmB,MAAO,EACPH,IAAKV,EAAmBxQ,OAvCT,IAyCnB,KAAK4P,EAASI,OACZ,MAAO,CACLiB,KAAMT,EAAmBvQ,MAAQ,EACjCiR,IAAKV,EAAmBxQ,OA5CT,GA6CfmR,UAAW,CACT,CACEC,YAAaR,EAAuB3Q,MAAQ,KAIpD,KAAK2P,EAASK,YACZ,MAAO,CACLgB,KAAM,EACNC,IAAKV,EAAmBxQ,OAtDT,IAwDnB,QACE,MAAO,IAkCWsR,CAAsB,CAC1C/B,WACAqB,yBACAJ,uBAxBkD/J,EA2B1BC,YACxB6K,EACArS,EACA,CACE6R,gBACAD,mCACAvE,UAAWsE,EACXvB,aAEFnP,IAAIpB,EAAO,6BACXyH,EAAUgL,MArCwC3K,EAAArH,OAAA2D,EAAA,EAAA3D,CAAAiH,EAAA,GA2B7C+K,EA3B6C3K,EAAA,GA2BvC4K,EA3BuC5K,EAAA,GAAAE,EAuCtBL,YAC5BmH,IACA3O,EACA,CAAEqN,UAAWkE,GACbtQ,IAAIpB,EAAO,+BACXyH,EAAUkL,QA5CwCxK,EAAA1H,OAAA2D,EAAA,EAAA3D,CAAAuH,EAAA,GAuC7C2K,EAvC6CxK,EAAA,GAuCrCyK,EAvCqCzK,EAAA,GA+CpD,OACEvH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiL,SAAA,KACElL,EAAAC,EAAAC,cAAC2R,EAADhS,OAAAO,EAAA,EAAAP,CAAA,GAAUiS,EAAV,CAAArR,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,OAAsBgI,GACtB3I,EAAAC,EAAAC,cAAC6R,EAADlS,OAAAO,EAAA,EAAAP,CAAA,GAAYmS,EAAZ,CAAAvR,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,OAA0B6B,mMAWhC,IAAMoP,EAAa,SAACrS,GAAqB,IAErCI,EAKEJ,EALFI,MACAyR,EAIE7R,EAJF6R,cAHqCa,EAOnC1S,EAHF4R,wCAJqC,IAAAc,KAKrCtC,EAEEpQ,EAFFoQ,UACGuC,EANkCrS,OAAAC,EAAA,EAAAD,CAOnCN,EAPmC,0EASvC,OAAKoQ,EAGH3P,EAAAC,EAAAC,cAACgO,EAAA,EAADrO,OAAAO,EAAA,EAAAP,CAAA,CACEF,MAAO,CACL,CACE2E,QAAS6M,EAAmC,EAAI,EAChDvB,SAAU,WACVuC,OAAQ,GAEVf,EACAzR,IAEEuS,EAVN,CAAAzR,SAAA,CAAAC,SAAAiF,EAAAhF,WAAA,QAHqB,ksBC9LlB,IAAM2O,EAAU,SAAC/P,GAAwB,IACtCoJ,EAA0CpJ,EAA1CoJ,QADsC/B,EACIrH,EAAjCsH,iBAD6B,IAAAD,EACjB,GADiBA,EACVwL,EADUvS,OAAAC,EAAA,EAAAD,CACIN,EADJ,yBAExCH,EAAQW,cAFgC+G,EAIdC,YAC9BsL,EACA9S,EACA,GACAiB,IAAIpB,EAAO,6BACXyH,EAAUyL,SATkCpL,EAAArH,OAAA2D,EAAA,EAAA3D,CAAAiH,EAAA,GAIvCwL,EAJuCpL,EAAA,GAI9BqL,EAJ8BrL,EAAA,GAY9C,OACElH,EAAAC,EAAAC,cAACsS,EAAD3S,OAAAO,EAAA,EAAAP,CAAA,CACE8I,QAAS3I,EAAAC,EAAAC,cAACoS,EAADzS,OAAAO,EAAA,EAAAP,CAAA,GAAa0S,EAAb,CAAA9R,SAAA,CAAAC,SAAA+R,EAAA9R,WAAA,MAA4BgI,GAErC9B,UAAWA,GACPuL,EAJN,CAAA3R,SAAA,CAAAC,SAAA+R,EAAA9R,WAAA,qNASJ,IAAM0R,EAAgB,SAAC9S,GAAqB,IAClCI,EAAwBJ,EAAxBI,MAAUC,EADwBC,OAAAC,EAAA,EAAAD,CACVN,EADU,WAEpCH,EAAQW,cAEd,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,EAAA,EAAAP,CAAA,CACEF,MAAO,CAACE,OAAAqK,EAAA,EAAArK,CAAA,CAEJgB,gBAAiBzB,EAAM2B,OAAOC,WAAW2H,QACzCrH,QAAS,IACNlC,EAAM8B,WAAW,IAEtBvB,IAEEC,EATN,CAAAa,SAAA,CAAAC,SAAA+R,EAAA9R,WAAA,mEC9CJ+R,EAAAC,EAAAC,EAAA,sBAAAnJ,IAAAiJ,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,yBAEajJ,EAAgB,SAC3BtK,GAEA,MAAoB,kBAATA,4MAKN,IAAM0T,EAAsB,WACjC,IAAMzT,EAAQW,cAuDd,MAAO,CACLgT,iBAtDuB,SAAC5T,GACxB,MAAoB,kBAATA,EAA0BA,EAE9BC,EAAMwK,eAAezK,IAoD5B6T,mBA5ByB,SAAC7T,GAC1B,OAZkB,SAACA,GACnB,GAAoB,kBAATA,EAAmB,CAC5B,GAAIA,GAAQC,EAAMwK,eAAeqJ,MAAO,MAAO,QAC/C,GAAI9T,GAAQC,EAAMwK,eAAeE,OAAQ,MAAO,SAChD,GAAI3K,GAAQC,EAAMwK,eAAesJ,MAAO,MAAO,QAC/C,GAAI/T,EAAOC,EAAMwK,eAAesJ,MAAO,MAAO,SAGhD,OAAO/T,EAICgU,CAAYhU,IAClB,IAAK,QACH,MAAO,SACT,IAAK,SACH,MAAO,QACT,IAAK,QAEL,QACE,MAAO,WAoBXiU,4BAhBkC,SAClCjU,GAEA,OArC2B,SAACA,GAC5B,GAAoB,kBAATA,EAAmB,CAC5B,GAAIA,GAAQC,EAAMwK,eAAeqJ,MAAO,MAAO,QAC/C,GAAI9T,GAAQC,EAAMwK,eAAeE,OAAQ,MAAO,SAChD,GAAI3K,EAAOC,EAAMwK,eAAeE,OAAQ,MAAO,QAGjD,OAAO3K,EA8BCkU,CAAqBlU,IAC3B,IAAK,QACH,MAAO,SACT,IAAK,SAEL,QACE,MAAO","file":"static/js/6.440959e9.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements, onMeasure, ref],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [handleResize, measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children?: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View ref={ref} onLayout={onLayout} {...viewProps}>\n      {/*\n      //\n      // @ts-ignore */}\n      {isRenderProp ? children(measurements) : children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, managing its\\n              open and closed state is in your control\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, managing its\n                open and closed state is in your control\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { ViewStyle } from 'react-native';\n\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { ViewMeasure, ViewMeasureProps } from '../Helpers';\n\nexport const POSITION = {\n  TOP: 'top' as const,\n  TOP_LEFT: 'top-left' as const,\n  TOP_RIGHT: 'top-right' as const,\n\n  BOTTOM: 'bottom' as const,\n  BOTTOM_LEFT: 'bottom-left' as const,\n  BOTTOM_RIGHT: 'bottom-right' as const,\n\n  LEFT: 'left' as const,\n  RIGHT: 'right' as const,\n};\n\nexport type PositionerPosition =\n  | 'top'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left'\n  | 'right';\n\nexport interface PositionerBaseProps {\n  /**\n   * Position of the content.\n   * @default \"bottom\"\n   */\n  position?: PositionerPosition;\n\n  /**\n   * Wrapped component to open the positioner over.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Content revealed when positioner is opened.\n   */\n  content?: React.ReactNode;\n\n  /**\n   * When true, displays positioner.\n   */\n  isVisible?: boolean;\n}\n\nexport interface PositionerOverrides {\n  Root: RootProps;\n  Target: ViewMeasureProps;\n}\n\nexport interface PositionerProps\n  extends WithOverrides<PositionerBaseProps, PositionerOverrides> {}\n\ninterface GetPositionerPositionParams {\n  position: PositionerPosition;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    children,\n    content,\n    isVisible = false,\n    position = POSITION.BOTTOM,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {\n      positionStyle,\n      isPositionerMeasurementsMeasured,\n      onMeasure: setPositionerMeasurements,\n      isVisible,\n    },\n    dlv(theme, 'overrides.Positioner.Root'),\n    overrides.Root,\n  );\n  const [Target, targetProps] = getOverrides(\n    ViewMeasure,\n    props,\n    { onMeasure: setTargetMeasurements },\n    dlv(theme, 'overrides.Positioner.Target'),\n    overrides.Target,\n  );\n\n  return (\n    <>\n      <Root {...rootProps}>{content}</Root>\n      <Target {...targetProps}>{children}</Target>\n    </>\n  );\n};\n\ninterface RootProps extends ViewMeasureProps {\n  isPositionerMeasurementsMeasured?: boolean;\n  positionStyle?: ViewStyle;\n  isVisible: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    style,\n    positionStyle,\n    isPositionerMeasurementsMeasured = false,\n    isVisible,\n    ...viewMeasureProps\n  } = props;\n\n  if (!isVisible) return null;\n\n  return (\n    <ViewMeasure\n      style={[\n        {\n          opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        positionStyle,\n        style,\n      ]}\n      {...viewMeasureProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport {\n  Positioner,\n  PositionerBaseProps,\n  PositionerOverrides,\n} from '../Positioner';\n\nexport interface PopoverOverrides extends PositionerOverrides {\n  Content: ViewProps;\n}\n\nexport interface PopoverProps\n  extends WithOverrides<PositionerBaseProps, PopoverOverrides> {}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, overrides = {}, ...restProps } = props;\n  const theme = useTheme();\n\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    {},\n    dlv(theme, 'overrides.Popover.Content'),\n    overrides.Content,\n  );\n\n  return (\n    <Positioner\n      content={<Content {...contentProps}>{content}</Content>}\n      // TODO: pass overrides from theme\n      overrides={overrides}\n      {...restProps}\n    />\n  );\n};\n\nconst StyledContent = (props: ViewProps) => {\n  const { style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          backgroundColor: theme.colors.background.content,\n          padding: 16,\n          ...theme.elevations[2],\n        },\n        style,\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}