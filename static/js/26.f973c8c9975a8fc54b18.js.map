{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Toggle","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","on","toggle","set","ViewMeasure","onMeasure","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","isRenderProp","ref","_useMeasure","useMeasure","measurements","onLayout","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Button","Popover","Text","___WEBPACK_IMPORTED_MODULE_5__","height","___WEBPACK_IMPORTED_MODULE_8__","_ref2","___WEBPACK_IMPORTED_MODULE_7__","isVisible","position","getStyles","positionerStyle","modalContainerStyle","popoverStyle","content","width","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_6__","appearance","onPress","title","of","isMDXComponent","POSITION","TOP","TOP_LEFT","TOP_RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT","LEFT","RIGHT","getPositionerStyles","containerStyle","opacity","isPositionerMeasurementsMeasured","zIndex","initialMeasurements","pageX","pageY","x","y","Positioner","_props$position","slicedToArray","targetMeasurements","setTargetMeasurements","_React$useState3","_React$useState4","positionerMeasurements","setPositionerMeasurements","_mergeStyles","mergeStyles","positionStyle","params","left","top","transform","translateX","right","getPositionerPosition","react","objectSpread","getPopoverStyles","padding","restProps","objectWithoutProperties","Positioner_Positioner","esm_extends","View","Popover_jsxFileName","adjustPageY","Platform","OS","window","scrollY","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/26.537ab474.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"right\\\"\\n        getStyles={(props, theme) => ({\\n          positionerStyle: {},\\n          modalContainerStyle: {},\\n          popoverStyle: {},\\n        })}\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, you have to\\n              manage its open and closed state\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"right\" getStyles={(props, theme) => ({\n            positionerStyle: {},\n            modalContainerStyle: {},\n            popoverStyle: {}\n          })} content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, you have to\n                manage its open and closed state\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport interface PositionerStyleProps {\n  isPositionerMeasurementsMeasured: boolean;\n}\n\nexport type GetPositionerStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = (props, theme) => {\n  const { isPositionerMeasurementsMeasured } = props;\n\n  return {\n    containerStyle: {},\n    positionerStyle: {\n      opacity: isPositionerMeasurementsMeasured ? 1 : 0,\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Measurements } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface PositionerProps {\n  children: React.ReactNode;\n  content?: React.ReactNode;\n  isVisible?: boolean;\n  position?: Position;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\ninterface GetPositionerPositionParams {\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n}\n\nconst DEFAULT_OFFSET = 14;\n\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const { position, targetMeasurements, positionerMeasurements } = params;\n\n  switch (position) {\n    case POSITION.TOP_LEFT:\n      return {\n        left: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.TOP:\n      return {\n        left: targetMeasurements.width / 2,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        right: 0,\n        top: -positionerMeasurements.height - DEFAULT_OFFSET,\n      };\n    case POSITION.LEFT:\n      return {\n        left: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.RIGHT:\n      return {\n        right: 0 - positionerMeasurements.width - DEFAULT_OFFSET,\n        top: -positionerMeasurements.height / 2 + targetMeasurements.height / 2,\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        right: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    case POSITION.BOTTOM:\n      return {\n        left: targetMeasurements.width / 2,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n        transform: [\n          {\n            translateX: -positionerMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        left: 0,\n        top: targetMeasurements.height + DEFAULT_OFFSET,\n      };\n    default:\n      return {};\n  }\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport const Positioner = (props: PositionerProps) => {\n  const {\n    getStyles,\n    children,\n    content,\n    isVisible,\n    position = POSITION.BOTTOM,\n  } = props;\n  const [targetMeasurements, setTargetMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const [positionerMeasurements, setPositionerMeasurements] = React.useState(\n    initialMeasurements,\n  );\n\n  const theme = useTheme();\n  const isPositionerMeasurementsMeasured = !!(\n    positionerMeasurements.width || positionerMeasurements.height\n  );\n\n  const { positionerStyle, containerStyle } = mergeStyles(\n    getPositionerStyles,\n    getStyles,\n    theme.components.getPositionerStyles,\n  )({ isPositionerMeasurementsMeasured }, theme);\n\n  const positionStyle = getPositionerPosition({\n    position,\n    positionerMeasurements,\n    targetMeasurements,\n  });\n\n  return (\n    <>\n      <ViewMeasure style={containerStyle} onMeasure={setTargetMeasurements}>\n        {children}\n        {isVisible && (\n          <ViewMeasure\n            style={{\n              ...positionStyle,\n              ...positionerStyle,\n            }}\n            onMeasure={setPositionerMeasurements}\n          >\n            {content}\n          </ViewMeasure>\n        )}\n      </ViewMeasure>\n    </>\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport {\n  getPositionerStyles,\n  PositionerStyleProps,\n  PositionerStyles,\n} from '../Positioner/Positioner.styles';\n\nexport interface PopoverStyles extends PositionerStyles {\n  popoverStyle: ViewStyle;\n}\n\nexport type GetPopoverStyles = (\n  props: PositionerStyleProps,\n  theme: Theme,\n) => PopoverStyles;\n\nexport const getPopoverStyles: GetPopoverStyles = (props, theme) => {\n  return {\n    popoverStyle: {\n      backgroundColor: theme.colors.background.content,\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    ...getPositionerStyles(props, theme),\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  GetPopoverStyles,\n  getPopoverStyles,\n  PopoverStyles,\n} from './Popover.styles';\n\nexport interface PopoverProps extends PositionerProps {\n  getStyles?: ReplaceReturnType<GetPopoverStyles, DeepPartial<PopoverStyles>>;\n}\n\nexport const Popover = (props: PopoverProps) => {\n  const { content, getStyles, ...restProps } = props;\n  const theme = useTheme();\n  const { popoverStyle } = mergeStyles(\n    getPopoverStyles,\n    getStyles,\n    theme.components.getPopoverStyles,\n  )({ isPositionerMeasurementsMeasured: false }, theme);\n\n  return (\n    <Positioner\n      {...restProps}\n      getStyles={getStyles}\n      content={<View style={popoverStyle}>{content}</View>}\n    />\n  );\n};\n","import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n"],"sourceRoot":""}