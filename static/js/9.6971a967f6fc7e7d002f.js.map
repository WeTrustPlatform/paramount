{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tab.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/index.ts"],"names":["_changeColor","__webpack_require__","getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","disabled","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","focusColor","darken","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Object","keys","forEach","key","defineProperty","exports","enumerable","get","Feather","_Text","Icon","_ref","name","IconTag","concat","result","matches","toUpperCase","charAt","slice","convertToPascal","getTextColor","_Icon","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","getTabStyles","shouldStretch","containerStyle","greyDefault","padding","flex","greyLight","_Tab","Tab","_props$isActive","_props$shouldStretch","buttonProps","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","State","Tabs","initial","activeTabIndex","_ref2","state","setState","onChange","Array","fill","v","i","of","isMDXComponent","getTabsStyles","_Tabs","children","data","Children","child","tabs","toArray","tabProps","cloneElement"],"mappings":"4aAGAA,EAAAC,EAAA,+hEAyCO,IAAMC,EAAqB,SAACC,GACjC,MAAO,CACLC,YAAa,CACXC,QAAS,CACPC,QAAS,CACPC,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCC,MAAOR,EAAMK,OAAOI,KAAb,SAGTC,OAAQ,CACNN,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCC,MAAOR,EAAMK,OAAOI,KAAKC,QAE3BC,QAAS,CACPP,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCC,MAAOR,EAAMK,OAAOI,KAAKE,SAE3BC,UAAW,CACTR,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCC,MAAOR,EAAMK,OAAOI,KAAKG,YAG7BD,QAAS,CACPR,QAAS,CACPC,gBAAiBJ,EAAMK,OAAOQ,OAAb,QACjBL,MAAOR,EAAMK,OAAOQ,OAAOC,YAE3BC,uBAAwBf,EAAMK,OAAOC,WAAWU,SAGlDN,OAAQ,CACNN,gBAAiBJ,EAAMK,OAAOQ,OAAOH,OACrCF,MAAOR,EAAMK,OAAOQ,OAAOI,WAE3BF,uBAAwBf,EAAMK,OAAOC,WAAWY,aAGlDP,QAAS,CACPP,gBAAiBJ,EAAMK,OAAOQ,OAAOF,QACrCH,MAAOR,EAAMK,OAAOQ,OAAOM,YAE3BJ,uBAAwBf,EAAMK,OAAOC,WAAWc,cAGlDR,UAAW,CACTR,gBAAiBJ,EAAMK,OAAOQ,OAAOD,UACrCJ,MAAOR,EAAMK,OAAOQ,OAAOQ,cAE3BN,uBAAwBf,EAAMK,OAAOC,WAAWgB,iBAIpDC,QAAS,CACPpB,QAAS,CACPC,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCiB,YAAaxB,EAAMK,OAAOI,KAAb,QACbgB,YAAa,EACbjB,MAAOR,EAAMK,OAAOI,KAAb,SAGTC,OAAQ,CACNN,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCiB,YAAaxB,EAAMK,OAAOqB,OAAOhB,OACjCe,YAAa,EACbjB,MAAOR,EAAMK,OAAOI,KAAKC,QAG3BC,QAAS,CACPP,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCiB,YAAaxB,EAAMK,OAAOqB,OAAOf,QACjCc,YAAa,EACbjB,MAAOR,EAAMK,OAAOI,KAAKE,SAG3BC,UAAW,CACTR,gBAAiBJ,EAAMK,OAAOC,WAAWC,QACzCiB,YAAaxB,EAAMK,OAAOqB,OAAOd,UACjCa,YAAa,EACbjB,MAAOR,EAAMK,OAAOI,KAAKG,aAI/Be,SAAU,CACRvB,gBAAiBJ,EAAMK,OAAOQ,OAAOc,SAErCnB,MAAOR,EAAMK,OAAOI,KAAKmB,OAE3BC,MAAO,CACLC,MAAO,CACLC,aAAc/B,EAAMgC,oBAAoBF,MACxCG,SAAUjC,EAAMkC,UAAUJ,MAAMG,UAAY,GAC5CE,OAAQnC,EAAMoC,eAAeN,MAC7BO,YAA2C,EAA9BrC,EAAMsC,gBAAgBR,MACnCS,aAA4C,EAA9BvC,EAAMsC,gBAAgBR,OAGtCU,OAAQ,CACNT,aAAc/B,EAAMgC,oBAAoBQ,OACxCP,SAAUjC,EAAMkC,UAAUM,OAAOP,UAAY,GAC7CE,OAAQnC,EAAMoC,eAAeI,OAC7BH,YAA4C,EAA/BrC,EAAMsC,gBAAgBE,OACnCD,aAA6C,EAA/BvC,EAAMsC,gBAAgBE,QAGtCC,MAAO,CACLV,aAAc/B,EAAMgC,oBAAoBS,MACxCR,SAAUjC,EAAMkC,UAAUO,MAAMR,UAAY,GAC5CE,OAAQnC,EAAMoC,eAAeK,MAC7BJ,YAA2C,EAA9BrC,EAAMsC,gBAAgBG,MACnCF,aAA4C,EAA9BvC,EAAMsC,gBAAgBG,qmCA6BrC,IAAMC,EAAmC,SAACC,EAAkB3C,GAAU,IAEzE4C,EAQED,EARFC,WACApC,EAOEmC,EAPFnC,MACAqC,EAMEF,EANFE,KACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,UACAC,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,WACAC,EACEP,EADFO,UATyEC,EAYnBpD,EACtDC,GADMC,EAZmEkD,EAYnElD,YAAa4B,EAZsDsB,EAYtDtB,MAAOF,EAZ+CwB,EAY/CxB,SAAayB,GAZkC,EAAAC,EAAA,SAAAF,EAAA,oCAAAG,EAoBvErD,EAAY2C,GAAYpC,GAHnB+C,EAjBkED,EAiBzE9C,MACAO,EAlByEuC,EAkBzEvC,uBACGyC,GAnBsE,EAAAH,EAAA,SAAAC,EAAA,oCAAAG,EAsBtC5B,EAAMgB,GAAnCZ,EAtBmEwB,EAsBnExB,SAAayB,GAtBsD,EAAAL,EAAA,SAAAI,EAAA,cAuB5DE,EAAqDhC,EAA5DnB,MAAmCoD,GAvBgC,EAAAP,EAAA,SAuBP1B,EAvBO,WAyB3E,MAAO,CACL6B,aAAW,EAAAK,EAAA,YACLf,GAAU,EAAAe,EAAA,YAELD,EACAF,IAHK,EAAAG,EAAA,YAMLH,EACAN,EACAI,EACCT,EAAY,CAAE3C,gBAAiBW,GAA2B,IAEhEiC,EACA,CACEc,UAAW,aACXC,cAAe,MACfC,SAAU,QAEZ,IAENC,WACiB,YAAfrB,GAA2C,YAAfA,EACxB5C,EAAMK,OAAOQ,OAAb,SACA,EAAAhB,EAAAqE,QAAOV,EAAYpD,gBAAiB,KAC1C+D,UAAW,CACTC,WAAY,SACZ5D,MAAOsC,EAAaa,EAA0BJ,EAC9Cc,QAAS,OACTpC,WACAqC,WAAY,MACZC,eAAgB,SAChBC,UAAW,UAGbC,wBAAyB,CACvBL,WAAY,SACZL,cAAe,MACf5B,OAAQ,OACRoC,eAAgB,UAGlBG,0BAA2B,CACzBrC,YAAaY,EAAa,EAAI,EAC9BV,aAAcW,EAAY,EAAI,4mBC3PpCyB,EAAAC,EAAA9E,EAAA,kCACA+E,EAAA/E,EAAA,iDASAgF,EAAAhF,EAAA,wBACAiF,EAAAjF,EAAA,8BACAkF,EAAAlF,EAAA,qCACAmF,EAAAnF,EAAA,wCACAoF,EAAApF,EAAA,uTA2FO,IAAMqF,EAAS,SAACC,GAAuB,IAAAC,EAqBxCD,EAnBFxC,kBAF0C,IAAAyC,EAE7B,UAF6BA,EAAAC,GAqBxCF,EAlBFG,MAkBEH,EAjBF5E,cAJ0C,IAAA8E,EAIlC,UAJkCA,EAK1CE,EAgBEJ,EAhBFI,UAEAtC,GAcEkC,EAfFK,KAeEL,EAdFlC,WACAD,EAaEmC,EAbFnC,WAR0CyC,GAqBxCN,EAZFO,YAYEP,EAXFQ,SAWER,EAVFtC,mBAX0C,IAAA4C,KAAAG,EAqBxCT,EATFpC,gBAZ0C,IAAA6C,KAAAC,EAqBxCV,EARFrC,iBAb0C,IAAA+C,KAAAC,EAqBxCX,EAPFY,eAd0C,IAAAD,EAchC,aAdgCA,EAAAE,EAqBxCb,EAJFvC,YAjB0C,IAAAoD,EAiBnC,SAjBmCA,EAkB1CC,EAGEd,EAHFc,OAEGC,GApBuC,EAAA9C,EAAA,SAqBxC+B,EArBwC,mKAuBtCpF,GAAQ,EAAA8E,EAAAsB,YAvB8BC,GA+BxC,EAAAtB,EAAAuB,aAAY5D,kBAAiB8C,EAA7B,CACF,CACE5C,aACApC,QACA0C,YACAD,aACAH,aACAE,WACAD,YACAF,QAEF7C,GAhBAwD,EA1B0C6C,EA0B1C7C,YACAW,EA3B0CkC,EA2B1ClC,UACAF,EA5B0CoC,EA4B1CpC,WACAQ,EA7B0C4B,EA6B1C5B,wBACAC,EA9B0C2B,EA8B1C3B,0BAeF,OACEC,EAAA4B,cAAC1B,EAAA2B,oBAAD,EAAAC,EAAA,UACEC,YAAU,EACVC,kBAAkB,SAClBC,cAAe3C,EACftC,YAAamB,IAAcC,GAC3BiD,QAASA,EACTa,MAAOrD,EACP0C,OAAQA,GACJC,GAEJxB,EAAA4B,cAAC1B,EAAAiC,KAAD,CAAMD,MAAOpC,GACVxB,EACD0B,EAAA4B,cAAC1B,EAAAiC,KAAD,CAAMD,MAAOnC,GAGXC,EAAA4B,cAACQ,GAAD,EAAAN,EAAA,YAAmBrB,EAAnB,CAA0BjB,UAAWA,MAEtCjB,8fAUT,IAAM6D,EAAgB,SAAC3B,GAA8B,IAC3CrC,EAAmDqC,EAAnDrC,UAAW4C,EAAwCP,EAAxCO,YAAaF,EAA2BL,EAA3BK,KAAMF,EAAqBH,EAArBG,MAAOpB,EAAciB,EAAdjB,UAE7C,OAAIpB,EAAkB4C,GAAehB,EAAA4B,cAACvB,EAAAgC,YAAD,CAAaxG,MAAO2D,EAAU3D,QAC/DiF,IACAF,EAAcZ,EAAA4B,cAACtB,EAAAgC,KAAD,CAAMzB,UAAW,iBAAO,CAAErB,eAAeoB,GAEpD,0ICvLT,IAAM2B,EAAM,SAACC,EAAaC,GAExB,IADAD,GAAY,GACLA,EAAIE,OAASD,GAClBD,EAAM,IAAMA,EAEd,OAAOA,GAIHG,EAAc,SAAC9G,EAAe+G,EAAeC,GAKjDhH,GAHAA,EAAQA,EAAMiH,QAAQ,YAAa,KAGrBA,QAAQ,sCAAuC,iBAG7D,IAAMC,EAAaC,KAAKC,MAAc,IAARL,IAAgBC,GAAU,EAAI,GAEtDK,EAAW,6CACXC,EAAMtH,EAAMuH,MAChB,IAAIC,OACF,gBACEH,EACA,YACAA,EACA,YACAA,EACA,wCAGF,MAIEI,EAAUH,GAAiB,MAAVA,EAAI,GAAaA,EAAI,GAAK,KAE3CI,EAAYJ,EACd,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACrBtH,EACGiH,QACC,6DACA,SAACU,EAAWC,EAAMC,EAAMC,GACtB,OACEC,SAASH,EAAM,IACf,IACAG,SAASF,EAAM,IACf,IACAE,SAASD,EAAM,MAIpBE,MAAM,KAGb,OAASV,EACL,OACa,OAAVG,EAAiB,IAAM,IACxB,IACAN,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KAEf,KACAG,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KAEf,KACAG,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,MAEJ,OAAVS,EAAiB,KAAOA,EAAQ,IACjC,IAEF,CACE,IACAf,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,GAEFvB,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,GAEFvB,EACES,KAAKH,EAAS,MAAQ,OACpBe,SAASL,EAAQ,GAAI,IAAMR,EAC3BF,EAAS,EAAI,KACbiB,SAAS,IACX,IAEFC,KAAK,KAGAxE,EAAS,SAAC1D,EAAe+G,GACpC,OAAOD,EAAY9G,EAAO+G,GAAO,qMAG5B,IAAMoB,EAAU,SAACnI,EAAe+G,GACrC,OAAOD,EAAY9G,EAAO+G,GAAO,4SC7GnC,IAAArC,EAAApF,EAAA,sCAAA8I,OAAAC,KAAA3D,GAAA4D,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAjE,EAAA6D,wMCAA,IAAApE,EAAAC,EAAA9E,EAAA,kCACAsJ,EAAAxE,EAAA9E,EAAA,+CAEAgF,EAAAhF,EAAA,wBACAuJ,EAAAvJ,EAAA,8CAYO,IAAMwJ,EAAO,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAAMhJ,EAA6B+I,EAA7B/I,MAAOqC,EAAsB0G,EAAtB1G,KAC5B7C,GAAQ,EAAA8E,EAAAsB,YAERqD,EAAUL,EAAO,KAAAM,OAZzB,SAAyBF,GACvB,IAIMG,EAASH,EAAK/B,QAAQ,UAJV,SAACmC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOF,EAAOG,OAAO,GAAGD,cAAgBF,EAAOI,MAAM,GAMxBC,CAAgBR,KAE7C,OACE7E,EAAA4B,cAACkD,EAAD,CACEjJ,MAAOA,GAAQ,EAAA6I,EAAAY,cAAajK,EAAMK,OAAOI,KAA1B,CAAgCD,GAASA,EACxDqC,KAAMA,iSCxBZ,IAAAqH,EAAApK,EAAA,sCAAA8I,OAAAC,KAAAqB,GAAApB,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAe,EAAAnB,gaCAApE,EAAAC,EAAA9E,EAAA,kCACA+E,EAAA/E,EAAA,iDACAqK,EAAArK,EAAA,6CAEMsK,GAAe,EAAAD,EAAAE,UAASvD,4TAO9B,IAAMwD,EAAQ,CAAC,IAAK,IAAK,KAEZtD,EAAc,SAAC5B,GAA4B,IAAAa,EAChBb,EAA9BvC,YAD8C,IAAAoD,EACvC,GADuCA,EAAAX,EAChBF,EAAnB5E,aADmC,IAAA8E,EAC3B,OAD2BA,EAGhDiF,GAAQ,EAAAJ,EAAAK,UAASF,EAAMjD,OAAQ,CACnCoD,OAAQ,CAAEC,SAAU,KACpBC,KAAM,CAAEC,QAAS,GACjBC,OAAO,EACPC,GAAE,eAAAC,GAAA,EAAAC,EAAA,SAAAC,EAAA,QAAAC,KAAE,SAAAC,EAAMC,GAAN,OAAAH,EAAA,QAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,cAAAE,EAAAF,KAAA,EAGMA,EAAK,CAAER,QAAS,IAHtB,cAAAU,EAAAF,KAAA,EAKMA,EAAK,CAAER,QAAS,IALtB,OAAAU,EAAAF,KAAA,gCAAAE,EAAAE,SAAAL,MAAF,gBAAAM,GAAA,OAAAV,EAAAW,MAAAC,KAAAC,YAAA,KAUJ,OACEjH,EAAA4B,cAAC1B,EAAAiC,KAAD,CACED,MAAO,CACLzC,WAAY,SACZL,cAAe,MACfQ,eAAgB,WAGjBgG,EAAMsB,IAAI,SAAChF,EAAOiF,GAAR,OACTnH,EAAA4B,cAAC6D,EAAD,CACErB,IAAKuB,EAAMwB,GAEXjF,MAAO,CACLzG,gBAAiBI,EACjBuB,aAAc,MACdI,OAAQU,EACRkJ,WAAY,EACZC,YAAa,EACbpB,QAAS/D,EAAM+D,QACfqB,MAAOpJ,4TCjDnB,IAAAqJ,EAAApM,EAAA,4CAAA8I,OAAAC,KAAAqD,GAAApD,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA+C,EAAAnD,olCCkBO,IAAMoD,EAA6B,SAAA5C,EAExCvJ,GACG,IAFDoM,EAEC7C,EAFD6C,cAAexG,EAEd2D,EAFc3D,SAGjB,MAAO,CACLpC,YAAa,CACXpD,gBAAiBwF,EAAW,QAAU,eAExCyG,gBAAc,EAAAxI,EAAA,UACZzD,gBAAiBJ,EAAMK,OAAOC,WAAWgM,YACzCC,QAAS,GACLH,EACA,CACEI,KAAM,GAER,IAENvI,WAAYjE,EAAMK,OAAOC,WAAWmM,UACpCtI,UAAW,CACT3D,MAAOoF,EAAW5F,EAAMK,OAAOI,KAAKE,QAAUX,EAAMK,OAAOI,KAAKmB,6lBCrCtE+C,EAAAC,EAAA9E,EAAA,kCACA+E,EAAA/E,EAAA,iDAGAgF,EAAAhF,EAAA,wBACAiF,EAAAjF,EAAA,8BACAoF,EAAApF,EAAA,oCACA4M,EAAA5M,EAAA,wRAWO,IAAM6M,EAAM,SAACvH,GAAoB,IAAAwH,EAQlCxH,EANFQ,gBAFoC,IAAAgH,KAGpCpH,EAKEJ,EALFI,UACAsG,EAIE1G,EAJF0G,MACA9F,EAGEZ,EAHFY,QALoC6G,EAQlCzH,EAFFgH,qBANoC,IAAAS,KAOjCC,GAPiC,EAAAzJ,EAAA,SAQlC+B,EARkC,4DAShCpF,GAAQ,EAAA8E,EAAAsB,YATwBC,GAUyB,EAAAtB,EAAAuB,aAC7D6F,eACA3G,EAF6D,CAG7D,CAAEI,WAAUwG,iBAAiBpM,GAHvBqM,EAV8BhG,EAU9BgG,eAAgB7I,EAVc6C,EAUd7C,YAAaW,EAVCkC,EAUDlC,UAAWF,EAVVoC,EAUUpC,WAKhD,OACEU,EAAA4B,cAAC1B,EAAAiC,KAAD,CAAMD,MAAOwF,GACX1H,EAAA4B,cAACrB,EAAAC,QAAD,EAAAsB,EAAA,UACEjG,MAAOoF,EAAW,UAAY,UAC9BJ,UAAW,iBAAO,CAAEhC,cAAaS,aAAYE,cAC7C6B,QAAS,kBAAMA,EAAQ8F,KACnBgB,2fCrCVC,GADAC,EAAAlN,EAAA,kCACAA,EAAA,kDAEFmN,EAAAnN,EAAA,yCACAoN,EAAApN,EAAA,8DACA+E,EAAA/E,EAAA,iDACAoK,EAAApK,EAAA,kCACAqN,EAAArN,EAAA,kCAOMsN,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT/D,GAGZ,IAFDgE,EAEChE,EAFDgE,WACGnI,GACF,EAAA/B,EAAA,SAAAkG,EAAA,gBACD,OAAO,EAAAwD,EAAAS,KAACH,GAAD,EAAA5G,EAAA,YAAe2G,EAAiBhI,EAAhC,CAAuCmI,WAAYA,EAAYE,QAAQ,eAG5E,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,QADR,SAGA,EAAAX,EAAAS,KAAA,wDAAkD,EAAAT,EAAAS,KAAA,cAAYG,WAAW,KAAvB,OAAlD,uDAAwJ,EAAAZ,EAAAS,KAAA,cAAYG,WAAW,KAAvB,YAAxJ,SAAqN,EAAAZ,EAAAS,KAAA,cAAYG,WAAW,KAAvB,WAArN,iBACA,EAAAZ,EAAAS,KAAA,KAAQ,CACNE,GAAM,SADR,UAGA,EAAAX,EAAAS,KAACP,EAAAW,WAAD,CAAYC,WAAY,EAAGC,OAAQ,0zBAA6zBC,QAAS,CACv2B3I,MAAOuG,KAAOA,KAAKvG,MAAQA,EAC3BwI,wBACAI,cACAC,cACAnH,YACAwC,YACA4E,YACAvB,WACCc,QAAQ,eACb,EAAAV,EAAAS,KAACN,EAAAe,MAAD,CAAOE,QAAS,CACVC,eAAgB,GACfX,QAAQ,SACZ,SAAAY,GAAA,IACKC,EADLD,EACKC,MACAC,EAFLF,EAEKE,SAFL,OAGS,EAAAxB,EAAAS,KAACL,EAAAe,KAAD,CAAME,eAAgBE,EAAMF,eAAgBI,SAAU,SAAA1C,GAAK,OAAIyC,EAAS,CAC5EH,eAAgBtC,KACdtG,UAAW,SAACJ,EAAOpF,GAAR,MAAmB,CAChCqM,eAAgB,KACdoB,QAAQ,QACX,IAAIgB,MAAM,GAAGC,KAAK,GAAG7C,IAAI,SAAC8C,EAAGC,GAC1B,OAAU,IAANA,GACK,EAAA7B,EAAAS,KAACL,EAAAR,IAAD,CAAK5D,IAAK,EAAGxD,MAAM,SAASS,QAAS,kBAAMuI,EAAS,CACzDH,eAAgB,KACd5I,UAAW,iBAAO,CACpB6G,eAAgB,GAChB7I,YAAa,GACbW,UAAW,GACXF,WAAY,KACVwJ,QAAQ,SAGP,EAAAV,EAAAS,KAACL,EAAAR,IAAD,CAAK5D,IAAK6F,EAAGrJ,MAAK,OAAAmE,OAASkF,EAAI,GAAKnB,QAAQ,eAK3D,EAAAV,EAAAS,KAAA,KAAQ,CACNE,GAAM,SADR,UAGA,EAAAX,EAAAS,KAACP,EAAAe,MAAD,CAAOa,GAAIX,OAAMT,QAAQ,6LAI7BH,EAAWwB,gBAAiB,iqBCrErB,IAAMC,EAA+B,SAAC3J,EAAOpF,GAClD,MAAO,CACLqM,eAAgB,CACdtK,aAAc/B,EAAMgC,oBAAoBQ,OACxCgK,KAAM,EACNzI,cAAe,MACfQ,eAAgB,miBCftBI,EAAAC,EAAA9E,EAAA,kCACA+E,EAAA/E,EAAA,iDAGAgF,EAAAhF,EAAA,wBACAiF,EAAAjF,EAAA,8BAEAkP,EAAAlP,EAAA,2kBAYO,IAAMoO,EAAO,SAAC9I,GAAqB,IAChC6J,EAAkD7J,EAAlD6J,SAAUb,EAAwChJ,EAAxCgJ,eAAgBI,EAAwBpJ,EAAxBoJ,SAAUhJ,EAAcJ,EAAdI,UACtCxF,GAAQ,EAAA8E,EAAAsB,YAENiG,GAAmB,EAAAtH,EAAAuB,aAAYyI,gBAAevJ,EAA3B,CAAsC,GAAIxF,GAA7DqM,eAEF6C,EAAOvK,EAAMwK,SAAStD,IAAIoD,EAAU,SAACG,EAAOtD,GAChD,OAAKsD,GAEL,EAAAvL,EAAA,UACEiI,QACAlG,SAAUkG,IAAUsC,EACpBpI,QAAS,SAAA4I,GAAC,OAAIJ,EAASI,KACpBQ,EAAMhK,OANQ,OAUfiK,EAAO1K,EAAMwK,SAASG,QAAQL,GAEpC,OACEtK,EAAA4B,cAAC1B,EAAAiC,KAAD,CAAMD,MAAOwF,GACV6C,EAAKrD,IAAI,SAAC0D,EAAUzD,GAAX,OAAqBnH,EAAM6K,aAAaH,EAAKvD,GAAQyD,+RCxCrE,IAAAP,EAAAlP,EAAA,kCAAA8I,OAAAC,KAAAmG,GAAAlG,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA6F,EAAAjG,QACA,IAAA2D,EAAA5M,EAAA,iCAAA8I,OAAAC,KAAA6D,GAAA5D,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAuD,EAAA3D","file":"static/js/9.fd9ca1f0.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/ThemeInterface';\nimport { darken } from './changeColor';\n\nexport type ButtonColorProps = ViewStyle & {\n  backgroundColor: string;\n  color: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.button.default,\n          color: theme.colors.button.defaultText,\n\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.button.danger,\n          color: theme.colors.button.dangerText,\n\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.button.primary,\n          color: theme.colors.button.primaryText,\n\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.button.secondary,\n          color: theme.colors.button.secondaryText,\n\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.button.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface TabStyles {\n  containerStyle: ViewStyle;\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface GetTabStyleProps {\n  shouldStretch: boolean;\n  isActive: boolean;\n}\n\nexport type GetTabStyles = (props: GetTabStyleProps, theme: Theme) => TabStyles;\n\nexport const getTabStyles: GetTabStyles = (\n  { shouldStretch, isActive },\n  theme,\n) => {\n  return {\n    buttonStyle: {\n      backgroundColor: isActive ? 'white' : 'transparent',\n    },\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      padding: 2,\n      ...(shouldStretch\n        ? {\n            flex: 1,\n          }\n        : {}),\n    },\n    focusColor: theme.colors.background.greyLight,\n    textStyle: {\n      color: isActive ? theme.colors.text.primary : theme.colors.text.muted,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial, Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Button, ButtonProps } from '../Button';\nimport { GetTabStyles, getTabStyles, TabStyles } from './Tab.styles';\n\nexport interface TabProps\n  extends Omit<Omit<ButtonProps, 'onPress'>, 'getStyles'> {\n  index: number;\n  isActive?: boolean;\n  shouldStretch?: boolean;\n  getStyles?: ReplaceReturnType<GetTabStyles, DeepPartial<TabStyles>>;\n  onPress: (index: number) => void;\n}\n\nexport const Tab = (props: TabProps) => {\n  const {\n    isActive = false,\n    getStyles,\n    index,\n    onPress,\n    shouldStretch = true,\n    ...buttonProps\n  } = props;\n  const theme = useTheme();\n  const { containerStyle, buttonStyle, textStyle, focusColor } = mergeStyles(\n    getTabStyles,\n    getStyles,\n  )({ isActive, shouldStretch }, theme);\n\n  return (\n    <View style={containerStyle}>\n      <Button\n        color={isActive ? 'primary' : 'default'}\n        getStyles={() => ({ buttonStyle, focusColor, textStyle })}\n        onPress={() => onPress(index)}\n        {...buttonProps}\n      />\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { View } from 'react-native';\nimport { Icon } from '../Icon';\nimport { Tabs, Tab } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTabIndex={state.activeTabIndex}\\n      onChange={index => setState({ activeTabIndex: index })}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n      })}\\n    >\\n      {new Array(4).fill(0).map((v, i) => {\\n        if (i === 0) {\\n          return (\\n            <Tab\\n              key={0}\\n              title=\\\"Custom\\\"\\n              onPress={() => setState({ activeTabIndex: 0 })}\\n              getStyles={() => ({\\n                containerStyle: {},\\n                buttonStyle: {},\\n                textStyle: {},\\n                focusColor: {},\\n              })}\\n            />\\n          )\\n        }\\n        return <Tab key={i} title={`Tab ${i + 1}`} />\\n      })}\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      View,\n      Icon,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTabIndex={state.activeTabIndex} onChange={index => setState({\n          activeTabIndex: index\n        })} getStyles={(props, theme) => ({\n          containerStyle: {}\n        })} mdxType=\"Tabs\">\n        {new Array(4).fill(0).map((v, i) => {\n            if (i === 0) {\n              return <Tab key={0} title=\"Custom\" onPress={() => setState({\n                activeTabIndex: 0\n              })} getStyles={() => ({\n                containerStyle: {},\n                buttonStyle: {},\n                textStyle: {},\n                focusColor: {}\n              })} mdxType=\"Tab\" />;\n            }\n\n            return <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />;\n          })}\n      </Tabs>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface TabsStyles {\n  containerStyle: ViewStyle;\n}\nexport type GetTabsStyles = (props: {}, theme: Theme) => TabsStyles;\n\nexport const getTabsStyles: GetTabsStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      borderRadius: theme.controlBorderRadius.medium,\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { TabProps } from './Tab';\nimport { GetTabsStyles, getTabsStyles, TabsStyles } from './Tabs.styles';\n\nexport type TabsDistribution = 'scrollable' | 'fit';\n\nexport interface TabsProps {\n  activeTabIndex?: number;\n  children: Array<React.ReactElement<TabProps>>;\n  getStyles?: ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>>;\n\n  onChange: (index: number) => void;\n}\n\nexport const Tabs = (props: TabsProps) => {\n  const { children, activeTabIndex, onChange, getStyles } = props;\n  const theme = useTheme();\n\n  const { containerStyle } = mergeStyles(getTabsStyles, getStyles)({}, theme);\n\n  const data = React.Children.map(children, (child, index) => {\n    if (!child) return null;\n\n    return {\n      index,\n      isActive: index === activeTabIndex,\n      onPress: i => onChange(i),\n      ...child.props,\n    };\n  }) as TabProps[];\n\n  const tabs = React.Children.toArray(children);\n\n  return (\n    <View style={containerStyle}>\n      {data.map((tabProps, index) => React.cloneElement(tabs[index], tabProps))}\n    </View>\n  );\n};\n","export * from './Tabs';\nexport * from './Tab';\n"],"sourceRoot":""}