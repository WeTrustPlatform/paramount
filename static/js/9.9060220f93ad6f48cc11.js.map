{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/List.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedList.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","List","listType","icon","_props$size","size","finalChildren","React","map","listItem","index","undefined","react__WEBPACK_IMPORTED_MODULE_0__","accessibilityRole","Platform","OS","_jsxFileName","_Box__WEBPACK_IMPORTED_MODULE_3__","margin","marginLeft","padding","paddingLeftMap","large","medium","small","xsmall","ListItem","mark","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","paddingLeft","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_4__","_Box__WEBPACK_IMPORTED_MODULE_5__","flexDirection","alignItems","marginVertical","width","_Text__WEBPACK_IMPORTED_MODULE_6__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","isInline","NumberedItem","listItemProps","_ListItem__WEBPACK_IMPORTED_MODULE_3__","_Text__WEBPACK_IMPORTED_MODULE_4__","concat","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","NumberedList","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","isMDXComponent","_List__WEBPACK_IMPORTED_MODULE_2__","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isItalic","align","transform","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","text","textAlign","alignSelf","fontStyle","textTransform","Text","_props$color","_props$fontFamily","_props$align","_props$isInline","getStyles","_props$isItalic","mergeStyles","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","palette","lightest","light","base","dark","darkest","controlBorderRadius","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/9.290868b2.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : undefined,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Box margin={0} marginLeft={8} padding={0}>\n        {finalChildren}\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { Text, TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 24,\n  medium: 16,\n  small: 16,\n  xsmall: 8,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark?: React.ReactNode;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft =\n    typeof size === 'number' ? 16 : (paddingLeftMap[size] as 1 | 2 | 3);\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Box flexDirection=\"row\" alignItems=\"center\" marginVertical={8}>\n        <Box>{mark}</Box>\n        <Box width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Box>\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemProps } from './ListItem';\nimport { Text } from './Text';\n\nexport interface NumberedItemProps extends ListItemProps {\n  index?: number;\n  children: React.ReactNode;\n}\n\nexport const NumberedItem = (props: NumberedItemProps) => {\n  const { index, ...listItemProps } = props;\n\n  return (\n    <ListItem\n      mark={\n        <Text size={listItemProps.size} {...listItemProps}>{`${index}.`}</Text>\n      }\n      {...listItemProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { NumberedList, NumberedItem } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"numberedlist\"\n    }}>{`NumberedList`}</h1>\n    <Playground __position={0} __code={'<NumberedList>\\n  <NumberedItem>Lorem ipsum dolar set amet</NumberedItem>\\n  <NumberedItem>Lorem ipsum dolar set amet</NumberedItem>\\n  <NumberedItem>Lorem ipsum dolar set amet</NumberedItem>\\n  <NumberedItem>Lorem ipsum dolar set amet</NumberedItem>\\n</NumberedList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      NumberedList,\n      NumberedItem\n    }} mdxType=\"Playground\">\n  <NumberedList mdxType=\"NumberedList\">\n    <NumberedItem mdxType=\"NumberedItem\">Lorem ipsum dolar set amet</NumberedItem>\n    <NumberedItem mdxType=\"NumberedItem\">Lorem ipsum dolar set amet</NumberedItem>\n    <NumberedItem mdxType=\"NumberedItem\">Lorem ipsum dolar set amet</NumberedItem>\n    <NumberedItem mdxType=\"NumberedItem\">Lorem ipsum dolar set amet</NumberedItem>\n  </NumberedList>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { TextSize } from '../../theme/Theme';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface NumberedListProps {\n  size?: TextSize;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const NumberedList = (props: NumberedListProps) => {\n  return <List listType=\"ol\" {...props} />;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}