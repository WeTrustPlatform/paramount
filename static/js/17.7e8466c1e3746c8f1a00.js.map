{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/Switch.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Switch/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","elevation","theme","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","default","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","hasGrid","height","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","Spacing","marshalledProps","_objectSpread2","gridPointMultiplier","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Spacing","_react2","_interopRequireDefault","_docz","_reactPowerplug","_","_Layout","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","Props","Toggle","Switch","initial","_ref2","on","toggle","isSwitchedOn","onChange","isDisabled","onIcon","offIcon","duration","getStyles","circleStyle","containerStyle","backgroundColorOff","backgroundColorOn","circleColorOff","circleColorOn","of","isMDXComponent","getSwitchVariables","colors","background","greyDefault","primaryDefault","white","alignItems","backgroundColor","display","justifyContent","width","container","greyLight","flexDirection","getSwitchStyles","switchVariables","_icons","_mergeStyles3","_Switch","SwitchBase","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","handleOnPress","e","runAnimation","_this$props","animValue","fromValue","toValue","Animated","timing","state","animXValue","start","_mergeStyles","mergeStyles","endPosition","Value","circlePosXEnd","circlePosXStart","newProps","_this$props2","accessibilityProps","_this$state","_mergeStyles2","TouchableOpacity","accessible","accessibilityLabel","onPress","activeOpacity","alignSelf","flexWrap","interpolate","inputRange","outputRange","transform","translateX","Icon","name","size","color","text","primary","Component","defaultProps","withTheme","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles"],"mappings":"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","file":"static/js/17.b847de9b.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { Box, BoxProps } from './Box';\n\nexport type GridScale =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18;\n\nconst DEFAULT_GRD_POINT_MULTPLIER = 8;\n\nexport interface SpacingProps extends BoxProps {\n  gridPointMultiplier?: number;\n  height?: GridScale;\n\n  margin?: GridScale;\n  marginBottom?: GridScale;\n  marginEnd?: GridScale;\n  marginHorizontal?: GridScale;\n  marginLeft?: GridScale;\n  marginRight?: GridScale;\n  marginStart?: GridScale;\n  marginTop?: GridScale;\n  marginVertical?: GridScale;\n\n  padding?: GridScale;\n  paddingBottom?: GridScale;\n  paddingEnd?: GridScale;\n  paddingHorizontal?: GridScale;\n  paddingLeft?: GridScale;\n  paddingRight?: GridScale;\n  paddingStart?: GridScale;\n  paddingTop?: GridScale;\n  paddingVertical?: GridScale;\n}\n\nconst hasGrid = {\n  height: true,\n\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n};\n\nexport const Spacing = (props: SpacingProps) => {\n  const marshalledProps = { ...props };\n\n  for (const prop in props) {\n    // @ts-ignore\n    if (hasGrid[prop]) {\n      // @ts-ignore\n      marshalledProps[prop] =\n        // @ts-ignore\n        props[prop] *\n        (props.gridPointMultiplier || DEFAULT_GRD_POINT_MULTPLIER);\n    }\n  }\n\n  return <Box {...marshalledProps} />;\n};\n","export * from './Box';\nexport * from './Spacing';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { Switch } from '.';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box>\\n  <Toggle initial={true}>\\n    {({ on, toggle }) => (\\n      <Switch\\n        isSwitchedOn={on}\\n        onChange={toggle}\\n        isDisabled={false}\\n        onIcon={null}\\n        offIcon={null}\\n        duration={300}\\n        getStyles={(props, theme) => ({\\n          circleStyle: {},\\n          containerStyle: {},\\n          backgroundColorOff: \\'#F5F6F7\\',\\n          backgroundColorOn: \\'#67c6bb\\',\\n          circleColorOff: \\'white\\',\\n          circleColorOn: \\'white\\',\\n        })}\\n      />\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      Switch,\n      Box\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Toggle initial={true} mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Switch isSwitchedOn={on} onChange={toggle} isDisabled={false} onIcon={null} offIcon={null} duration={300} getStyles={(props, theme) => ({\n            circleStyle: {},\n            containerStyle: {},\n            backgroundColorOff: '#F5F6F7',\n            backgroundColorOn: '#67c6bb',\n            circleColorOff: 'white',\n            circleColorOn: 'white'\n          })} mdxType=\"Switch\" />}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Switch} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface SwitchVariables {\n  backgroundColorOff: string;\n  backgroundColorOn: string;\n  circleColorOff: string;\n  circleColorOn: string;\n\n  container: ViewStyle & SwitchStylesRequired;\n  circle: ViewStyle & SwitchStylesRequired;\n}\n\nexport const getSwitchVariables = (theme: Theme): SwitchVariables => {\n  return {\n    backgroundColorOff: theme.colors.background.greyDefault,\n    backgroundColorOn: theme.colors.background.primaryDefault,\n    circleColorOff: theme.colors.background.white,\n    circleColorOn: theme.colors.background.white,\n\n    circle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.white,\n      borderRadius: 24,\n      display: 'flex',\n      height: 38,\n      justifyContent: 'center',\n      padding: 0,\n      width: 38,\n    },\n\n    container: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.greyLight,\n      borderRadius: 24,\n      flexDirection: 'row',\n      height: 44,\n      padding: 3,\n      width: 72,\n    },\n  };\n};\n\nexport interface SwitchStylesRequired {\n  width: number;\n  padding: number;\n}\n\nexport interface SwitchStyles {\n  containerStyle: ViewStyle & SwitchStylesRequired;\n  circleStyle: ViewStyle & SwitchStylesRequired;\n  backgroundColorOff: string;\n  backgroundColorOn: string;\n  circleColorOff: string;\n  circleColorOn: string;\n}\nexport type GetSwitchStyles = (theme: Theme) => SwitchStyles;\n\nexport const getSwitchStyles: GetSwitchStyles = (theme: Theme) => {\n  const switchVariables = getSwitchVariables(theme);\n\n  return {\n    backgroundColorOff: switchVariables.backgroundColorOff,\n    backgroundColorOn: switchVariables.backgroundColorOn,\n    circleColorOff: switchVariables.circleColorOff,\n    circleColorOn: switchVariables.circleColorOn,\n    circleStyle: switchVariables.circle,\n    containerStyle: switchVariables.container,\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  Animated,\n  GestureResponderEvent,\n  TouchableOpacity,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetSwitchStyles,\n  getSwitchStyles,\n  SwitchStyles,\n} from './Switch.styles';\n\n/* Copy pasted from https://github.com/react-native-seoul/react-native-switch-toggle */\nexport interface SwitchProps extends AccessibilityProps {\n  isSwitchedOn?: boolean;\n  isDisabled?: boolean;\n  onChange?: (event: GestureResponderEvent) => void;\n  onIcon?: React.ReactNode;\n  offIcon?: React.ReactNode;\n  duration?: number;\n  theme: Theme;\n  testID?: string;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetSwitchStyles, DeepPartial<SwitchStyles>>;\n}\n\nexport interface SwitchState {\n  animXValue: Animated.Value;\n  circlePosXEnd: number;\n  circlePosXStart: number;\n}\n\nexport class SwitchBase extends React.Component<SwitchProps, SwitchState> {\n  public static defaultProps = {\n    backgroundColorOff: 'rgb(215,215,215)',\n    backgroundColorOn: 'rgb(227,227,227)',\n    circleColorOff: 'white',\n    circleColorOn: 'rgb(102,134,205)',\n    duration: 300,\n\n    circleStyle: {\n      backgroundColor: 'white',\n      borderRadius: 15,\n      height: 30,\n      width: 30,\n    },\n    containerStyle: {\n      backgroundColor: 'rgb(227,227,227)',\n      borderRadius: 18,\n      height: 36,\n      padding: 3,\n      width: 72,\n    },\n    isSwitchedOn: false,\n    onChange: () => null,\n  };\n\n  constructor(props: SwitchProps) {\n    super(props);\n    const { theme, getStyles } = props;\n    const { circleStyle, containerStyle } = mergeStyles(\n      getSwitchStyles,\n      getStyles,\n    )(theme);\n\n    const endPosition =\n      containerStyle.width - (circleStyle.width + containerStyle.padding * 2);\n\n    this.state = {\n      animXValue: new Animated.Value(props.isSwitchedOn ? 1 : 0),\n      circlePosXEnd: endPosition,\n      circlePosXStart: 0,\n    };\n  }\n\n  // TODO: When converting to hooks, we can use the follow API:\n  // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n  public componentWillReceiveProps(newProps: SwitchProps) {\n    if (newProps.isSwitchedOn !== this.props.isSwitchedOn) {\n      this.runAnimation();\n    }\n  }\n\n  public handleOnPress = (e: GestureResponderEvent) => {\n    const { onChange } = this.props;\n    this.runAnimation();\n\n    if (onChange) onChange(e);\n  };\n\n  public runAnimation = () => {\n    const { duration, isSwitchedOn } = this.props;\n\n    const animValue = {\n      duration,\n      fromValue: isSwitchedOn ? 1 : 0,\n      toValue: isSwitchedOn ? 0 : 1,\n    };\n\n    Animated.timing(this.state.animXValue, animValue).start();\n  };\n\n  public render() {\n    const {\n      onIcon,\n      offIcon,\n      theme,\n      isSwitchedOn,\n      getStyles,\n      testID,\n      ...accessibilityProps\n    } = this.props;\n    const { animXValue, circlePosXStart, circlePosXEnd } = this.state;\n\n    const {\n      circleStyle,\n      containerStyle,\n      backgroundColorOff,\n      backgroundColorOn,\n      circleColorOff,\n      circleColorOn,\n    } = mergeStyles(getSwitchStyles, getStyles)(theme);\n\n    return (\n      <TouchableOpacity\n        accessible\n        accessibilityLabel=\"switch\"\n        onPress={this.handleOnPress}\n        activeOpacity={1}\n        style={{\n          alignSelf: 'flex-start',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n        }}\n        testID={testID}\n        {...accessibilityProps}\n      >\n        <Animated.View\n          style={[\n            containerStyle,\n            {\n              backgroundColor: animXValue.interpolate({\n                inputRange: [0, 1],\n                outputRange: [backgroundColorOff, backgroundColorOn],\n              }),\n            },\n          ]}\n        >\n          <Animated.View\n            style={[\n              circleStyle,\n              {\n                backgroundColor: animXValue.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [circleColorOff, circleColorOn],\n                }),\n              },\n              {\n                transform: [\n                  {\n                    translateX: animXValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [circlePosXStart, circlePosXEnd],\n                    }),\n                  },\n                ],\n              },\n            ]}\n          >\n            {isSwitchedOn\n              ? onIcon || (\n                  <Icon\n                    name=\"check\"\n                    size={20}\n                    color={theme.colors.text.primary}\n                  />\n                )\n              : offIcon || (\n                  <Icon name=\"x\" size={20} color={theme.colors.text.default} />\n                )}\n          </Animated.View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport const Switch = withTheme(SwitchBase);\n","export * from './Switch';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}