{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/RefMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/ArrowedPositioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/Positioner.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/getPositionerArrow.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Positioner/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Intent.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Position.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/StackingOrder.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","RefMeasure","forwardRef","createRef","children","onMeasure","_React$useState","useState","pageX","pageY","width","x","y","_React$useState2","_slicedToArray2","measurements","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","current","newMeasurements","onLayout","e","nativeEvent","isWindowAboveMinWidth","minWidth","Dimensions","isWindowBelowMaxWidth","maxWidth","Responsive","isAboveMinWidth","isBelowMaxWidth","matches","_RefMeasure","ViewMeasure","viewProps","isRenderProp","_ref","ref","_ViewMeasure","_Responsive","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","Component","defaultProps","_LoadingDots","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","Modal","ModalContent","Box","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","freezeBody","document","body","overflow","unfreezeBody","activateFocus","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","bottom","left","position","right","top","zIndex","prototype","hasOwnProperty","_exportNames","_FormModal","_Modal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_Overlay","Overlay","_props$transparent","TouchableWithoutFeedback","_Positioner","_getPositionerArrow","ArrowedPositioned","isFullWidth","Positioner","getPositionerArrowParams","targetMeasurements","arrow","getFullWidthPositionerArrow","getPositionerArrow","Fragment","getPositionerVariables","modalContainer","positioner","getPositionerStyles","positionerVariables","modalContainerStyle","positionerStyle","_constants","_Helpers","resolveCorrectPosition","shouldFlipBottomToTop","shouldFlipLeftToRight","shouldFlipRightToLeft","shouldFlipTopToBottom","newPosition","includes","POSITION","BOTTOM","replace","TOP","LEFT","RIGHT","getIsOverflowing","_ref2","positionerMeasurements","screenLayout","isDynamicContent","initialMeasurements","PositionerBase","hasOverflowedCounter","_props$isDynamicConte","childrenMeasurements","isAdjustingContent","_this2","_this$props$isDynamic","setTimeout","setState","_this3","parentHeight","isVisible","_this$props$isFullWid","_this$props$onClose","_this$props$position","_this$state","finalTargetMeasurements","hasPositionerMeasurementsMeasured","getPositionerPositionParams","offset","_ref3","params","BOTTOM_RIGHT","getPositionerFullWidthPosition","isOverflowing","TOP_LEFT","transform","translateX","TOP_RIGHT","translateY","BOTTOM_LEFT","getPositionerPosition","correctedPosition","positionerPositionStyle","withTheme","commonStyle","TopLeftArrow","borderTopColor","marginBottom","TopArrow","TopRightArrow","LeftArrow","_ref4","borderLeftColor","RightArrow","_ref5","borderRightColor","BottomRightArrow","_ref6","borderBottomColor","marginTop","BottomArrow","_ref7","BottomLeftArrow","_ref8","_ref9","FullWidthTopArrow","_ref10","FullWidthBottomArrow","_ref11","_ref12","_ArrowedPositioner","INTENT","info","success","warning","FOCUSED","STACKING_CONTEXT","POSITIONER","OVERLAY","TOASTER","_StackingOrder","_Intent","_Position","Feather","IconTag","concat","result","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/3.a6ee6597.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\nexport interface RefMeasureChildrenProps {\n  measurements: Measurements;\n  forwardRef: React.RefObject<any>;\n  onLayout: (e: LayoutChangeEvent) => void;\n  measure: (layout?: LayoutRectangle) => void;\n}\nexport type RefMeasureRenderPropType = (\n  props: RefMeasureChildrenProps,\n) => React.ReactElement | null;\n\nexport interface RefMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  children: RefMeasureRenderPropType;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const RefMeasure = (props: RefMeasureProps) => {\n  const forwardRef = React.createRef();\n  const { children, onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return children({\n    forwardRef,\n    measure: handleMeasure,\n    measurements,\n    onLayout: handleLayout,\n  });\n};\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, RefMeasure } from './RefMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n\n  return (\n    <RefMeasure onMeasure={onMeasure}>\n      {({ forwardRef, onLayout, measurements }) => {\n        return (\n          <View\n            ref={forwardRef}\n            onLayout={onLayout}\n            // @ts-ignore\n            children={isRenderProp ? children(measurements) : children}\n            {...viewProps}\n          />\n        );\n      }}\n    </RefMeasure>\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './RefMeasure';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Positioner, PositionerProps } from '../Positioner';\nimport {\n  getFullWidthPositionerArrow,\n  getPositionerArrow,\n} from './getPositionerArrow';\n\nexport const ArrowedPositioned = (props: PositionerProps) => {\n  const { content, isFullWidth } = props;\n  const theme = useTheme();\n\n  return (\n    <Positioner\n      {...props}\n      content={({ position, targetMeasurements }) => {\n        const getPositionerArrowParams = {\n          position,\n          targetMeasurements,\n          theme,\n        };\n        const arrow = isFullWidth\n          ? getFullWidthPositionerArrow(getPositionerArrowParams)\n          : getPositionerArrow(getPositionerArrowParams);\n        return (\n          <>\n            {content}\n            {arrow}\n          </>\n        );\n      }}\n    />\n  );\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PositionerVariables {\n  positioner: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getPositionerVariables = (theme: Theme): PositionerVariables => {\n  return {\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    positioner: {\n      position: 'absolute',\n      zIndex: 1,\n    },\n  };\n};\n\nexport interface PositionerStyles {\n  positionerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\n\nexport type GetPositionerStyles = (theme: Theme) => PositionerStyles;\n\nexport const getPositionerStyles: GetPositionerStyles = theme => {\n  const positionerVariables = getPositionerVariables(theme);\n\n  return {\n    modalContainerStyle: positionerVariables.modalContainer,\n    positionerStyle: positionerVariables.positioner,\n  };\n};\n","import * as React from 'react';\nimport { Dimensions, ScaledSize, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { POSITION, Position } from '../../constants';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Measurements, ViewMeasure } from '../Helpers';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  GetPositionerStyles,\n  getPositionerStyles,\n  PositionerStyles,\n} from './Positioner.styles';\n\nexport interface ContentProps {\n  positionerMeasurements: Measurements;\n  targetMeasurements: Measurements;\n  position: Position;\n}\n\nexport interface PositionerProps {\n  theme: Theme;\n  onClose?: () => void;\n  /** For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it. This is not `true` by default because it may causes small delay for the Positioner to be properly available. @default false */\n  isDynamicContent?: boolean;\n  /** Sets the positioner to cover full width. Useful when wanting to display on mobile devices a full menu. Overrides `isDynamicContent`. Ignores `right` and `left` positions. */\n  isFullWidth?: boolean;\n  children: React.ReactNode;\n  content: (props: ContentProps) => React.ReactNode;\n  /**\n   * Positioner uses window height to calculate its position, and whether it should flip to top if it at the bottom (So that it does not pop up outside the window height).\n   * However, sometimes window.height is shorter than the parent container, unnecessarily flipping it to `top`. To fix this behavior,\n   * you can pass in height of the parent so that it will use that instead of window's height\n   */\n  parentHeight?: number;\n  isVisible?: boolean;\n  position?: Position;\n  targetMeasurements?: Measurements;\n  getStyles?: ReplaceReturnType<\n    GetPositionerStyles,\n    DeepPartial<PositionerStyles>\n  >;\n}\n\nconst DEFAULT_MARGIN = 24;\nconst DEFAULT_OFFSET = 14;\n/** Time to allow all the calculation to be done */\nconst RENDER_CALCULATION_DURATION = 700;\n\nconst resolveCorrectPosition = (position: Position) => ({\n  shouldFlipBottomToTop,\n  shouldFlipLeftToRight,\n  shouldFlipRightToLeft,\n  shouldFlipTopToBottom,\n}: {\n  shouldFlipBottomToTop: boolean;\n  shouldFlipLeftToRight: boolean;\n  shouldFlipRightToLeft: boolean;\n  shouldFlipTopToBottom: boolean;\n}) => {\n  let newPosition = position;\n\n  if (position.includes(POSITION.BOTTOM) && shouldFlipBottomToTop) {\n    newPosition = newPosition.replace(\n      POSITION.BOTTOM,\n      POSITION.TOP,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.TOP) && shouldFlipTopToBottom) {\n    newPosition = newPosition.replace(\n      POSITION.TOP,\n      POSITION.BOTTOM,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.LEFT) && shouldFlipLeftToRight) {\n    newPosition = newPosition.replace(\n      POSITION.LEFT,\n      POSITION.RIGHT,\n    ) as Position;\n  }\n\n  if (position.includes(POSITION.RIGHT) && shouldFlipRightToLeft) {\n    newPosition = newPosition.replace(\n      POSITION.RIGHT,\n      POSITION.LEFT,\n    ) as Position;\n  }\n\n  return newPosition;\n};\n\ninterface GetPositionerPositionParams {\n  screenLayout: ScaledSize;\n  position: Position;\n  targetMeasurements: Measurements;\n  positionerMeasurements: Measurements;\n  offset: number;\n}\nconst getPositionerPosition = (params: GetPositionerPositionParams) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight:\n      position === POSITION.LEFT\n        ? positionerMeasurements.width + offset + DEFAULT_MARGIN >\n          targetMeasurements.pageX - offset\n        : positionerMeasurements.width + offset >\n          screenLayout.width - targetMeasurements.pageX,\n    shouldFlipRightToLeft:\n      position === POSITION.RIGHT\n        ? targetMeasurements.pageX +\n            targetMeasurements.width +\n            positionerMeasurements.width +\n            offset >\n          screenLayout.width - offset\n        : targetMeasurements.pageX <\n          positionerMeasurements.width + DEFAULT_MARGIN,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  });\n\n  const isOverflowing = getIsOverflowing({\n    position,\n    positionerMeasurements,\n    screenLayout,\n  });\n\n  switch (newPosition) {\n    case POSITION.TOP_LEFT:\n      return {\n        position: POSITION.TOP_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.TOP_RIGHT:\n      return {\n        position: POSITION.TOP_RIGHT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width -\n                targetMeasurements.pageX -\n                targetMeasurements.width,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width +\n                targetMeasurements.width,\n            }),\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.LEFT:\n      return {\n        position: POSITION.LEFT,\n\n        ...(isOverflowing\n          ? {\n              left: 0,\n              marginLeft: DEFAULT_MARGIN,\n              marginRight:\n                screenLayout.width - targetMeasurements.pageX + offset,\n            }\n          : {\n              left:\n                targetMeasurements.pageX -\n                positionerMeasurements.width -\n                offset,\n            }),\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.RIGHT:\n      return {\n        position: POSITION.RIGHT,\n\n        left: targetMeasurements.pageX + targetMeasurements.width + offset,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY,\n        transform: [\n          {\n            translateY:\n              -positionerMeasurements.height / 2 +\n              targetMeasurements.height / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_RIGHT:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n\n        left:\n          targetMeasurements.pageX -\n          positionerMeasurements.width +\n          targetMeasurements.width,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: targetMeasurements.pageX,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n        transform: [\n          {\n            translateX:\n              -positionerMeasurements.width / 2 + targetMeasurements.width / 2,\n          },\n        ],\n      };\n    case POSITION.BOTTOM_LEFT:\n      return {\n        position: POSITION.BOTTOM_LEFT,\n\n        left: targetMeasurements.pageX,\n        marginRight: DEFAULT_MARGIN,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nconst getPositionerFullWidthPosition = (\n  params: GetPositionerPositionParams,\n) => {\n  const {\n    screenLayout,\n    position,\n    targetMeasurements,\n    positionerMeasurements,\n    offset,\n  } = params;\n\n  const newPosition = resolveCorrectPosition(position)({\n    shouldFlipBottomToTop:\n      positionerMeasurements.height + offset >\n      screenLayout.height -\n        targetMeasurements.pageY +\n        targetMeasurements.height -\n        offset,\n    shouldFlipLeftToRight: false,\n    shouldFlipRightToLeft: false,\n    shouldFlipTopToBottom:\n      positionerMeasurements.height + offset > targetMeasurements.pageY,\n  })\n    .replace('-left', '')\n    .replace('-right', '');\n\n  switch (newPosition) {\n    case POSITION.TOP:\n      return {\n        position: POSITION.TOP,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY - positionerMeasurements.height - offset,\n      };\n    case POSITION.BOTTOM:\n      return {\n        position: POSITION.BOTTOM,\n\n        left: 0,\n        right: 0,\n        top: targetMeasurements.pageY + targetMeasurements.height + offset,\n      };\n    default:\n      return {\n        position: POSITION.BOTTOM_RIGHT,\n      };\n  }\n};\n\nexport const getIsOverflowing = ({\n  positionerMeasurements,\n  screenLayout,\n  position,\n}: {\n  positionerMeasurements: Measurements;\n  screenLayout: ScaledSize;\n  position: Position;\n}) => {\n  if (positionerMeasurements.width > screenLayout.width - 48) {\n    return true;\n  }\n\n  return false;\n};\n\nexport interface PositionerState {\n  /** This is the adjusted measurements of the positioner when the content is of dynamic size. It adjusts several times when its position is being calculated to account for things like window overflow, margins and other layout calculations */\n  positionerMeasurements: Measurements;\n  /** Measurements of the wrapped component */\n  childrenMeasurements: Measurements;\n  /** HACK: For dynamic size content of positioners we have to render all the items first so it precalculates positioner position and layout, so that when user opens positioner there is no flash of adjusting positioner but immediately shows it */\n  isAdjustingContent: boolean;\n}\n\nconst defaultProps = {\n  isDynamicContent: false,\n  isFullWidth: false,\n  position: POSITION.BOTTOM,\n};\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nexport class PositionerBase extends React.Component<\n  PositionerProps,\n  PositionerState\n> {\n  /** Hack to get correct position of dynamic content */\n  private hasOverflowedCounter: number = 0;\n\n  constructor(props: PositionerProps) {\n    super(props);\n    const { isDynamicContent = defaultProps.isDynamicContent } = props;\n\n    this.state = {\n      childrenMeasurements: initialMeasurements,\n      isAdjustingContent: isDynamicContent,\n      positionerMeasurements: initialMeasurements,\n    };\n  }\n\n  public componentDidMount() {\n    const { isDynamicContent = defaultProps.isDynamicContent } = this.props;\n\n    if (isDynamicContent) {\n      setTimeout(() => {\n        this.setState({ isAdjustingContent: false });\n      }, RENDER_CALCULATION_DURATION);\n    }\n  }\n\n  public render() {\n    const {\n      theme,\n      getStyles,\n      children,\n      content,\n      parentHeight,\n      isVisible,\n      isFullWidth = defaultProps.isFullWidth,\n      onClose = () => null,\n      position = defaultProps.position,\n      targetMeasurements,\n    } = this.props;\n    const {\n      positionerMeasurements,\n      childrenMeasurements,\n      isAdjustingContent,\n    } = this.state;\n\n    const { positionerStyle, modalContainerStyle } = mergeStyles(\n      getPositionerStyles,\n      getStyles,\n    )(theme);\n\n    const screenLayout = Dimensions.get('window');\n\n    const finalTargetMeasurements = targetMeasurements || childrenMeasurements;\n    const hasPositionerMeasurementsMeasured =\n      positionerMeasurements.width !== 0 && positionerMeasurements.height !== 0;\n    const getPositionerPositionParams = {\n      offset: DEFAULT_OFFSET,\n      position,\n      positionerMeasurements,\n      screenLayout: {\n        ...screenLayout,\n        height: parentHeight || screenLayout.height,\n      },\n      targetMeasurements: finalTargetMeasurements,\n    };\n\n    const {\n      position: correctedPosition,\n      ...positionerPositionStyle\n    } = isFullWidth\n      ? getPositionerFullWidthPosition(getPositionerPositionParams)\n      : getPositionerPosition(getPositionerPositionParams);\n\n    return (\n      <>\n        {targetMeasurements ? (\n          children\n        ) : (\n          <ViewMeasure\n            onMeasure={measurements => {\n              this.setState({ childrenMeasurements: measurements });\n            }}\n          >\n            {children}\n          </ViewMeasure>\n        )}\n        <Modal\n          visible={isAdjustingContent || isVisible}\n          transparent\n          onRequestClose={onClose}\n          isBackgroundScrollable\n        >\n          <View style={modalContainerStyle}>\n            <ViewMeasure\n              style={{\n                ...positionerStyle,\n                ...positionerPositionStyle,\n                // Hide flash mis-positioned content\n                opacity:\n                  hasPositionerMeasurementsMeasured && !isAdjustingContent\n                    ? 1\n                    : 0,\n              }}\n              onMeasure={measurements => {\n                const isOverflowing = getIsOverflowing({\n                  position,\n                  positionerMeasurements,\n                  screenLayout,\n                });\n                /**\n                 * Positioner usually gets expected positioning after it has overflowed once.\n                 */\n\n                if (this.hasOverflowedCounter === 0) {\n                  this.setState({ positionerMeasurements: measurements });\n                } else if (!isOverflowing) {\n                  this.setState({ positionerMeasurements: measurements });\n                }\n\n                if (isOverflowing) {\n                  this.hasOverflowedCounter++;\n                }\n              }}\n            >\n              {content({\n                position: correctedPosition,\n                positionerMeasurements,\n                targetMeasurements: finalTargetMeasurements,\n              })}\n            </ViewMeasure>\n            <Overlay transparent onPress={onClose} />\n          </View>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport const Positioner = withTheme(PositionerBase);\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Position } from '../../constants';\nimport { Theme } from '../../theme';\nimport { Measurements } from '../Helpers';\n\nconst arrowWidth = 11;\nconst commonStyle = {\n  borderColor: 'transparent',\n  borderWidth: 11,\n  height: 0,\n  position: 'absolute',\n  width: 0,\n} as ViewStyle;\n\nexport const TopLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: '50%',\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const TopRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        marginBottom: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        marginBottom: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const LeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: theme.colors.border.default,\n        marginRight: -arrowWidth * 2,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderLeftColor: 'white',\n        marginRight: -arrowWidth * 2 + 1,\n        right: 0,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const RightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: theme.colors.border.default,\n        left: 0,\n        marginLeft: -arrowWidth * 2,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderRightColor: 'white',\n        left: 0,\n        marginLeft: -arrowWidth * 2 + 1,\n        top: '50%',\n        transform: [{ translateY: -arrowWidth + 1 }],\n      }}\n    />\n  </>\n);\n\nexport const BottomRightArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: targetMeasurements.width / 2,\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        marginTop: -arrowWidth * 2,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        marginTop: -arrowWidth * 2 + 1,\n        right: '50%',\n        top: 0,\n        transform: [{ translateX: arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const BottomLeftArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top-left':\n      return (\n        <TopLeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'top':\n      return <TopArrow theme={theme} targetMeasurements={targetMeasurements} />;\n    case 'top-right':\n      return (\n        <TopRightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'left':\n      return (\n        <LeftArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'right':\n      return (\n        <RightArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-right':\n      return (\n        <BottomRightArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <BottomArrow theme={theme} targetMeasurements={targetMeasurements} />\n      );\n    case 'bottom-left':\n      return (\n        <BottomLeftArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n\nexport const FullWidthTopArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: theme.colors.border.default,\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderTopColor: 'white',\n        bottom: 0,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginBottom: -arrowWidth * 2 + 1,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const FullWidthBottomArrow = ({\n  theme,\n  targetMeasurements,\n}: {\n  theme: Theme;\n  targetMeasurements: Measurements;\n}) => (\n  <>\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: theme.colors.border.default,\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n    <View\n      style={{\n        ...commonStyle,\n        borderBottomColor: 'white',\n        left: targetMeasurements.pageX + targetMeasurements.width / 2,\n        marginTop: -arrowWidth * 2 + 1,\n        top: 0,\n        transform: [{ translateX: -arrowWidth }],\n      }}\n    />\n  </>\n);\n\nexport const getFullWidthPositionerArrow = ({\n  position,\n  targetMeasurements,\n  theme,\n}: {\n  position: Position;\n  targetMeasurements: Measurements;\n  theme: Theme;\n}) => {\n  switch (position) {\n    case 'top':\n      return (\n        <FullWidthTopArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    case 'bottom':\n      return (\n        <FullWidthBottomArrow\n          theme={theme}\n          targetMeasurements={targetMeasurements}\n        />\n      );\n    default:\n      return <View />;\n  }\n};\n","export * from './Positioner';\nexport * from './ArrowedPositioner';\n","export interface Intents {\n  danger: 'danger';\n  info: 'info';\n  success: 'success';\n  warning: 'warning';\n}\n\nexport type Intent = keyof Intents;\n\nexport const INTENT: Intents = {\n  danger: 'danger',\n  info: 'info',\n  success: 'success',\n  warning: 'warning',\n};\n","type TOP = 'top';\ntype TOP_LEFT = 'top-left';\ntype TOP_RIGHT = 'top-right';\ntype BOTTOM = 'bottom';\ntype BOTTOM_LEFT = 'bottom-left';\ntype BOTTOM_RIGHT = 'bottom-right';\ntype LEFT = 'left';\ntype RIGHT = 'right';\n\nexport interface PositionInterface {\n  TOP: TOP;\n  TOP_LEFT: TOP_LEFT;\n  TOP_RIGHT: TOP_RIGHT;\n  BOTTOM: BOTTOM;\n  BOTTOM_LEFT: BOTTOM_LEFT;\n  BOTTOM_RIGHT: BOTTOM_RIGHT;\n  LEFT: LEFT;\n  RIGHT: RIGHT;\n}\n\nexport const POSITION: PositionInterface = {\n  TOP: 'top',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n\n  BOTTOM: 'bottom',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\nexport type Position =\n  | TOP\n  | TOP_LEFT\n  | TOP_RIGHT\n  | BOTTOM\n  | BOTTOM_LEFT\n  | BOTTOM_RIGHT\n  | LEFT\n  | RIGHT;\n","/**\n * Stacking order contains z-index values that are used through.\n * Note that the Stack component might increase the z-index for certain components.\n */\nexport default {\n  /**\n   * Used for focused buttons and controls.\n   */\n  FOCUSED: 2,\n\n  /**\n   * Used as the default for the StackingContext.\n   */\n  STACKING_CONTEXT: 5,\n\n  /**\n   * Used as the default for the Positioner.\n   */\n  POSITIONER: 10,\n\n  /**\n   * Used for the Overlay and everything that's inside such as Dialog + SideSheet.\n   */\n  OVERLAY: 20,\n\n  /**\n   * Used for the toasts in the toaster. Appears on top of everything else.\n   */\n  TOASTER: 30,\n};\n","export { default as StackingOrder } from './StackingOrder';\nexport { Intent, Intents } from './Intent';\nexport * from './Position';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}