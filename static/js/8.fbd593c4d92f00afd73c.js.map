{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","this","Toggle","TouchableOpacity","Props","Dialog","Box","Heading","initial","_ref2","on","toggle","header","padding","footer","console","log","isVisible","onRequestClose","useHistory","modalContainerStyle","containerStyle","bodyStyle","of","isMDXComponent","getDialogVariables","body","maxHeight","container","elevation","maxWidth","minWidth","position","zIndex","modalContainer","width","getDialogStyles","dialogVariables","_Modal","_Overlay","_Dialog","children","_props$onRequestClose","Modal","visible","transparent","Overlay","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","map","index","marginLeft","marginRight","_LoadingDots","_ModalContent","CloseableModal","rightSide","onClose","modalProps","ModalContent","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","_HistoryModal","_focusTrap","ReactDOM","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_props$transparent","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/8.c63802ef.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Toggle } from 'react-powerplug';\nimport { TouchableOpacity } from 'react-native';\nimport { Playground, Props } from 'docz';\nimport { Icon } from '../../icons';\nimport { Dialog } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text, Heading } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dialog\"\n    }}>{`Dialog`}</h1>\n    <p>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <Dialog\\n        header={\\n          <Spacing\\n            padding={2}\\n            flexDirection=\\\"row\\\"\\n            justifyContent=\\\"space-between\\\"\\n            alignItems=\\\"center\\\"\\n          >\\n            <Heading>Title</Heading>\\n            <TouchableOpacity onPress={toggle}>\\n              <Icon name=\\\"x\\\" size={24} />\\n            </TouchableOpacity>\\n          </Spacing>\\n        }\\n        footer={\\n          <Spacing padding={2} flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n            <Button appearance=\\\"minimal\\\" onPress={toggle} title=\\\"Cancel\\\" />\\n            <Spacing paddingLeft={2}>\\n              <Button\\n                color=\\\"primary\\\"\\n                onPress={() => console.log(\\'Button clicked\\')}\\n                title=\\\"Accept\\\"\\n              />\\n            </Spacing>\\n          </Spacing>\\n        }\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        useHistory={false}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the dialog</Text>\\n        </Box>\\n      </Dialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Toggle,\n      TouchableOpacity,\n      Playground,\n      Props,\n      Icon,\n      Dialog,\n      Button,\n      Box,\n      Spacing,\n      Text,\n      Heading\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Box mdxType=\"Box\">\n        <Dialog header={<Spacing padding={2} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mdxType=\"Spacing\">\n              <Heading mdxType=\"Heading\">Title</Heading>\n              <TouchableOpacity onPress={toggle} mdxType=\"TouchableOpacity\">\n                <Icon name=\"x\" size={24} mdxType=\"Icon\" />\n              </TouchableOpacity>\n            </Spacing>} footer={<Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\" mdxType=\"Spacing\">\n              <Button appearance=\"minimal\" onPress={toggle} title=\"Cancel\" mdxType=\"Button\" />\n              <Spacing paddingLeft={2} mdxType=\"Spacing\">\n                <Button color=\"primary\" onPress={() => console.log('Button clicked')} title=\"Accept\" mdxType=\"Button\" />\n              </Spacing>\n            </Spacing>} isVisible={on} onRequestClose={toggle} useHistory={false} getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {}\n          })} mdxType=\"Dialog\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle} title=\"Open dialog\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"dialog-props\"\n    }}>{`Dialog Props`}</h3>\n    <Props of={Dialog} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\n","export * from './Dialog';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}