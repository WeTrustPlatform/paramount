{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/NativePickerItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButtonWrapper.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","Feather","_theme","_Text","Icon","_ref","name","color","size","theme","useTheme","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","createElement","getTextColor","colors","text","_Icon","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_react2","_interopRequireDefault","_docz","_reactPowerplug","_NativePicker","_NativePickerItem","layoutProps","MDXLayout","MDXContent","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","Playground","__position","__code","__scope","this","Props","State","NativePicker","NativePickerItem","initial","value","_ref2","state","setState","selectedValue","onValueChange","itemValue","itemIndex","getStyles","pickerStyle","itemStyle","label","isMDXComponent","_reactNative","_mergeStyles2","_PickerButton","_PickerButtonWrapper","NativePickerBase","_props$size","innerRef","pickerProps","_mergeStyles","mergeStyles","getPickerButtonStyles","PickerButtonWrapper","Picker","ref","style","forwardRef","RNPicker","Item","pickerStylesProps","controlSizeStyles","small","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","textSizeStyles","textSizes","containerStyle","backgroundColor","background","content","position","_objectSpread2","appearance","borderColor","border","borderWidth","width","rightContainerStyle","alignItems","display","justifyContent","paddingHorizontal","right","zIndex","children","View","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","textStyle","textAlign","alignSelf","flexDirection","fontStyle","textTransform","_deepmerge","_react","_defaultTheme","ThemeContext","createContext","defaultTheme","createTheme","ThemeProvider","_props$value","Provider","useContext","_palette","base","overlay","greyLight","palette","neutral","lightest","greyDefault","greyDark","light","primaryLight","teal","primaryDefault","primaryDark","dark","secondaryLight","orange","secondaryDefault","secondaryDark","dangerLight","red","dangerDefault","dangerDark","infoLight","blue","infoDefault","infoDark","successLight","green","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","darkest","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fills","solid","yellow","purple","subtle","Platform","OS","heading","mono","undefined","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","_Theme","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/12.22c2402f.js","sourcesContent":["import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { NativePicker } from './NativePicker';\nimport { NativePickerItem } from './NativePickerItem';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"nativepicker\"\n    }}>{`NativePicker`}</h1>\n    <Playground __position={0} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <NativePicker\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      size=\\\"large\\\"\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <NativePickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <NativePickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <NativePickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <NativePickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <NativePickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <NativePickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <NativePickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <NativePickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <NativePickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <NativePickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <NativePickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <NativePickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <NativePickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <NativePickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <NativePickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <NativePickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <NativePickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <NativePickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <NativePickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </NativePicker>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      NativePicker,\n      NativePickerItem\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'js'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <NativePicker selectedValue={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} size=\"large\" getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {}\n        })} mdxType=\"NativePicker\">\n        <NativePickerItem label=\"C\" value=\"c\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"C#\" value=\"c#\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"C++\" value=\"c++\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"CSS\" value=\"css\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Elixir\" value=\"elixir\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Elm\" value=\"elm\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Erlang\" value=\"erlang\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Go\" value=\"go\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Haskell\" value=\"haskell\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"HTML\" value=\"html\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Java\" value=\"java\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"JavaScript\" value=\"js\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Lua\" value=\"lua\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Python\" value=\"python\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"R\" value=\"r\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Ruby\" value=\"ruby\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Rust\" value=\"rust\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Switft\" value=\"swift\" mdxType=\"NativePickerItem\" />\n        <NativePickerItem label=\"Typescript\" value=\"typescript\" mdxType=\"NativePickerItem\" />\n      </NativePicker>}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { Picker as RNPicker, PickerProps as RNPickerProps } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\nimport { PickerButtonWrapper } from './PickerButtonWrapper';\n\nexport interface NativePickerProps extends RNPickerProps {\n  size?: ControlSize;\n  innerRef?: React.Ref<RNPicker>;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: PickerButtonGetStylesProp;\n}\n\nconst NativePickerBase = (props: NativePickerProps) => {\n  const { size = 'medium', getStyles, innerRef, ...pickerProps } = props;\n  const theme = useTheme();\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper>\n      <RNPicker\n        ref={innerRef}\n        itemStyle={itemStyle}\n        style={pickerStyle}\n        {...pickerProps}\n      />\n    </PickerButtonWrapper>\n  );\n};\n\nexport const NativePicker = React.forwardRef<RNPicker, RNPickerProps>(\n  (props, ref) => {\n    return <NativePickerBase {...props} innerRef={ref} />;\n  },\n);\n","import { Picker as RNPicker, PickerItemProps } from 'react-native';\n\n// tslint:disable-next-line\nexport interface NativePickerItemProps extends PickerItemProps {}\n\nexport const NativePickerItem = RNPicker.Item;\n","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/Theme';\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport interface PickerButtonStylesProps {\n  size: ControlSize;\n}\n\nexport type GetPickerButtonStyles = (\n  pickerStylesProps: PickerButtonStylesProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  pickerStylesProps,\n  theme,\n) => {\n  const { size } = pickerStylesProps;\n\n  const controlSizeStyles = {\n    small: {\n      borderRadius: theme.controlBorderRadius.small,\n      height: theme.controlHeights.small,\n      paddingLeft: theme.controlPaddings.small,\n      paddingRight: 40,\n    },\n\n    medium: {\n      borderRadius: theme.controlBorderRadius.medium,\n      height: theme.controlHeights.medium,\n      paddingLeft: theme.controlPaddings.medium,\n      paddingRight: 40,\n    },\n\n    large: {\n      borderRadius: theme.controlBorderRadius.large,\n      height: theme.controlHeights.large,\n      paddingLeft: theme.controlPaddings.large,\n      paddingRight: 40,\n    },\n  }[size];\n\n  const textSizeStyles = theme.textSizes[size];\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.content,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      appearance: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      width: '100%',\n      ...textSizeStyles,\n      ...controlSizeStyles,\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { PickerButtonGetStylesProp } from './PickerButton';\nimport { getPickerButtonStyles } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  getStyles?: PickerButtonGetStylesProp;\n  size?: ControlSize;\n  children: React.ReactNode;\n}\n\nexport const PickerButtonWrapper = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children, size = 'medium' } = props;\n  const theme = useTheme();\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n    theme.components.getPickerButtonStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon name=\"chevron-down\" size={32} color={theme.colors.text.default} />\n      </View>\n    </View>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","export * from './defaultTheme';\nexport * from './Theme';\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}