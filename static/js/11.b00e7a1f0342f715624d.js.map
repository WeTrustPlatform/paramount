{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Toggle.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Checkbox","FormField","Toggle","___WEBPACK_IMPORTED_MODULE_7__","initial","_ref2","on","toggle","___WEBPACK_IMPORTED_MODULE_6__","label","labelPosition","___WEBPACK_IMPORTED_MODULE_5__","shape","value","onValueChange","size","of","isMDXComponent","defaultProps","_props$size","_props$shape","_props$value","_props$isDisabled","isDisabled","_props$onValueChange","testID","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","touchableProps","_getOverrides3","StyledCheck","Check","_getOverrides4","checkProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","onPress","_props$shape2","_props$isDisabled2","children","style","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","containerShapes","disabled","_props$size3","_props$shape3","_props$value2","_props$isDisabled3","viewProps","sizeValue","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","alignItems","backgroundColor","colors","background","content","borderColor","border","borderWidth","height","justifyContent","width","primaryDefault","greyDark","_Icon__WEBPACK_IMPORTED_MODULE_11__","name","color","text","white","error","description","_props$labelPosition","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","Label","LabelR","labelRProps","_getOverrides5","StyledDescription","Description","_getOverrides6","descriptionProps","_getOverrides7","StyledError","Error","_getOverrides8","ErrorR","errorProps","react__WEBPACK_IMPORTED_MODULE_4__","position","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_9__","paddingBottom","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isOn","setIsOn","handleToggle","useCallback","handleSet","set","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","paddingRight","paddingLeft","_props$position2","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/11.152560be.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Checkbox, FormField, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Checkbox for boolean values`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <FormField label=\\\"Checkbox\\\" labelPosition=\\\"right\\\">\\n      <Checkbox\\n        shape=\\\"circle\\\"\\n        value={on}\\n        onValueChange={toggle}\\n        size=\\\"medium\\\"\\n      />\\n    </FormField>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Checkbox,\n      FormField,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <FormField label=\"Checkbox\" labelPosition=\"right\" mdxType=\"FormField\">\n        <Checkbox shape=\"circle\" value={on} onValueChange={toggle} size=\"medium\" mdxType=\"Checkbox\" />\n      </FormField>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ContainerShape, ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Icon } from '../Icon';\n\ninterface CheckboxBaseProps {\n  /**\n   * The size of the checkbox.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as checked.\n   * @default false\n   */\n  value: boolean;\n\n  /**\n   * When true, the checkbox is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Shape of the checkbox.\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CheckboxOverrides {\n  Touchable: TouchableProps;\n  Check: CheckProps;\n}\n\nexport interface CheckboxProps\n  extends WithOverrides<CheckboxBaseProps, CheckboxOverrides> {}\n\nconst defaultProps = {\n  size: 'medium' as const,\n  shape: 'rounded' as const,\n  value: false,\n  isDisabled: false,\n};\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    size = defaultProps.size,\n    shape = defaultProps.shape,\n    value = defaultProps.value,\n    isDisabled = defaultProps.isDisabled,\n    onValueChange = () => {\n      return;\n    },\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.Checkbox.Touchable'),\n    overrides.Touchable,\n  );\n  const [Check, checkProps] = getOverrides(\n    StyledCheck,\n    props,\n    dlv(theme, 'overrides.Checkbox.Check'),\n    overrides.Check,\n  );\n\n  return (\n    <Touchable\n      size={size}\n      shape={shape}\n      isDisabled={isDisabled}\n      testID={testID}\n      onPress={() => onValueChange(!value)}\n      {...touchableProps}\n    >\n      <Check\n        value={value}\n        size={size}\n        shape={shape}\n        isDisabled={isDisabled}\n        {...checkProps}\n      />\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size?: ControlSize | number;\n  isDisabled?: boolean;\n  shape?: ContainerShape;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    size = defaultProps.size,\n    shape = defaultProps.shape,\n    isDisabled = defaultProps.isDisabled,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[theme.containerShapes[shape], style]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface CheckProps extends ViewProps {\n  size?: ControlSize | number;\n  value?: boolean;\n  isDisabled?: boolean;\n  shape?: ContainerShape;\n}\n\nconst StyledCheck = (props: CheckProps) => {\n  const {\n    size = defaultProps.size,\n    shape = defaultProps.shape,\n    value = defaultProps.value,\n    isDisabled = defaultProps.isDisabled,\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  const sizeValue = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          height: sizeValue,\n          justifyContent: 'center',\n          width: sizeValue,\n          ...(value\n            ? {\n                backgroundColor: theme.colors.background.primaryDefault,\n                borderColor: 'transparent',\n              }\n            : {}),\n          ...(isDisabled\n            ? {\n                backgroundColor: theme.colors.background.greyDark,\n                borderColor: theme.colors.border.default,\n              }\n            : {}),\n          ...theme.containerShapes[shape],\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon name=\"check\" size=\"xsmall\" color={theme.colors.text.white} />\n      ) : null}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Label, LabelProps, Text, TextProps } from '../Typography';\n\ntype FormFieldLabelPosition = 'top' | 'left' | 'right';\n\ninterface FormFieldBaseProps {\n  /**\n   * Error message of the field\n   */\n  error?: OptionalString;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  labelPosition?: FormFieldLabelPosition;\n\n  /**\n   * Description of the field.\n   */\n  description?: OptionalString;\n\n  /** Content to wrap FormField with. */\n  children?: React.ReactNode;\n}\n\nexport interface FormFieldOverrides {\n  Root: RootProps;\n  Label: LabelProps;\n  Description: DescriptionProps;\n  Error: ErrorProps;\n}\n\nexport interface FormFieldProps\n  extends WithOverrides<FormFieldBaseProps, FormFieldOverrides> {}\n\nconst defaultProps = {\n  labelPosition: 'top' as const,\n};\n\nexport const FormField = (props: FormFieldProps) => {\n  const {\n    label,\n    error,\n    children,\n    description,\n    labelPosition = defaultProps.labelPosition,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.FormField.Root'),\n    overrides.Root,\n  );\n  const [LabelR, labelRProps] = getOverrides(\n    Label,\n    props,\n    dlv(theme, 'overrides.FormField.Label'),\n    overrides.Label,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.FormField.Description'),\n    overrides.Description,\n  );\n  const [ErrorR, errorProps] = getOverrides(\n    StyledError,\n    props,\n    dlv(theme, 'overrides.FormField.Error'),\n    overrides.Error,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LabelR label={label} position={labelPosition} {...labelRProps}>\n        {children}\n      </LabelR>\n      <Description description={description} {...descriptionProps} />\n      <ErrorR error={error} {...errorProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps, PropsWithChildren {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { children, style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      color=\"muted\"\n      style={[\n        {\n          paddingBottom: 4,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ErrorProps extends TextProps, PropsWithChildren {\n  error?: OptionalString;\n}\n\nconst StyledError = (props: ErrorProps) => {\n  const { children, style, error, ...viewProps } = props;\n\n  if (!error) return null;\n\n  return (\n    <Text style={[style]} color=\"danger\" {...viewProps}>\n      {error}\n    </Text>\n  );\n};\n","import React from 'react';\n\nexport interface ToggleRenderProps {\n  on: boolean;\n  toggle: () => void;\n  set: (on: boolean) => void;\n}\n\nexport interface ToggleProps {\n  initial?: boolean;\n  children: (props: ToggleRenderProps) => JSX.Element;\n}\n\nexport const Toggle = (props: ToggleProps) => {\n  const { children, initial = false } = props;\n  const [isOn, setIsOn] = React.useState(initial);\n\n  const handleToggle = React.useCallback(() => {\n    setIsOn(!isOn);\n  }, [isOn]);\n\n  const handleSet = React.useCallback((on: boolean) => {\n    setIsOn(on);\n  }, []);\n\n  return children({ on: isOn, toggle: handleToggle, set: handleSet });\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nconst defaultProps = {\n  position: 'top' as const,\n};\n\nexport const Label = (props: LabelProps) => {\n  const {\n    children,\n    position = defaultProps.position,\n    overrides = {},\n    label,\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && (\n        <LabelText position={position} label={label} {...labelTextProps} />\n      )}\n      <Wrapper position={position} {...wrapperProps}>\n        {position === 'left' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n        {children}\n        {position === 'right' && (\n          <LabelText position={position} label={label} {...labelTextProps} />\n        )}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position?: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const {\n    label,\n    position = defaultProps.position,\n    style,\n    ...textProps\n  } = props;\n\n  if (!label) return null;\n\n  let textStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, style]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}