{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/LabeledCheckbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButtonWrapper.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["getCheckboxVariables","theme","base","backgroundColor","colors","background","white","borderColor","border","default","borderWidth","height","width","checked","primaryDefault","checkedFocus","primaryDark","disabled","greyDark","shape","circle","borderRadius","square","controlBorderRadius","small","uncheckedFocus","greyLight","getCheckboxStyles","_ref","isChecked","isDisabled","checkboxVariables","checkboxFocusBackgroundColor","checkboxStyle","_objectSpread2","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Checkbox","Checkbox","props","_props$isChecked","_props$isDisabled","_props$isInteractive","isInteractive","checkedIcon","_props$onChange","onChange","_props$shape","getStyles","testID","accessibilityProps","_objectWithoutProperties2","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","style","underlayColor","onPress","View","alignItems","display","justifyContent","Icon","name","size","color","text","_Layout","_Typography","LabeledCheckbox","label","_props$position","position","restProps","Box","flexDirection","Text","Spacing","paddingHorizontal","_LabeledCheckbox","FormField","error","children","description","passThroughProps","marginBottom","Label","cloneElement","_FormField","Object","keys","forEach","key","defineProperty","exports","enumerable","get","getListItemVariables","borderBottomWidth","focusBackgroundColor","selected","sizes","fontSize","textSizes","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","wrapper","getListItemStyles","isSelected","selectListVariables","_sizes$size","sizeStyles","containerStyle","imageWrapperStyle","marginRight","leftWrapperStyle","textStyle","textWrapperStyle","wrapperStyle","_ListItem","ListItem","_props$size","_props$rightIcon","rightIcon","leftIcon","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","Modal","ModalContent","TouchableOpacity","event","preventDefault","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","this","ModalBase","PureComponent","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","transparent","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","zIndex","marginLeft","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","_Modal","getPickerButtonVariables","focus","invalid","danger","placeholderTextColor","muted","getPickerButtonStyles","pickerStylesProps","pickerVariables","controlSizeStyles","textSizeStyles","itemStyle","pickerStyle","rightContainerStyle","_PickerButton","_PickerButtonWrapper","PickerButton","title","PickerButtonWrapper","PickerItem","SelectListItem","SelectListBase","selectedValue","onValueChange","isMulti","innerRef","flatListProps","handleOnPress","itemValue","itemIndex","Array","isArray","filter","val","concat","childrenArray","Children","toArray","data","map","child","FlatList","keyExtractor","item","value","getItemLayout","index","length","offset","renderItem","selectListItem","some","selVal","onSelect","SelectList","forwardRef","_Form","_SelectList","SelectListField","withTheme","memo","_props$index","_props$isSelected","_props$onSelect","listItemProps","e","_SelectListItem","_SelectListField","Feather","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/4.23c1d381.js","sourcesContent":["import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { CheckboxShape } from './Checkbox';\n\nexport interface ShapeStyle {\n  circle: ViewStyle;\n  square: ViewStyle;\n}\n\nexport interface CheckboxVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  checked: ViewStyle;\n  checkedFocus: ViewStyle;\n  uncheckedFocus: ViewStyle;\n  shape: ShapeStyle;\n}\n\nexport const getCheckboxVariables = (theme: Theme): CheckboxVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      height: 32,\n      width: 32,\n    },\n    checked: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderColor: 'transparent',\n    },\n    checkedFocus: {\n      backgroundColor: theme.colors.background.primaryDark,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n      borderColor: theme.colors.border.default,\n    },\n    shape: {\n      circle: {\n        borderRadius: 999,\n      },\n      square: {\n        borderRadius: theme.controlBorderRadius.small,\n      },\n    },\n    uncheckedFocus: {\n      backgroundColor: theme.colors.background.greyLight,\n    },\n  };\n};\n\nexport interface CheckboxStylesProps {\n  isChecked: boolean;\n  isDisabled: boolean;\n  shape: CheckboxShape;\n}\n\nexport interface CheckboxStyles {\n  checkboxStyle: ViewStyle;\n  checkboxFocusBackgroundColor?: string;\n}\n\nexport type GetCheckboxStyles = (\n  checkboxStylesProps: CheckboxStylesProps,\n  theme: Theme,\n) => CheckboxStyles;\n\nexport const getCheckboxStyles: GetCheckboxStyles = (\n  { isChecked, isDisabled, shape },\n  theme,\n) => {\n  const checkboxVariables = getCheckboxVariables(theme);\n\n  return {\n    checkboxFocusBackgroundColor: isChecked\n      ? checkboxVariables.checkedFocus.backgroundColor\n      : checkboxVariables.uncheckedFocus.backgroundColor,\n    checkboxStyle: {\n      ...checkboxVariables.base,\n      ...(isChecked ? checkboxVariables.checked : {}),\n      ...(isDisabled ? checkboxVariables.disabled : {}),\n      ...checkboxVariables.shape[shape],\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  CheckboxStyles,\n  GetCheckboxStyles,\n  getCheckboxStyles,\n} from './Checkbox.styles';\n\nexport type CheckboxShape = 'circle' | 'square';\n\nexport interface CheckboxProps extends AccessibilityProps {\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  /** Sometimes we just want the display of the checkbox  */\n  isInteractive?: boolean;\n  checkedIcon?: React.ReactNode;\n  /** @default square */\n  shape?: CheckboxShape;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n  getStyles?: ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>;\n  testID?: string;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    isInteractive = true,\n    checkedIcon,\n    onChange = () => null,\n    shape = 'square',\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { checkboxStyle, checkboxFocusBackgroundColor } = mergeStyles(\n    getCheckboxStyles,\n    getStyles,\n  )({ isChecked, isDisabled, shape }, theme);\n\n  return (\n    <TouchableHighlight\n      accessible\n      style={checkboxStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      {...(isInteractive\n        ? {\n            disabled: isDisabled,\n            onPress: onChange,\n          }\n        : {\n            disabled: true,\n          })}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {isChecked\n          ? checkedIcon || (\n              <Icon name=\"check\" size={20} color={theme.colors.text.white} />\n            )\n          : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport { Checkbox, CheckboxProps } from '../Checkbox/Checkbox';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface LabeledCheckboxProps extends CheckboxProps {\n  label?: string;\n  position?: 'left' | 'right';\n  color?: TextColor;\n  size?: TextSize;\n}\n\nexport const LabeledCheckbox = (props: LabeledCheckboxProps) => {\n  const { label, position = 'right', color, size, ...restProps } = props;\n\n  if (!label) {\n    return <Checkbox {...restProps} />;\n  }\n\n  return (\n    <Box flexDirection=\"row\" alignItems=\"center\">\n      {position === 'left' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n      <Spacing paddingHorizontal={1}>\n        <Checkbox {...restProps} />\n      </Spacing>\n      {position === 'right' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n    </Box>\n  );\n};\n","export {\n  LabeledCheckbox as Checkbox,\n  LabeledCheckboxProps as CheckboxProps,\n} from './LabeledCheckbox';\n","import * as React from 'react';\n\nimport { Box } from '../Layout';\nimport { Label, Text } from '../Typography';\n\nexport interface FormFieldProps {\n  error?: string | null;\n  label?: string | null;\n  description?: string | null;\n  children?: React.ReactNode;\n}\n\nexport const FormField = (props: FormFieldProps) => {\n  const { label, error, children, description, ...passThroughProps } = props;\n\n  return (\n    <Box>\n      {label && (\n        <Box marginBottom={4}>\n          <Label>{label}</Label>\n        </Box>\n      )}\n      <Box marginBottom={4}>\n        {/*\n        // @ts-ignore: TODO: Find right way to type this */}\n        {React.cloneElement(children, passThroughProps)}\n      </Box>\n      {error && (\n        <Box marginBottom={4}>\n          <Text color=\"danger\">{error}</Text>\n        </Box>\n      )}\n      {description && <Text>{description}</Text>}\n    </Box>\n  );\n};\n","export * from './FormField';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './ListItem';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PickerButtonSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type PickerButtonSize = keyof PickerButtonSizes;\n\nexport interface PickerButtonTextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PickerButtonTextSize = keyof PickerButtonTextSizes;\n\nexport interface PickerButtonVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  focus: ViewStyle;\n  invalid: ViewStyle;\n  placeholderTextColor: string;\n  sizes: PickerButtonSizes;\n}\n\nexport const getPickerButtonVariables = (\n  theme: Theme,\n): PickerButtonVariables => {\n  return {\n    base: {\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focus: {},\n    invalid: {\n      borderColor: theme.colors.border.danger,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: 40,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: 40,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: 40,\n      },\n    },\n  };\n};\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport interface PickerButtonStylesProps {\n  size: PickerButtonSize;\n}\nexport type GetPickerButtonStyles = (\n  pickerStylesProps: PickerButtonStylesProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  pickerStylesProps,\n  theme,\n) => {\n  const pickerVariables = getPickerButtonVariables(theme);\n  const { base, sizes } = pickerVariables;\n  const { size } = pickerStylesProps;\n\n  const controlSizeStyles = sizes[size];\n  const textSizeStyles = theme.textSizes[size];\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.white,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      backgroundColor: 'transparent',\n      width: '100%',\n      ...base,\n      ...controlSizeStyles,\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableOpacity,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Text } from '../Typography';\nimport {\n  GetPickerButtonStyles,\n  getPickerButtonStyles,\n  PickerButtonSize,\n} from './PickerButton.styles';\nimport { PickerButtonWrapper } from './PickerButtonWrapper';\n\nexport type GetPickerButtonStylesProp = ReplaceReturnType<\n  GetPickerButtonStyles,\n  DeepPartial<PickerButtonStyles>\n>;\n\nexport interface PickerButtonStyles extends AccessibilityProps {\n  title?: string | null;\n  onPress?: (event: GestureResponderEvent) => void;\n  size?: PickerButtonSize;\n  getStyles?: GetPickerButtonStylesProp;\n}\n\nexport const PickerButton = (props: PickerButtonStyles) => {\n  const {\n    getStyles,\n    onPress,\n    size = 'medium',\n    title,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper getStyles={getStyles}>\n      <TouchableOpacity\n        style={[{ justifyContent: 'center' }, pickerStyle]}\n        onPress={onPress}\n        {...accessibilityProps}\n      >\n        <Text style={itemStyle}>{title}</Text>\n      </TouchableOpacity>\n    </PickerButtonWrapper>\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetPickerButtonStylesProp } from './PickerButton';\nimport { getPickerButtonStyles, PickerButtonSize } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n  children: React.ReactNode;\n}\n\nexport const PickerButtonWrapper = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children, size = 'medium' } = props;\n  const theme = useTheme();\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon name=\"chevron-down\" size={32} color={theme.colors.text.default} />\n      </View>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { SelectListItem } from '../SelectList';\n\nexport const PickerItem = SelectListItem;\n","import * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListProps\n  extends Omit<\n    Omit<FlatListProps<SelectListItemBaseProps>, 'data'>,\n    'renderItem'\n  > {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  selectedValue: string | string[];\n  innerRef?: React.Ref<FlatList<SelectListItemBaseProps>>;\n  isMulti?: boolean;\n  onValueChange: (\n    itemValue: string | string[],\n    itemIndex: number,\n  ) => void | undefined;\n}\n\nconst SelectListBase = (props: SelectListProps): any => {\n  const {\n    selectedValue,\n    onValueChange,\n    isMulti,\n    children,\n    innerRef,\n    ...flatListProps\n  } = props;\n  const theme = useTheme();\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val !== itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n\n  return (\n    <FlatList\n      ref={innerRef}\n      keyExtractor={item => item.value}\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={data}\n      renderItem={({ item, index }) => {\n        const selectListItem = childrenArray[index];\n\n        const isSelected =\n          isMulti && Array.isArray(selectedValue)\n            ? selectedValue.some(selVal => selVal === item.value)\n            : selectedValue === item.value;\n\n        return React.cloneElement(selectListItem, {\n          index,\n          isSelected,\n          onSelect: handleOnPress,\n        });\n      }}\n      {...flatListProps}\n    />\n  );\n};\n\nexport const SelectList = React.forwardRef<\n  FlatList<SelectListItemBaseProps>,\n  SelectListProps\n>((props, ref) => {\n  return <SelectListBase {...props} innerRef={ref} />;\n});\n","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport { SelectList, SelectListProps } from './SelectList';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListFieldProps extends FormFieldProps, SelectListProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n}\n\nconst SelectListFieldBase = (props: SelectListFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <SelectList {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const SelectListField = withTheme(SelectListFieldBase);\nexport default SelectListField;\n","import * as React from 'react';\n\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\n\nexport interface SelectListItemBaseProps {\n  index?: number;\n  isSelected?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  value: string;\n  label: string;\n}\n\nexport interface SelectListItemProps\n  extends SelectListItemBaseProps,\n    ListItemProps {\n  isDisabled?: boolean;\n}\n\nconst SelectListItemBase = (props: SelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    value,\n    ...listItemProps\n  } = props;\n\n  return (\n    <ListItem\n      onPress={e => {\n        e.preventDefault();\n        onSelect(value, index, isSelected);\n      }}\n      label={label}\n      rightIcon={\n        <Checkbox isInteractive={false} shape=\"circle\" isChecked={isSelected} />\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport const SelectListItem = React.memo(SelectListItemBase);\n","export * from './SelectList';\nexport * from './SelectListItem';\nexport * from './SelectListField';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}