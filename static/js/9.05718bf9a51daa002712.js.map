{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletedList.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/List.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Icon","_ref","name","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","BulletItem","icon","listItemProps","iconColor","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_ListItem__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mark","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","BulletedList","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","___WEBPACK_IMPORTED_MODULE_6__","isMDXComponent","_List__WEBPACK_IMPORTED_MODULE_2__","listType","List","_props$size","finalChildren","React","map","listItem","index","undefined","accessibilityRole","Platform","OS","_Box__WEBPACK_IMPORTED_MODULE_3__","margin","marginLeft","padding","paddingLeftMap","large","medium","small","xsmall","ListItem","textProps","paddingLeft","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_4__","_Box__WEBPACK_IMPORTED_MODULE_5__","flexDirection","alignItems","marginVertical","width","_Text__WEBPACK_IMPORTED_MODULE_6__","isInline","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isItalic","align","transform","weight","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","Text","_props$color","_props$fontFamily","_props$align","_props$isInline","getStyles","_props$isItalic","mergeStyles","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","palette","lightest","light","base","dark","darkest","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","controlBorderRadius","controlHeights","controlPaddings","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/9.05562397.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { TextColor } from '../../theme/Theme';\nimport { ListItem, ListItemProps } from './ListItem';\n\nexport interface BulletItemProps extends ListItemProps {\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n  iconColor?: TextColor;\n}\n\nexport const BulletItem = (props: BulletItemProps) => {\n  const { icon, iconColor, ...listItemProps } = props;\n\n  return <ListItem mark={icon} {...listItemProps} />;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { BulletedList, BulletItem, Icon } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"bulletedlist\"\n    }}>{`BulletedList`}</h1>\n    <Playground __position={0} __code={'<BulletedList icon={<Icon name=\\\"check\\\" />}>\\n  <BulletItem>Lorem ipsum dolar set amet</BulletItem>\\n  <BulletItem>Lorem ipsum dolar set amet</BulletItem>\\n  <BulletItem>Lorem ipsum dolar set amet</BulletItem>\\n  <BulletItem>Lorem ipsum dolar set amet</BulletItem>\\n</BulletedList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      BulletedList,\n      BulletItem,\n      Icon\n    }} mdxType=\"Playground\">\n  <BulletedList icon={<Icon name=\"check\" mdxType=\"Icon\" />} mdxType=\"BulletedList\">\n    <BulletItem mdxType=\"BulletItem\">Lorem ipsum dolar set amet</BulletItem>\n    <BulletItem mdxType=\"BulletItem\">Lorem ipsum dolar set amet</BulletItem>\n    <BulletItem mdxType=\"BulletItem\">Lorem ipsum dolar set amet</BulletItem>\n    <BulletItem mdxType=\"BulletItem\">Lorem ipsum dolar set amet</BulletItem>\n  </BulletedList>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/Theme';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface BulletedListProps {\n  size?: TextSize;\n  icon?: React.ReactNode;\n  iconColor?: TextColor;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const BulletedList = (props: BulletedListProps) => {\n  return <List listType=\"ul\" {...props} />;\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : undefined,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Box margin={0} marginLeft={8} padding={0}>\n        {finalChildren}\n      </Box>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/Theme';\nimport { Box } from '../Box';\nimport { Text, TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 24,\n  medium: 16,\n  small: 16,\n  xsmall: 8,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark?: React.ReactNode;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft =\n    typeof size === 'number' ? 16 : (paddingLeftMap[size] as 1 | 2 | 3);\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Box flexDirection=\"row\" alignItems=\"center\" marginVertical={8}>\n        <Box>{mark}</Box>\n        <Box width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Box>\n      </Box>\n    </View>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}