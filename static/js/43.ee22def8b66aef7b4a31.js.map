{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Button","Modal","HistoryModal","Text","Toggle","___WEBPACK_IMPORTED_MODULE_9__","initial","_ref2","on","set","toggle","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","visible","animationType","onRequestClose","height","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_6__","onPress","title","_ref3","outerOn","outerSet","_ref4","innerOn","innerSet","_ref5","useHistory","_ref6","of","isMDXComponent"],"mappings":"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","file":"static/js/43.ddfdd626.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Modal, HistoryModal, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`Modal covers the full screen. For a prompt/small version of modal, use `}<inlineCode parentName=\"p\">{`Dialog`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle, set }) => (\\n    <Box>\\n      <Modal\\n        visible={on}\\n        animationType=\\\"slide\\\"\\n        onRequestClose={() => set(false)}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the modal</Text>\\n          <Button onPress={() => set(false)} title=\\\"Close button one\\\" />\\n          <Button onPress={() => set(false)} title=\\\"Close button two\\\" />\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => set(true)} title=\\\"Open modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Modal,\n      HistoryModal,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle,\n          set\n        }) => <Box mdxType=\"Box\">\n        <Modal visible={on} animationType=\"slide\" onRequestClose={() => set(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Put any content in the modal</Text>\n            <Button onPress={() => set(false)} title=\"Close button one\" mdxType=\"Button\" />\n            <Button onPress={() => set(false)} title=\"Close button two\" mdxType=\"Button\" />\n          </Box>\n        </Modal>\n        <Button onPress={() => set(true)} title=\"Open modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"nested\"\n    }}>{`Nested`}</h3>\n    <Playground __position={1} __code={'<Toggle initial={false}>\\n  {({ on: outerOn, set: outerSet }) => (\\n    <Box>\\n      <Modal\\n        visible={outerOn}\\n        animationType=\\\"fade\\\"\\n        onRequestClose={() => outerSet(false)}\\n      >\\n        <Box height={1800}>\\n          <Text>Outer modal</Text>\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button one\\\"\\n          />\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button two\\\"\\n          />\\n          <Toggle initial={false}>\\n            {({ on: innerOn, set: innerSet }) => (\\n              <Box>\\n                <Modal\\n                  visible={innerOn}\\n                  animationType=\\\"slide\\\"\\n                  onRequestClose={() => innerSet(false)}\\n                >\\n                  <Box height={1800}>\\n                    <Text>Inner modal</Text>\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button one\\\"\\n                    />\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button two\\\"\\n                    />\\n                  </Box>\\n                </Modal>\\n                <Button\\n                  onPress={() => innerSet(true)}\\n                  title=\\\"Open inner modal\\\"\\n                />\\n              </Box>\\n            )}\\n          </Toggle>\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => outerSet(true)} title=\\\"Open outer modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Modal,\n      HistoryModal,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on: outerOn,\n          set: outerSet\n        }) => <Box mdxType=\"Box\">\n        <Modal visible={outerOn} animationType=\"fade\" onRequestClose={() => outerSet(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Outer modal</Text>\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button one\" mdxType=\"Button\" />\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button two\" mdxType=\"Button\" />\n            <Toggle initial={false} mdxType=\"Toggle\">\n              {({\n                  on: innerOn,\n                  set: innerSet\n                }) => <Box mdxType=\"Box\">\n                  <Modal visible={innerOn} animationType=\"slide\" onRequestClose={() => innerSet(false)} mdxType=\"Modal\">\n                    <Box height={1800} mdxType=\"Box\">\n                      <Text mdxType=\"Text\">Inner modal</Text>\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button one\" mdxType=\"Button\" />\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button two\" mdxType=\"Button\" />\n                    </Box>\n                  </Modal>\n                  <Button onPress={() => innerSet(true)} title=\"Open inner modal\" mdxType=\"Button\" />\n                </Box>}\n            </Toggle>\n          </Box>\n        </Modal>\n        <Button onPress={() => outerSet(true)} title=\"Open outer modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"using-browser-history\"\n    }}>{`Using browser history`}</h3>\n    <p>{`By using `}<inlineCode parentName=\"p\">{`useHistory`}</inlineCode>{` prop it will mimic Android's back button behavior on web which closes modals. On RN, this will have no effect and will use a regular `}<inlineCode parentName=\"p\">{`Modal`}</inlineCode>{`. Works in nested modals as well.`}</p>\n    <p>{`Note: Uses history `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` to manipulate modal state`}</p>\n    <Playground __position={2} __code={'<Toggle initial={false}>\\n  {({ on: outerOn, set: outerSet }) => (\\n    <Box>\\n      <Modal\\n        useHistory\\n        visible={outerOn}\\n        onRequestClose={() => outerSet(false)}\\n      >\\n        <Box height={1800}>\\n          <Text>Outer modal</Text>\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button one\\\"\\n          />\\n          <Button\\n            onPress={() => outerSet(false)}\\n            title=\\\"Close outer modal button two\\\"\\n          />\\n          <Toggle initial={false}>\\n            {({ on: innerOn, set: innerSet }) => (\\n              <Box>\\n                <Modal\\n                  visible={innerOn}\\n                  useHistory\\n                  onRequestClose={() => innerSet(false)}\\n                >\\n                  <Box height={1800}>\\n                    <Text>Inner modal</Text>\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button one\\\"\\n                    />\\n                    <Button\\n                      onPress={() => innerSet(false)}\\n                      title=\\\"Close inner modal button two\\\"\\n                    />\\n                  </Box>\\n                </Modal>\\n                <Button\\n                  onPress={() => innerSet(true)}\\n                  title=\\\"Open inner modal\\\"\\n                />\\n              </Box>\\n            )}\\n          </Toggle>\\n        </Box>\\n      </Modal>\\n      <Button onPress={() => outerSet(true)} title=\\\"Open outer modal\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Modal,\n      HistoryModal,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on: outerOn,\n          set: outerSet\n        }) => <Box mdxType=\"Box\">\n        <Modal useHistory visible={outerOn} onRequestClose={() => outerSet(false)} mdxType=\"Modal\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Outer modal</Text>\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button one\" mdxType=\"Button\" />\n            <Button onPress={() => outerSet(false)} title=\"Close outer modal button two\" mdxType=\"Button\" />\n            <Toggle initial={false} mdxType=\"Toggle\">\n              {({\n                  on: innerOn,\n                  set: innerSet\n                }) => <Box mdxType=\"Box\">\n                  <Modal visible={innerOn} useHistory onRequestClose={() => innerSet(false)} mdxType=\"Modal\">\n                    <Box height={1800} mdxType=\"Box\">\n                      <Text mdxType=\"Text\">Inner modal</Text>\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button one\" mdxType=\"Button\" />\n                      <Button onPress={() => innerSet(false)} title=\"Close inner modal button two\" mdxType=\"Button\" />\n                    </Box>\n                  </Modal>\n                  <Button onPress={() => innerSet(true)} title=\"Open inner modal\" mdxType=\"Button\" />\n                </Box>}\n            </Toggle>\n          </Box>\n        </Modal>\n        <Button onPress={() => outerSet(true)} title=\"Open outer modal\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={HistoryModal} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}