{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Popover/Popover.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Box","Button","Popover","Toggle","Text","_ref2","on","toggle","isVisible","onClose","position","isFullWidth","targetMeasurements","height","pageX","window","innerWidth","pageY","width","x","y","getStyles","theme","positionerStyle","modalContainerStyle","popoverStyle","content","onPress","title","paddingBottom","zIndex","flexDirection","justifyContent","_ref3","isInline","_ref4","_ref5","paddingVertical","_ref6","_ref7","paddingTop","_ref8","_ref9","_ref10","flex","_ref11","backgroundColor","of","isMDXComponent"],"mappings":"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","file":"static/js/26.ab2d5106.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Popover, Toggle, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`This component requires more polish. Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <Popover\\n      isVisible={on}\\n      onClose={toggle}\\n      position=\\\"bottom\\\"\\n      isFullWidth={false}\\n      // Use this prop to specify the position of the popover\\n      targetMeasurements={{\\n        height: 200,\\n        pageX: window.innerWidth - 224,\\n        pageY: -200,\\n        width: 200,\\n        x: 0,\\n        y: 0,\\n      }}\\n      getStyles={(props, theme) => ({\\n        positionerStyle: {},\\n        modalContainerStyle: {},\\n        popoverStyle: {},\\n      })}\\n      content={props => (\\n        <Box>\\n          <Text>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\\n            enim ad minim veniam, quis nostrud exercitation ullamco laboris\\n            nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident,\\n            sunt in culpa qui officia deserunt mollit anim id est laborum.\\n          </Text>\\n        </Box>\\n      )}\\n    >\\n      <Button onPress={toggle} title=\\\"Pop at right corner\\\" />\\n    </Popover>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Popover isVisible={on} onClose={toggle} position=\"bottom\" isFullWidth={false} // Use this prop to specify the position of the popover\n        targetMeasurements={{\n          height: 200,\n          pageX: window.innerWidth - 224,\n          pageY: -200,\n          width: 200,\n          x: 0,\n          y: 0\n        }} getStyles={(props, theme) => ({\n          positionerStyle: {},\n          modalContainerStyle: {},\n          popoverStyle: {}\n        })} content={props => <Box mdxType=\"Box\">\n            <Text mdxType=\"Text\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </Text>\n          </Box>} mdxType=\"Popover\">\n        <Button onPress={toggle} title=\"Pop at right corner\" mdxType=\"Button\" />\n      </Popover>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Box paddingBottom={64} zIndex={1}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"top-left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Top left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>\\n<Box paddingVertical={64} zIndex={2}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>\\n<Box paddingTop={64} zIndex={3}>\\n  <Box flexDirection=\\\"row\\\" justifyContent=\\\"space-between\\\">\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom-right\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom right\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n    <Toggle>\\n      {({ on, toggle }) => (\\n        <Popover\\n          isVisible={on}\\n          onClose={toggle}\\n          position=\\\"bottom-left\\\"\\n          content={() => <Box width={200} height={200} />}\\n        >\\n          <Button onPress={toggle} isInline title=\\\"Bottom left\\\" />\\n        </Popover>\\n      )}\\n    </Toggle>\\n  </Box>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box paddingBottom={64} zIndex={1} mdxType=\"Box\">\n    <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top right\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"top-left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Top left\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n    </Box>\n  </Box>\n      <Box paddingVertical={64} zIndex={2} mdxType=\"Box\">\n  <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} isInline title=\"Left\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n    <Toggle mdxType=\"Toggle\">\n      {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} isInline title=\"Right\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n      </Box>\n  <Box paddingTop={64} zIndex={3} mdxType=\"Box\">\n    <Box flexDirection=\"row\" justifyContent=\"space-between\" mdxType=\"Box\">\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom-right\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom right\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n        {({\n              on,\n              toggle\n            }) => <Popover isVisible={on} onClose={toggle} position=\"bottom-left\" content={() => <Box width={200} height={200} mdxType=\"Box\" />} mdxType=\"Popover\">\n            <Button onPress={toggle} isInline title=\"Bottom left\" mdxType=\"Button\" />\n          </Popover>}\n      </Toggle>\n    </Box>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"popover-with-full-width\"\n    }}>{`Popover with full width`}</h3>\n    <p>{`On Mobile sometimes we want the content to stretch full width of the window. There is the prop `}<inlineCode parentName=\"p\">{`isFullWidth`}</inlineCode>{` for that`}</p>\n    <Playground __position={2} __code={'<Box flex={1}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        isFullWidth\\n        onClose={toggle}\\n        position=\\\"top-left\\\"\\n        content={() => (\\n          <Box width={200} height={200} backgroundColor=\\\"#67c6bb\\\" />\\n        )}\\n      >\\n        <Button onPress={toggle} title=\\\"Pop\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Popover,\n      Toggle,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flex={1} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} isFullWidth onClose={toggle} position=\"top-left\" content={() => <Box width={200} height={200} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Pop\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Popover} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}