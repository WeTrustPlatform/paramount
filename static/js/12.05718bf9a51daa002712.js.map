{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Counter","CounterState","___WEBPACK_IMPORTED_MODULE_6__","initial","_ref2","count","increment","decrement","___WEBPACK_IMPORTED_MODULE_5__","onDecrement","onIncrement","min","max","component","getStyles","containerStyle","counterStyle","countStyle","disabledStyle","ntextStyle","of","isMDXComponent","getCounterStyles","display","flexDirection","justifyContent","alignItems","borderColor","border","primary","borderWidth","height","width","textStyle","_mergeStyles","mergeStyles","isDecrementDisabled","isIncrementDisabled","react","View","paddingRight","TouchableOpacity","activeOpacity","objectSpread","disabled","onPress","undefined","Icon_web","name","size","text","muted","Text","concat","paddingLeft","_props$initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrementBy","incrementBy","set","Icon","IconTag","Feather","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","isInline","isItalic","align","transform","weight","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","secondary","danger","info","success","warning","button","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","paragraphSizes","controlBorderRadius","controlHeights","controlPaddings","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/12.7b47ecaf.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Counter, CounterState } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterState initial={0}>\\n  {({ count, increment, decrement }) => (\\n    <Counter\\n      count={count}\\n      onDecrement={decrement}\\n      onIncrement={increment}\\n      min={0}\\n      max={10}\\n      component={null}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n        counterStyle: {},\\n        countStyle: {},\\n        disabledStyle: {},\\n        ntextStyle: {},\\n      })}\\n    />\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Counter,\n      CounterState\n    }} mdxType=\"Playground\">\n  <CounterState initial={0} mdxType=\"CounterState\">\n    {({\n          count,\n          increment,\n          decrement\n        }) => <Counter count={count} onDecrement={decrement} onIncrement={increment} min={0} max={10} component={null} getStyles={(props, theme) => ({\n          containerStyle: {},\n          counterStyle: {},\n          countStyle: {},\n          disabledStyle: {},\n          ntextStyle: {}\n        })} mdxType=\"Counter\" />}\n  </CounterState>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Counter} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (props: {}, theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    countStyle: {\n      justifyContent: 'center',\n    },\n    counterStyle: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabledStyle: {\n      borderColor: theme.colors.border.default,\n    },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(\n    getCounterStyles,\n    getStyles,\n    theme.components.getCounterStyles,\n  )({}, theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Box paddingRight={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Box paddingLeft={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}