{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["AnimatedView","animated","View","items","LoadingDots","props","_props$size","size","_props$color","color","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","Object","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","pad","num","totalChars","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","darken","lighten","getButtonAppearances","theme","minimal","default","colors","background","content","text","danger","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","border","getButtonStyles","buttonStyleProps","appearance","isDisabled","isLoading","isInline","iconBefore","iconAfter","_buttonAppearances$ap","textColor","buttonStyle","objectWithoutProperties","objectSpread","controlBorderRadius","controlHeights","paddingLeft","controlPaddings","paddingRight","disabled","alignSelf","flexWrap","focusColor","textStyle","muted","display","fontWeight","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","Button","_props$appearance","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","components","TouchableHighlight","esm_extends","accessible","accessibilityRole","underlayColor","Button_jsxFileName","Button_ButtonContent","ButtonContent","LoadingDots_LoadingDots","Text","getFontFamily","fontFamilies","fontFamily","getFontWeight","fontWeights","getTextColor","textColors","getTextSize","textSizes","fontSize","getTextStyles","_ref","isItalic","align","transform","weight","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontStyle","textTransform","children","_props$fontFamily","_props$align","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","greyLight","greyDefault","greyDark","primaryDefault","primaryDark","secondaryDefault","secondaryDark","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","info","success","warning","disabledText","link","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","undefined","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","large","medium","small","paragraphSizes","ThemeContext","React","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/1.0a2e18e6.js","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme } from '../../theme/Theme';\nimport { darken } from './changeColor';\n\nexport interface ButtonColorProps {\n  backgroundColor: string;\n  color: string;\n  borderWidth?: number;\n  borderColor?: string;\n  loadingBackgroundColor?: string;\n}\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport const getButtonAppearances = (theme: Theme): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.danger,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.primary,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        color: theme.colors.text.secondary,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: theme.colors.button.default,\n        color: theme.colors.button.defaultText,\n\n        loadingBackgroundColor: theme.colors.background.overlay,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.button.danger,\n        color: theme.colors.button.dangerText,\n\n        loadingBackgroundColor: theme.colors.background.dangerLight,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.button.primary,\n        color: theme.colors.button.primaryText,\n\n        loadingBackgroundColor: theme.colors.background.primaryLight,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.button.secondary,\n        color: theme.colors.button.secondaryText,\n\n        loadingBackgroundColor: theme.colors.background.secondaryLight,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n        color: theme.colors.text.default,\n      },\n\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n        color: theme.colors.text.danger,\n      },\n\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n        color: theme.colors.text.primary,\n      },\n\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n        color: theme.colors.text.secondary,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ControlSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const buttonAppearances = getButtonAppearances(theme);\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = buttonAppearances[appearance][color];\n\n  return {\n    buttonStyle: {\n      borderRadius: theme.controlBorderRadius[size],\n      height: theme.controlHeights[size],\n      paddingLeft: theme.controlPaddings[size] * 2,\n      paddingRight: theme.controlPaddings[size] * 2,\n      ...buttonStyle,\n      ...(isDisabled\n        ? {\n            backgroundColor: theme.colors.button.disabled,\n          }\n        : {\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? theme.colors.text.muted : textColor,\n      display: 'flex',\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles, theme.components.getButtonStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle, size } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) {\n    return (\n      <Text size={size} getStyles={() => ({ textStyle })}>\n        {title}\n      </Text>\n    );\n  }\n\n  return null;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: undefined,\n        mono: undefined,\n        text: undefined,\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetColumnStyles } from '../components/Grid/Column.styles';\nimport { GetContainerStyles } from '../components/Grid/Container.styles';\nimport { GetRowStyles } from '../components/Grid/Row.styles';\nimport { GetIconTextInputStyles } from '../components/Inputs/IconTextInput.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading?: string;\n  mono?: string;\n  text?: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}