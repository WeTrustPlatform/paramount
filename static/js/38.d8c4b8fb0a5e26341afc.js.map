{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/docs/Customization.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/38.60007a04.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h1>\n    <h2 {...{\n      \"id\": \"look-and-feel\"\n    }}>{`Look and Feel`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` and pass a `}<inlineCode parentName=\"p\">{`Theme`}</inlineCode>{` object. For all available options, `}<a parentName=\"p\" {...{\n        \"href\": \"#options\"\n      }}>{`refer to Options`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { ThemeProvider } from 'paramount-ui'\n\n<ThemeProvider value={{\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Container shapes\n  containerShapes: ContainerShapes;\n}}>\n  ...\n</ThemeProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Components can be customized at two levels, `}<a parentName=\"p\" {...{\n        \"href\": \"#from-themeprovider\"\n      }}>{`From ThemeProvider`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#per-instance\"\n      }}>{`Per instance`}</a></p>\n    <h3 {...{\n      \"id\": \"from-themeprovider\"\n    }}>{`From ThemeProvider`}</h3>\n    <p>{`In the same `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` as above, use `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` option. See `}<inlineCode parentName=\"p\">{`Customization`}</inlineCode>{` section in corresponding component docs to understand the `}<inlineCode parentName=\"p\">{`get*Sstyles`}</inlineCode>{` callback values`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { ThemeProvider } from 'paramount-ui'\n\n<ThemeProvider value={{\n  // ...Other options\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetIconTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  }\n}}>\n  ...\n</ThemeProvider>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"per-instance\"\n    }}>{`Per instance`}</h3>\n    <p>{`Each component exposes `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` callback, which can be used to override component styles. See `}<inlineCode parentName=\"p\">{`Customization`}</inlineCode>{` section in corresponding component docs to understand the `}<inlineCode parentName=\"p\">{`get*Sstyles`}</inlineCode>{` callback values`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Button } from 'paramount-ui'\n\nconst CustomButton = () => {\n  return (\n    <Button\n      isDisabled\n      getStyles={(props, theme) => {\n        const { isDisabled } = props;\n\n        // Style of each React Element\n        return {\n          touchableStyle: { ... },\n          textStyle: { ... },\n        }\n      }}\n    >\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useTheme`}</inlineCode>{` to import values from the `}<inlineCode parentName=\"p\">{`Theme`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const MyComponent = () => {\n  const { colors, fills, ...restTheme } = useTheme();\n\n  ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`These are all the available configuration options, as well as the default configuration`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? // Use system font on the Web\n      {\n        heading: \\`\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"\\`,\n        mono: \\`\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace\\`,\n        text: \\`\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"\\`,\n      }\n    : // Use default font families by React Native by default. Setting it to undefined will use the default font\n      {\n        heading: \"System\",\n        mono: \"System\",\n        text: \"System\",\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}