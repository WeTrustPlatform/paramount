{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","getCounterStyles","containerStyle","display","flexDirection","countStyle","justifyContent","minWidth","counterStyle","alignItems","borderColor","border","primary","borderRadius","borderWidth","height","width","decrementWrapperStyle","paddingRight","disabledStyle","incrementWrapperStyle","paddingLeft","textStyle","Counter","_props$count","count","component","max","min","onIncrement","onDecrement","getStyles","_mergeStyles","mergeStyles","components","isDecrementDisabled","isIncrementDisabled","react","View","_jsxFileName","TouchableOpacity","objectSpread","disabled","onPress","undefined","Icon_web","name","size","text","muted","Text","align","concat","CounterState","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrement","decrementBy","increment","incrementBy","set","Icon","_ref","_ref$size","IconTag","Feather","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","ProgressBar","___WEBPACK_IMPORTED_MODULE_7__","_ref2","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","percent","___WEBPACK_IMPORTED_MODULE_6__","of","parentName","className","isMDXComponent","getProgressBarStyles","controlHeights","greyDefault","overflow","progressStyle","primaryDefault","AnimatedView","animated","_props$percent","boundPercent","Math","useSpring","config","springDefaultConfig","from","accessibilityRole","Platform","OS","interpolate","w","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","_ref$color","_ref$align","weight","_ref$isItalic","isItalic","transform","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","friction","tension","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","content","overlay","greyLight","greyDark","primaryLight","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","secondary","danger","info","success","warning","button","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlPaddings","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/5.ce3fbfeb.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { CounterProps } from './Counter';\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  countStyle: ViewStyle;\n  decrementWrapperStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  incrementWrapperStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (\n  props: CounterProps,\n  theme: Theme,\n) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    countStyle: {\n      justifyContent: 'center',\n      minWidth: 24,\n    },\n    counterStyle: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    decrementWrapperStyle: { paddingRight: 16 },\n    disabledStyle: {\n      borderColor: theme.colors.border.default,\n    },\n    incrementWrapperStyle: { paddingLeft: 16 },\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  /**\n   * Count to be displayed.\n   */\n  count?: number;\n\n  /**\n   * Minimum count for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum count for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Custom component in place of count.\n   */\n  component?: React.ReactNode;\n\n  /**\n   * Called when increment button is pressed.\n   */\n  onIncrement?: () => void;\n\n  /**\n   * Called when decrement button is pressed.\n   */\n  onDecrement?: () => void;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count = 0,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    decrementWrapperStyle,\n    disabledStyle,\n    incrementWrapperStyle,\n    textStyle,\n  } = mergeStyles(\n    getCounterStyles,\n    getStyles,\n    theme.components.getCounterStyles,\n  )(props, theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <View style={decrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n      {component || (\n        <View style={countStyle}>\n          <Text\n            align=\"center\"\n            getStyles={() => ({ textStyle })}\n          >{`${count}`}</Text>\n        </View>\n      )}\n      <View style={incrementWrapperStyle}>\n        <TouchableOpacity\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size = 24 }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Counter, CounterState, ProgressBar } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<CounterState initial={0}>\\n  {({ count, incrementBy, decrementBy }) => (\\n    <Box>\\n      <ProgressBar percent={count} size=\\\"large\\\" />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decrementBy(10)}\\n        onIncrement={() => incrementBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Counter,\n      CounterState,\n      ProgressBar\n    }} mdxType=\"Playground\">\n  <CounterState initial={0} mdxType=\"CounterState\">\n    {({\n          count,\n          incrementBy,\n          decrementBy\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={count} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter count={count} onDecrement={() => decrementBy(10)} onIncrement={() => incrementBy(10)} min={0} max={100} mdxType=\"Counter\" />\n      </Box>}\n  </CounterState>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\ngetStyles={(ProgressBarProps, Theme) => ProgressBarStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View progressStyle />\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ProgressBarProps } from './ProgressBar';\n\nexport type GetProgressBarStyles = (\n  props: ProgressBarProps,\n  theme: Theme,\n) => ProgressBarStyles;\n\nexport interface ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressBarStyles: GetProgressBarStyles = (\n  { size = 'medium' },\n  theme,\n) => {\n  const height = theme.controlHeights[size] - 16;\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      borderRadius: 999,\n      height,\n      overflow: 'hidden',\n    },\n    progressStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 999,\n      height: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetProgressBarStyles,\n  getProgressBarStyles,\n  ProgressBarStyles,\n} from './ProgressBar.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface ProgressBarProps {\n  /**\n   * Percentage of the progress bar. From 0 to 1\n   * @default 0\n   */\n  percent?: number;\n\n  /**\n   * The size of the progress bar.\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<\n    GetProgressBarStyles,\n    DeepPartial<ProgressBarStyles>\n  >;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, getStyles, testID } = props;\n  const theme = useTheme();\n\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressBarStyles,\n    getStyles,\n    theme.components.getProgressBarStyles,\n  )(props, theme);\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <AnimatedView\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        // @ts-ignore\n        style={{\n          ...progressStyle,\n          width: width.interpolate(w => `${w}%`),\n        }}\n      />\n    </View>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Size of the text.\n   * @default \"medium\"\n   */\n  size?: TextSize;\n\n  /**\n   * Color of the text.\n   * @default \"default\"\n   */\n  color?: TextColor;\n\n  /**\n   * Alignment of the text.\n   * @default \"left\"\n   */\n  align?: TextAlign;\n\n  /**\n   * Text transformations.\n   */\n  transform?: TextTransform;\n\n  /**\n   * Weight of the text.\n   * @default textSize.fontWeight\n   */\n  weight?: FontWeight;\n\n  /**\n   * When true, displays the text in italics.\n   * @default false\n   */\n  isItalic?: boolean;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(props, theme);\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}