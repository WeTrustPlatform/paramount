{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","propStyle","style","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Text","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","align","size","fontFamily","weight","isItalic","isInline","transform","getStyles","textStyle","flexDirection","of","isMDXComponent","getFontFamily","fontFamilies","getFontWeight","fontWeights","fontWeight","getTextColor","textColors","textColor","getTextSize","textSizes","fontSize","getTextStyles","sizeStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","text","textAlign","alignSelf","fontStyle","textTransform","_props$color","_props$fontFamily","_props$size","_props$align","_props$isInline","_props$isItalic","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","mergeStyles","react__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_Text__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","controlHeights","controlPaddings","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","React","createContext","createTheme","deepMerge","ThemeProvider","_props$value","value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"8nBAcA,IAAMA,EAAW,CACfC,gBAAiB,SAACC,EAAwBC,GAExC,OAAIA,EAAMC,OAAOC,WAAWH,GAEnB,CAAED,gBAAiBE,EAAMC,OAAOC,WAAWH,IAE7C,CACLD,gBAAiBC,IAGrBI,UAAW,SAACA,EAA8BH,GAA/B,OACTA,EAAMI,WAAWD,IACnBE,MAAO,SAACA,EAAuBL,GAAxB,OAAyCA,EAAMM,gBAAgBD,KAG3DE,EAAM,SAACC,GAAoB,IAC9BC,EAAsDD,EAAtDC,SAAiBC,EAAqCF,EAA5CG,MAAkBC,EAA0BJ,EAA1BI,OAAWC,EADTC,OAAAC,EAAA,EAAAD,CACwBN,EADxB,+BAEhCR,EAAQgB,cACRC,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQN,EACjB,GAAIM,EAAM,CAER,IAAMC,EAAUvB,EAASsB,GAEzB,GAAIC,EAAS,CAEX,IAAMT,EAAQS,EAAQP,EAAWM,GAAOnB,GAExCiB,EAAkBI,KAAKV,QAGvBO,EAAWC,GAAQN,EAAWM,GAKpC,OACEG,EAAA,cAACC,EAAA,EAAD,CAAMX,OAAQA,EAAQD,MAAO,CAACO,EAAYD,EAAmBP,GAA7Dc,SAAA,CAAAC,mFAAAC,WAAA,KACGjB,szBC3CDkB,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGvB,EACFM,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,gBACD,OAAOhB,OAAAkB,EAAA,EAAAlB,CAACc,EAADd,OAAAmB,EAAA,EAAAnB,CAAA,GAAea,EAAiBnB,EAAhC,CAAuCuB,WAAYA,EAAYG,QAAQ,YAAvEV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAGLZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,QADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAU,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gCAA+BZ,OAAAkB,EAAA,EAAAlB,CAAA,cAAYuB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aAA/B,4CACAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAU,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAAGZ,OAAAkB,EAAA,EAAAlB,CAAA,UAAQuB,WAAW,IAAnBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAAH,kDAAiGZ,OAAAkB,EAAA,EAAAlB,CAAA,cAAYuB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aAAjG,SAA2JZ,OAAAkB,EAAA,EAAAlB,CAAA,cAAYuB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cAA3J,kCAA+OZ,OAAAkB,EAAA,EAAAlB,CAAA,cAAYuB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,sBAA/O,QAAiTZ,OAAAkB,EAAA,EAAAlB,CAAA,cAAYuB,WAAW,IAAvBb,SAAA,CAAAC,SAAAU,EAAAT,WAAA,+BAAjT,uHACAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,iVAA8VC,QAAS,CACxYjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKZ,QAAQ,MAAbV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UACRiD,MAAM,OAAOC,KAAK,QAClBC,WAAW,OAAOC,OAAO,SAASC,UAAQ,EAACC,UAAQ,EAACC,UAAU,YAAYC,UAAW,SAAC/C,EAAOR,GAAR,MAAmB,CACtGwD,UAAW,KACTtB,QAAQ,OAJhBV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,qCASAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,uLAAkMC,QAAS,CAC5OjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKW,cAAc,SAASvB,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAME,KAAK,SAASf,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAME,KAAK,QAAQf,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAME,KAAK,SAASf,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAME,KAAK,QAAQf,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,UADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,ufAAkhBC,QAAS,CAC5jBjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKW,cAAc,SAASvB,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UAAUmC,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UAAUmC,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,QAAQmC,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,OAAOmC,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,QAAQmC,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,WAAWmC,QAAQ,OAA/BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UAAUmC,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,YAAYmC,QAAQ,OAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,kBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,SAASmC,QAAQ,OAA7BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,eACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,OAAOmC,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UAAUmC,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMhD,MAAM,UAAUmC,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,kBAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,iBADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,uBAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,kKAA2KC,QAAS,CACrNjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,KAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKW,cAAc,SAASvB,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMG,WAAW,UAAUhB,QAAQ,OAAnCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMG,WAAW,OAAOhB,QAAQ,OAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMG,WAAW,OAAOhB,QAAQ,OAAhCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,gBADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,uBAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,wNAAqOC,QAAS,CAC/QjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKW,cAAc,SAASvB,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMI,OAAO,MAAMjB,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMI,OAAO,MAAMjB,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,aACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMI,OAAO,OAAOjB,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,cACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMI,OAAO,SAASjB,QAAQ,OAA9BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMI,OAAO,QAAQjB,QAAQ,OAA7BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,iBAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,cADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,qBAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,0cAAydC,QAAS,CACngBjC,MAAOkC,KAAOA,KAAKlC,MAAQA,EAC3BmC,eACAC,UACArC,QACAsC,UACCX,QAAQ,aANXV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MAOFZ,OAAAkB,EAAA,EAAAlB,CAACgC,EAAA,EAAD,CAAKW,cAAc,SAASvB,QAAQ,MAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,MACEZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMK,UAAQ,EAAClB,QAAQ,OAAvBV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMC,MAAM,OAAOd,QAAQ,OAA3BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMC,MAAM,SAASd,QAAQ,OAA7BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMC,MAAM,QAAQd,QAAQ,OAA5BV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMO,UAAU,YAAYpB,QAAQ,OAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMO,UAAU,YAAYpB,QAAQ,OAApCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,oCACAZ,OAAAkB,EAAA,EAAAlB,CAACiC,EAAA,EAAD,CAAMO,UAAU,aAAapB,QAAQ,OAArCV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,sCAGAZ,OAAAkB,EAAA,EAAAlB,CAAA,KAAAA,OAAAmB,EAAA,EAAAnB,CAAQ,CACNsB,GAAM,SADR,CAAAZ,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gBAGAZ,OAAAkB,EAAA,EAAAlB,CAACwB,EAAA,EAAD,CAAOoB,GAAIb,IAAMX,QAAQ,QAAzBV,SAAA,CAAAC,SAAAU,EAAAT,WAAA,gMAIJG,EAAW8B,gBAAiB,kpCCnHrB,IAAMC,EAAgB,SAACC,GAAD,OAAgC,SAC3DX,GAD2D,OAExDW,EAAaX,8NAEX,IAAMY,EAAgB,SAACC,GAAD,OAA8B,SACzDC,GAEA,GAAKA,EAKL,OAHyBD,EAAYC,IAGVA,6NAGtB,IAAMC,EAAe,SAACC,GAAD,OAA4B,SACtDC,GAKA,OAFoBD,EAAWC,IAETA,4NAGjB,IAAMC,EAAc,SAACC,GAAD,OAA0B,SACnDpB,GAKA,OAFuBoB,EAAUpB,IAER,CAAEqB,SAAUrB,oMAGhC,IAAMsB,EAA+B,SAAAzC,EAE1C9B,GACG,IAFDiD,EAECnB,EAFDmB,KAAMlD,EAEL+B,EAFK/B,MAAOmD,EAEZpB,EAFYoB,WAAYG,EAExBvB,EAFwBuB,SAAUD,EAElCtB,EAFkCsB,SAAUJ,EAE5ClB,EAF4CkB,MAAOM,EAEnDxB,EAFmDwB,UAAWH,EAE9DrB,EAF8DqB,OAG3DqB,EAAYJ,EAAYpE,EAAMqE,UAAlBD,CAA6BnB,GAE/C,MAAO,CACLO,UAAU1C,OAAA2D,EAAA,EAAA3D,CAAA,GACL0D,EADI,CAEPzE,MAAOkE,EAAajE,EAAMC,OAAOyE,KAA1BT,CAAgClE,GACvCmD,WAAYU,EAAc5D,EAAM6D,aAApBD,CAAkCV,GAC9Cc,WACEF,EAAc9D,EAAM+D,YAApBD,CAAiCX,IAAWqB,EAAUR,WACxDW,UAAW3B,GACPK,EACA,CACEuB,UAAW,aACXnB,cAAe,OAEjB,GACAL,GAAY,CACdyB,UAAW,UAETvB,GAAa,CACfwB,cAAexB,ixCCjEhB,IAAMT,EAAO,SAACrC,GAAqB,IAEtCC,EAWED,EAXFC,SAFsCsE,EAapCvE,EAVFT,aAHsC,IAAAgF,EAG9B,UAH8BA,EAAAC,EAapCxE,EATF0C,kBAJsC,IAAA8B,EAIzB,OAJyBA,EAAAC,EAapCzE,EARFyC,YALsC,IAAAgC,EAK/B,SAL+BA,EAAAC,EAapC1E,EAPFwC,aANsC,IAAAkC,EAM9B,OAN8BA,EAOtC/B,EAME3C,EANF2C,OAPsCgC,EAapC3E,EALF6C,gBARsC,IAAA8B,KAStC5B,EAIE/C,EAJF+C,UATsC6B,EAapC5E,EAHF4C,gBAVsC,IAAAgC,KAWtC9B,EAEE9C,EAFF8C,UACG+B,EAZmCvE,OAAAwE,EAAA,EAAAxE,CAapCN,EAboC,yGAclCR,EAAQgB,cAENwC,EAAc+B,YACpBhB,IACAhB,EACAvD,EAAM+B,WAAWwC,cAHGgB,CAKpB,CACEvC,QACAjD,QACAmD,aACAG,WACAD,WACAH,OACAK,YACAH,UAEFnD,GAfMwD,UAkBR,OACEgC,EAAA,cAACC,EAAA,EAAD3E,OAAA4E,EAAA,EAAA5E,CAAA,CAAQH,MAAO6C,GAAe6B,EAA9B,CAAA7D,SAAA,CAAAC,2FAAAC,WAAA,MACGjB,05BC3CQ,IAAAkF,EACJ,CACPC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WANEL,EASP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAdEL,EAiBR,CACHC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtBEL,EAyBL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9BEL,EAiCL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtCEL,EAyCN,CACLC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WA9CEL,EAiDP,CACJC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAtDEL,EAyDL,CACNC,SAAU,UACVC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,0rDChEb,IAgBMC,EAAoC,CACxCC,MAAO,EAEPC,OAAQ,EAERC,MAAO,GAGHnG,EAAiB,CACrBC,WAAY,CACV4F,KAAM,QACNO,QAAS,QACTC,QAAS,kBAETC,UAAWZ,EAAgBC,SAC3BY,YAAa,UACbC,SAAUd,EAAgBE,MAE1Ba,aAAcf,EAAaC,SAC3Be,eAAgBhB,EAAaG,KAC7Bc,YAAajB,EAAaI,KAE1Bc,eAAgBlB,EAAeC,SAC/BkB,iBAAkBnB,EAAeG,KACjCiB,cAAepB,EAAeI,KAE9BiB,YAAarB,EAAYC,SACzBqB,cAAetB,EAAYG,KAC3BoB,WAAYvB,EAAYI,KAExBoB,UAAWxB,EAAaC,SACxBwB,YAAazB,EAAaG,KAC1BuB,SAAU1B,EAAaI,KAEvBuB,aAAc3B,EAAcC,SAC5B2B,eAAgB5B,EAAcG,KAC9B0B,YAAa7B,EAAcI,KAE3B0B,aAAc9B,EAAeC,SAC7B8B,eAAgB/B,EAAeG,KAC/B6B,YAAahC,EAAeI,MAG9B6B,OAAQ,CACNC,QAASlC,EAAgBE,MAEzBiC,QAASnC,EAAaK,QACtB+B,UAAWpC,EAAeK,QAE1BgC,OAAQrC,EAAYK,QACpBiC,KAAMtC,EAAaK,QACnBkC,QAASvC,EAAcK,QACvBmC,QAASxC,EAAeK,SAG1BoC,OAAQ,CACNC,SAAU1C,EAAgBE,MAC1ByC,aAAc3C,EAAgBK,QAE9B6B,QAASlC,EAAgBC,SACzB2C,YAAa5C,EAAgBK,QAE7B8B,QAASnC,EAAaG,KACtB0C,YAAa,QAEbT,UAAWpC,EAAeG,KAC1B2C,cAAe,QAEfT,OAAQrC,EAAYG,KACpB4C,WAAY,SAGdhE,KAAM,CACJiE,KAAMhD,EAAgBK,QACtB6B,QAASlC,EAAgBK,QACzB4C,MAAOjD,EAAgBI,KACvB8C,MAAO,QACPC,SAAU,QAEVhB,QAASnC,EAAaK,QACtB+B,UAAWpC,EAAeK,QAE1BgC,OAAQrC,EAAYK,QACpBiC,KAAMtC,EAAaK,QACnBkC,QAASvC,EAAcK,QACvBmC,QAASxC,EAAeK,UAItB5F,EAAyB,CAC7B,CACED,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,EACfC,aAAc,GAEhB,CACEjJ,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,GAEhB,CACEjJ,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfC,aAAc,IAEhB,CACEjJ,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,IAEhB,CACEjJ,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,GACfC,aAAc,GAEhB,CACEjJ,UAAW,EACX4I,YAAapD,EAAgBI,KAC7BiD,aAAc,CAAEC,MAAO,EAAGC,OAAQ,GAClCC,cAAe,IACfC,aAAc,IAmNLC,EAAsB,CACjCpJ,SACAqJ,MAjNmB,CACnBC,MAAO,CACLC,QAAS,CACP1J,gBAAiB6F,EAAgBG,KACjC/F,MAAO,SAGT0J,KAAM,CACJ3J,gBAAiB6F,EAAaG,KAC9B/F,MAAO,SAGT2J,IAAK,CACH5J,gBAAiB6F,EAAYG,KAC7B/F,MAAO,SAGT4J,OAAQ,CACN7J,gBAAiB6F,EAAeG,KAChC/F,MAAO,SAGT6J,OAAQ,CACN9J,gBAAiB6F,EAAeG,KAChC/F,MAAO4F,EAAeK,SAGxB6D,MAAO,CACL/J,gBAAiB6F,EAAcG,KAC/B/F,MAAO,SAGT+J,KAAM,CACJhK,gBAAiB6F,EAAaG,KAC9B/F,MAAO,SAGTgK,OAAQ,CACNjK,gBAAiB6F,EAAeG,KAChC/F,MAAO,UAIXiK,OAAQ,CACNR,QAAS,CACP1J,gBAAiB6F,EAAgBE,MACjC9F,MAAO4F,EAAgBK,SAGzByD,KAAM,CACJ3J,gBAAiB6F,EAAaE,MAC9B9F,MAAO4F,EAAaK,SAGtB0D,IAAK,CACH5J,gBAAiB6F,EAAYE,MAC7B9F,MAAO4F,EAAYK,SAGrB2D,OAAQ,CACN7J,gBAAiB6F,EAAeE,MAChC9F,MAAO4F,EAAeK,SAGxB4D,OAAQ,CACN9J,gBAAiB6F,EAAeE,MAChC9F,MAAO4F,EAAeK,SAGxB6D,MAAO,CACL/J,gBAAiB6F,EAAcE,MAC/B9F,MAAO4F,EAAcK,SAGvB8D,KAAM,CACJhK,gBAAiB6F,EAAaE,MAC9B9F,MAAO4F,EAAaK,SAGtB+D,OAAQ,CACNjK,gBAAiB6F,EAAeE,MAChC9F,MAAO4F,EAAeK,WAkI1BnC,aA3HgB,QAAhBoG,IAASC,GACL,CACEC,QAAO,iKACPC,KAAI,mGACJ1F,KAAI,+JAEN,CACEyF,QAAS,SACTC,KAAM,SACN1F,KAAM,UAmHZX,YAhH+B,CAC/BsG,KAAM,OACNxE,MAAO,MACPyE,OAAQ,UA+GRC,aA5GiC,CACjCC,SAAU,CACRlG,SAAU,GACVmG,eAAgB,GAChBC,WAAY,IAGdC,QAAS,CACPrG,SAAU,GACVmG,eAAgB,GAChBC,WAAY,IAGdE,OAAQ,CACNtG,SAAU,GACVmG,eAAgB,IAChBC,WAAY,IAGdtE,MAAO,CACL9B,SAAU,GACVmG,eAAgB,IAChBC,WAAY,IAGdvE,OAAQ,CACN7B,SAAU,GACVmG,eAAgB,IAChBC,WAAY,IAGdxE,MAAO,CACL5B,SAAU,GACVmG,eAAgB,IAChBC,WAAY,KA2EdG,eAvEqC,CACrC3E,MAAO,CACL5B,SAAU,GACVoG,WAAY,IAGdvE,OAAQ,CACN7B,SAAU,GACVoG,WAAY,IAGdtE,MAAO,CACL9B,SAAU,GACVoG,WAAY,KA2DdrG,UAvD2B,CAC3B+B,MAAO,CACL9B,SAAU,IAEZ6B,OAAQ,CACN7B,SAAU,IAEZ4B,MAAO,CACL5B,SAAU,IAEZwG,OAAQ,CACNxG,SAAU,KA8CZlE,aAEA6F,sBACA8E,eA3WmC,CACnC7E,MAAO,GAEPC,OAAQ,GAERC,MAAO,IAuWP4E,gBApXoC,CACpC9E,MAAO,EAEPC,OAAQ,GAERC,MAAO,IAiXP9F,gBAhDuC,CACvC2K,OAAQ,CACNC,aAAc,KAEhBC,KAAM,CACJD,aAAc,KAEhBE,QAAS,CACPF,aAAcjF,EAAoBE,QAEpCkF,cAAe,CACbC,uBAAwBrF,EAAoBE,OAC5CoF,wBAAyBtF,EAAoBE,QAE/CqF,YAAa,CACXF,uBAAwBrF,EAAoBE,OAC5CsF,oBAAqBxF,EAAoBE,QAE3CuF,aAAc,CACZH,wBAAyBtF,EAAoBE,OAC7CwF,qBAAsB1F,EAAoBE,QAE5CyF,WAAY,CACVH,oBAAqBxF,EAAoBE,OACzCwF,qBAAsB1F,EAAoBE,QAE5C0F,OAAQ,CACNX,aAAc,IAuBhBnJ,WAAY,utQCtGP,IAAM+J,EAAeC,IAAMC,cAAc3C,qfAOzC,IAAM4C,EAAc,SAACjM,GAC1B,OAAOA,EACHkM,IAAiB7C,EAAcrJ,GAC/BqJ,6KAGC,IAAM8C,EAAgB,SAAC3L,GAA8B,IAClDC,EAAmCD,EAAnCC,SADkD2L,EACf5L,EAAzB6L,MAEZrM,EAAQiM,OAH4C,IAAAG,EAChC/C,EADgC+C,GAK1D,OACEE,EAAAC,EAAAC,cAACV,EAAaW,SAAd,CAAuBJ,MAAOrM,EAA9BwB,SAAA,CAAAC,4EAAAC,WAAA,MAAsCjB,gLAInC,IAAMO,EAAW,WACtB,OAAO+K,IAAMW,WAAWZ,8PC7T1Ba,EAAAC,EAAAC,EAAA,sBAAAtH,IAAA,IAAAuH,EAAAH,EAAA,wCAAAI,EAAAJ,EAAAK,EAAAF,szBAiBO,IAAMvH,EAAc,SACzB0H,EACAC,EACAC,GAHyB,OAItB,SAAC3M,EAAoBR,GACxB,IAEMoN,EAAkC,CAFlBH,EAAiBzM,EAAOR,IAY9C,OARImN,GACFC,EAAO/L,KAAK8L,EAAe3M,EAAOR,IAGhCkN,GACFE,EAAO/L,KAAK6L,EAAoB1M,EAAOR,IAGlCqN,IAAMC,IAAaF","file":"static/js/29.977bfe1d.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: ContainerShape;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` component (i.e. you can pass its props)`}</p>\n    <p><strong parentName=\"p\">{`Note!!!`}</strong>{` In web environment sometimes you need to wrap `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` in a `}<inlineCode parentName=\"p\">{`<Box>`}</inlineCode>{` or provide a parent node with `}<inlineCode parentName=\"p\">{`display: flex`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`flex-direction: column`}</inlineCode>{` for centering to work properly. In React Native it is non issue because all nodes be default have these properties`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Box>\\n  <Text\\n    color=\\\"primary\\\" // or custom\\n    align=\\\"left\\\"\\n    size=\\\"large\\\" // small - large or number\\n    fontFamily=\\\"text\\\"\\n    weight=\\\"normal\\\"\\n    isItalic\\n    isInline\\n    transform=\\\"uppercase\\\"\\n    getStyles={(props, theme) => ({\\n      textStyle: {},\\n    })}\\n  >\\n    Lorem ipsum dolar set amet\\n  </Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Text color=\"primary\" // or custom\n        align=\"left\" size=\"large\" // small - large or number\n        fontFamily=\"text\" weight=\"normal\" isItalic isInline transform=\"uppercase\" getStyles={(props, theme) => ({\n          textStyle: {}\n        })} mdxType=\"Text\">\n      Lorem ipsum dolar set amet\n    </Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <Playground __position={1} __code={'<Box flexDirection=\\\"column\\\">\\n  <Text size=\\\"xsmall\\\">xsmall</Text>\\n  <Text size=\\\"small\\\">small</Text>\\n  <Text size=\\\"medium\\\">medium</Text>\\n  <Text size=\\\"large\\\">large</Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Text size=\"xsmall\" mdxType=\"Text\">xsmall</Text>\n    <Text size=\"small\" mdxType=\"Text\">small</Text>\n    <Text size=\"medium\" mdxType=\"Text\">medium</Text>\n    <Text size=\"large\" mdxType=\"Text\">large</Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <Playground __position={2} __code={'<Box flexDirection=\\\"column\\\">\\n  <Text color=\\\"#16a054\\\">#16a054</Text>\\n  <Text color=\\\"default\\\">default</Text>\\n  <Text color=\\\"muted\\\">muted</Text>\\n  <Text color=\\\"link\\\">link</Text>\\n  <Text color=\\\"white\\\">white</Text>\\n  <Text color=\\\"selected\\\">selected</Text>\\n  <Text color=\\\"primary\\\">primary</Text>\\n  <Text color=\\\"secondary\\\">secondary</Text>\\n  <Text color=\\\"danger\\\">danger</Text>\\n  <Text color=\\\"info\\\">info</Text>\\n  <Text color=\\\"success\\\">success</Text>\\n  <Text color=\\\"warning\\\">warning</Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Text color=\"#16a054\" mdxType=\"Text\">#16a054</Text>\n    <Text color=\"default\" mdxType=\"Text\">default</Text>\n    <Text color=\"muted\" mdxType=\"Text\">muted</Text>\n    <Text color=\"link\" mdxType=\"Text\">link</Text>\n    <Text color=\"white\" mdxType=\"Text\">white</Text>\n    <Text color=\"selected\" mdxType=\"Text\">selected</Text>\n    <Text color=\"primary\" mdxType=\"Text\">primary</Text>\n    <Text color=\"secondary\" mdxType=\"Text\">secondary</Text>\n    <Text color=\"danger\" mdxType=\"Text\">danger</Text>\n    <Text color=\"info\" mdxType=\"Text\">info</Text>\n    <Text color=\"success\" mdxType=\"Text\">success</Text>\n    <Text color=\"warning\" mdxType=\"Text\">warning</Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"font-families\"\n    }}>{`Font Families`}</h3>\n    <Playground __position={3} __code={'<Box flexDirection=\\\"column\\\">\\n  <Text fontFamily=\\\"heading\\\">heading</Text>\\n  <Text fontFamily=\\\"text\\\">text</Text>\\n  <Text fontFamily=\\\"mono\\\">mono</Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Text fontFamily=\"heading\" mdxType=\"Text\">heading</Text>\n    <Text fontFamily=\"text\" mdxType=\"Text\">text</Text>\n    <Text fontFamily=\"mono\" mdxType=\"Text\">mono</Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"font-weights\"\n    }}>{`Font Weights`}</h3>\n    <Playground __position={4} __code={'<Box flexDirection=\\\"column\\\">\\n  <Text weight=\\\"500\\\">500</Text>\\n  <Text weight=\\\"700\\\">700</Text>\\n  <Text weight=\\\"bold\\\">bold</Text>\\n  <Text weight=\\\"normal\\\">normal</Text>\\n  <Text weight=\\\"light\\\">light</Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Text weight=\"500\" mdxType=\"Text\">500</Text>\n    <Text weight=\"700\" mdxType=\"Text\">700</Text>\n    <Text weight=\"bold\" mdxType=\"Text\">bold</Text>\n    <Text weight=\"normal\" mdxType=\"Text\">normal</Text>\n    <Text weight=\"light\" mdxType=\"Text\">light</Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variations\"\n    }}>{`Variations`}</h3>\n    <Playground __position={5} __code={'<Box flexDirection=\\\"column\\\">\\n  <Text isItalic>Lorem ipsum dolar set amet</Text>\\n  <Text align=\\\"left\\\">Lorem ipsum dolar set amet</Text>\\n  <Text align=\\\"center\\\">Lorem ipsum dolar set amet</Text>\\n  <Text align=\\\"right\\\">Lorem ipsum dolar set amet</Text>\\n  <Text transform=\\\"uppercase\\\">Lorem ipsum dolar set amet</Text>\\n  <Text transform=\\\"lowercase\\\">Lorem ipsum dolar set amet</Text>\\n  <Text transform=\\\"capitalize\\\">Lorem ipsum dolar set amet</Text>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <Box flexDirection=\"column\" mdxType=\"Box\">\n    <Text isItalic mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text align=\"left\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text align=\"center\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text align=\"right\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text transform=\"uppercase\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text transform=\"lowercase\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n    <Text transform=\"capitalize\" mdxType=\"Text\">Lorem ipsum dolar set amet</Text>\n  </Box>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Text} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStylesProps {\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  { size, color, fontFamily, isInline, isItalic, align, transform, weight },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontFamily, FontWeight, TextColor, TextSize } from '../../theme/Theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(\n    getTextStyles,\n    getStyles,\n    theme.components.getTextStyles,\n  )(\n    {\n      align,\n      color,\n      fontFamily,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}