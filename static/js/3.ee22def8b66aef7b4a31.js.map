{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ListPicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/usePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx"],"names":["Avatar","props","source","name","_props$size","size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","isImageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","onError","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","__source","fileName","_jsxFileName","lineNumber","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","Checkbox","_props$shape","shape","_props$value","value","label","_props$labelPosition","labelPosition","_props$isDisabled","isDisabled","_props$onValueChange","onValueChange","StyledTouchable","onPress","Touchable","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","touchableProps","StyledCheck","Check","checkProps","react__WEBPACK_IMPORTED_MODULE_5___default","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","_Typography__WEBPACK_IMPORTED_MODULE_12__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_6__","containerShapes","disabled","viewProps","sizeValue","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","colors","background","content","borderColor","border","borderWidth","primaryDefault","greyDark","_Icon__WEBPACK_IMPORTED_MODULE_11__","text","white","State","_props$initial","initial","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","ListItem","title","description","getControlHeight","useControlSizeUtils","StyledTextWrapper","hasAvatar","TextWrapper","textWrapperProps","_getOverrides7","StyledTitle","Title","_getOverrides8","titleProps","_getOverrides9","StyledDescription","Description","_getOverrides10","descriptionProps","_getOverrides11","StyledAction","Action","_getOverrides12","rightIconProps","_getOverrides13","StyledAvatar","_getOverrides14","AvatarR","avatarProps","flexDirection","minHeight","greyLight","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","flex","_props$hasAvatar","paddingLeft","getSmallerHeightControlSize","Fragment","_Avatar__WEBPACK_IMPORTED_MODULE_9__","ListPicker","_props$data","data","keyExtractor","isMulti","_usePicker","usePicker","items","handleSelect","StyledList","getItemLayout","_","index","offset","renderItem","_ref","item","StyledListPickerItem","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","isSelected","ListPickerItem","ListPickerItemR","listPickerItemProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","List","listProps","react_native_web_dist_exports_FlatList__WEBPACK_IMPORTED_MODULE_5__","_props$index","_props$isSelected","_props$onPress","override","paddingRight","component","_Box__WEBPACK_IMPORTED_MODULE_8__","_Checkbox__WEBPACK_IMPORTED_MODULE_9__","ListItemR","listItemRProps","Array","isArray","itemValue","itemIndex","filter","val","concat","some","selVal","key","Label","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","wrapperStyle","paddingBottom","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS"],"mappings":"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","file":"static/js/3.8b5318e3.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const isImageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { name, size, isSolid, color, testID },\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    { name, size, isSolid, color },\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n\n  if (!isImageUnavailable && !!source) {\n    const [ImageR, imageProps] = getOverrides(\n      StyledImage,\n      props,\n      {\n        onError: () => setHasImageFailedLoading(true),\n        source,\n      },\n      dlv(theme, 'overrides.Avatar.Image'),\n      overrides.Image,\n    );\n\n    return (\n      <Root {...rootProps}>\n        <ImageR {...imageProps} />\n      </Root>\n    );\n  }\n\n  return (\n    <Root {...rootProps}>\n      <Initials {...initialsProps} />\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ContainerShape, ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Icon } from '../Icon';\nimport { Label, LabelPosition, LabelProps } from '../Typography';\n\ninterface CheckboxBaseProps {\n  /**\n   * The size of the checkbox.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, will display as checked.\n   * @default false\n   */\n  value: boolean;\n\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"right\"\n   */\n  labelPosition?: LabelPosition;\n\n  /**\n   * When true, the checkbox is disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Shape of the checkbox.\n   * @default \"rounded\"\n   */\n  shape?: ContainerShape;\n\n  /**\n   * Called when checkbox is pressed.\n   */\n  onValueChange?: (value: boolean) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface CheckboxOverrides {\n  Touchable: TouchableProps;\n  Label: LabelProps;\n  Check: CheckProps;\n}\n\nexport interface CheckboxProps\n  extends WithOverrides<CheckboxBaseProps, CheckboxOverrides> {}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    size = 'medium',\n    shape = 'rounded',\n    value = false,\n    label,\n    labelPosition = 'right',\n    isDisabled = false,\n    onValueChange = () => {\n      return;\n    },\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      size,\n      shape,\n      isDisabled,\n      testID,\n      onPress: () => onValueChange(!value),\n    },\n    dlv(theme, 'overrides.Checkbox.Touchable'),\n    overrides.Touchable,\n  );\n  const [Check, checkProps] = getOverrides(\n    StyledCheck,\n    props,\n    { value, size, shape, isDisabled },\n    dlv(theme, 'overrides.Checkbox.Check'),\n    overrides.Check,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <Label label={label} position={labelPosition}>\n        <Check\n          value={value}\n          size={size}\n          shape={shape}\n          isDisabled={isDisabled}\n          {...checkProps}\n        />\n      </Label>\n    </Touchable>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { size, shape, isDisabled, children, style, ...touchableProps } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[theme.containerShapes[shape], style]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface CheckProps extends ViewProps {\n  size: ControlSize | number;\n  value: boolean;\n  isDisabled: boolean;\n  shape: ContainerShape;\n}\n\nconst StyledCheck = (props: CheckProps) => {\n  const { size, shape, value, isDisabled, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  const sizeValue = isControlSize(size)\n    ? theme.controlHeights[size] - 16\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderWidth: 1,\n          height: sizeValue,\n          justifyContent: 'center',\n          width: sizeValue,\n          ...(value\n            ? {\n                backgroundColor: theme.colors.background.primaryDefault,\n                borderColor: 'transparent',\n              }\n            : {}),\n          ...(isDisabled\n            ? {\n                backgroundColor: theme.colors.background.greyDark,\n                borderColor: theme.colors.border.default,\n              }\n            : {}),\n          ...theme.containerShapes[shape],\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {value ? (\n        <Icon name=\"check\" size=\"xsmall\" color={theme.colors.text.white} />\n      ) : null}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageSourcePropType,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme, ControlSize } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Text, TextProps } from '../Typography';\nimport { useControlSizeUtils } from '../../utils/ControlSize';\n\ninterface ListItemBaseProps {\n  /**\n   * Title of the list item\n   */\n  title?: OptionalString;\n\n  /**\n   * Description of the list item\n   */\n  description?: OptionalString;\n\n  /**\n   * Source of the avatar\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * When true, list item will not be able to be pressed.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Size of the ListItem.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * Called when pressing list item\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ListItemOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  TextWrapper: TextWrapperProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n  Avatar: AvatarProps;\n}\n\nexport interface ListItemProps\n  extends WithOverrides<ListItemBaseProps, ListItemOverrides> {}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    isDisabled = false,\n    title,\n    description,\n    size = 'medium',\n    onPress,\n    testID,\n    source,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n  const { getControlHeight } = useControlSizeUtils();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    { isDisabled, size },\n    dlv(theme, 'overrides.ListItem.Root'),\n    overrides.Root,\n  );\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    { onPress, testID, isDisabled },\n    dlv(theme, 'overrides.ListItem.Touchable'),\n    overrides.Touchable,\n  );\n  const [TextWrapper, textWrapperProps] = getOverrides(\n    StyledTextWrapper,\n    props,\n    {\n      hasAvatar:\n        !!source ||\n        !!overrides.Avatar ||\n        !!dlv(theme, 'overrides.ListItem.Avatar'),\n    },\n    dlv(theme, 'overrides.ListItem.TextWrapper'),\n    overrides.TextWrapper,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    { title, size, isDisabled },\n    dlv(theme, 'overrides.ListItem.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    { description, size, isDisabled },\n    dlv(theme, 'overrides.ListItem.Description'),\n    overrides.Description,\n  );\n  const [Action, rightIconProps] = getOverrides(\n    StyledAction,\n    props,\n    { isDisabled },\n    dlv(theme, 'overrides.ListItem.Action'),\n    overrides.Action,\n  );\n  const [AvatarR, avatarProps] = getOverrides(\n    StyledAvatar,\n    props,\n    { source, size: getControlHeight(size) - 8 },\n    dlv(theme, 'overrides.ListItem.Avatar'),\n    overrides.Avatar,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Touchable {...touchableProps}>\n        <AvatarR {...avatarProps} />\n        <TextWrapper {...textWrapperProps}>\n          <Title {...titleProps} />\n          <Description {...descriptionProps} />\n        </TextWrapper>\n      </Touchable>\n      <Action {...rightIconProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n  size: ControlSize | number;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, isDisabled, size, ...viewProps } = props;\n  const theme = useTheme();\n  const { getControlHeight } = useControlSizeUtils();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          minHeight: getControlHeight(size) + 16,\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { style, children, isDisabled, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: OptionalString;\n  size: ControlSize | number;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, size, isDisabled, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      size={size}\n      color={isDisabled ? 'muted' : 'default'}\n      style={[{}, getStyle(props, style)]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface TextWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n  hasAvatar: boolean;\n}\n\nconst StyledTextWrapper = (props: TextWrapperProps) => {\n  const { children, style, hasAvatar = false, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        { flex: 1, justifyContent: 'center', paddingLeft: hasAvatar ? 8 : 0 },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps {\n  description?: OptionalString;\n  size: ControlSize | number;\n  isDisabled: boolean;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { style, description, size, isDisabled, ...viewProps } = props;\n  const { getSmallerHeightControlSize } = useControlSizeUtils();\n\n  if (!description) return null;\n\n  return (\n    <Text\n      size={getSmallerHeightControlSize(size)}\n      color=\"muted\"\n      style={[{}, getStyle(props, style)]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ActionProps {\n  isDisabled: boolean;\n}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n\nconst StyledAvatar = (props: AvatarProps) => {\n  const { source, name } = props;\n\n  if (!source && !name) return null;\n\n  return <Avatar {...props} />;\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, Override, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Box } from '../Box';\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\nimport {\n  PickerItem,\n  PickerItemProps,\n  usePicker,\n  UsePickerProps,\n} from './usePicker';\n\nexport interface ListPickerItem<TValue extends any> extends PickerItem<TValue> {\n  label: string;\n  description?: OptionalString;\n  isDisabled?: boolean;\n}\n\nexport interface ListPickerOverrides<TValue extends any> {\n  List: ListProps<TValue>;\n  ListPickerItem: ListPickerItemProps<TValue>;\n}\n\nexport interface ListPickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>\n  extends WithOverrides<\n    UsePickerProps<TValue, TPickerItem & ListPickerItem<TValue>, TIsMulti>,\n    ListPickerOverrides<TValue>\n  > {}\n\nexport const ListPicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: ListPickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    data = [],\n    value,\n    onValueChange = () => {\n      return;\n    },\n    keyExtractor,\n    isMulti,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const { items, handleSelect } = usePicker({\n    value,\n    onValueChange,\n    data,\n    isMulti,\n    keyExtractor,\n  });\n\n  const [List, listProps] = getOverrides(\n    StyledList,\n    props,\n    {\n      getItemLayout: (_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      }),\n      data: items,\n      renderItem: ({ item }) => {\n        const [ListPickerItemR, listPickerItemProps] = getOverrides(\n          StyledListPickerItem,\n          props,\n          {\n            ...item,\n            onPress: () =>\n              handleSelect(item.value, item.index, item.isSelected),\n          },\n          dlv(theme, 'overrides.ListPicker.ListPickerItem'),\n          overrides.ListPickerItem,\n        );\n\n        return <ListPickerItemR {...listPickerItemProps} />;\n      },\n    },\n    dlv(theme, 'overrides.ListPicker.List'),\n    overrides.List,\n  );\n\n  return <List {...listProps} />;\n};\n\ninterface ListProps<TValue extends any>\n  extends FlatListProps<ListPickerItem<TValue> & PickerItemProps> {}\n\nconst StyledList = <TValue extends any>(props: ListProps<TValue>) => {\n  return <FlatList {...props} />;\n};\n\ninterface ListPickerItemProps<TValue extends any> {\n  index: number;\n  isSelected: boolean;\n  onPress: (value: TValue, index: number, isSelected: boolean) => void;\n  value: TValue;\n  label: string;\n  description?: OptionalString;\n  isDisabled?: boolean;\n  override?: Override<ListPickerItemProps<TValue>, ListItemProps>;\n}\n\nconst StyledListPickerItem = <TValue extends any = any>(\n  props: ListPickerItemProps<TValue>,\n) => {\n  const {\n    index = 0,\n    isSelected = false,\n    label,\n    onPress = () => {\n      return;\n    },\n    value,\n    description,\n    override,\n    isDisabled,\n  } = props;\n\n  const Action = () => (\n    <Box justifyContent=\"center\" alignItems=\"center\">\n      <Checkbox\n        onValueChange={() => onPress(value, index, isSelected)}\n        shape=\"circle\"\n        value={isSelected}\n        isDisabled={isDisabled}\n      />\n    </Box>\n  );\n\n  const [ListItemR, listItemRProps] = getOverrides(\n    ListItem,\n    props,\n    {\n      onPress: () => onPress(value, index, isSelected),\n      title: label,\n      description,\n      isDisabled,\n      overrides: {\n        Touchable: {\n          style: {\n            paddingRight: 8,\n          },\n        },\n        Action: {\n          component: Action,\n        },\n      },\n    },\n    override,\n  );\n\n  return <ListItemR {...listItemRProps} />;\n};\n","import * as React from 'react';\n\ntype Value<\n  TValue extends any,\n  TIsMulti extends boolean = false\n> = TIsMulti extends true ? TValue[] : TValue;\n\nexport interface PickerItem<TValue extends any> {\n  value: TValue;\n  key?: string;\n}\n\nexport interface PickerItemProps {\n  key: string;\n  isSelected: boolean;\n  index: number;\n}\n\nexport interface UsePickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n> {\n  /**\n   * Set whether it should allow multiple selections. You should specify the value to get proper type-checking.\n   * @default false\n   */\n  isMulti?: TIsMulti;\n\n  /**\n   * Select item or items.\n   * For single-select use single string.\n   * For multi-select use string array\n   *\n   * *This is a controlled component*; Value will reflect selected items\n   */\n  value?: Value<TValue, TIsMulti> | null;\n\n  /**\n   * Called when a select list item is pressed\n   */\n  onValueChange?: (value: Value<TValue, TIsMulti>, index: number) => void;\n\n  /**\n   * List of data\n   */\n  data?: Array<TPickerItem>;\n\n  /**\n   * Used to extract a unique key for a given item at the specified index.\n   * Key is used for caching and as the react key to track item re-ordering.\n   * The default extractor checks item.key, then falls back to using the index, like React does.\n   */\n  keyExtractor?: (item: TPickerItem) => string;\n}\n\nconst isMulti = <TValue extends any>(\n  value: TValue | TValue[],\n): value is TValue[] => Array.isArray(value);\n\nexport const usePicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: UsePickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    value,\n    onValueChange = () => {\n      return;\n    },\n    data = [],\n    keyExtractor,\n  } = props;\n\n  const handleSelect = React.useCallback(\n    (itemValue: TValue, itemIndex: number, isSelected: boolean) => {\n      if (isMulti(value)) {\n        if (isSelected) {\n          onValueChange(\n            // @ts-ignore: TODO: make this work\n            value.filter(val => val !== itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        } else {\n          onValueChange(\n            value.concat(itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        }\n      } else {\n        onValueChange(itemValue as Value<TValue, TIsMulti>, itemIndex);\n      }\n    },\n    [value, onValueChange],\n  );\n\n  const items = data.map((item, index) => {\n    const isSelected = (isMulti(value)\n      ? //\n        // @ts-ignore: TODO: make this work\n        value.some(selVal => selVal === item.value)\n      : value === item.value) as boolean;\n\n    return {\n      ...item,\n      key: keyExtractor ? keyExtractor(item) : item.key || `${index}`,\n      index,\n      isSelected,\n    };\n  }) as (TPickerItem & PickerItemProps)[];\n\n  return {\n    handleSelect,\n    items,\n  };\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\nexport type LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n"],"sourceRoot":""}