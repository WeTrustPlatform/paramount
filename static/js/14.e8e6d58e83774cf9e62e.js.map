{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","TextInput","_props$isClearable","isClearable","_props$isDisabled","isDisabled","_props$isInvalid","isInvalid","_props$onClear","onClear","_props$onValueChange","onValueChange","_props$onChangeText","onChangeText","value","_props$overrides","overrides","textInputProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","_getOverrides","getOverrides","StyledRoot","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","_getOverrides3","StyledInput","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","hasLeftIcon","LeftIcon","hasRightIcon","RightIcon","Input","_getOverrides4","inputProps","_getOverrides5","StyledLeftIconWrapper","LeftIconWrapper","_getOverrides6","leftIconWrapperProps","_getOverrides7","StyledLeftIcon","_getOverrides8","leftIconProps","_getOverrides9","StyledRightIconWrapper","RightIconWrapper","_getOverrides10","rightIconWrapperProps","_getOverrides11","StyledRightIcon","_getOverrides12","rightIconProps","react__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_jsxFileName","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_8__","numberOfLines","textContentType","placeholderTextColor","_ref","isControlSize","borderRadius","controlBorderRadius","minHeight","controlHeights","controlPaddings","textSize","textSizes","medium","react_native_web_dist_exports_TextInput__WEBPACK_IMPORTED_MODULE_6__","greyLight","content","borderColor","border","borderWidth","text","muted","danger","editable","name","alignItems","display","justifyContent","left","position","zIndex","right","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_7__","onPress","_Icon__WEBPACK_IMPORTED_MODULE_12__","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Label","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_7__","label","___WEBPACK_IMPORTED_MODULE_6__","of","isMDXComponent","_props$position","StyledWrapper","Wrapper","wrapperProps","StyledLabelText","LabelText","labelTextProps","react__WEBPACK_IMPORTED_MODULE_4__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","wrapperStyle","flexDirection","textProps","textStyle","_Text__WEBPACK_IMPORTED_MODULE_9__","accessibilityRole","Platform","OS","__webpack_require__","d","__webpack_exports__"],"mappings":"8lCA8BO,IAAMA,EAAa,SAACC,EAA4BC,GAA7B,MACR,kBAATD,EAAoBA,EAAOC,EAAMC,QAAQF,4LAE3C,IAAMG,EAAU,SAACC,GAAwB,IAAAC,EAM1CD,EAJFJ,YAF4C,IAAAK,EAErC,SAFqCA,EAAAC,EAM1CF,EAHFG,mBAH4C,IAAAD,EAG9B,WAH8BA,EAI5CE,EAEEJ,EAFFI,MACGC,EALyCC,OAAAC,EAAA,EAAAD,CAM1CN,EAN0C,gCAOxCH,EAAQW,cAEd,OACEC,EAAA,cAACC,EAAA,EAADJ,OAAAK,EAAA,EAAAL,CAAA,CACEF,MAAO,CACW,aAAhBD,EACI,CAAES,OAAQjB,EAAWC,EAAMC,IAC3B,CAAEgB,MAAOlB,EAAWC,EAAMC,IAC9BiB,YAASd,EAAOI,GAChBU,YAASd,EAAOe,IAAIlB,EAAO,8BAEzBQ,EARN,CAAAW,SAAA,CAAAC,2FAAAC,WAAA,6cCXJ,IAAMC,EAOF,CACFC,gBAAiB,SAACC,EAAiCxB,GAEjD,OAAIA,EAAMyB,OAAOC,WAAWF,GAEnB,CAAED,gBAAiBvB,EAAMyB,OAAOC,WAAWF,IAG7C,CAAED,gBAAiBC,IAE5BG,UAAW,SAACA,EAAmB3B,GAApB,OAAqCA,EAAM4B,WAAWD,IAEjEE,MAAO,SAACA,EAAuB7B,GAAxB,OAAyCA,EAAM8B,gBAAgBD,IAEtEE,MAAO,SAAChC,EAA4BC,GAA7B,MAA+C,CACpDgC,QAASlC,EAAWC,EAAMC,KAE5BiC,YAAa,SAAClC,EAA4BC,GAA7B,MAA+C,CAC1DkC,cAAepC,EAAWC,EAAMC,KAElCmC,SAAU,SAACpC,EAA4BC,GAA7B,MAA+C,CACvDoC,WAAYtC,EAAWC,EAAMC,KAE/BqC,gBAAiB,SAACtC,EAA4BC,GAA7B,MAA+C,CAC9DsC,kBAAmBxC,EAAWC,EAAMC,KAEtCuC,UAAW,SAACxC,EAA4BC,GAA7B,MAA+C,CACxDwC,YAAa1C,EAAWC,EAAMC,KAEhCyC,WAAY,SAAC1C,EAA4BC,GAA7B,MAA+C,CACzD0C,aAAc5C,EAAWC,EAAMC,KAEjC2C,WAAY,SAAC5C,EAA4BC,GAA7B,MAA+C,CACzD4C,aAAc9C,EAAWC,EAAMC,KAEjC6C,SAAU,SAAC9C,EAA4BC,GAA7B,MAA+C,CACvD8C,WAAYhD,EAAWC,EAAMC,KAE/B+C,cAAe,SAAChD,EAA4BC,GAA7B,MAA+C,CAC5DgD,gBAAiBlD,EAAWC,EAAMC,MAIzBiD,EAAM,SAAC9C,GAAoB,IAC9B+C,EAAoC/C,EAApC+C,SAAUC,EAA0BhD,EAA1BgD,OAAWC,EADS3C,OAAAC,EAAA,EAAAD,CACMN,EADN,uBAEhCH,EAAQW,cACR0C,EAAoB,GACpBC,EAAwB,GAE9B,IAAK,IAAMC,KAAQH,EACjB,GAAIG,EAAM,CACR,IAAMC,EAAUlC,EAASiC,GAEzB,GAAIC,EAAS,CAEX,IAAMjD,EAAQiD,EAAQJ,EAAWG,GAAkBvD,GAEnDqD,EAAkBI,KAAKlD,QAGvB+C,EAAWC,GAA2BH,EAAWG,GAKvD,OACE3C,EAAA,cAACC,EAAA,EAAD,CAAMsC,OAAQA,EAAQ5C,MAAO,CAAC+C,EAAYD,GAA1ClC,SAAA,CAAAC,mFAAAC,WAAA,MACG6B,yzDC9CA,IAAMQ,EAAY,SAACvD,GAA0B,IAAAC,EAkB9CD,EAhBFJ,YAFgD,IAAAK,EAEzC,SAFyCA,EAAAuD,EAkB9CxD,EAfFyD,mBAHgD,IAAAD,KAAAE,EAkB9C1D,EAdF2D,kBAJgD,IAAAD,KAAAE,EAkB9C5D,EAbF6D,iBALgD,IAAAD,KAAAE,EAkB9C9D,EAZF+D,eANgD,IAAAD,EAMtC,aANsCA,EAAAE,EAkB9ChE,EATFiE,qBATgD,IAAAD,EAShC,aATgCA,EAAAE,EAkB9ClE,EANFmE,oBAZgD,IAAAD,EAYjC,aAZiCA,EAehDE,EAGEpE,EAHFoE,MAfgDC,EAkB9CrE,EAFFsE,iBAhBgD,IAAAD,EAgBpC,GAhBoCA,EAiB7CE,EAjB6CjE,OAAAkE,EAAA,EAAAlE,CAkB9CN,EAlB8C,8GAmB5CH,EAAQW,cAnBoCiE,EAqBxBC,YACxBC,EACA3E,EACA,GACAe,IAAIlB,EAAO,4BACXyE,EAAUM,MA1BsCC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAmE,EAAA,GAqB3CG,EArB2CC,EAAA,GAqBrCE,EArBqCF,EAAA,GAAAG,EA4BtBN,YAC1BO,EACAjF,EAFsCM,OAAA4E,EAAA,EAAA5E,CAAA,CAIpC6E,cAAeb,EAAUc,SACzBC,gBAAiB5B,IAAea,EAAUgB,WAC1C1F,OACA+D,aACAE,YACAI,gBACAG,QACAD,gBACGI,GAELxD,IAAIlB,EAAO,6BACXyE,EAAUiB,OA3CsCC,EAAAlF,OAAAwE,EAAA,EAAAxE,CAAA0E,EAAA,GA4B3CO,EA5B2CC,EAAA,GA4BpCC,EA5BoCD,EAAA,GAAAE,EA6CFhB,YAC9CiB,EACA3F,EACA,GACAe,IAAIlB,EAAO,uCACXyE,EAAUsB,iBAlDsCC,EAAAvF,OAAAwE,EAAA,EAAAxE,CAAAoF,EAAA,GA6C3CE,EA7C2CC,EAAA,GA6C1BC,EA7C0BD,EAAA,GAAAE,EAoDhBrB,YAChCsB,EACAhG,EACA,CACEyD,cACAM,UACAE,gBACAG,QACAD,gBAEFpD,IAAIlB,EAAO,gCACXyE,EAAUc,UA/DsCa,EAAA3F,OAAAwE,EAAA,EAAAxE,CAAAyF,EAAA,GAoD3CX,EApD2Ca,EAAA,GAoDjCC,EApDiCD,EAAA,GAAAE,EAiEAzB,YAChD0B,EACApG,EACA,GACAe,IAAIlB,EAAO,wCACXyE,EAAU+B,kBAtEsCC,EAAAhG,OAAAwE,EAAA,EAAAxE,CAAA6F,EAAA,GAiE3CE,EAjE2CC,EAAA,GAiEzBC,GAjEyBD,EAAA,GAAAE,GAwEd9B,YAClC+B,EACAzG,EACA,CACEyD,cACAM,UACAE,gBACAG,QACAD,gBAEFpD,IAAIlB,EAAO,iCACXyE,EAAUgB,WAnFsCoB,GAAApG,OAAAwE,EAAA,EAAAxE,CAAAkG,GAAA,GAwE3ClB,GAxE2CoB,GAAA,GAwEhCC,GAxEgCD,GAAA,GAsFlD,OACEE,EAAA,cAAChC,EAADtE,OAAAuG,EAAA,EAAAvG,CAAA,GAAUyE,EAAV,CAAA/D,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACE0F,EAAA,cAAChB,EAADtF,OAAAuG,EAAA,EAAAvG,CAAA,GAAqBwF,EAArB,CAAA9E,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACE0F,EAAA,cAACxB,EAAD9E,OAAAuG,EAAA,EAAAvG,CAAA,GAAc4F,EAAd,CAAAlF,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,SAEF0F,EAAA,cAACrB,EAADjF,OAAAuG,EAAA,EAAAvG,CAAA,GAAWmF,EAAX,CAAAzE,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,QACA0F,EAAA,cAACP,EAAD/F,OAAAuG,EAAA,EAAAvG,CAAA,GAAsBiG,GAAtB,CAAAvF,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACE0F,EAAA,cAACtB,GAADhF,OAAAuG,EAAA,EAAAvG,CAAA,GAAeqG,GAAf,CAAA3F,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,2NAYR,IAAMyD,EAAa,SAAC3E,GAAqB,IAC/B+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADWC,OAAAkE,EAAA,EAAAlE,CACGN,EADH,sBAGvC,OACE4G,EAAA,cAACG,EAAA,EAADzG,OAAAuG,EAAA,EAAAvG,CAAA,CAAMF,MAAO,CAACA,IAAYC,EAA1B,CAAAW,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACG6B,IAeDkC,EAAc,SAACjF,GAAsB,IAEvC2D,EAYE3D,EAZF2D,WACAE,EAWE7D,EAXF6D,UACAI,EAUEjE,EAVFiE,cACAE,EASEnE,EATFmE,aACAvE,EAQEI,EARFJ,KACAQ,EAOEJ,EAPFI,MACA4G,EAMEhH,EANFgH,cACAC,EAKEjH,EALFiH,gBACA9B,EAIEnF,EAJFmF,YACAE,EAGErF,EAHFqF,aACA6B,EAEElH,EAFFkH,qBACG3C,EAboCjE,OAAAkE,EAAA,EAAAlE,CAcrCN,EAdqC,gKAenCH,EAAQW,cAf2B2G,EAuBrCC,YAAcxH,GACd,CACEyH,aAAcxH,EAAMyH,oBAAoB1H,GACxC2H,UAAW1H,EAAM2H,eAAe5H,GAChCyC,YAAaxC,EAAM4H,gBAAgB7H,GACnC2C,aAAc1C,EAAM4H,gBAAgB7H,GACpC8H,SAAU7H,EAAM8H,UAAU/H,IAE5B,CACEyH,aAAcxH,EAAMyH,oBAAoBM,OACxCL,UAAW3H,EACXyC,YAAaxC,EAAM4H,gBAAgBG,OACnCrF,aAAc1C,EAAM4H,gBAAgBG,OACpCF,SAAU7H,EAAM8H,UAAUC,QAlB9BP,EAlBuCF,EAkBvCE,aACAE,EAnBuCJ,EAmBvCI,UACAlF,EApBuC8E,EAoBvC9E,YACAE,EArBuC4E,EAqBvC5E,aACAmF,EAtBuCP,EAsBvCO,SAiBF,OAEEd,EAAA,cAACiB,EAAA,EAADvH,OAAAuG,EAAA,EAAAvG,CAAA,CACEF,MAAO,CAACE,OAAA4E,EAAA,EAAA5E,CAAA,CAEJc,gBAAiBuC,EACb9D,EAAMyB,OAAOC,WAAWuG,UACxBjI,EAAMyB,OAAOC,WAAWwG,QAC5BC,YAAanI,EAAMyB,OAAO2G,OAAb,QACbZ,eACAa,YAAa,EACb7G,MAAOsC,EACH9D,EAAMyB,OAAO6G,KAAKC,MAClBvI,EAAMyB,OAAO6G,KAAb,QACJZ,YACAlF,cACAE,eACA1B,MAAO,QACJ6G,EACC7D,EAAY,CAAEmE,YAAanI,EAAMyB,OAAO2G,OAAOI,QAAW,GAC1DrB,EACA,CACEO,UAAWP,EAAgBO,EAC3B1E,gBAAiB,IAEnB,GACAsC,GAAe,CAAE9C,YAAa,IAC9BgD,GAAgB,CAAE9C,aAAc,KAEtCnC,GAEFkI,UAAW3E,EACXuD,qBAAsBA,GAAwBrH,EAAMyB,OAAO6G,KAAKC,MAChEG,KAAMtB,EACND,cAAeA,EACfC,gBAAiBA,EACjB9C,aAAc,SAAAgE,GACZlE,EAAckE,GACdhE,EAAagE,KAEX5D,EAtCN,CAAAvD,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,SA6CEyE,EAAwB,SAAC3F,GAAgC,IACrD+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADiCC,OAAAkE,EAAA,EAAAlE,CACnBN,EADmB,sBAG7D,OACE4G,EAAA,cAACG,EAAA,EAADzG,OAAAuG,EAAA,EAAAvG,CAAA,CACEF,MAAO,CACL,CACEoI,WAAY,SACZC,QAAS,OACT7H,OAAQ,OACR8H,eAAgB,SAChBC,KAAM,EACNxG,kBAAmB,EACnByG,SAAU,WACVC,OAAQ,GAEVzI,IAEEC,EAdN,CAAAW,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OAgBG6B,IAODqD,EAAyB,SAACpG,GAAiC,IACvD+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADmCC,OAAAkE,EAAA,EAAAlE,CACrBN,EADqB,sBAG/D,OACE4G,EAAA,cAACG,EAAA,EAADzG,OAAAuG,EAAA,EAAAvG,CAAA,CACEF,MAAO,CACL,CACEoI,WAAY,SACZC,QAAS,OACT7H,OAAQ,OACR8H,eAAgB,SAChBvG,kBAAmB,EACnByG,SAAU,WACVE,MAAO,EACPD,OAAQ,GAEVzI,IAEEC,EAdN,CAAAW,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OAgBG6B,IAaDiD,EAAiB,SAAChG,GACtB,OAAO4G,EAAA,cAAAA,EAAA,gBAGHH,EAAkB,SAACzG,GAA2B,IAC1CyD,EAA6DzD,EAA7DyD,YAAaM,EAAgD/D,EAAhD+D,QAASE,EAAuCjE,EAAvCiE,cAAeE,EAAwBnE,EAAxBmE,aAAcC,EAAUpE,EAAVoE,MACrDvE,EAAQW,cAEd,OAAK4D,GAAUX,EAGbmD,EAAA,cAACmC,EAAA,EAAD,CACEC,QAAS,WACP7E,EAAa,IACbF,EAAc,IACdF,KAJJ/C,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,MAOE0F,EAAA,cAACqC,EAAA,EAAD,CAAMV,KAAK,IAAIlH,MAAOxB,EAAMyB,OAAO6G,KAAb,QAAtBnH,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,QAV+B,uqBCvU/BgI,EAAc,GAGdC,EAAY,UACH,SAASC,EAATjC,GAGZ,IAFDkC,EAEClC,EAFDkC,WACGrJ,EACFM,OAAAgJ,EAAA,EAAAhJ,CAAA6G,EAAA,gBACD,OAAO7G,OAAAiJ,EAAA,EAAAjJ,CAAC6I,EAAD7I,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAe4I,EAAiBlJ,EAAhC,CAAuCqJ,WAAYA,EAAYI,QAAQ,YAAvEzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,MAGLZ,OAAAiJ,EAAA,EAAAjJ,CAAA,KAAAA,OAAAkJ,EAAA,EAAAlJ,CAAQ,CACNoJ,GAAM,SADR,CAAA1I,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,eAGAZ,OAAAiJ,EAAA,EAAAjJ,CAAA,KAAAU,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,iBAAgBZ,OAAAiJ,EAAA,EAAAjJ,CAAA,cAAYqJ,WAAW,IAAvB3I,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,cAChBZ,OAAAiJ,EAAA,EAAAjJ,CAAA,KAAAA,OAAAkJ,EAAA,EAAAlJ,CAAQ,CACNoJ,GAAM,SADR,CAAA1I,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,eAGAZ,OAAAiJ,EAAA,EAAAjJ,CAACsJ,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,6FAAgGC,QAAS,CAC1I/J,MAAOgK,KAAOA,KAAKhK,MAAQA,EAC3BiK,eACAC,UACApH,QACAS,cACA4G,WACCV,QAAQ,aAPXzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,KAQFZ,OAAAiJ,EAAA,EAAAjJ,CAAC8J,EAAA,EAAD,CAAKX,QAAQ,MAAbzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,KACEZ,OAAAiJ,EAAA,EAAAjJ,CAAC+J,EAAA,EAAD,CAAOC,MAAM,6BAA6Bb,QAAQ,QAAlDzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,KACEZ,OAAAiJ,EAAA,EAAAjJ,CAACiK,EAAA,EAAD,CAAWd,QAAQ,YAAnBzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,SAIFZ,OAAAiJ,EAAA,EAAAjJ,CAAA,KAAAA,OAAAkJ,EAAA,EAAAlJ,CAAQ,CACNoJ,GAAM,SADR,CAAA1I,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,eAGAZ,OAAAiJ,EAAA,EAAAjJ,CAACsJ,EAAA,EAAD,CAAOY,GAAIL,IAAOV,QAAQ,QAA1BzI,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,gMAIJkI,EAAWqB,gBAAiB,02CCfrB,IAAMN,EAAQ,SAACnK,GAAsB,IAClC+C,EAAsD/C,EAAtD+C,SADkC2H,EACoB1K,EAA5C4I,gBADwB,IAAA8B,EACb,MADaA,EAAArG,EACoBrE,EAA1BsE,iBADM,IAAAD,EACM,GADNA,EACUiG,EAAUtK,EAAVsK,MAC9CzK,EAAQW,cAF4BiE,EAIhBC,YACxBC,EACA3E,EACA,GACAe,IAAIlB,EAAO,wBACXyE,EAAUM,MAT8BC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAmE,EAAA,GAInCG,EAJmCC,EAAA,GAI7BE,EAJ6BF,EAAA,GAAAG,EAWVN,YAC9BiG,EACA3K,EACA,CAAE4I,YACF7H,IAAIlB,EAAO,2BACXyE,EAAUsG,SAhB8BpF,EAAAlF,OAAAwE,EAAA,EAAAxE,CAAA0E,EAAA,GAWnC4F,EAXmCpF,EAAA,GAW1BqF,EAX0BrF,EAAA,GAAAE,EAkBNhB,YAClCoG,EACA9K,EACA,CAAE4I,WAAU0B,SACZvJ,IAAIlB,EAAO,6BACXyE,EAAUyG,WAvB8BlF,EAAAvF,OAAAwE,EAAA,EAAAxE,CAAAoF,EAAA,GAkBnCqF,EAlBmClF,EAAA,GAkBxBmF,EAlBwBnF,EAAA,GA0B1C,OACEoF,EAAA,cAACrG,EAADtE,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAUyE,EAAV,CAAA/D,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,MACgB,QAAb0H,GAAsBqC,EAAA,cAACF,EAADzK,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAe0K,EAAf,CAAAhK,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACvB+J,EAAA,cAACL,EAADtK,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAauK,EAAb,CAAA7J,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,MACgB,SAAb0H,GAAuBqC,EAAA,cAACF,EAADzK,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAe0K,EAAf,CAAAhK,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACvB6B,EACa,UAAb6F,GAAwBqC,EAAA,cAACF,EAADzK,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAe0K,EAAf,CAAAhK,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,sNAYjC,IAAMyD,EAAa,SAAC3E,GAAqB,IAC/B+C,EAAkC/C,EAAlC+C,SAAU3C,EAAwBJ,EAAxBI,MAAUC,EADWC,OAAAgJ,EAAA,EAAAhJ,CACGN,EADH,sBAGvC,OACEiL,EAAA,cAACC,EAAA,EAAD5K,OAAAkJ,EAAA,EAAAlJ,CAAA,CAAMF,MAAO,CAACA,IAAYC,EAA1B,CAAAW,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,MACG6B,IASD4H,EAAgB,SAAC3K,GAAwB,IACrC+C,EAA4C/C,EAA5C+C,SAAU3C,EAAkCJ,EAAlCI,MAAOwI,EAA2B5I,EAA3B4I,SAAavI,EADOC,OAAAgJ,EAAA,EAAAhJ,CACON,EADP,iCAGzCmL,EAA0B,GAE9B,OAAQvC,GACN,IAAK,OACHuC,EAAe,CACbC,cAAe,MACf5C,WAAY,SACZjG,aAAc,GAEhB,MACF,IAAK,QACH4I,EAAe,CACbC,cAAe,MACf5C,WAAY,SACZnG,YAAa,GAEf,MACF,IAAK,MAGL,QACE8I,EAAe,CAAEpJ,cAAe,GAIpC,OACEkJ,EAAA,cAACC,EAAA,EAAD5K,OAAAkJ,EAAA,EAAAlJ,CAAA,CAAMF,MAAO,CAAC+K,EAAc/K,IAAYC,EAAxC,CAAAW,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OACG6B,IAUD+H,EAAkB,SAAC9K,GAA0B,IACzCsK,EAAyCtK,EAAzCsK,MAAO1B,EAAkC5I,EAAlC4I,SAAUxI,EAAwBJ,EAAxBI,MAAUiL,EADc/K,OAAAgJ,EAAA,EAAAhJ,CACAN,EADA,8BAGjD,IAAKsK,EAAO,OAAO,KAEnB,IAAIgB,EAAuB,GAE3B,OAAQ1C,GACN,IAAK,OACH0C,EAAY,CAAE/I,aAAc,GAC5B,MACF,IAAK,QACH+I,EAAY,CAAEjJ,YAAa,GAC3B,MACF,IAAK,MAGL,QACEiJ,EAAY,CAAEvJ,cAAe,GAIjC,OACEkJ,EAAA,cAACM,EAAA,EAADjL,OAAAkJ,EAAA,EAAAlJ,CAAA,CACEF,MAAO,CAACkL,EAAWxK,YAASd,EAAOI,IAEnCoL,kBAAmC,QAAhBC,IAASC,GAAe,QAAU,QACjDL,EAJN,CAAArK,SAAA,CAAAC,SAAA6F,EAAA5F,WAAA,OAMGoJ,+DCjKPqB,EAAAC,EAAAC,EAAA,sBAAAzE,IAAO,IAAMA,EAAgB,SAC3BxH,GAEA,MAAoB,kBAATA","file":"static/js/14.232d7688.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Icon } from '../Icon';\n\ninterface TextInputBaseProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Alias for onChangeText, for API consistency\n   */\n  onValueChange?: (value: string) => void;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n}\n\nexport interface TextInputOverrides {\n  Root: RootProps;\n  LeftIconWrapper: LeftIconWrapperProps;\n  LeftIcon: StyledIconProps;\n  Input: InputProps;\n  RightIcon: StyledIconProps;\n  RightIconWrapper: RightIconWrapperProps;\n}\n\nexport interface TextInputProps\n  extends WithOverrides<TextInputBaseProps, TextInputOverrides> {}\n\nexport const TextInput = (props: TextInputProps) => {\n  const {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    onClear = () => {\n      return;\n    },\n    onValueChange = () => {\n      return;\n    },\n    onChangeText = () => {\n      return;\n    },\n    value,\n    overrides = {},\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.Root'),\n    overrides.Root,\n  );\n  const [Input, inputProps] = getOverrides(\n    StyledInput,\n    props,\n    {\n      hasLeftIcon: !!overrides.LeftIcon,\n      hasRightIcon: !!(isClearable || overrides.RightIcon),\n      size,\n      isDisabled,\n      isInvalid,\n      onValueChange,\n      value,\n      onChangeText,\n      ...textInputProps,\n    },\n    dlv(theme, 'overrides.TextInput.Input'),\n    overrides.Input,\n  );\n  const [LeftIconWrapper, leftIconWrapperProps] = getOverrides(\n    StyledLeftIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.LeftIconWrapper'),\n    overrides.LeftIconWrapper,\n  );\n  const [LeftIcon, leftIconProps] = getOverrides(\n    StyledLeftIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.LeftIcon'),\n    overrides.LeftIcon,\n  );\n  const [RightIconWrapper, rightIconWrapperProps] = getOverrides(\n    StyledRightIconWrapper,\n    props,\n    {},\n    dlv(theme, 'overrides.TextInput.RightIconWrapper'),\n    overrides.RightIconWrapper,\n  );\n  const [RightIcon, rightIconProps] = getOverrides(\n    StyledRightIcon,\n    props,\n    {\n      isClearable,\n      onClear,\n      onValueChange,\n      value,\n      onChangeText,\n    },\n    dlv(theme, 'overrides.TextInput.RightIcon'),\n    overrides.RightIcon,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <LeftIconWrapper {...leftIconWrapperProps}>\n        <LeftIcon {...leftIconProps} />\n      </LeftIconWrapper>\n      <Input {...inputProps} />\n      <RightIconWrapper {...rightIconWrapperProps}>\n        <RightIcon {...rightIconProps} />\n      </RightIconWrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface InputProps extends RNTextInputProps {\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isInvalid: boolean;\n  hasLeftIcon: boolean;\n  hasRightIcon: boolean;\n  onValueChange: (value: string) => void;\n  onChangeText: (value: string) => void;\n}\n\nconst StyledInput = (props: InputProps) => {\n  const {\n    isDisabled,\n    isInvalid,\n    onValueChange,\n    onChangeText,\n    size,\n    style,\n    numberOfLines,\n    textContentType,\n    hasLeftIcon,\n    hasRightIcon,\n    placeholderTextColor,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    borderRadius,\n    minHeight,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return (\n    // @ts-ignore\n    <RNTextInput\n      style={[\n        {\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n          borderColor: theme.colors.border.default,\n          borderRadius,\n          borderWidth: 1,\n          color: isDisabled\n            ? theme.colors.text.muted\n            : theme.colors.text.default,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          width: '100%',\n          ...textSize,\n          ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n          ...(numberOfLines\n            ? {\n                minHeight: numberOfLines * minHeight,\n                paddingVertical: 16,\n              }\n            : {}),\n          ...(hasLeftIcon && { paddingLeft: 40 }),\n          ...(hasRightIcon && { paddingRight: 40 }),\n        },\n        style,\n      ]}\n      editable={!isDisabled}\n      placeholderTextColor={placeholderTextColor || theme.colors.text.muted}\n      name={textContentType}\n      numberOfLines={numberOfLines}\n      textContentType={textContentType}\n      onChangeText={text => {\n        onValueChange(text);\n        onChangeText(text);\n      }}\n      {...textInputProps}\n    />\n  );\n};\n\ninterface LeftIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledLeftIconWrapper = (props: LeftIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          left: 0,\n          paddingHorizontal: 8,\n          position: 'absolute',\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface RightIconWrapperProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRightIconWrapper = (props: RightIconWrapperProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          paddingHorizontal: 8,\n          position: 'absolute',\n          right: 0,\n          zIndex: 1,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface StyledIconProps {\n  onValueChange: (value: string) => void;\n  onChangeText: (text: string) => void;\n  value?: string;\n  isClearable: boolean;\n  onClear: () => void;\n}\n\nconst StyledLeftIcon = (props: StyledIconProps) => {\n  return <></>;\n};\n\nconst StyledRightIcon = (props: StyledIconProps) => {\n  const { isClearable, onClear, onValueChange, onChangeText, value } = props;\n  const theme = useTheme();\n\n  if (!value || !isClearable) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onChangeText('');\n        onValueChange('');\n        onClear();\n      }}\n    >\n      <Icon name=\"x\" color={theme.colors.text.default} />\n    </TouchableOpacity>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, TextInput, Label } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Text`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box>\\n  <Label label=\\\"Lorem ipsum dolar set amet\\\">\\n    <TextInput />\\n  </Label>\\n</Box>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      TextInput,\n      Label\n    }} mdxType=\"Playground\">\n  <Box mdxType=\"Box\">\n    <Label label=\"Lorem ipsum dolar set amet\" mdxType=\"Label\">\n      <TextInput mdxType=\"TextInput\" />\n    </Label>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Label} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport { Platform, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Text, TextProps } from './Text';\n\ntype LabelPosition = 'top' | 'left' | 'right';\n\ninterface LabelBaseProps {\n  /**\n   * Label of the field.\n   */\n  label?: OptionalString;\n\n  /**\n   * Position of the field.\n   * @default \"top\"\n   */\n  position?: LabelPosition;\n\n  /** Content to wrap with. */\n  children?: React.ReactNode;\n}\n\nexport interface LabelOverrides {\n  Root: RootProps;\n  Wrapper: WrapperProps;\n  LabelText: LabelTextProps;\n}\n\nexport interface LabelProps\n  extends WithOverrides<LabelBaseProps, LabelOverrides> {}\n\nexport const Label = (props: LabelProps) => {\n  const { children, position = 'top', overrides = {}, label } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Label.Root'),\n    overrides.Root,\n  );\n  const [Wrapper, wrapperProps] = getOverrides(\n    StyledWrapper,\n    props,\n    { position },\n    dlv(theme, 'overrides.Label.Wrapper'),\n    overrides.Wrapper,\n  );\n  const [LabelText, labelTextProps] = getOverrides(\n    StyledLabelText,\n    props,\n    { position, label },\n    dlv(theme, 'overrides.Label.LabelText'),\n    overrides.LabelText,\n  );\n\n  return (\n    <Root {...rootProps}>\n      {position === 'top' && <LabelText {...labelTextProps} />}\n      <Wrapper {...wrapperProps}>\n        {position === 'left' && <LabelText {...labelTextProps} />}\n        {children}\n        {position === 'right' && <LabelText {...labelTextProps} />}\n      </Wrapper>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View style={[style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface WrapperProps extends ViewProps, PropsWithChildren {\n  position: LabelPosition;\n}\n\nconst StyledWrapper = (props: WrapperProps) => {\n  const { children, style, position, ...viewProps } = props;\n\n  let wrapperStyle: ViewStyle = {};\n\n  switch (position) {\n    case 'left':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingRight: 8,\n      };\n      break;\n    case 'right':\n      wrapperStyle = {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 8,\n      };\n      break;\n    case 'top':\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n    default:\n      wrapperStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <View style={[wrapperStyle, style]} {...viewProps}>\n      {children}\n    </View>\n  );\n};\n\ninterface LabelTextProps extends TextProps, PropsWithChildren {\n  label?: OptionalString;\n  position: LabelPosition;\n}\n\nconst StyledLabelText = (props: LabelTextProps) => {\n  const { label, position, style, ...textProps } = props;\n\n  if (!label) return null;\n\n  let textStyle: TextStyle = {};\n\n  switch (position) {\n    case 'left':\n      textStyle = { paddingRight: 8 };\n      break;\n    case 'right':\n      textStyle = { paddingLeft: 8 };\n      break;\n    case 'top':\n      textStyle = { paddingBottom: 4 };\n      break;\n    default:\n      textStyle = { paddingBottom: 4 };\n      break;\n  }\n\n  return (\n    <Text\n      style={[textStyle, getStyle(props, style)]}\n      // @ts-ignore: Compat with web\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {label}\n    </Text>\n  );\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}