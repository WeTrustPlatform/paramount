{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Tabs/Tabs.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Icon","State","Tabs","Tab","initial","activeTabIndex","_ref2","state","setState","onChange","index","getStyles","theme","containerStyle","Array","fill","map","v","i","key","title","onPress","buttonStyle","textStyle","focusColor","concat","of","isMDXComponent"],"mappings":"4XAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,6BAOMG,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAR,EAAAY,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAG5E,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,QADR,SAGA,EAAAf,EAAAY,KAAA,wDAAkD,EAAAZ,EAAAY,KAAA,cAAYI,WAAW,KAAvB,OAAlD,uDAAwJ,EAAAhB,EAAAY,KAAA,cAAYI,WAAW,KAAvB,YAAxJ,SAAqN,EAAAhB,EAAAY,KAAA,cAAYI,WAAW,KAAvB,WAArN,iBACA,EAAAhB,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAc,WAAD,CAAYC,WAAY,EAAGC,OAAQ,m0BAAs0BC,QAAS,CACh3BV,MAAOW,KAAOA,KAAKX,MAAQA,EAC3BO,wBACAK,cACAC,YACAC,cACAC,YACAC,WACCZ,QAAQ,eACb,EAAAd,EAAAY,KAACR,EAAAoB,MAAD,CAAOG,QAAS,CACVC,eAAgB,GACfd,QAAQ,SACZ,SAAAe,GAAA,IACKC,EADLD,EACKC,MACAC,EAFLF,EAEKE,SAFL,OAGS,EAAA/B,EAAAY,KAACR,EAAAqB,KAAD,CAAMG,eAAgBE,EAAMF,eAAgBI,SAAU,SAAAC,GAAK,OAAIF,EAAS,CAC5EH,eAAgBK,KACdC,UAAW,SAACxB,EAAOyB,GAAR,MAAmB,CAChCC,eAAgB,KACdtB,QAAQ,QACX,IAAIuB,MAAM,GAAGC,KAAK,GAAGC,IAAI,SAACC,EAAGC,GAC1B,OAAU,IAANA,GACK,EAAAzC,EAAAY,KAACR,EAAAsB,IAAD,CAAKgB,IAAK,EAAGC,MAAM,SAASC,QAAS,kBAAMb,EAAS,CACzDH,eAAgB,KACdM,UAAW,iBAAO,CACpBE,eAAgB,GAChBS,YAAa,GACbC,UAAW,GACXC,WAAY,YACVjC,QAAQ,SAGP,EAAAd,EAAAY,KAACR,EAAAsB,IAAD,CAAKgB,IAAKD,EAAGE,MAAK,OAAAK,OAASP,EAAI,GAAK3B,QAAQ,eAK3D,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAmB,MAAD,CAAO2B,GAAIxB,OAAMX,QAAQ,6LAI7BP,EAAW2C,gBAAiB","file":"static/js/32.61da6507.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Icon, State, Tabs, Tab } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ activeTabIndex: 0 }}>\\n  {({ state, setState }) => (\\n    <Tabs\\n      activeTabIndex={state.activeTabIndex}\\n      onChange={index => setState({ activeTabIndex: index })}\\n      getStyles={(props, theme) => ({\\n        containerStyle: {},\\n      })}\\n    >\\n      {new Array(4).fill(0).map((v, i) => {\\n        if (i === 0) {\\n          return (\\n            <Tab\\n              key={0}\\n              title=\\\"Custom\\\"\\n              onPress={() => setState({ activeTabIndex: 0 })}\\n              getStyles={() => ({\\n                containerStyle: {},\\n                buttonStyle: {},\\n                textStyle: {},\\n                focusColor: \\'#fafafa\\',\\n              })}\\n            />\\n          )\\n        }\\n        return <Tab key={i} title={`Tab ${i + 1}`} />\\n      })}\\n    </Tabs>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      State,\n      Tabs,\n      Tab\n    }} mdxType=\"Playground\">\n  <State initial={{\n        activeTabIndex: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Tabs activeTabIndex={state.activeTabIndex} onChange={index => setState({\n          activeTabIndex: index\n        })} getStyles={(props, theme) => ({\n          containerStyle: {}\n        })} mdxType=\"Tabs\">\n        {new Array(4).fill(0).map((v, i) => {\n            if (i === 0) {\n              return <Tab key={0} title=\"Custom\" onPress={() => setState({\n                activeTabIndex: 0\n              })} getStyles={() => ({\n                containerStyle: {},\n                buttonStyle: {},\n                textStyle: {},\n                focusColor: '#fafafa'\n              })} mdxType=\"Tab\" />;\n            }\n\n            return <Tab key={i} title={`Tab ${i + 1}`} mdxType=\"Tab\" />;\n          })}\n      </Tabs>}\n  </State>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Tabs} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}