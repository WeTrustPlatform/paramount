!function(e){function n(n){for(var i,a,r=n[0],o=n[1],d=n[2],l=0,s=[];l<r.length;l++)a=r[l],C[a]&&s.push(C[a][0]),C[a]=0;for(i in o)Object.prototype.hasOwnProperty.call(o,i)&&(e[i]=o[i]);for(D&&D(n);s.length;)s.shift()();return A.push.apply(A,d||[]),t()}function t(){for(var e,n=0;n<A.length;n++){for(var t=A[n],i=!0,a=1;a<t.length;a++){var r=t[a];0!==C[r]&&(i=!1)}i&&(A.splice(n--,1),e=I(I.s=t[0]))}return e}var i=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,n){if(!q[e]||!V[e])return;for(var t in V[e]=!1,n)Object.prototype.hasOwnProperty.call(n,t)&&(y[t]=n[t]);0===--g&&0===v&&T()}(e,n),i&&i(e,n)};var a,r=!0,o="b111883d2051a66a3a7a",d=1e4,l={},s=[],u=[];function p(e){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:a!==e,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"===typeof e)n._selfAccepted=e;else if("object"===typeof e)for(var i=0;i<e.length;i++)n._acceptedDependencies[e[i]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"===typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},check:R,apply:x,status:function(e){if(!e)return m;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var n=c.indexOf(e);n>=0&&c.splice(n,1)},data:l[e]};return a=void 0,n}var c=[],m="idle";function f(e){m=e;for(var n=0;n<c.length;n++)c[n].call(null,e)}var h,y,b,g=0,v=0,w={},V={},q={};function S(e){return+e+""===e?+e:e}function R(e){if("idle"!==m)throw new Error("check() is only allowed in idle status");return r=e,f("check"),(n=d,n=n||1e4,new Promise(function(e,t){if("undefined"===typeof XMLHttpRequest)return t(new Error("No browser support"));try{var i=new XMLHttpRequest,a=I.p+""+o+".hot-update.json";i.open("GET",a,!0),i.timeout=n,i.send(null)}catch(r){return t(r)}i.onreadystatechange=function(){if(4===i.readyState)if(0===i.status)t(new Error("Manifest request to "+a+" timed out."));else if(404===i.status)e();else if(200!==i.status&&304!==i.status)t(new Error("Manifest request to "+a+" failed."));else{try{var n=JSON.parse(i.responseText)}catch(r){return void t(r)}e(n)}}})).then(function(e){if(!e)return f("idle"),null;V={},w={},q=e.c,b=e.h,f("prepare");var n=new Promise(function(e,n){h={resolve:e,reject:n}});for(var t in y={},C)k(t);return"prepare"===m&&0===v&&0===g&&T(),n});var n}function k(e){q[e]?(V[e]=!0,g++,function(e){var n=document.createElement("script");n.charset="utf-8",n.src=I.p+""+e+"."+o+".hot-update.js",n.crossOrigin="anonymous",document.head.appendChild(n)}(e)):w[e]=!0}function T(){f("ready");var e=h;if(h=null,e)if(r)Promise.resolve().then(function(){return x(r)}).then(function(n){e.resolve(n)},function(n){e.reject(n)});else{var n=[];for(var t in y)Object.prototype.hasOwnProperty.call(y,t)&&n.push(S(t));e.resolve(n)}}function x(n){if("ready"!==m)throw new Error("apply() is only allowed in ready status");var t,i,a,r,d;function u(e){for(var n=[e],t={},i=n.map(function(e){return{chain:[e],id:e}});i.length>0;){var a=i.pop(),o=a.id,d=a.chain;if((r=P[o])&&!r.hot._selfAccepted){if(r.hot._selfDeclined)return{type:"self-declined",chain:d,moduleId:o};if(r.hot._main)return{type:"unaccepted",chain:d,moduleId:o};for(var l=0;l<r.parents.length;l++){var s=r.parents[l],u=P[s];if(u){if(u.hot._declinedDependencies[o])return{type:"declined",chain:d.concat([s]),moduleId:o,parentId:s};-1===n.indexOf(s)&&(u.hot._acceptedDependencies[o]?(t[s]||(t[s]=[]),p(t[s],[o])):(delete t[s],n.push(s),i.push({chain:d.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function p(e,n){for(var t=0;t<n.length;t++){var i=n[t];-1===e.indexOf(i)&&e.push(i)}}n=n||{};var c={},h=[],g={},v=function(){console.warn("[HMR] unexpected require("+V.moduleId+") to disposed module")};for(var w in y)if(Object.prototype.hasOwnProperty.call(y,w)){var V;d=S(w);var R=!1,k=!1,T=!1,x="";switch((V=y[w]?u(d):{type:"disposed",moduleId:w}).chain&&(x="\nUpdate propagation: "+V.chain.join(" -> ")),V.type){case"self-declined":n.onDeclined&&n.onDeclined(V),n.ignoreDeclined||(R=new Error("Aborted because of self decline: "+V.moduleId+x));break;case"declined":n.onDeclined&&n.onDeclined(V),n.ignoreDeclined||(R=new Error("Aborted because of declined dependency: "+V.moduleId+" in "+V.parentId+x));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(V),n.ignoreUnaccepted||(R=new Error("Aborted because "+d+" is not accepted"+x));break;case"accepted":n.onAccepted&&n.onAccepted(V),k=!0;break;case"disposed":n.onDisposed&&n.onDisposed(V),T=!0;break;default:throw new Error("Unexception type "+V.type)}if(R)return f("abort"),Promise.reject(R);if(k)for(d in g[d]=y[d],p(h,V.outdatedModules),V.outdatedDependencies)Object.prototype.hasOwnProperty.call(V.outdatedDependencies,d)&&(c[d]||(c[d]=[]),p(c[d],V.outdatedDependencies[d]));T&&(p(h,[V.moduleId]),g[d]=v)}var A,E=[];for(i=0;i<h.length;i++)d=h[i],P[d]&&P[d].hot._selfAccepted&&g[d]!==v&&E.push({module:d,errorHandler:P[d].hot._selfAccepted});f("dispose"),Object.keys(q).forEach(function(e){!1===q[e]&&function(e){delete C[e]}(e)});for(var L,O,D=h.slice();D.length>0;)if(d=D.pop(),r=P[d]){var M={},G=r.hot._disposeHandlers;for(a=0;a<G.length;a++)(t=G[a])(M);for(l[d]=M,r.hot.active=!1,delete P[d],delete c[d],a=0;a<r.children.length;a++){var z=P[r.children[a]];z&&((A=z.parents.indexOf(d))>=0&&z.parents.splice(A,1))}}for(d in c)if(Object.prototype.hasOwnProperty.call(c,d)&&(r=P[d]))for(O=c[d],a=0;a<O.length;a++)L=O[a],(A=r.children.indexOf(L))>=0&&r.children.splice(A,1);for(d in f("apply"),o=b,g)Object.prototype.hasOwnProperty.call(g,d)&&(e[d]=g[d]);var B=null;for(d in c)if(Object.prototype.hasOwnProperty.call(c,d)&&(r=P[d])){O=c[d];var W=[];for(i=0;i<O.length;i++)if(L=O[i],t=r.hot._acceptedDependencies[L]){if(-1!==W.indexOf(t))continue;W.push(t)}for(i=0;i<W.length;i++){t=W[i];try{t(O)}catch(j){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:d,dependencyId:O[i],error:j}),n.ignoreErrored||B||(B=j)}}}for(i=0;i<E.length;i++){var F=E[i];d=F.module,s=[d];try{I(d)}catch(j){if("function"===typeof F.errorHandler)try{F.errorHandler(j)}catch(N){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:d,error:N,originalError:j}),n.ignoreErrored||B||(B=N),B||(B=j)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:d,error:j}),n.ignoreErrored||B||(B=j)}}return B?(f("fail"),Promise.reject(B)):(f("idle"),new Promise(function(e){e(h)}))}var P={},C={2:0},A=[];function I(n){if(P[n])return P[n].exports;var t=P[n]={i:n,l:!1,exports:{},hot:p(n),parents:(u=s,s=[],u),children:[]};return e[n].call(t.exports,t,t.exports,function(e){var n=P[e];if(!n)return I;var t=function(t){return n.hot.active?(P[t]?-1===P[t].parents.indexOf(e)&&P[t].parents.push(e):(s=[e],a=t),-1===n.children.indexOf(t)&&n.children.push(t)):(console.warn("[HMR] unexpected require("+t+") from disposed module "+e),s=[]),I(t)},i=function(e){return{configurable:!0,enumerable:!0,get:function(){return I[e]},set:function(n){I[e]=n}}};for(var r in I)Object.prototype.hasOwnProperty.call(I,r)&&"e"!==r&&"t"!==r&&Object.defineProperty(t,r,i(r));return t.e=function(e){return"ready"===m&&f("prepare"),v++,I.e(e).then(n,function(e){throw n(),e});function n(){v--,"prepare"===m&&(w[e]||k(e),0===v&&0===g&&T())}},t.t=function(e,n){return 1&n&&(e=t(e)),I.t(e,-2&n)},t}(n)),t.l=!0,t.exports}I.e=function(e){var n=[],t=C[e];if(0!==t)if(t)n.push(t[2]);else{var i=new Promise(function(n,i){t=C[e]=[n,i]});n.push(t[2]=i);var a,r=document.createElement("script");r.charset="utf-8",r.timeout=120,I.nc&&r.setAttribute("nonce",I.nc),r.src=function(e){return I.p+"static/js/"+({}[e]||e)+"."+{1:"0e662c23",3:"4561b65c",4:"e2a7b812",5:"f3b553ec",6:"9fa6e070",7:"f5366f1a",8:"5104c44b",9:"79113698",10:"91a15793",11:"ea7188bd",12:"509376f5",13:"e6d65c29",14:"6bc2d91b",15:"1f98f156",16:"9bffae85",17:"7f10f29d",18:"3e37b344",19:"f3eba856",20:"5d2865df",21:"f1d3c982",22:"9f2a4a7d",23:"df78c8eb",24:"2041e145",25:"a736da5a",26:"81aa157b",27:"6fef15c2",28:"b3bf4384",29:"de6b5f44",30:"fb6feefc",31:"e5221d38",32:"851ec01f",33:"d8cc832a",34:"12f92514",35:"2f2f461a",36:"9ec54b6e",37:"7bb45125",38:"a9baaf2d",39:"7558fe06",40:"92a2f38f"}[e]+".js"}(e),0!==r.src.indexOf(window.location.origin+"/")&&(r.crossOrigin="anonymous");var o=new Error;a=function(n){r.onerror=r.onload=null,clearTimeout(d);var t=C[e];if(0!==t){if(t){var i=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;o.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",o.name="ChunkLoadError",o.type=i,o.request=a,t[1](o)}C[e]=void 0}};var d=setTimeout(function(){a({type:"timeout",target:r})},12e4);r.onerror=r.onload=a,document.head.appendChild(r)}return Promise.all(n)},I.m=e,I.c=P,I.d=function(e,n,t){I.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},I.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},I.t=function(e,n){if(1&n&&(e=I(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(I.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)I.d(t,i,function(n){return e[n]}.bind(null,i));return t},I.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return I.d(n,"a",n),n},I.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},I.p="/paramount/",I.oe=function(e){throw console.error(e),e},I.h=function(){return o};var E=window.webpackJsonp=window.webpackJsonp||[],L=E.push.bind(E);E.push=n,E=E.slice();for(var O=0;O<E.length;O++)n(E[O]);var D=L;A.push([0,0]),t()}({"./.docz/app/db.json":function(e){e.exports={config:{title:"Paramount",description:"React UI Components Library By WeTrust",menu:["Introduction","Getting Started","Customization","Components"],version:"1.1.1",repository:"https://github.com/WeTrustPlatform/paramount",native:!0,codeSandbox:!1,themeConfig:{showPlaygroundEditor:!0},separator:"-",typescript:!0,base:"/paramount/"},props:[{key:"src/constants/Animation.ts",value:[]},{key:"src/theme/Theme.tsx",value:[{description:"",displayName:"createTheme",methods:[],props:{}},{description:"",displayName:"ThemeProvider",methods:[],props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"DeepPartial<Theme> | undefined"}}}}]},{key:"src/components/Alert/Alert.tsx",value:[{description:"Alert with intent",displayName:"Alert",methods:[],props:{title:{defaultValue:null,description:"Title of the alert.",name:"title",required:!1,type:{name:"string | undefined"}},description:{defaultValue:null,description:"Description of the alert.",name:"description",required:!1,type:{name:"string | undefined"}},icon:{defaultValue:null,description:"Replace the icon of the alert on the left. Set to null to remove icon",name:"icon",required:!1,type:{name:"ReactNode"}},intent:{defaultValue:{value:"info"},description:"Intent of the alert.",name:"intent",required:!1,type:{name:'"danger" | "info" | "success" | "warning" | undefined'}},actionNode:{defaultValue:{value:"null"},description:"Component displayed on the right side of the alert.",name:"actionNode",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Avatar/Avatar.tsx",value:[{description:"",displayName:"Avatar",methods:[],props:{source:{defaultValue:null,description:"The source attribute of the image. When it's not available, render initials instead.",name:"source",required:!1,type:{name:"number | ImageURISource | ImageURISource[] | undefined"}},size:{defaultValue:{value:'"medium"'},description:"The size of the avatar.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},name:{defaultValue:null,description:"The name used for the initials and title attribute.",name:"name",required:!1,type:{name:"string | undefined"}},isSolid:{defaultValue:{value:"false"},description:"When true, render a solid background when initials are used.",name:"isSolid",required:!1,type:{name:"boolean | undefined"}},color:{defaultValue:{value:'"automatic"'},description:"The color used for the avatar.",name:"color",required:!1,type:{name:'"automatic" | "neutral" | "blue" | "red" | "orange" | "yellow" | "green" | "teal" | "purple" | undefined'}},imageAccessibilityLabel:{defaultValue:null,description:"Image label for screen readers",name:"imageAccessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetAvatarStyles, DeepPartial<AvatarStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Badge/Badge.tsx",value:[{description:"",displayName:"Badge",methods:[],props:{title:{defaultValue:null,description:"Title of the badge",name:"title",required:!1,type:{name:"string | undefined"}},color:{defaultValue:{value:'"neutral"'},description:"Color of the badge",name:"color",required:!1,type:{name:'"neutral" | "blue" | "red" | "orange" | "yellow" | "green" | "teal" | "purple" | undefined'}},size:{defaultValue:{value:'"medium"'},description:"Size of the badge",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},shape:{defaultValue:{value:'"rounded"'},description:"Shape of the container",name:"shape",required:!1,type:{name:'"circle" | "pill" | "rounded" | "roundedBottom" | "roundedLeft" | "roundedRight" | "roundedTop" | "square" | undefined'}},isSolid:{defaultValue:{value:"false"},description:"When true, display in solid mode",name:"isSolid",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetBadgeStyles, DeepPartial<BadgeStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Box/Box.tsx",value:[{description:"",displayName:"Box",methods:[],props:{shape:{defaultValue:null,description:"",name:"shape",required:!1,type:{name:'"circle" | "pill" | "rounded" | "roundedBottom" | "roundedLeft" | "roundedRight" | "roundedTop" | "square" | undefined'}},backgroundColor:{defaultValue:null,description:"",name:"backgroundColor",required:!1,type:{name:"string | undefined"}},backfaceVisibility:{defaultValue:null,description:"",name:"backfaceVisibility",required:!1,type:{name:'"visible" | "hidden" | undefined'}},borderBottomColor:{defaultValue:null,description:"",name:"borderBottomColor",required:!1,type:{name:"string | undefined"}},borderBottomEndRadius:{defaultValue:null,description:"",name:"borderBottomEndRadius",required:!1,type:{name:"number | undefined"}},borderBottomLeftRadius:{defaultValue:null,description:"",name:"borderBottomLeftRadius",required:!1,type:{name:"number | undefined"}},borderBottomRightRadius:{defaultValue:null,description:"",name:"borderBottomRightRadius",required:!1,type:{name:"number | undefined"}},borderBottomStartRadius:{defaultValue:null,description:"",name:"borderBottomStartRadius",required:!1,type:{name:"number | undefined"}},borderBottomWidth:{defaultValue:null,description:"",name:"borderBottomWidth",required:!1,type:{name:"number | undefined"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"string | undefined"}},borderEndColor:{defaultValue:null,description:"",name:"borderEndColor",required:!1,type:{name:"string | undefined"}},borderLeftColor:{defaultValue:null,description:"",name:"borderLeftColor",required:!1,type:{name:"string | undefined"}},borderLeftWidth:{defaultValue:null,description:"",name:"borderLeftWidth",required:!1,type:{name:"number | undefined"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"number | undefined"}},borderRightColor:{defaultValue:null,description:"",name:"borderRightColor",required:!1,type:{name:"string | undefined"}},borderRightWidth:{defaultValue:null,description:"",name:"borderRightWidth",required:!1,type:{name:"number | undefined"}},borderStartColor:{defaultValue:null,description:"",name:"borderStartColor",required:!1,type:{name:"string | undefined"}},borderStyle:{defaultValue:null,description:"",name:"borderStyle",required:!1,type:{name:'"solid" | "dotted" | "dashed" | undefined'}},borderTopColor:{defaultValue:null,description:"",name:"borderTopColor",required:!1,type:{name:"string | undefined"}},borderTopEndRadius:{defaultValue:null,description:"",name:"borderTopEndRadius",required:!1,type:{name:"number | undefined"}},borderTopLeftRadius:{defaultValue:null,description:"",name:"borderTopLeftRadius",required:!1,type:{name:"number | undefined"}},borderTopRightRadius:{defaultValue:null,description:"",name:"borderTopRightRadius",required:!1,type:{name:"number | undefined"}},borderTopStartRadius:{defaultValue:null,description:"",name:"borderTopStartRadius",required:!1,type:{name:"number | undefined"}},borderTopWidth:{defaultValue:null,description:"",name:"borderTopWidth",required:!1,type:{name:"number | undefined"}},borderWidth:{defaultValue:null,description:"",name:"borderWidth",required:!1,type:{name:"number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"number | undefined"}},testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string | undefined"}},elevation:{defaultValue:null,description:"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.\n@platform android",name:"elevation",required:!1,type:{name:"number | undefined"}},alignContent:{defaultValue:null,description:"",name:"alignContent",required:!1,type:{name:'"flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | undefined'}},alignItems:{defaultValue:null,description:"",name:"alignItems",required:!1,type:{name:'"flex-start" | "flex-end" | "center" | "stretch" | "baseline" | undefined'}},alignSelf:{defaultValue:null,description:"",name:"alignSelf",required:!1,type:{name:'"flex-start" | "flex-end" | "center" | "stretch" | "baseline" | "auto" | undefined'}},aspectRatio:{defaultValue:null,description:"",name:"aspectRatio",required:!1,type:{name:"number | undefined"}},borderEndWidth:{defaultValue:null,description:"",name:"borderEndWidth",required:!1,type:{name:"string | number | undefined"}},borderStartWidth:{defaultValue:null,description:"",name:"borderStartWidth",required:!1,type:{name:"string | number | undefined"}},bottom:{defaultValue:null,description:"",name:"bottom",required:!1,type:{name:"string | number | undefined"}},display:{defaultValue:null,description:"",name:"display",required:!1,type:{name:'"none" | "flex" | undefined'}},end:{defaultValue:null,description:"",name:"end",required:!1,type:{name:"string | number | undefined"}},flex:{defaultValue:null,description:"",name:"flex",required:!1,type:{name:"number | undefined"}},flexBasis:{defaultValue:null,description:"",name:"flexBasis",required:!1,type:{name:"string | number | undefined"}},flexDirection:{defaultValue:null,description:"",name:"flexDirection",required:!1,type:{name:'"row" | "column" | "row-reverse" | "column-reverse" | undefined'}},flexGrow:{defaultValue:null,description:"",name:"flexGrow",required:!1,type:{name:"number | undefined"}},flexShrink:{defaultValue:null,description:"",name:"flexShrink",required:!1,type:{name:"number | undefined"}},flexWrap:{defaultValue:null,description:"",name:"flexWrap",required:!1,type:{name:'"wrap" | "nowrap" | "wrap-reverse" | undefined'}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},justifyContent:{defaultValue:null,description:"",name:"justifyContent",required:!1,type:{name:'"flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined'}},left:{defaultValue:null,description:"",name:"left",required:!1,type:{name:"string | number | undefined"}},margin:{defaultValue:null,description:"",name:"margin",required:!1,type:{name:"string | number | undefined"}},marginBottom:{defaultValue:null,description:"",name:"marginBottom",required:!1,type:{name:"string | number | undefined"}},marginEnd:{defaultValue:null,description:"",name:"marginEnd",required:!1,type:{name:"string | number | undefined"}},marginHorizontal:{defaultValue:null,description:"",name:"marginHorizontal",required:!1,type:{name:"string | number | undefined"}},marginLeft:{defaultValue:null,description:"",name:"marginLeft",required:!1,type:{name:"string | number | undefined"}},marginRight:{defaultValue:null,description:"",name:"marginRight",required:!1,type:{name:"string | number | undefined"}},marginStart:{defaultValue:null,description:"",name:"marginStart",required:!1,type:{name:"string | number | undefined"}},marginTop:{defaultValue:null,description:"",name:"marginTop",required:!1,type:{name:"string | number | undefined"}},marginVertical:{defaultValue:null,description:"",name:"marginVertical",required:!1,type:{name:"string | number | undefined"}},maxHeight:{defaultValue:null,description:"",name:"maxHeight",required:!1,type:{name:"string | number | undefined"}},maxWidth:{defaultValue:null,description:"",name:"maxWidth",required:!1,type:{name:"string | number | undefined"}},minHeight:{defaultValue:null,description:"",name:"minHeight",required:!1,type:{name:"string | number | undefined"}},minWidth:{defaultValue:null,description:"",name:"minWidth",required:!1,type:{name:"string | number | undefined"}},overflow:{defaultValue:null,description:"",name:"overflow",required:!1,type:{name:'"visible" | "hidden" | "scroll" | undefined'}},padding:{defaultValue:null,description:"",name:"padding",required:!1,type:{name:"string | number | undefined"}},paddingBottom:{defaultValue:null,description:"",name:"paddingBottom",required:!1,type:{name:"string | number | undefined"}},paddingEnd:{defaultValue:null,description:"",name:"paddingEnd",required:!1,type:{name:"string | number | undefined"}},paddingHorizontal:{defaultValue:null,description:"",name:"paddingHorizontal",required:!1,type:{name:"string | number | undefined"}},paddingLeft:{defaultValue:null,description:"",name:"paddingLeft",required:!1,type:{name:"string | number | undefined"}},paddingRight:{defaultValue:null,description:"",name:"paddingRight",required:!1,type:{name:"string | number | undefined"}},paddingStart:{defaultValue:null,description:"",name:"paddingStart",required:!1,type:{name:"string | number | undefined"}},paddingTop:{defaultValue:null,description:"",name:"paddingTop",required:!1,type:{name:"string | number | undefined"}},paddingVertical:{defaultValue:null,description:"",name:"paddingVertical",required:!1,type:{name:"string | number | undefined"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:'"absolute" | "relative" | undefined'}},right:{defaultValue:null,description:"",name:"right",required:!1,type:{name:"string | number | undefined"}},start:{defaultValue:null,description:"",name:"start",required:!1,type:{name:"string | number | undefined"}},top:{defaultValue:null,description:"",name:"top",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number | undefined"}},direction:{defaultValue:null,description:"@platform ios",name:"direction",required:!1,type:{name:'"inherit" | "ltr" | "rtl" | undefined'}},shadowColor:{defaultValue:null,description:"",name:"shadowColor",required:!1,type:{name:"string | undefined"}},shadowOffset:{defaultValue:null,description:"",name:"shadowOffset",required:!1,type:{name:"{ width: number; height: number; } | undefined"}},shadowOpacity:{defaultValue:null,description:"",name:"shadowOpacity",required:!1,type:{name:"number | undefined"}},shadowRadius:{defaultValue:null,description:"",name:"shadowRadius",required:!1,type:{name:"number | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"(PerpectiveTransform | RotateTransform | RotateXTransform | RotateYTransform | RotateZTransform | ScaleTransform | ScaleXTransform | ScaleYTransform | TranslateXTransform | TranslateYTransform | SkewXTransform | SkewYTransform)[] | undefined"}},transformMatrix:{defaultValue:null,description:"",name:"transformMatrix",required:!1,type:{name:"number[] | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"number | undefined"}}}}]},{key:"src/components/Button/Button.tsx",value:[{description:"",displayName:"Button",methods:[],props:{title:{defaultValue:null,description:"Title of the button",name:"title",required:!1,type:{name:"string | undefined"}},icon:{defaultValue:null,description:"Icon in place of title",name:"icon",required:!1,type:{name:"ReactNode"}},color:{defaultValue:{value:'"default"'},description:"The color of the button.",name:"color",required:!1,type:{name:"string | undefined"}},appearance:{defaultValue:{value:'"primary"'},description:"The appearance of the button.",name:"appearance",required:!1,type:{name:'"primary" | "minimal" | "outline" | undefined'}},size:{defaultValue:{value:'"medium"'},description:"The size of the button.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},isLoading:{defaultValue:{value:"false"},description:"When true, show a loading spinner before the title. This also disables the button.",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},isActive:{defaultValue:{value:"false"},description:"Forcefully set the active state of a button.",name:"isActive",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:"false"},description:"When true, the button is disabled. isLoading also sets the button to disabled.",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"Called when button is pressed",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},iconBefore:{defaultValue:null,description:"Sets an icon before the text.",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"Sets an icon after the text.",name:"iconAfter",required:!1,type:{name:"ReactNode"}},iconLoading:{defaultValue:null,description:"Sets an icon at loading state.",name:"iconLoading",required:!1,type:{name:"ReactNode"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessible:{defaultValue:{value:"true"},description:"When true, indicates that the view is an accessibility element.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Checkbox/Checkbox.tsx",value:[{description:"",displayName:"Checkbox",methods:[],props:{size:{defaultValue:{value:'"medium"'},description:"The size of the checkbox.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},value:{defaultValue:{value:"false"},description:"When true, will display as checked.",name:"value",required:!0,type:{name:"boolean"}},isDisabled:{defaultValue:{value:"false"},description:"When true, the checkbox is disabled.",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isInteractive:{defaultValue:{value:"true"},description:"When true, checkbox will be interactive.",name:"isInteractive",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},shape:{defaultValue:{value:'"rounded"'},description:"Shape of the checkbox.",name:"shape",required:!1,type:{name:'"circle" | "pill" | "rounded" | "roundedBottom" | "roundedLeft" | "roundedRight" | "roundedTop" | "square" | undefined'}},onPress:{defaultValue:null,description:"Called when checkbox is pressed.",name:"onPress",required:!1,type:{name:"((e: GestureResponderEvent) => void) | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Collapsible/Collapsible.tsx",value:[{description:"",displayName:"Collapsible",methods:[],props:{title:{defaultValue:null,description:"Title of the collapsible",name:"title",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Content revealed when collapsible is opened",name:"children",required:!1,type:{name:"ReactNode"}},initialIsOpen:{defaultValue:{value:"false"},description:"Set whether it is opened initially, for uncontrolled usage.",name:"initialIsOpen",required:!1,type:{name:"boolean | undefined"}},isOpen:{defaultValue:{value:"false"},description:"When true, content of Collapsible is revealed",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},onOpen:{defaultValue:null,description:"Called when header is pressed to open collapsible",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},onClose:{defaultValue:null,description:"Called when header is pressed to close collapsible",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},header:{defaultValue:null,description:"Override the title with the component",name:"header",required:!1,type:{name:"ReactNode"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessible:{defaultValue:{value:"true"},description:"When true, indicates that the view is an accessibility element.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetCollapsibleStyles, DeepPartial<CollapsibleStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Counter/Counter.tsx",value:[{description:"",displayName:"Counter",methods:[],props:{count:{defaultValue:null,description:"Count to be displayed.",name:"count",required:!1,type:{name:"number | undefined"}},min:{defaultValue:null,description:"Minimum count for the counter. Upon reaching the limit, it will disable decrement button.",name:"min",required:!1,type:{name:"number | undefined"}},max:{defaultValue:null,description:"Maximum count for the counter. Upon reaching the limit, it will disable increment button.",name:"max",required:!1,type:{name:"number | undefined"}},component:{defaultValue:null,description:"Custom component in place of count.",name:"component",required:!1,type:{name:"ReactNode"}},onIncrement:{defaultValue:null,description:"Called when increment button is pressed.",name:"onIncrement",required:!1,type:{name:"(() => void) | undefined"}},onDecrement:{defaultValue:null,description:"Called when decrement button is pressed.",name:"onDecrement",required:!1,type:{name:"(() => void) | undefined"}},getStyles:{defaultValue:null,description:"Inline styles for components",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>> | undefined"}}}}]},{key:"src/components/Dialog/Dialog.tsx",value:[{description:"",displayName:"Dialog",methods:[],props:{useHistory:{defaultValue:{value:"false"},description:"(Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that.",name:"useHistory",required:!1,type:{name:"boolean | undefined"}},isVisible:{defaultValue:{value:"false"},description:"When true, it will display the dialog",name:"isVisible",required:!1,type:{name:"boolean | undefined"}},shouldLockBodyScroll:{defaultValue:{value:"true"},description:"(Web only) When true, the body of the document will not scroll when dialog is opened",name:"shouldLockBodyScroll",required:!1,type:{name:"boolean | undefined"}},onRequestClose:{defaultValue:null,description:"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},children:{defaultValue:null,description:"Content of the dialog body",name:"children",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Component to appear at the top of the dialog",name:"header",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"Component to appear at the bottom of the dialog",name:"footer",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>> | undefined"}}}}]},{key:"src/components/Divider/Divider.tsx",value:[{description:"",displayName:"Divider",methods:[],props:{size:{defaultValue:{value:"small"},description:"Size of the divider.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},color:{defaultValue:{value:"colors.border.default"},description:"Color of the divider.",name:"color",required:!1,type:{name:"string | undefined"}},position:{defaultValue:{value:'"horizontal"'},description:"Positioning of the divier",name:"position",required:!1,type:{name:'"horizontal" | "vertical" | undefined'}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>> | undefined"}}}}]},{key:"src/components/Drawer/Drawer.tsx",value:[{description:"",displayName:"Drawer",methods:[],props:{useHistory:{defaultValue:{value:"false"},description:"(Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that",name:"useHistory",required:!1,type:{name:"boolean | undefined"}},shouldLockBodyScroll:{defaultValue:{value:"true"},description:"(Web only) When true, the body of the document will not scroll when dialog is opened",name:"shouldLockBodyScroll",required:!1,type:{name:"boolean | undefined"}},isVisible:{defaultValue:{value:"false"},description:"When true, it will display the drawer",name:"isVisible",required:!1,type:{name:"boolean | undefined"}},onRequestClose:{defaultValue:null,description:"Called when clicking on overlay or pressing Esc",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},offset:{defaultValue:{value:"0"},description:"Amount to offset from the edge of window.",name:"offset",required:!1,type:{name:"number | undefined"}},space:{defaultValue:null,description:"Amount of % screen or px to take up.",name:"space",required:!1,type:{name:"string | number | undefined"}},position:{defaultValue:{value:"bottom"},description:"The position to slide from.",name:"position",required:!1,type:{name:'"bottom" | "top" | "right" | "left" | undefined'}},children:{defaultValue:null,description:"Content of the drawer body",name:"children",required:!0,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>> | undefined"}}}}]},{key:"src/components/Form/FormField.tsx",value:[{description:"",displayName:"FormField",methods:[],props:{error:{defaultValue:null,description:"Error message of the field",name:"error",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"Label of the field.",name:"label",required:!1,type:{name:"string | undefined"}},labelPosition:{defaultValue:{value:'"top"'},description:"Position of the field.",name:"labelPosition",required:!1,type:{name:'"top" | "right" | "left" | undefined'}},description:{defaultValue:null,description:"Description of the field.",name:"description",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Content to wrap FormField with.",name:"children",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetFormFieldStyles, DeepPartial<FormFieldStyles>> | undefined"}}}}]},{key:"src/components/Helpers/CounterState.tsx",value:[{description:"",displayName:"CounterState",methods:[],props:{initial:{defaultValue:null,description:"",name:"initial",required:!1,type:{name:"number | undefined"}}}}]},{key:"src/components/Helpers/Playground.tsx",value:[{description:"",displayName:"Playground",methods:[],props:{}}]},{key:"src/components/Helpers/State.tsx",value:[{description:"",displayName:"State",methods:[],props:{initial:{defaultValue:null,description:"",name:"initial",required:!1,type:{name:"any"}}}}]},{key:"src/components/Helpers/Toggle.tsx",value:[{description:"",displayName:"Toggle",methods:[],props:{initial:{defaultValue:null,description:"",name:"initial",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Helpers/ViewMeasure.tsx",value:[{description:"Wraps content in a `View` with which the measurements are calculated",displayName:"ViewMeasure",methods:[],props:{onMeasure:{defaultValue:null,description:"",name:"onMeasure",required:!1,type:{name:"((props: Measurements) => void) | undefined"}},hitSlop:{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},pointerEvents:{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n   pointer-events: none;\n}\n.box-none * {\n   pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n   pointer-events: all;\n}\n.box-only * {\n   pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},removeClippedSubviews:{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean | undefined"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},collapsable:{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean | undefined"}},needsOffscreenAlphaCompositing:{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean | undefined"}},renderToHardwareTextureAndroid:{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean | undefined"}},accessibilityViewIsModal:{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform ios",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean | undefined"}},accessibilityActions:{defaultValue:null,description:"Provides an array of custom actions available for accessibility.\n@platform ios",name:"accessibilityActions",required:!1,type:{name:"string[] | undefined"}},onAccessibilityAction:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function\nwhen the user performs an accessibility custom action.\n@platform ios",name:"onAccessibilityAction",required:!1,type:{name:"(() => void) | undefined"}},shouldRasterizeIOS:{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean | undefined"}},isTVSelectable:{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform ios",name:"isTVSelectable",required:!1,type:{name:"boolean | undefined"}},hasTVPreferredFocus:{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform ios",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean | undefined"}},tvParallaxProperties:{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform ios",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties | undefined"}},tvParallaxShiftDistanceX:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number | undefined"}},tvParallaxShiftDistanceY:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number | undefined"}},tvParallaxTiltAngle:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform ios",name:"tvParallaxTiltAngle",required:!1,type:{name:"number | undefined"}},tvParallaxMagnification:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform ios",name:"tvParallaxMagnification",required:!1,type:{name:"number | undefined"}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Icon/Icon.tsx",value:[{description:"",displayName:"Icon",methods:[],props:{name:{defaultValue:null,description:"Name if  the icon.",name:"name",required:!0,type:{name:"IconName"}},color:{defaultValue:{value:"theme.colors.text.default"},description:"Color of the icon.",name:"color",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:"24"},description:"Size of the icon.",name:"size",required:!1,type:{name:"number | undefined"}}}}]},{key:"src/components/Inputs/TextInput.tsx",value:[{description:"",displayName:"TextInput",methods:[],props:{size:{defaultValue:{value:"medium"},description:"Size of the text input.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},isDisabled:{defaultValue:null,description:"When true, text input is disabled",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isInvalid:{defaultValue:null,description:"When true, text input will be highlighted as invalid",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},leftIcon:{defaultValue:null,description:"Icon placed on the left side",name:"leftIcon",required:!1,type:{name:"ReactNode"}},rightIcon:{defaultValue:null,description:"Icon placed on the left side",name:"rightIcon",required:!1,type:{name:"ReactNode"}},onClear:{defaultValue:null,description:"Called when clear icon is pressed.",name:"onClear",required:!1,type:{name:"(() => void) | undefined"}},isClearable:{defaultValue:null,description:"When true, when value is not empty, a clear icon is displayed",name:"isClearable",required:!1,type:{name:"boolean | undefined"}},innerRef:{defaultValue:null,description:"Use `ref` instead",name:"innerRef",required:!1,type:{name:"((instance: TextInput | null) => void) | RefObject<TextInput> | null | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetTextInputStyles, DeepPartial<TextInputStyles>> | undefined"}},allowFontScaling:{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean | undefined"}},autoCapitalize:{defaultValue:null,description:"Can tell TextInput to automatically capitalize certain characters.\n      characters: all characters,\n      words: first letter of each word\n      sentences: first letter of each sentence (default)\n      none: don't auto capitalize anything\n\nhttps://facebook.github.io/react-native/docs/textinput.html#autocapitalize",name:"autoCapitalize",required:!1,type:{name:'"none" | "sentences" | "words" | "characters" | undefined'}},autoCorrect:{defaultValue:null,description:"If false, disables auto-correct.\nThe default value is true.",name:"autoCorrect",required:!1,type:{name:"boolean | undefined"}},autoFocus:{defaultValue:null,description:"If true, focuses the input on componentDidMount.\nThe default value is false.",name:"autoFocus",required:!1,type:{name:"boolean | undefined"}},blurOnSubmit:{defaultValue:null,description:"If true, the text field will blur when submitted.\nThe default value is true.",name:"blurOnSubmit",required:!1,type:{name:"boolean | undefined"}},caretHidden:{defaultValue:null,description:"If true, caret is hidden. The default value is false.",name:"caretHidden",required:!1,type:{name:"boolean | undefined"}},contextMenuHidden:{defaultValue:null,description:"If true, context menu is hidden. The default value is false.",name:"contextMenuHidden",required:!1,type:{name:"boolean | undefined"}},defaultValue:{defaultValue:null,description:"Provides an initial value that will change when the user starts typing.\nUseful for simple use-cases where you don't want to deal with listening to events\nand updating the value prop to keep the controlled state in sync.",name:"defaultValue",required:!1,type:{name:"string | undefined"}},editable:{defaultValue:null,description:"If false, text is not editable. The default value is true.",name:"editable",required:!1,type:{name:"boolean | undefined"}},keyboardType:{defaultValue:null,description:"enum(\"default\", 'numeric', 'email-address', \"ascii-capable\", 'numbers-and-punctuation', 'url', 'number-pad', 'phone-pad', 'name-phone-pad',\n'decimal-pad', 'twitter', 'web-search', 'visible-password')\nDetermines which keyboard to open, e.g.numeric.\nThe following values work across platforms: - default - numeric - email-address - phone-pad\nThe following values work on iOS: - ascii-capable - numbers-and-punctuation - url - number-pad - name-phone-pad - decimal-pad - twitter - web-search\nThe following values work on Android: - visible-password",name:"keyboardType",required:!1,type:{name:'"default" | "twitter" | "email-address" | "numeric" | "phone-pad" | "visible-password" | "ascii-capable" | "numbers-and-punctuation" | "url" | "number-pad" | "name-phone-pad" | "decimal-pad" | "web-search" | undefined'}},maxLength:{defaultValue:null,description:"Limits the maximum number of characters that can be entered.\nUse this instead of implementing the logic in JS to avoid flicker.",name:"maxLength",required:!1,type:{name:"number | undefined"}},multiline:{defaultValue:null,description:"If true, the text input can be multiple lines. The default value is false.",name:"multiline",required:!1,type:{name:"boolean | undefined"}},onBlur:{defaultValue:null,description:"Callback that is called when the text input is blurred",name:"onBlur",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputFocusEventData>) => void) | undefined"}},onChange:{defaultValue:null,description:"Callback that is called when the text input's text changes.",name:"onChange",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputChangeEventData>) => void) | undefined"}},onChangeText:{defaultValue:null,description:"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.",name:"onChangeText",required:!1,type:{name:"((text: string) => void) | undefined"}},onContentSizeChange:{defaultValue:null,description:"Callback that is called when the text input's content size changes.\nThis will be called with\n`{ nativeEvent: { contentSize: { width, height } } }`.\n\nOnly called for multiline text inputs.",name:"onContentSizeChange",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputContentSizeChangeEventData>) => void) | undefined"}},onEndEditing:{defaultValue:null,description:"Callback that is called when text input ends.",name:"onEndEditing",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputEndEditingEventData>) => void) | undefined"}},onFocus:{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputFocusEventData>) => void) | undefined"}},onSelectionChange:{defaultValue:null,description:"Callback that is called when the text input selection is changed.",name:"onSelectionChange",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void) | undefined"}},onSubmitEditing:{defaultValue:null,description:"Callback that is called when the text input's submit button is pressed.",name:"onSubmitEditing",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void) | undefined"}},onScroll:{defaultValue:null,description:"Invoked on content scroll with\n  `{ nativeEvent: { contentOffset: { x, y } } }`.\n\nMay also contain other properties from ScrollEvent but on Android contentSize is not provided for performance reasons.",name:"onScroll",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputScrollEventData>) => void) | undefined"}},onKeyPress:{defaultValue:null,description:"Callback that is called when a key is pressed.\nThis will be called with\n  `{ nativeEvent: { key: keyValue } }`\nwhere keyValue is 'Enter' or 'Backspace' for respective keys and the typed-in character otherwise including ' ' for space.\n\nFires before onChange callbacks.\nNote: on Android only the inputs from soft keyboard are handled, not the hardware keyboard inputs.",name:"onKeyPress",required:!1,type:{name:"((e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void) | undefined"}},placeholder:{defaultValue:null,description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string | undefined"}},placeholderTextColor:{defaultValue:null,description:"The text color of the placeholder string",name:"placeholderTextColor",required:!1,type:{name:"string | undefined"}},returnKeyType:{defaultValue:null,description:"enum('default', 'go', 'google', 'join', 'next', 'route', 'search', 'send', 'yahoo', 'done', 'emergency-call')\nDetermines how the return key should look.",name:"returnKeyType",required:!1,type:{name:'"none" | "default" | "search" | "send" | "done" | "go" | "next" | "previous" | "google" | "join" | "route" | "yahoo" | "emergency-call" | undefined'}},secureTextEntry:{defaultValue:null,description:"If true, the text input obscures the text entered so that sensitive text like passwords stay secure.\nThe default value is false.",name:"secureTextEntry",required:!1,type:{name:"boolean | undefined"}},selectTextOnFocus:{defaultValue:null,description:"If true, all text will automatically be selected on focus",name:"selectTextOnFocus",required:!1,type:{name:"boolean | undefined"}},selection:{defaultValue:null,description:"The start and end of the text input's selection. Set start and end to\nthe same value to position the cursor.",name:"selection",required:!1,type:{name:"{ start: number; end?: number | undefined; } | undefined"}},selectionColor:{defaultValue:null,description:"The highlight (and cursor on ios) color of the text input",name:"selectionColor",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Styles",name:"style",required:!1,type:{name:"StyleProp<TextStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests",name:"testID",required:!1,type:{name:"string | undefined"}},inputAccessoryViewID:{defaultValue:null,description:"Used to connect to an InputAccessoryView. Not part of react-natives documentation, but present in examples and\ncode.\nSee https://facebook.github.io/react-native/docs/inputaccessoryview.html for more information.",name:"inputAccessoryViewID",required:!1,type:{name:"string | undefined"}},value:{defaultValue:null,description:"The value to show for the text input. TextInput is a controlled component,\nwhich means the native value will be forced to match this value prop if provided.\nFor most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same.\nIn addition to simply setting the same value, either set editable={false},\nor set/update maxLength to prevent unwanted edits without flicker.",name:"value",required:!1,type:{name:"string | undefined"}},maxFontSizeMultiplier:{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number | null | undefined"}},hitSlop:{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},pointerEvents:{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n   pointer-events: none;\n}\n.box-none * {\n   pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n   pointer-events: all;\n}\n.box-only * {\n   pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},removeClippedSubviews:{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},collapsable:{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean | undefined"}},needsOffscreenAlphaCompositing:{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean | undefined"}},renderToHardwareTextureAndroid:{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean | undefined"}},accessibilityViewIsModal:{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform ios",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean | undefined"}},accessibilityActions:{defaultValue:null,description:"Provides an array of custom actions available for accessibility.\n@platform ios",name:"accessibilityActions",required:!1,type:{name:"string[] | undefined"}},onAccessibilityAction:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function\nwhen the user performs an accessibility custom action.\n@platform ios",name:"onAccessibilityAction",required:!1,type:{name:"(() => void) | undefined"}},shouldRasterizeIOS:{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean | undefined"}},isTVSelectable:{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform ios",name:"isTVSelectable",required:!1,type:{name:"boolean | undefined"}},hasTVPreferredFocus:{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform ios",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean | undefined"}},tvParallaxProperties:{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform ios",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties | undefined"}},tvParallaxShiftDistanceX:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number | undefined"}},tvParallaxShiftDistanceY:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number | undefined"}},tvParallaxTiltAngle:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform ios",name:"tvParallaxTiltAngle",required:!1,type:{name:"number | undefined"}},tvParallaxMagnification:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform ios",name:"tvParallaxMagnification",required:!1,type:{name:"number | undefined"}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}},clearButtonMode:{defaultValue:null,description:"enum('never', 'while-editing', 'unless-editing', 'always')\nWhen the clear button should appear on the right side of the text view",name:"clearButtonMode",required:!1,type:{name:'"never" | "while-editing" | "unless-editing" | "always" | undefined'}},clearTextOnFocus:{defaultValue:null,description:"If true, clears the text field automatically when editing begins",name:"clearTextOnFocus",required:!1,type:{name:"boolean | undefined"}},dataDetectorTypes:{defaultValue:null,description:"Determines the types of data converted to clickable URLs in the text input.\nOnly valid if `multiline={true}` and `editable={false}`.\nBy default no data types are detected.\n\nYou can provide one type or an array of many types.\n\nPossible values for `dataDetectorTypes` are:\n\n- `'phoneNumber'`\n- `'link'`\n- `'address'`\n- `'calendarEvent'`\n- `'none'`\n- `'all'`",name:"dataDetectorTypes",required:!1,type:{name:'"none" | "link" | "phoneNumber" | "address" | "calendarEvent" | "all" | DataDetectorTypes[] | undefined'}},enablesReturnKeyAutomatically:{defaultValue:null,description:"If true, the keyboard disables the return key when there is no text and automatically enables it when there is text.\nThe default value is false.",name:"enablesReturnKeyAutomatically",required:!1,type:{name:"boolean | undefined"}},keyboardAppearance:{defaultValue:null,description:"Determines the color of the keyboard.",name:"keyboardAppearance",required:!1,type:{name:'"default" | "light" | "dark" | undefined'}},selectionState:{defaultValue:null,description:"See DocumentSelectionState.js, some state that is responsible for maintaining selection information for a document",name:"selectionState",required:!1,type:{name:"DocumentSelectionState | undefined"}},spellCheck:{defaultValue:null,description:"If false, disables spell-check style (i.e. red underlines). The default value is inherited from autoCorrect",name:"spellCheck",required:!1,type:{name:"boolean | undefined"}},textContentType:{defaultValue:null,description:"Give the keyboard and the system information about the expected\nsemantic meaning for the content that users enter.\n\nFor iOS 11+ you can set `textContentType` to `username` or `password` to\nenable autofill of login details from the device keychain.\n\nFor iOS 12+ `newPassword` can be used to indicate a new password input the\nuser may want to save in the keychain, and `oneTimeCode` can be used to indicate\nthat a field can be autofilled by a code arriving in an SMS.\n\nTo disable autofill, set textContentType to `none`.\n\nPossible values for `textContentType` are:\n\n  - `'none'`\n  - `'URL'`\n  - `'addressCity'`\n  - `'addressCityAndState'`\n  - `'addressState'`\n  - `'countryName'`\n  - `'creditCardNumber'`\n  - `'emailAddress'`\n  - `'familyName'`\n  - `'fullStreetAddress'`\n  - `'givenName'`\n  - `'jobTitle'`\n  - `'location'`\n  - `'middleName'`\n  - `'name'`\n  - `'namePrefix'`\n  - `'nameSuffix'`\n  - `'nickname'`\n  - `'organizationName'`\n  - `'postalCode'`\n  - `'streetAddressLine1'`\n  - `'streetAddressLine2'`\n  - `'sublocality'`\n  - `'telephoneNumber'`\n  - `'username'`\n  - `'password'`\n  - `'newPassword'`\n  - `'oneTimeCode'`",name:"textContentType",required:!1,type:{name:'"none" | "name" | "URL" | "addressCity" | "addressCityAndState" | "addressState" | "countryName" | "creditCardNumber" | "emailAddress" | "familyName" | "fullStreetAddress" | ... 17 more ... | undefined'}},scrollEnabled:{defaultValue:null,description:"If false, scrolling of the text view will be disabled. The default value is true. Only works with multiline={true}",name:"scrollEnabled",required:!1,type:{name:"boolean | undefined"}},autoCompleteType:{defaultValue:null,description:"Determines which content to suggest on auto complete, e.g.`username`.\nTo disable auto complete, use `off`.\n\n*Android Only*\n\nThe following values work on Android only:\n\n- `username`\n- `password`\n- `email`\n- `name`\n- `tel`\n- `street-address`\n- `postal-code`\n- `cc-number`\n- `cc-csc`\n- `cc-exp`\n- `cc-exp-month`\n- `cc-exp-year`\n- `off`",name:"autoCompleteType",required:!1,type:{name:'"name" | "username" | "password" | "cc-csc" | "cc-exp" | "cc-exp-month" | "cc-exp-year" | "cc-number" | "email" | "postal-code" | "street-address" | "tel" | "off" | undefined'}},disableFullscreenUI:{defaultValue:null,description:"When false, if there is a small amount of space available around a text input (e.g. landscape orientation on a phone),\n   the OS may choose to have the user edit the text inside of a full screen text input mode.\nWhen true, this feature is disabled and users will always edit the text directly inside of the text input.\nDefaults to false.",name:"disableFullscreenUI",required:!1,type:{name:"boolean | undefined"}},inlineImageLeft:{defaultValue:null,description:"If defined, the provided image resource will be rendered on the left.",name:"inlineImageLeft",required:!1,type:{name:"string | undefined"}},inlineImagePadding:{defaultValue:null,description:"Padding between the inline image, if any, and the text input itself.",name:"inlineImagePadding",required:!1,type:{name:"number | undefined"}},numberOfLines:{defaultValue:null,description:"Sets the number of lines for a TextInput.\nUse it with multiline set to true to be able to fill the lines.",name:"numberOfLines",required:!1,type:{name:"number | undefined"}},returnKeyLabel:{defaultValue:null,description:"Sets the return key to the label. Use it instead of `returnKeyType`.\n@platform android",name:"returnKeyLabel",required:!1,type:{name:"string | undefined"}},textBreakStrategy:{defaultValue:null,description:"Set text break strategy on Android API Level 23+, possible values are simple, highQuality, balanced\nThe default value is simple.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced" | undefined'}},underlineColorAndroid:{defaultValue:null,description:"The color of the textInput underline.",name:"underlineColorAndroid",required:!1,type:{name:"string | undefined"}},textAlignVertical:{defaultValue:null,description:"Vertically align text when `multiline` is set to true",name:"textAlignVertical",required:!1,type:{name:'"center" | "auto" | "bottom" | "top" | undefined'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: TextInput | null) => void) | RefObject<TextInput> | null | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string | number | undefined"}}}}]},{key:"src/components/KitchenSink/KitchenSink.tsx",value:[]},{key:"src/components/Layout/Column.tsx",value:[{description:"",displayName:"Column",methods:[],props:{children:{defaultValue:null,description:"Content of the column.",name:"children",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetColumnStyles, DeepPartial<ColumnStyles>> | undefined"}},offsetXsmall:{defaultValue:null,description:"Number of columns to offset when screen size is xsmall",name:"offsetXsmall",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},offsetSmall:{defaultValue:null,description:"Number of columns to offset when screen size is small",name:"offsetSmall",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},offsetMedium:{defaultValue:null,description:"Number of columns to offset when screen size is medium",name:"offsetMedium",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},offsetLarge:{defaultValue:null,description:"Number of columns to offset when screen size is large",name:"offsetLarge",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},offsetXlarge:{defaultValue:null,description:"Number of columns to offset when screen size is xlarge",name:"offsetXlarge",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},xsmall:{defaultValue:null,description:"Number of columns to span over when screen size is xsmall",name:"xsmall",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},small:{defaultValue:null,description:"Number of columns to span over when screen size is small",name:"small",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},medium:{defaultValue:null,description:"Number of columns to span over when screen size is medium",name:"medium",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},large:{defaultValue:null,description:"Number of columns to span over when screen size is large",name:"large",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}},xlarge:{defaultValue:null,description:"Number of columns to span over when screen size is xlarge",name:"xlarge",required:!1,type:{name:"0 | 24 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | undefined"}}}}]},{key:"src/components/Layout/Container.tsx",value:[{description:"On screens with size lg and above, caps maximum width of the content",displayName:"Container",methods:[],props:{children:{defaultValue:null,description:"Children node",name:"children",required:!1,type:{name:"ReactNode"}},fluid:{defaultValue:{value:"false"},description:"When true, it will not contain the width and occupy fully the parent container",name:"fluid",required:!1,type:{name:"boolean | undefined"}},size:{defaultValue:null,description:"The size of the container. It will override the internal responsive mechanism, and will force the\ncontainment of a particular screen size",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | "xlarge" | undefined'}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetContainerStyles, DeepPartial<ContainerStyles>> | undefined"}}}}]},{key:"src/components/Layout/LayoutContext.tsx",value:[]},{key:"src/components/Layout/LayoutProvider.tsx",value:[{description:"",displayName:"getCurrentScreenSize",methods:[],props:{breakpoints:{defaultValue:null,description:"",name:"breakpoints",required:!0,type:{name:"Breakpoints"}},currentScreenSize:{defaultValue:null,description:"",name:"currentScreenSize",required:!0,type:{name:'"small" | "medium" | "large" | "xlarge" | "xsmall"'}},getResponsiveValue:{defaultValue:null,description:"",name:"getResponsiveValue",required:!0,type:{name:"GetResponsiveValue"}},gridColumnCount:{defaultValue:null,description:"",name:"gridColumnCount",required:!0,type:{name:"ColumnCount"}},gutterWidth:{defaultValue:null,description:"",name:"gutterWidth",required:!0,type:{name:"number"}},containerSizes:{defaultValue:null,description:"",name:"containerSizes",required:!0,type:{name:"ContainerSizes"}}}},{description:"",displayName:"LayoutProvider",methods:[],props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"Partial<LayoutInterface> | undefined"}}}}]},{key:"src/components/Layout/Row.tsx",value:[{description:"",displayName:"Row",methods:[],props:{hasGutter:{defaultValue:{value:"true"},description:"When true, there will be gutter between columns",name:"hasGutter",required:!1,type:{name:"boolean | undefined"}},children:{defaultValue:null,description:"`Column` components",name:"children",required:!0,type:{name:"ReactElement<ColumnProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<...>[]"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetRowStyles, DeepPartial<RowStyles>> | undefined"}}}}]},{key:"src/components/Layout/Visible.tsx",value:[{description:"",displayName:"Visible",methods:[],props:{xsmall:{defaultValue:null,description:"When true, render children only when the screen size is xsmall",name:"xsmall",required:!1,type:{name:"boolean | undefined"}},small:{defaultValue:null,description:"When true, render children only when the screen size is small",name:"small",required:!1,type:{name:"boolean | undefined"}},medium:{defaultValue:null,description:"When true, render children only when the screen size is medium",name:"medium",required:!1,type:{name:"boolean | undefined"}},large:{defaultValue:null,description:"When true, render children only when the screen size is large",name:"large",required:!1,type:{name:"boolean | undefined"}},xlarge:{defaultValue:null,description:"When true, render children only when the screen size is xlarge",name:"xlarge",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/ListItem/ListItem.tsx",value:[{description:"",displayName:"ListItem",methods:[],props:{title:{defaultValue:null,description:"Title of the list item",name:"title",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"Description of the list item",name:"description",required:!1,type:{name:"ReactNode"}},avatarProps:{defaultValue:null,description:"Props to be passed to `Avatar`",name:"avatarProps",required:!1,type:{name:"AvatarProps | undefined"}},isDisabled:{defaultValue:{value:"false"},description:"When true, list item will not be able to be pressed.",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},leftNode:{defaultValue:null,description:"React node replacing `Avatar` on the left hand-side",name:"leftNode",required:!1,type:{name:"ReactNode"}},rightNode:{defaultValue:null,description:"React node replacing right hand-side icon",name:"rightNode",required:!1,type:{name:"ReactNode"}},onPress:{defaultValue:null,description:"Called when pressing list item",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessible:{defaultValue:{value:"true"},description:"When true, indicates that the view is an accessibility element.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/LoadingIndicators/Dots.tsx",value:[{description:"",displayName:"Dots",methods:[],props:{color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string | undefined"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"number | undefined"}}}}]},{key:"src/components/Modal/HistoryModal.tsx",value:[{description:"",displayName:"HistoryModal",methods:[],props:{useHistory:{defaultValue:null,description:"(Web only) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false",name:"useHistory",required:!1,type:{name:"boolean | undefined"}},shouldLockBodyScroll:{defaultValue:null,description:"(Web) Whether should scroll when user initiates scroll (mouse wheel, keyboard down/up)\nParamount's body scroll lock may not work in some browsers.\nYou should consider using https://github.com/willmcpo/body-scroll-lock instead",name:"shouldLockBodyScroll",required:!1,type:{name:"boolean | undefined"}},animated:{defaultValue:null,description:"",name:"animated",required:!1,type:{name:"boolean | undefined"}},animationType:{defaultValue:null,description:"The `animationType` prop controls how the modal animates.\n\n- `slide` slides in from the bottom\n- `fade` fades into view\n- `none` appears without an animation",name:"animationType",required:!1,type:{name:'"none" | "slide" | "fade" | undefined'}},transparent:{defaultValue:null,description:"The `transparent` prop determines whether your modal will fill the entire view.\nSetting this to `true` will render the modal over a transparent background.",name:"transparent",required:!1,type:{name:"boolean | undefined"}},visible:{defaultValue:null,description:"The `visible` prop determines whether your modal is visible.",name:"visible",required:!1,type:{name:"boolean | undefined"}},onRequestClose:{defaultValue:null,description:"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\n_On the Android platform, this is a required function._",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onShow:{defaultValue:null,description:"The `onShow` prop allows passing a function that will be called once the modal has been shown.",name:"onShow",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},presentationStyle:{defaultValue:null,description:"The `presentationStyle` determines the style of modal to show",name:"presentationStyle",required:!1,type:{name:'"fullScreen" | "pageSheet" | "formSheet" | "overFullScreen" | undefined'}},supportedOrientations:{defaultValue:null,description:"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.",name:"supportedOrientations",required:!1,type:{name:'("portrait" | "portrait-upside-down" | "landscape" | "landscape-left" | "landscape-right")[] | undefined'}},onDismiss:{defaultValue:null,description:"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.",name:"onDismiss",required:!1,type:{name:"(() => void) | undefined"}},onOrientationChange:{defaultValue:null,description:"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.",name:"onOrientationChange",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},hardwareAccelerated:{defaultValue:null,description:"Controls whether to force hardware acceleration for the underlying window.",name:"hardwareAccelerated",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Modal/Modal.tsx",value:[{description:"",displayName:"HistoryModal",methods:[],props:{useHistory:{defaultValue:null,description:"(Web only) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false",name:"useHistory",required:!1,type:{name:"boolean | undefined"}},shouldLockBodyScroll:{defaultValue:null,description:"(Web) Whether should scroll when user initiates scroll (mouse wheel, keyboard down/up)\nParamount's body scroll lock may not work in some browsers.\nYou should consider using https://github.com/willmcpo/body-scroll-lock instead",name:"shouldLockBodyScroll",required:!1,type:{name:"boolean | undefined"}},animated:{defaultValue:null,description:"",name:"animated",required:!1,type:{name:"boolean | undefined"}},animationType:{defaultValue:null,description:"The `animationType` prop controls how the modal animates.\n\n- `slide` slides in from the bottom\n- `fade` fades into view\n- `none` appears without an animation",name:"animationType",required:!1,type:{name:'"none" | "slide" | "fade" | undefined'}},transparent:{defaultValue:null,description:"The `transparent` prop determines whether your modal will fill the entire view.\nSetting this to `true` will render the modal over a transparent background.",name:"transparent",required:!1,type:{name:"boolean | undefined"}},visible:{defaultValue:null,description:"The `visible` prop determines whether your modal is visible.",name:"visible",required:!1,type:{name:"boolean | undefined"}},onRequestClose:{defaultValue:null,description:"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\n_On the Android platform, this is a required function._",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onShow:{defaultValue:null,description:"The `onShow` prop allows passing a function that will be called once the modal has been shown.",name:"onShow",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},presentationStyle:{defaultValue:null,description:"The `presentationStyle` determines the style of modal to show",name:"presentationStyle",required:!1,type:{name:'"fullScreen" | "pageSheet" | "formSheet" | "overFullScreen" | undefined'}},supportedOrientations:{defaultValue:null,description:"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.",name:"supportedOrientations",required:!1,type:{name:'("portrait" | "portrait-upside-down" | "landscape" | "landscape-left" | "landscape-right")[] | undefined'}},onDismiss:{defaultValue:null,description:"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.",name:"onDismiss",required:!1,type:{name:"(() => void) | undefined"}},onOrientationChange:{defaultValue:null,description:"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.",name:"onOrientationChange",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},hardwareAccelerated:{defaultValue:null,description:"Controls whether to force hardware acceleration for the underlying window.",name:"hardwareAccelerated",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Modal/ModalBase.tsx",value:[{description:"",displayName:"ModalBase",methods:[],props:{shouldLockBodyScroll:{defaultValue:null,description:"(Web) Whether should scroll when user initiates scroll (mouse wheel, keyboard down/up)\nParamount's body scroll lock may not work in some browsers.\nYou should consider using https://github.com/willmcpo/body-scroll-lock instead",name:"shouldLockBodyScroll",required:!1,type:{name:"boolean | undefined"}},animated:{defaultValue:null,description:"",name:"animated",required:!1,type:{name:"boolean | undefined"}},animationType:{defaultValue:null,description:"The `animationType` prop controls how the modal animates.\n\n- `slide` slides in from the bottom\n- `fade` fades into view\n- `none` appears without an animation",name:"animationType",required:!1,type:{name:'"none" | "slide" | "fade" | undefined'}},transparent:{defaultValue:null,description:"The `transparent` prop determines whether your modal will fill the entire view.\nSetting this to `true` will render the modal over a transparent background.",name:"transparent",required:!1,type:{name:"boolean | undefined"}},visible:{defaultValue:null,description:"The `visible` prop determines whether your modal is visible.",name:"visible",required:!1,type:{name:"boolean | undefined"}},onRequestClose:{defaultValue:null,description:"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\n_On the Android platform, this is a required function._",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onShow:{defaultValue:null,description:"The `onShow` prop allows passing a function that will be called once the modal has been shown.",name:"onShow",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},presentationStyle:{defaultValue:null,description:"The `presentationStyle` determines the style of modal to show",name:"presentationStyle",required:!1,type:{name:'"fullScreen" | "pageSheet" | "formSheet" | "overFullScreen" | undefined'}},supportedOrientations:{defaultValue:null,description:"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.",name:"supportedOrientations",required:!1,type:{name:'("portrait" | "portrait-upside-down" | "landscape" | "landscape-left" | "landscape-right")[] | undefined'}},onDismiss:{defaultValue:null,description:"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.",name:"onDismiss",required:!1,type:{name:"(() => void) | undefined"}},onOrientationChange:{defaultValue:null,description:"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.",name:"onOrientationChange",required:!1,type:{name:"((event: NativeSyntheticEvent<any>) => void) | undefined"}},hardwareAccelerated:{defaultValue:null,description:"Controls whether to force hardware acceleration for the underlying window.",name:"hardwareAccelerated",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Overlay/Overlay.tsx",value:[{description:"",displayName:"Overlay",methods:[],props:{onPress:{defaultValue:null,description:"",name:"onPress",required:!0,type:{name:"() => void"}},transparent:{defaultValue:null,description:"",name:"transparent",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>> | undefined"}}}}]},{key:"src/components/Pickers/NativePicker.tsx",value:[{description:"",displayName:"NativePicker",methods:[],props:{size:{defaultValue:{value:'"medium"'},description:"The size of the picker.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},children:{defaultValue:null,description:"List of NativePickerItem items.",name:"children",required:!0,type:{name:"ReactElement<NativePickerItemProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)>[]"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>> | undefined"}},innerRef:{defaultValue:null,description:"",name:"innerRef",required:!1,type:{name:"((instance: Picker | null) => void) | RefObject<Picker> | null | undefined"}},onValueChange:{defaultValue:null,description:"Callback for when an item is selected. This is called with the\nfollowing parameters:\n- itemValue: the value prop of the item that was selected\n- itemPosition: the index of the selected item in this picker",name:"onValueChange",required:!1,type:{name:"((itemValue: any, itemPosition: number) => void) | undefined"}},selectedValue:{defaultValue:null,description:"Value matching value of one of the items.\nCan be a string or an integer.",name:"selectedValue",required:!1,type:{name:"any"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},testId:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testId",required:!1,type:{name:"string | undefined"}},itemStyle:{defaultValue:null,description:"Style to apply to each of the item labels.\n@platform ios",name:"itemStyle",required:!1,type:{name:"StyleProp<TextStyle>"}},hitSlop:{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},pointerEvents:{defaultValue:null,description:"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\n\n.box-none {\n   pointer-events: none;\n}\n.box-none * {\n   pointer-events: all;\n}\n\nbox-only is the equivalent of\n\n.box-only {\n   pointer-events: all;\n}\n.box-only * {\n   pointer-events: none;\n}\n\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},removeClippedSubviews:{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},collapsable:{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean | undefined"}},needsOffscreenAlphaCompositing:{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean | undefined"}},renderToHardwareTextureAndroid:{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean | undefined"}},accessibilityViewIsModal:{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform ios",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean | undefined"}},accessibilityActions:{defaultValue:null,description:"Provides an array of custom actions available for accessibility.\n@platform ios",name:"accessibilityActions",required:!1,type:{name:"string[] | undefined"}},onAccessibilityAction:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function\nwhen the user performs an accessibility custom action.\n@platform ios",name:"onAccessibilityAction",required:!1,type:{name:"(() => void) | undefined"}},shouldRasterizeIOS:{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean | undefined"}},isTVSelectable:{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform ios",name:"isTVSelectable",required:!1,type:{name:"boolean | undefined"}},hasTVPreferredFocus:{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform ios",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean | undefined"}},tvParallaxProperties:{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform ios",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties | undefined"}},tvParallaxShiftDistanceX:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number | undefined"}},tvParallaxShiftDistanceY:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number | undefined"}},tvParallaxTiltAngle:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform ios",name:"tvParallaxTiltAngle",required:!1,type:{name:"number | undefined"}},tvParallaxMagnification:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform ios",name:"tvParallaxMagnification",required:!1,type:{name:"number | undefined"}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}},enabled:{defaultValue:null,description:"If set to false, the picker will be disabled, i.e. the user will not be able to make a\nselection.\n@platform android",name:"enabled",required:!1,type:{name:"boolean | undefined"}},mode:{defaultValue:null,description:"On Android, specifies how to display the selection items when the user taps on the picker:\n\n   - 'dialog': Show a modal dialog. This is the default.\n   - 'dropdown': Shows a dropdown anchored to the picker view\n@platform android",name:"mode",required:!1,type:{name:'"dialog" | "dropdown" | undefined'}},prompt:{defaultValue:null,description:"Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\n@platform android",name:"prompt",required:!1,type:{name:"string | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: Picker | null) => void) | RefObject<Picker> | null | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string | number | undefined"}}}}]},{key:"src/components/Pickers/NativePickerItem.tsx",value:[{description:"",displayName:"NativePickerItem",methods:[],props:{testID:{defaultValue:null,description:"",name:"testID",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}}}}]},{key:"src/components/Pickers/PickerButton.tsx",value:[{description:"",displayName:"PickerButton",methods:[],props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | null | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},getStyles:{defaultValue:null,description:"",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>> | undefined"}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Pickers/PickerButtonWrapper.tsx",value:[{description:"",displayName:"PickerButtonWrapper",methods:[],props:{size:{defaultValue:{value:'"medium"'},description:"The size of the picker.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>> | undefined"}},children:{defaultValue:null,description:"Content of the wrapper",name:"children",required:!1,type:{name:"ReactNode"}}}}]},{key:"src/components/Pickers/PickerItem.tsx",value:[{description:"",displayName:"PickerItem",methods:[],props:{index:{defaultValue:{value:"0"},description:"Injected by SelectList. Index of the item on the list.",name:"index",required:!1,type:{name:"number | undefined"}},isSelected:{defaultValue:{value:"false"},description:"Injected by SelectList. When true, it will be marked as checked",name:"isSelected",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"Injected by SelectList. Called when pressed select list item",name:"onPress",required:!1,type:{name:"((value: string, index: number, isSelected: boolean) => void) | undefined"}},value:{defaultValue:null,description:"Value of the select list item",name:"value",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Label of the select list item",name:"label",required:!0,type:{name:"string"}}}}]},{key:"src/components/Popover/Popover.tsx",value:[{description:"",displayName:"Popover",methods:[],props:{getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetPopoverStyles, DeepPartial<PopoverStyles>> | undefined"}},position:{defaultValue:{value:'"bottom"'},description:"Position of the content.",name:"position",required:!1,type:{name:'"bottom" | "top" | "right" | "left" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | undefined'}},children:{defaultValue:null,description:"Wrapped component to open the positioner over.",name:"children",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"Content revealed when positioner is opened.",name:"content",required:!1,type:{name:"ReactNode"}},isVisible:{defaultValue:null,description:"When true, displays positioner.",name:"isVisible",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Positioner/Positioner.tsx",value:[{description:"",displayName:"Positioner",methods:[],props:{position:{defaultValue:{value:'"bottom"'},description:"Position of the content.",name:"position",required:!1,type:{name:'"bottom" | "top" | "right" | "left" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | undefined'}},children:{defaultValue:null,description:"Wrapped component to open the positioner over.",name:"children",required:!1,type:{name:"ReactNode"}},content:{defaultValue:null,description:"Content revealed when positioner is opened.",name:"content",required:!1,type:{name:"ReactNode"}},isVisible:{defaultValue:null,description:"When true, displays positioner.",name:"isVisible",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetPositionerStyles, DeepPartial<PositionerStyles>> | undefined"}}}}]},{key:"src/components/ProgressBar/ProgressBar.tsx",value:[{description:"",displayName:"ProgressBar",methods:[],props:{percent:{defaultValue:{value:"0"},description:"Percentage of the progress bar. From 0 to 1",name:"percent",required:!1,type:{name:"number | undefined"}},size:{defaultValue:{value:'"medium"'},description:"The size of the progress bar.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetProgressBarStyles, DeepPartial<ProgressBarStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Rating/Rating.tsx",value:[{description:"",displayName:"Rating",methods:[],props:{value:{defaultValue:{value:"0"},description:"Rating value",name:"value",required:!1,type:{name:"number | undefined"}},maxRating:{defaultValue:{value:"5"},description:"Maximum rating from 0.",name:"maxRating",required:!1,type:{name:"number | undefined"}},size:{defaultValue:{value:'"medium"'},description:"The size of the rating star.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},onChange:{defaultValue:null,description:"Called when a rating star is pressed",name:"onChange",required:!1,type:{name:"((value: number) => void) | undefined"}},color:{defaultValue:null,description:"Color of the rating stars",name:"color",required:!1,type:{name:"string | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetRatingStyles, DeepPartial<RatingStyles>> | undefined"}}}}]},{key:"src/components/Rating/Star.tsx",value:[{description:"",displayName:"Star",methods:[],props:{size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"number | undefined"}},isFilled:{defaultValue:null,description:"",name:"isFilled",required:!1,type:{name:"boolean | undefined"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/SelectList/SelectList.tsx",value:[{description:"",displayName:"SelectList",methods:[],props:{value:{defaultValue:null,description:"Select item or items.\nFor single-select use single string.\nFor multi-select use string array\n\n*This is a controlled component*; Value will reflect selected items",name:"value",required:!0,type:{name:"string | string[]"}},onValueChange:{defaultValue:null,description:"Called when a select list item is pressed",name:"onValueChange",required:!0,type:{name:"(itemValue: string | string[], itemIndex: number) => void | undefined"}},children:{defaultValue:null,description:"`SelectListItem` components",name:"children",required:!0,type:{name:"ReactElement<SelectListItemProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<...>[]"}},innerRef:{defaultValue:null,description:"Use `ref` prop instead for using `FlatList` methods",name:"innerRef",required:!1,type:{name:"((instance: FlatList<SelectListItemProps> | null) => void) | RefObject<FlatList<SelectListItemProps>> | null | undefined"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: FlatList<SelectListItemProps> | null) => void) | RefObject<FlatList<SelectListItemProps>> | null | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string | number | undefined"}}}}]},{key:"src/components/SelectList/SelectListItem.tsx",value:[{description:"",displayName:"SelectListItem",methods:[],props:{index:{defaultValue:{value:"0"},description:"Injected by SelectList. Index of the item on the list.",name:"index",required:!1,type:{name:"number | undefined"}},isSelected:{defaultValue:{value:"false"},description:"Injected by SelectList. When true, it will be marked as checked",name:"isSelected",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"Injected by SelectList. Called when pressed select list item",name:"onPress",required:!1,type:{name:"((value: string, index: number, isSelected: boolean) => void) | undefined"}},value:{defaultValue:null,description:"Value of the select list item",name:"value",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Label of the select list item",name:"label",required:!0,type:{name:"string"}}}}]},{key:"src/components/Slider/Slider.tsx",value:[{description:"",displayName:"Slider",methods:[],props:{isRange:{defaultValue:{value:"false"},description:"Set whether it should slide a range.\nHowever, if initialValue is set, it will take precedence over this prop",name:"isRange",required:!1,type:{name:"boolean | undefined"}},size:{defaultValue:{value:'"medium"'},description:"Size of the thumb, and thus the whole slider",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},value:{defaultValue:{value:"0"},description:"Initial value of the slider. The value should be between minimumValue\nand maximumValue; which default to 0 and 1 respectively.\n\n*This is not a controlled component*; you don't need to update the\nvalue during dragging.",name:"value",required:!1,type:{name:"number | [number, number] | undefined"}},step:{defaultValue:{value:"0"},description:"Step value of the slider. The value should be\nbetween 0 and (maximumValue - minimumValue).",name:"step",required:!1,type:{name:"number | undefined"}},minimumValue:{defaultValue:{value:"0"},description:"Initial minimum value of the slider.",name:"minimumValue",required:!1,type:{name:"number | undefined"}},maximumValue:{defaultValue:{value:"1"},description:"Initial maximum value of the slider.",name:"maximumValue",required:!1,type:{name:"number | undefined"}},disabled:{defaultValue:{value:"false"},description:"If true the user won't be able to move the slider.",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onValueChange:{defaultValue:null,description:"Callback continuously called while the user is dragging the slider.",name:"onValueChange",required:!1,type:{name:"((value: SliderValue) => void) | undefined"}},onSlidingComplete:{defaultValue:null,description:"Callback that is called when the user releases the slider;\nregardless if the value has changed. The current value is passed\nas an argument to the callback handler.",name:"onSlidingComplete",required:!1,type:{name:"((value: SliderValue) => void) | undefined"}},onSlidingStart:{defaultValue:null,description:"Callback called when the user starts changing the value.",name:"onSlidingStart",required:!1,type:{name:"((value: SliderValue) => void) | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetSliderStyles, DeepPartial<SliderStyles>> | undefined"}},leftThumbAccessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"leftThumbAccessibilityLabel",required:!1,type:{name:"string | undefined"}},leftThumbAccessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"leftThumbAccessibilityHint",required:!1,type:{name:"string | undefined"}},rightThumbAccessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"rightThumbAccessibilityLabel",required:!1,type:{name:"string | undefined"}},rightThumbAccessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"rightThumbAccessibilityHint",required:!1,type:{name:"string | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in UI automation tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Svg/Svg.tsx",value:[{description:"",displayName:"Circle",methods:[],props:{cx:{defaultValue:null,description:"",name:"cx",required:!1,type:{name:"string | number | undefined"}},cy:{defaultValue:null,description:"",name:"cy",required:!1,type:{name:"string | number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},r:{defaultValue:null,description:"",name:"r",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"ClipPath",methods:[],props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}}}},{description:"",displayName:"Defs",methods:[],props:{}},{description:"",displayName:"Ellipse",methods:[],props:{cx:{defaultValue:null,description:"",name:"cx",required:!1,type:{name:"string | number | undefined"}},cy:{defaultValue:null,description:"",name:"cy",required:!1,type:{name:"string | number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},rx:{defaultValue:null,description:"",name:"rx",required:!1,type:{name:"string | number | undefined"}},ry:{defaultValue:null,description:"",name:"ry",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"G",methods:[],props:{opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Image",methods:[],props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},xlinkHref:{defaultValue:null,description:"",name:"xlinkHref",required:!1,type:{name:"number | ImageURISource | ImageURISource[] | undefined"}},href:{defaultValue:null,description:"",name:"href",required:!0,type:{name:"ImageSourcePropType"}},preserveAspectRatio:{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}}}},{description:"",displayName:"Line",methods:[],props:{opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},x1:{defaultValue:null,description:"",name:"x1",required:!1,type:{name:"string | number | undefined"}},x2:{defaultValue:null,description:"",name:"x2",required:!1,type:{name:"string | number | undefined"}},y1:{defaultValue:null,description:"",name:"y1",required:!1,type:{name:"string | number | undefined"}},y2:{defaultValue:null,description:"",name:"y2",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"LinearGradient",methods:[],props:{x1:{defaultValue:null,description:"",name:"x1",required:!1,type:{name:"string | number | undefined"}},x2:{defaultValue:null,description:"",name:"x2",required:!1,type:{name:"string | number | undefined"}},y1:{defaultValue:null,description:"",name:"y1",required:!1,type:{name:"string | number | undefined"}},y2:{defaultValue:null,description:"",name:"y2",required:!1,type:{name:"string | number | undefined"}},gradientUnits:{defaultValue:null,description:"",name:"gradientUnits",required:!1,type:{name:'"userSpaceOnUse" | "objectBoundingBox" | undefined'}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}}}},{description:"",displayName:"Path",methods:[],props:{d:{defaultValue:null,description:"",name:"d",required:!0,type:{name:"string"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Pattern",methods:[],props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},patternTransform:{defaultValue:null,description:"",name:"patternTransform",required:!1,type:{name:"string | ReadonlyArray<number> | undefined"}},patternUnits:{defaultValue:null,description:"",name:"patternUnits",required:!1,type:{name:'"userSpaceOnUse" | "objectBoundingBox" | undefined'}},patternContentUnits:{defaultValue:null,description:"",name:"patternContentUnits",required:!1,type:{name:'"userSpaceOnUse" | "objectBoundingBox" | undefined'}},viewBox:{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string | undefined"}},preserveAspectRatio:{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Polygon",methods:[],props:{opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"string | ReadonlyArray<ReactText>"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Polyline",methods:[],props:{opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"string | ReadonlyArray<ReactText>"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"RadialGradient",methods:[],props:{fx:{defaultValue:null,description:"",name:"fx",required:!1,type:{name:"string | number | undefined"}},fy:{defaultValue:null,description:"",name:"fy",required:!1,type:{name:"string | number | undefined"}},rx:{defaultValue:null,description:"",name:"rx",required:!1,type:{name:"string | number | undefined"}},ry:{defaultValue:null,description:"",name:"ry",required:!1,type:{name:"string | number | undefined"}},cx:{defaultValue:null,description:"",name:"cx",required:!1,type:{name:"string | number | undefined"}},cy:{defaultValue:null,description:"",name:"cy",required:!1,type:{name:"string | number | undefined"}},r:{defaultValue:null,description:"",name:"r",required:!1,type:{name:"string | number | undefined"}},gradientUnits:{defaultValue:null,description:"",name:"gradientUnits",required:!1,type:{name:'"userSpaceOnUse" | "objectBoundingBox" | undefined'}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}}}},{description:"",displayName:"Rect",methods:[],props:{x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},rx:{defaultValue:null,description:"",name:"rx",required:!1,type:{name:"string | number | undefined"}},ry:{defaultValue:null,description:"",name:"ry",required:!1,type:{name:"string | number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Stop",methods:[],props:{stopColor:{defaultValue:null,description:"",name:"stopColor",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},stopOpacity:{defaultValue:null,description:"",name:"stopOpacity",required:!1,type:{name:"string | number | undefined"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"string | number | undefined"}}}},{description:"",displayName:"Svg",methods:[],props:{width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},viewBox:{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string | undefined"}},preserveAspectRatio:{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string | undefined"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}},hitSlop:{defaultValue:null,description:"This defines how far a touch event can start away from the view.\nTypical interface guidelines recommend touch targets that are at least\n30 - 40 points/density-independent pixels. If a Touchable view has\na height of 20 the touchable height can be extended to 40 with\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\nNOTE The touch area never extends past the parent view bounds and\nthe Z-index of sibling views always takes precedence if a touch\nhits two overlapping views.",name:"hitSlop",required:!1,type:{name:"Insets | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},removeClippedSubviews:{defaultValue:null,description:"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).",name:"removeClippedSubviews",required:!1,type:{name:"boolean | undefined"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},collapsable:{defaultValue:null,description:"Views that are only used to layout their children or otherwise don't draw anything\nmay be automatically removed from the native hierarchy as an optimization.\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.",name:"collapsable",required:!1,type:{name:"boolean | undefined"}},needsOffscreenAlphaCompositing:{defaultValue:null,description:"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\nThe default (false) falls back to drawing the component and its children\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\n\nRendering offscreen to preserve correct alpha behavior is extremely expensive\nand hard to debug for non-native developers, which is why it is not turned on by default.\nIf you do need to enable this property for an animation,\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\nIf that property is enabled, this View will be rendered off-screen once,\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.",name:"needsOffscreenAlphaCompositing",required:!1,type:{name:"boolean | undefined"}},renderToHardwareTextureAndroid:{defaultValue:null,description:"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\n\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.",name:"renderToHardwareTextureAndroid",required:!1,type:{name:"boolean | undefined"}},accessibilityViewIsModal:{defaultValue:null,description:"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\n@platform ios",name:"accessibilityViewIsModal",required:!1,type:{name:"boolean | undefined"}},accessibilityActions:{defaultValue:null,description:"Provides an array of custom actions available for accessibility.\n@platform ios",name:"accessibilityActions",required:!1,type:{name:"string[] | undefined"}},onAccessibilityAction:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function\nwhen the user performs an accessibility custom action.\n@platform ios",name:"onAccessibilityAction",required:!1,type:{name:"(() => void) | undefined"}},shouldRasterizeIOS:{defaultValue:null,description:"Whether this view should be rendered as a bitmap before compositing.\n\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\nand quickly composite it during each frame.\n\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\nTest and measure when using this property.",name:"shouldRasterizeIOS",required:!1,type:{name:"boolean | undefined"}},isTVSelectable:{defaultValue:null,description:"*(Apple TV only)* When set to true, this view will be focusable\nand navigable using the Apple TV remote.\n@platform ios",name:"isTVSelectable",required:!1,type:{name:"boolean | undefined"}},hasTVPreferredFocus:{defaultValue:null,description:"*(Apple TV only)* May be set to true to force the Apple TV focus engine to move focus to this view.\n@platform ios",name:"hasTVPreferredFocus",required:!1,type:{name:"boolean | undefined"}},tvParallaxProperties:{defaultValue:null,description:"*(Apple TV only)* Object with properties to control Apple TV parallax effects.\n@platform ios",name:"tvParallaxProperties",required:!1,type:{name:"TVParallaxProperties | undefined"}},tvParallaxShiftDistanceX:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceX",required:!1,type:{name:"number | undefined"}},tvParallaxShiftDistanceY:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 2.0.\n@platform ios",name:"tvParallaxShiftDistanceY",required:!1,type:{name:"number | undefined"}},tvParallaxTiltAngle:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 0.05.\n@platform ios",name:"tvParallaxTiltAngle",required:!1,type:{name:"number | undefined"}},tvParallaxMagnification:{defaultValue:null,description:"*(Apple TV only)* May be used to change the appearance of the Apple TV parallax effect when this view goes in or out of focus.  Defaults to 1.0.\n@platform ios",name:"tvParallaxMagnification",required:!1,type:{name:"number | undefined"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}},{description:"",displayName:"Symbol",methods:[],props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},viewBox:{defaultValue:null,description:"",name:"viewBox",required:!1,type:{name:"string | undefined"}},preserveAspectRatio:{defaultValue:null,description:"",name:"preserveAspectRatio",required:!1,type:{name:"string | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}}}},{description:"",displayName:"TSpan",methods:[],props:{dx:{defaultValue:null,description:"",name:"dx",required:!1,type:{name:"string | number | undefined"}},dy:{defaultValue:null,description:"",name:"dy",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}},font:{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject | undefined"}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"italic" | "normal" | "oblique" | undefined'}},fontVariant:{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:'"normal" | "small-caps" | undefined'}},fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"bold" | "normal" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},fontStretch:{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:'"normal" | "wider" | "narrower" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded" | undefined'}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"string | number | undefined"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string | undefined"}},textAnchor:{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:'"start" | "middle" | "end" | undefined'}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:'"none" | "underline" | "overline" | "line-through" | "blink" | undefined'}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number | undefined"}},wordSpacing:{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"string | number | undefined"}},kerning:{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"string | number | undefined"}},fontVariantLigatures:{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:'"none" | "normal" | undefined'}}}},{description:"",displayName:"Text",methods:[],props:{dx:{defaultValue:null,description:"",name:"dx",required:!1,type:{name:"string | number | undefined"}},dy:{defaultValue:null,description:"",name:"dy",required:!1,type:{name:"string | number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},alignmentBaseline:{defaultValue:null,description:"",name:"alignmentBaseline",required:!1,type:{name:'"center" | "baseline" | "bottom" | "top" | "middle" | "text-bottom" | "alphabetic" | "ideographic" | "central" | "mathematical" | "text-top" | "text-before-edge" | "text-after-edge" | "before-edge" | "after-edge" | "hanging" | undefined'}},baselineShift:{defaultValue:null,description:"",name:"baselineShift",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:"string | number | undefined"}},lengthAdjust:{defaultValue:null,description:"",name:"lengthAdjust",required:!1,type:{name:'"spacing" | "spacingAndGlyphs" | undefined'}},textLength:{defaultValue:null,description:"",name:"textLength",required:!1,type:{name:"string | number | undefined"}},fontData:{defaultValue:null,description:"",name:"fontData",required:!1,type:{name:"{ [name: string]: any; } | null | undefined"}},fontFeatureSettings:{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}},font:{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject | undefined"}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"italic" | "normal" | "oblique" | undefined'}},fontVariant:{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:'"normal" | "small-caps" | undefined'}},fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"bold" | "normal" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},fontStretch:{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:'"normal" | "wider" | "narrower" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded" | undefined'}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"string | number | undefined"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string | undefined"}},textAnchor:{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:'"start" | "middle" | "end" | undefined'}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:'"none" | "underline" | "overline" | "line-through" | "blink" | undefined'}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number | undefined"}},wordSpacing:{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"string | number | undefined"}},kerning:{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"string | number | undefined"}},fontVariantLigatures:{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:'"none" | "normal" | undefined'}}}},{description:"",displayName:"TextPath",methods:[],props:{xlinkHref:{defaultValue:null,description:"",name:"xlinkHref",required:!1,type:{name:"string | undefined"}},href:{defaultValue:null,description:"",name:"href",required:!0,type:{name:"string"}},startOffset:{defaultValue:null,description:"",name:"startOffset",required:!1,type:{name:"string | number | undefined"}},method:{defaultValue:null,description:"",name:"method",required:!1,type:{name:'"stretch" | "align" | undefined'}},spacing:{defaultValue:null,description:"",name:"spacing",required:!1,type:{name:'"auto" | "exact" | undefined'}},midLine:{defaultValue:null,description:"",name:"midLine",required:!0,type:{name:"TextPathMidLine"}},alignmentBaseline:{defaultValue:null,description:"",name:"alignmentBaseline",required:!1,type:{name:'"center" | "baseline" | "bottom" | "top" | "middle" | "text-bottom" | "alphabetic" | "ideographic" | "central" | "mathematical" | "text-top" | "text-before-edge" | "text-after-edge" | "before-edge" | "after-edge" | "hanging" | undefined'}},baselineShift:{defaultValue:null,description:"",name:"baselineShift",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},verticalAlign:{defaultValue:null,description:"",name:"verticalAlign",required:!1,type:{name:"string | number | undefined"}},lengthAdjust:{defaultValue:null,description:"",name:"lengthAdjust",required:!1,type:{name:'"spacing" | "spacingAndGlyphs" | undefined'}},textLength:{defaultValue:null,description:"",name:"textLength",required:!1,type:{name:"string | number | undefined"}},fontData:{defaultValue:null,description:"",name:"fontData",required:!1,type:{name:"{ [name: string]: any; } | null | undefined"}},fontFeatureSettings:{defaultValue:null,description:"",name:"fontFeatureSettings",required:!1,type:{name:"string | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}},font:{defaultValue:null,description:"",name:"font",required:!1,type:{name:"FontObject | undefined"}},fontStyle:{defaultValue:null,description:"",name:"fontStyle",required:!1,type:{name:'"italic" | "normal" | "oblique" | undefined'}},fontVariant:{defaultValue:null,description:"",name:"fontVariant",required:!1,type:{name:'"normal" | "small-caps" | undefined'}},fontWeight:{defaultValue:null,description:"",name:"fontWeight",required:!1,type:{name:'"bold" | "normal" | "bolder" | "lighter" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},fontStretch:{defaultValue:null,description:"",name:"fontStretch",required:!1,type:{name:'"normal" | "wider" | "narrower" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded" | undefined'}},fontSize:{defaultValue:null,description:"",name:"fontSize",required:!1,type:{name:"string | number | undefined"}},fontFamily:{defaultValue:null,description:"",name:"fontFamily",required:!1,type:{name:"string | undefined"}},textAnchor:{defaultValue:null,description:"",name:"textAnchor",required:!1,type:{name:'"start" | "middle" | "end" | undefined'}},textDecoration:{defaultValue:null,description:"",name:"textDecoration",required:!1,type:{name:'"none" | "underline" | "overline" | "line-through" | "blink" | undefined'}},letterSpacing:{defaultValue:null,description:"",name:"letterSpacing",required:!1,type:{name:"string | number | undefined"}},wordSpacing:{defaultValue:null,description:"",name:"wordSpacing",required:!1,type:{name:"string | number | undefined"}},kerning:{defaultValue:null,description:"",name:"kerning",required:!1,type:{name:"string | number | undefined"}},fontVariantLigatures:{defaultValue:null,description:"",name:"fontVariantLigatures",required:!1,type:{name:'"none" | "normal" | undefined'}}}},{description:"",displayName:"Use",methods:[],props:{xlinkHref:{defaultValue:null,description:"",name:"xlinkHref",required:!1,type:{name:"string | undefined"}},href:{defaultValue:null,description:"",name:"href",required:!0,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"string | number | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}},{description:"",displayName:"Mask",methods:[],props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},x:{defaultValue:null,description:"",name:"x",required:!1,type:{name:"string | number | undefined"}},y:{defaultValue:null,description:"",name:"y",required:!1,type:{name:"string | number | undefined"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number | undefined"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number | undefined"}},maskTransform:{defaultValue:null,description:"",name:"maskTransform",required:!1,type:{name:"string | ReadonlyArray<number> | undefined"}},maskUnits:{defaultValue:null,description:"",name:"maskUnits",required:!1,type:{name:"EMaskUnits | undefined"}},maskContentUnits:{defaultValue:null,description:"",name:"maskContentUnits",required:!1,type:{name:"EMaskUnits | undefined"}},fill:{defaultValue:null,description:"",name:"fill",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},fillOpacity:{defaultValue:null,description:"",name:"fillOpacity",required:!1,type:{name:"string | number | undefined"}},fillRule:{defaultValue:null,description:"",name:"fillRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},stroke:{defaultValue:null,description:"",name:"stroke",required:!1,type:{name:"string | number | ReadonlyArray<number> | undefined"}},strokeWidth:{defaultValue:null,description:"",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeOpacity:{defaultValue:null,description:"",name:"strokeOpacity",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"",name:"strokeDasharray",required:!1,type:{name:"string | number | ReadonlyArray<ReactText> | undefined"}},strokeDashoffset:{defaultValue:null,description:"",name:"strokeDashoffset",required:!1,type:{name:"string | number | undefined"}},strokeLinecap:{defaultValue:null,description:"",name:"strokeLinecap",required:!1,type:{name:'"square" | "butt" | "round" | undefined'}},strokeLinejoin:{defaultValue:null,description:"",name:"strokeLinejoin",required:!1,type:{name:'"round" | "miter" | "bevel" | undefined'}},strokeMiterlimit:{defaultValue:null,description:"",name:"strokeMiterlimit",required:!1,type:{name:"string | number | undefined"}},clipRule:{defaultValue:null,description:"",name:"clipRule",required:!1,type:{name:'"evenodd" | "nonzero" | undefined'}},clipPath:{defaultValue:null,description:"",name:"clipPath",required:!1,type:{name:"string | undefined"}},transform:{defaultValue:null,description:"",name:"transform",required:!1,type:{name:"string | TransformObject | ReadonlyArray<number> | undefined"}},scale:{defaultValue:null,description:"",name:"scale",required:!1,type:{name:"string | number | undefined"}},scaleX:{defaultValue:null,description:"",name:"scaleX",required:!1,type:{name:"string | number | undefined"}},scaleY:{defaultValue:null,description:"",name:"scaleY",required:!1,type:{name:"string | number | undefined"}},rotate:{defaultValue:null,description:"",name:"rotate",required:!1,type:{name:"string | number | undefined"}},rotation:{defaultValue:null,description:"",name:"rotation",required:!1,type:{name:"string | number | undefined"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:"string | number | undefined"}},translateX:{defaultValue:null,description:"",name:"translateX",required:!1,type:{name:"string | number | undefined"}},translateY:{defaultValue:null,description:"",name:"translateY",required:!1,type:{name:"string | number | undefined"}},origin:{defaultValue:null,description:"",name:"origin",required:!1,type:{name:"string | number | undefined"}},originX:{defaultValue:null,description:"",name:"originX",required:!1,type:{name:"string | number | undefined"}},originY:{defaultValue:null,description:"",name:"originY",required:!1,type:{name:"string | number | undefined"}},skew:{defaultValue:null,description:"",name:"skew",required:!1,type:{name:"string | number | undefined"}},skewX:{defaultValue:null,description:"",name:"skewX",required:!1,type:{name:"string | number | undefined"}},skewY:{defaultValue:null,description:"",name:"skewY",required:!1,type:{name:"string | number | undefined"}},vectorEffect:{defaultValue:null,description:"",name:"vectorEffect",required:!1,type:{name:'"none" | "inherit" | "default" | "non-scaling-stroke" | "nonScalingStroke" | "uri" | undefined'}},pointerEvents:{defaultValue:null,description:"",name:"pointerEvents",required:!1,type:{name:'"auto" | "none" | "box-none" | "box-only" | undefined'}},onStartShouldSetResponder:{defaultValue:null,description:"A view can become the touch responder by implementing the correct negotiation methods.\nThere are two methods to ask the view if it wants to become responder:\nDoes this view want to become responder on the start of a touch?",name:"onStartShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponder:{defaultValue:null,description:'Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?',name:"onMoveShouldSetResponder",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderEnd:{defaultValue:null,description:"If the View returns true and attempts to become the responder, one of the following will happen:",name:"onResponderEnd",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderGrant:{defaultValue:null,description:"The View is now responding for touch events.\nThis is the time to highlight and show the user what is happening",name:"onResponderGrant",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderReject:{defaultValue:null,description:"Something else is the responder right now and will not release it",name:"onResponderReject",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderMove:{defaultValue:null,description:"If the view is responding, the following handlers can be called:\nThe user is moving their finger",name:"onResponderMove",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderRelease:{defaultValue:null,description:'Fired at the end of the touch, ie "touchUp"',name:"onResponderRelease",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderStart:{defaultValue:null,description:"",name:"onResponderStart",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onResponderTerminationRequest:{defaultValue:null,description:"Something else wants to become responder.\nShould this view release the responder? Returning true allows release",name:"onResponderTerminationRequest",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onResponderTerminate:{defaultValue:null,description:"The responder has been taken from the View.\nMight be taken by other views after a call to onResponderTerminationRequest,\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)",name:"onResponderTerminate",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onStartShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onStartShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},onMoveShouldSetResponderCapture:{defaultValue:null,description:"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\nwhere the deepest node is called first.\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\n\nHowever, sometimes a parent will want to make sure that it becomes responder.\nThis can be handled by using the capture phase.\nBefore the responder system bubbles up from the deepest component,\nit will do a capture phase, firing on*ShouldSetResponderCapture.\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\nit should have a onStartShouldSetResponderCapture handler which returns true.",name:"onMoveShouldSetResponderCapture",required:!1,type:{name:"((event: GestureResponderEvent) => boolean) | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"",name:"onPress",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressIn:{defaultValue:null,description:"",name:"onPressIn",required:!1,type:{name:"((event: any) => any) | undefined"}},onPressOut:{defaultValue:null,description:"",name:"onPressOut",required:!1,type:{name:"((event: any) => any) | undefined"}},onLongPress:{defaultValue:null,description:"",name:"onLongPress",required:!1,type:{name:"((event: any) => any) | undefined"}},delayPressIn:{defaultValue:null,description:"",name:"delayPressIn",required:!1,type:{name:"number | undefined"}},delayPressOut:{defaultValue:null,description:"",name:"delayPressOut",required:!1,type:{name:"number | undefined"}},delayLongPress:{defaultValue:null,description:"",name:"delayLongPress",required:!1,type:{name:"number | undefined"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Switch/Switch.tsx",value:[{description:"",displayName:"Switch",methods:[],props:{value:{defaultValue:{value:"false"},description:"When true, will display as switched on.",name:"value",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:"false"},description:"When true, the switch is disabled.",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},onPress:{defaultValue:null,description:"Called when checkbox is pressed.",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onIcon:{defaultValue:null,description:"Replace the icon when switch is on",name:"onIcon",required:!1,type:{name:"ReactNode"}},offIcon:{defaultValue:null,description:"Replace the icon when switch is off",name:"offIcon",required:!1,type:{name:"ReactNode"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessible:{defaultValue:{value:"true"},description:"When true, indicates that the view is an accessibility element.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetSwitchStyles, DeepPartial<SwitchStyles>> | undefined"}}}}]},{key:"src/components/Tabs/Tab.tsx",value:[{description:"",displayName:"Tab",methods:[],props:{index:{defaultValue:null,description:"Index of the tab.",name:"index",required:!1,type:{name:"number | undefined"}},onPress:{defaultValue:null,description:"Called when tab is pressed.",name:"onPress",required:!1,type:{name:"((index?: number | undefined) => void) | undefined"}},isActive:{defaultValue:{value:"false"},description:"When true, the tab would be highlighted as active.",name:"isActive",required:!1,type:{name:"boolean | undefined"}},shouldStretch:{defaultValue:{value:"true"},description:"When true, the tab will fill empty spaces",name:"shouldStretch",required:!1,type:{name:"boolean | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetTabStyles, DeepPartial<TabStyles>> | undefined"}},color:{defaultValue:{value:'"default"'},description:"The color of the button.",name:"color",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:'"medium"'},description:"The size of the button.",name:"size",required:!1,type:{name:'"small" | "medium" | "large" | undefined'}},isDisabled:{defaultValue:{value:"false"},description:"When true, the button is disabled. isLoading also sets the button to disabled.",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},accessible:{defaultValue:{value:"true"},description:"When true, indicates that the view is an accessibility element.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Label for screen readers",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityHint:{defaultValue:null,description:"Hint for screen readers",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},title:{defaultValue:null,description:"Title of the button",name:"title",required:!1,type:{name:"string | undefined"}},icon:{defaultValue:null,description:"Icon in place of title",name:"icon",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:{value:'"primary"'},description:"The appearance of the button.",name:"appearance",required:!1,type:{name:'"primary" | "minimal" | "outline" | undefined'}},isLoading:{defaultValue:{value:"false"},description:"When true, show a loading spinner before the title. This also disables the button.",name:"isLoading",required:!1,type:{name:"boolean | undefined"}},iconBefore:{defaultValue:null,description:"Sets an icon before the text.",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"Sets an icon after the text.",name:"iconAfter",required:!1,type:{name:"ReactNode"}},iconLoading:{defaultValue:null,description:"Sets an icon at loading state.",name:"iconLoading",required:!1,type:{name:"ReactNode"}}}}]},{key:"src/components/Tabs/Tabs.tsx",value:[{description:"",displayName:"Tabs",methods:[],props:{activeTabIndex:{defaultValue:null,description:"Current active tab index.",name:"activeTabIndex",required:!1,type:{name:"number | undefined"}},onTabPress:{defaultValue:null,description:"Called when a Tab is pressed",name:"onTabPress",required:!0,type:{name:"(index?: number | undefined) => void"}},children:{defaultValue:null,description:"`Tab` components",name:"children",required:!0,type:{name:"ReactElement<TabProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | ReactElement<...>[]"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetTabsStyles, DeepPartial<TabsStyles>> | undefined"}}}}]},{key:"src/components/Toast/Toast.tsx",value:[{description:"",displayName:"Toast",methods:[],props:{id:{defaultValue:null,description:"(Ignore) Assign an id to the toast so you can remove it later.",name:"id",required:!0,type:{name:"string"}},onRemove:{defaultValue:null,description:"(Ignore) Callback invoked when the duration is up.",name:"onRemove",required:!0,type:{name:"() => void"}},duration:{defaultValue:{value:"3000"},description:"Duration for how long the toast should stay active.",name:"duration",required:!1,type:{name:"number | undefined"}},component:{defaultValue:null,description:"Custom component to override the entire toast.",name:"component",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"Title of the alert.",name:"title",required:!1,type:{name:"string | undefined"}},description:{defaultValue:null,description:"Description of the alert.",name:"description",required:!1,type:{name:"string | undefined"}},icon:{defaultValue:null,description:"Replace the icon of the alert on the left. Set to null to remove icon",name:"icon",required:!1,type:{name:"ReactNode"}},intent:{defaultValue:{value:"info"},description:"Intent of the alert.",name:"intent",required:!1,type:{name:'"danger" | "info" | "success" | "warning" | undefined'}},actionNode:{defaultValue:{value:"null"},description:"Component displayed on the right side of the alert.",name:"actionNode",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>> | undefined"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}}}}]},{key:"src/components/Toast/ToastContext.ts",value:[]},{key:"src/components/Toast/ToastProvider.tsx",value:[{description:"",displayName:"ToastProvider",methods:[],props:{position:{defaultValue:{value:"top"},description:"Position from which to display the toast from",name:"position",required:!1,type:{name:'"bottom" | "top" | undefined'}},offset:{defaultValue:{value:"16"},description:"Offset toast from the edge of the container (screen).",name:"offset",required:!1,type:{name:"number | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>> | undefined"}}}}]},{key:"src/components/Typography/Heading.tsx",value:[{description:"",displayName:"Heading",methods:[],props:{children:{defaultValue:null,description:"Text content",name:"children",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:'"medium"'},description:"Size of the heading.",name:"size",required:!1,type:{name:"string | number | undefined"}},align:{defaultValue:{value:'"left"'},description:"Alignment of the heading.",name:"align",required:!1,type:{name:'"center" | "auto" | "right" | "left" | "justify" | undefined'}},color:{defaultValue:{value:'"default"'},description:"Color of the heading.",name:"color",required:!1,type:{name:"string | undefined"}},weight:{defaultValue:{value:"headingSize.fontWeight"},description:"Weight of the heading.",name:"weight",required:!1,type:{name:'"bold" | "light" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},accessibilityLevel:{defaultValue:null,description:"(Web only): Corresponding h1, h2, h3... levels",name:"accessibilityLevel",required:!1,type:{name:"1 | 2 | 3 | 4 | 5 | 6 | undefined"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>> | undefined"}},allowFontScaling:{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean | undefined"}},ellipsizeMode:{defaultValue:null,description:'This can be one of the following values:\n\n- `head` - The line is displayed so that the end fits in the container and the missing text\nat the beginning of the line is indicated by an ellipsis glyph. e.g., "...wxyz"\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\nmissing text in the middle is indicated by an ellipsis glyph. "ab...yz"\n- `tail` - The line is displayed so that the beginning fits in the container and the\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., "abcd..."\n- `clip` - Lines are not drawn past the edge of the text container.\n\nThe default is `tail`.\n\n`numberOfLines` must be set in conjunction with this prop.\n\n> `clip` is working only for iOS',name:"ellipsizeMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},lineBreakMode:{defaultValue:null,description:"Line Break mode. Works only with numberOfLines.\nclip is working only for iOS",name:"lineBreakMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},numberOfLines:{defaultValue:null,description:"Used to truncate the text with an ellipsis after computing the text\nlayout, including line wrapping, such that the total number of lines\ndoes not exceed this number.\n\nThis prop is commonly used with `ellipsizeMode`.",name:"numberOfLines",required:!1,type:{name:"number | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},onPress:{defaultValue:null,description:"This function is called on press.\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onLongPress:{defaultValue:null,description:"This function is called on long press.\ne.g., `onLongPress={this.increaseSize}>``\n     *",name:"onLongPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},style:{defaultValue:null,description:"@see https://facebook.github.io/react-native/docs/text.html#style",name:"style",required:!1,type:{name:"StyleProp<TextStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},maxFontSizeMultiplier:{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number | null | undefined"}},adjustsFontSizeToFit:{defaultValue:null,description:"Specifies whether font should be scaled down automatically to fit given style constraints.",name:"adjustsFontSizeToFit",required:!1,type:{name:"boolean | undefined"}},minimumFontScale:{defaultValue:null,description:"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).",name:"minimumFontScale",required:!1,type:{name:"number | undefined"}},suppressHighlighting:{defaultValue:null,description:"When `true`, no visual change is made when text is pressed down. By\ndefault, a gray oval highlights the text on press down.",name:"suppressHighlighting",required:!1,type:{name:"boolean | undefined"}},selectable:{defaultValue:null,description:"Lets the user select text, to use the native copy and paste functionality.",name:"selectable",required:!1,type:{name:"boolean | undefined"}},selectionColor:{defaultValue:null,description:"The highlight color of the text.",name:"selectionColor",required:!1,type:{name:"string | undefined"}},textBreakStrategy:{defaultValue:null,description:"Set text break strategy on Android API Level 23+\ndefault is `highQuality`.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced" | undefined'}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Typography/Label.tsx",value:[{description:"",displayName:"Label",methods:[],props:{getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetLabelStyles, DeepPartial<LabelStyles>> | undefined"}},size:{defaultValue:{value:'"medium"'},description:"Size of the text.",name:"size",required:!1,type:{name:'number | "small" | "medium" | "large" | "xsmall" | undefined'}},color:{defaultValue:{value:'"default"'},description:"Color of the text.",name:"color",required:!1,type:{name:"string | undefined"}},align:{defaultValue:{value:'"left"'},description:"Alignment of the text.",name:"align",required:!1,type:{name:'"center" | "auto" | "right" | "left" | "justify" | undefined'}},transform:{defaultValue:null,description:"Text transformations.",name:"transform",required:!1,type:{name:"TextTransform"}},weight:{defaultValue:{value:"textSize.fontWeight"},description:"Weight of the text.",name:"weight",required:!1,type:{name:'"bold" | "light" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},isItalic:{defaultValue:{value:"false"},description:"When true, displays the text in italics.",name:"isItalic",required:!1,type:{name:"boolean | undefined"}},children:{defaultValue:null,description:"Text content",name:"children",required:!1,type:{name:"ReactNode"}},allowFontScaling:{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean | undefined"}},ellipsizeMode:{defaultValue:null,description:'This can be one of the following values:\n\n- `head` - The line is displayed so that the end fits in the container and the missing text\nat the beginning of the line is indicated by an ellipsis glyph. e.g., "...wxyz"\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\nmissing text in the middle is indicated by an ellipsis glyph. "ab...yz"\n- `tail` - The line is displayed so that the beginning fits in the container and the\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., "abcd..."\n- `clip` - Lines are not drawn past the edge of the text container.\n\nThe default is `tail`.\n\n`numberOfLines` must be set in conjunction with this prop.\n\n> `clip` is working only for iOS',name:"ellipsizeMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},lineBreakMode:{defaultValue:null,description:"Line Break mode. Works only with numberOfLines.\nclip is working only for iOS",name:"lineBreakMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},numberOfLines:{defaultValue:null,description:"Used to truncate the text with an ellipsis after computing the text\nlayout, including line wrapping, such that the total number of lines\ndoes not exceed this number.\n\nThis prop is commonly used with `ellipsizeMode`.",name:"numberOfLines",required:!1,type:{name:"number | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},onPress:{defaultValue:null,description:"This function is called on press.\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onLongPress:{defaultValue:null,description:"This function is called on long press.\ne.g., `onLongPress={this.increaseSize}>``\n     *",name:"onLongPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},style:{defaultValue:null,description:"@see https://facebook.github.io/react-native/docs/text.html#style",name:"style",required:!1,type:{name:"StyleProp<TextStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},maxFontSizeMultiplier:{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number | null | undefined"}},adjustsFontSizeToFit:{defaultValue:null,description:"Specifies whether font should be scaled down automatically to fit given style constraints.",name:"adjustsFontSizeToFit",required:!1,type:{name:"boolean | undefined"}},minimumFontScale:{defaultValue:null,description:"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).",name:"minimumFontScale",required:!1,type:{name:"number | undefined"}},suppressHighlighting:{defaultValue:null,description:"When `true`, no visual change is made when text is pressed down. By\ndefault, a gray oval highlights the text on press down.",name:"suppressHighlighting",required:!1,type:{name:"boolean | undefined"}},selectable:{defaultValue:null,description:"Lets the user select text, to use the native copy and paste functionality.",name:"selectable",required:!1,type:{name:"boolean | undefined"}},selectionColor:{defaultValue:null,description:"The highlight color of the text.",name:"selectionColor",required:!1,type:{name:"string | undefined"}},textBreakStrategy:{defaultValue:null,description:"Set text break strategy on Android API Level 23+\ndefault is `highQuality`.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced" | undefined'}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Typography/Paragraph.tsx",value:[{description:"",displayName:"Paragraph",methods:[],props:{size:{defaultValue:{value:'"medium"'},description:"Size of the paragraph.",name:"size",required:!1,type:{name:'number | "small" | "medium" | "large" | "xsmall" | undefined'}},color:{defaultValue:{value:'"default"'},description:"Color of the paragraph.",name:"color",required:!1,type:{name:"string | undefined"}},align:{defaultValue:{value:'"left"'},description:"Alignment of the paragraph.",name:"align",required:!1,type:{name:'"center" | "auto" | "right" | "left" | "justify" | undefined'}},weight:{defaultValue:{value:"paragraphSize.fontWeight"},description:"Weight of the paragraph.",name:"weight",required:!1,type:{name:'"bold" | "light" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},children:{defaultValue:null,description:"Text content",name:"children",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetParagraphStyles, DeepPartial<ParagraphStyles>> | undefined"}},allowFontScaling:{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean | undefined"}},ellipsizeMode:{defaultValue:null,description:'This can be one of the following values:\n\n- `head` - The line is displayed so that the end fits in the container and the missing text\nat the beginning of the line is indicated by an ellipsis glyph. e.g., "...wxyz"\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\nmissing text in the middle is indicated by an ellipsis glyph. "ab...yz"\n- `tail` - The line is displayed so that the beginning fits in the container and the\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., "abcd..."\n- `clip` - Lines are not drawn past the edge of the text container.\n\nThe default is `tail`.\n\n`numberOfLines` must be set in conjunction with this prop.\n\n> `clip` is working only for iOS',name:"ellipsizeMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},lineBreakMode:{defaultValue:null,description:"Line Break mode. Works only with numberOfLines.\nclip is working only for iOS",name:"lineBreakMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},numberOfLines:{defaultValue:null,description:"Used to truncate the text with an ellipsis after computing the text\nlayout, including line wrapping, such that the total number of lines\ndoes not exceed this number.\n\nThis prop is commonly used with `ellipsizeMode`.",name:"numberOfLines",required:!1,type:{name:"number | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},onPress:{defaultValue:null,description:"This function is called on press.\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onLongPress:{defaultValue:null,description:"This function is called on long press.\ne.g., `onLongPress={this.increaseSize}>``\n     *",name:"onLongPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},style:{defaultValue:null,description:"@see https://facebook.github.io/react-native/docs/text.html#style",name:"style",required:!1,type:{name:"StyleProp<TextStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},maxFontSizeMultiplier:{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number | null | undefined"}},adjustsFontSizeToFit:{defaultValue:null,description:"Specifies whether font should be scaled down automatically to fit given style constraints.",name:"adjustsFontSizeToFit",required:!1,type:{name:"boolean | undefined"}},minimumFontScale:{defaultValue:null,description:"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).",name:"minimumFontScale",required:!1,type:{name:"number | undefined"}},suppressHighlighting:{defaultValue:null,description:"When `true`, no visual change is made when text is pressed down. By\ndefault, a gray oval highlights the text on press down.",name:"suppressHighlighting",required:!1,type:{name:"boolean | undefined"}},selectable:{defaultValue:null,description:"Lets the user select text, to use the native copy and paste functionality.",name:"selectable",required:!1,type:{name:"boolean | undefined"}},selectionColor:{defaultValue:null,description:"The highlight color of the text.",name:"selectionColor",required:!1,type:{name:"string | undefined"}},textBreakStrategy:{defaultValue:null,description:"Set text break strategy on Android API Level 23+\ndefault is `highQuality`.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced" | undefined'}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]},{key:"src/components/Typography/Text.tsx",value:[{description:"",displayName:"Text",methods:[],props:{size:{defaultValue:{value:'"medium"'},description:"Size of the text.",name:"size",required:!1,type:{name:'number | "small" | "medium" | "large" | "xsmall" | undefined'}},color:{defaultValue:{value:'"default"'},description:"Color of the text.",name:"color",required:!1,type:{name:"string | undefined"}},align:{defaultValue:{value:'"left"'},description:"Alignment of the text.",name:"align",required:!1,type:{name:'"center" | "auto" | "right" | "left" | "justify" | undefined'}},transform:{defaultValue:null,description:"Text transformations.",name:"transform",required:!1,type:{name:"TextTransform"}},weight:{defaultValue:{value:"textSize.fontWeight"},description:"Weight of the text.",name:"weight",required:!1,type:{name:'"bold" | "light" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined'}},isItalic:{defaultValue:{value:"false"},description:"When true, displays the text in italics.",name:"isItalic",required:!1,type:{name:"boolean | undefined"}},children:{defaultValue:null,description:"Text content",name:"children",required:!1,type:{name:"ReactNode"}},getStyles:{defaultValue:null,description:"Callback to get element styles.",name:"getStyles",required:!1,type:{name:"ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>> | undefined"}},allowFontScaling:{defaultValue:null,description:"Specifies whether fonts should scale to respect Text Size accessibility settings.\nThe default is `true`.",name:"allowFontScaling",required:!1,type:{name:"boolean | undefined"}},ellipsizeMode:{defaultValue:null,description:'This can be one of the following values:\n\n- `head` - The line is displayed so that the end fits in the container and the missing text\nat the beginning of the line is indicated by an ellipsis glyph. e.g., "...wxyz"\n- `middle` - The line is displayed so that the beginning and end fit in the container and the\nmissing text in the middle is indicated by an ellipsis glyph. "ab...yz"\n- `tail` - The line is displayed so that the beginning fits in the container and the\nmissing text at the end of the line is indicated by an ellipsis glyph. e.g., "abcd..."\n- `clip` - Lines are not drawn past the edge of the text container.\n\nThe default is `tail`.\n\n`numberOfLines` must be set in conjunction with this prop.\n\n> `clip` is working only for iOS',name:"ellipsizeMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},lineBreakMode:{defaultValue:null,description:"Line Break mode. Works only with numberOfLines.\nclip is working only for iOS",name:"lineBreakMode",required:!1,type:{name:'"middle" | "head" | "tail" | "clip" | undefined'}},numberOfLines:{defaultValue:null,description:"Used to truncate the text with an ellipsis after computing the text\nlayout, including line wrapping, such that the total number of lines\ndoes not exceed this number.\n\nThis prop is commonly used with `ellipsizeMode`.",name:"numberOfLines",required:!1,type:{name:"number | undefined"}},onLayout:{defaultValue:null,description:"Invoked on mount and layout changes with\n\n{nativeEvent: { layout: {x, y, width, height}}}.",name:"onLayout",required:!1,type:{name:"((event: LayoutChangeEvent) => void) | undefined"}},onPress:{defaultValue:null,description:"This function is called on press.\nText intrinsically supports press handling with a default highlight state (which can be disabled with suppressHighlighting).",name:"onPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},onLongPress:{defaultValue:null,description:"This function is called on long press.\ne.g., `onLongPress={this.increaseSize}>``\n     *",name:"onLongPress",required:!1,type:{name:"((event: GestureResponderEvent) => void) | undefined"}},style:{defaultValue:null,description:"@see https://facebook.github.io/react-native/docs/text.html#style",name:"style",required:!1,type:{name:"StyleProp<TextStyle>"}},testID:{defaultValue:null,description:"Used to locate this view in end-to-end tests.",name:"testID",required:!1,type:{name:"string | undefined"}},nativeID:{defaultValue:null,description:"Used to reference react managed views from native code.",name:"nativeID",required:!1,type:{name:"string | undefined"}},maxFontSizeMultiplier:{defaultValue:null,description:"Specifies largest possible scale a font can reach when allowFontScaling is enabled. Possible values:\n- null/undefined (default): inherit from the parent node or the global default (0)\n- 0: no max, ignore parent/global default\n- >= 1: sets the maxFontSizeMultiplier of this node to this value",name:"maxFontSizeMultiplier",required:!1,type:{name:"number | null | undefined"}},adjustsFontSizeToFit:{defaultValue:null,description:"Specifies whether font should be scaled down automatically to fit given style constraints.",name:"adjustsFontSizeToFit",required:!1,type:{name:"boolean | undefined"}},minimumFontScale:{defaultValue:null,description:"Specifies smallest possible scale a font can reach when adjustsFontSizeToFit is enabled. (values 0.01-1.0).",name:"minimumFontScale",required:!1,type:{name:"number | undefined"}},suppressHighlighting:{defaultValue:null,description:"When `true`, no visual change is made when text is pressed down. By\ndefault, a gray oval highlights the text on press down.",name:"suppressHighlighting",required:!1,type:{name:"boolean | undefined"}},selectable:{defaultValue:null,description:"Lets the user select text, to use the native copy and paste functionality.",name:"selectable",required:!1,type:{name:"boolean | undefined"}},selectionColor:{defaultValue:null,description:"The highlight color of the text.",name:"selectionColor",required:!1,type:{name:"string | undefined"}},textBreakStrategy:{defaultValue:null,description:"Set text break strategy on Android API Level 23+\ndefault is `highQuality`.",name:"textBreakStrategy",required:!1,type:{name:'"simple" | "highQuality" | "balanced" | undefined'}},accessible:{defaultValue:null,description:"When true, indicates that the view is an accessibility element.\nBy default, all the touchable elements are accessible.",name:"accessible",required:!1,type:{name:"boolean | undefined"}},accessibilityLabel:{defaultValue:null,description:"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.",name:"accessibilityLabel",required:!1,type:{name:"string | undefined"}},accessibilityRole:{defaultValue:null,description:"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.",name:"accessibilityRole",required:!1,type:{name:'"none" | "button" | "link" | "search" | "image" | "keyboardkey" | "text" | "adjustable" | "header" | "summary" | "imagebutton" | undefined'}},accessibilityStates:{defaultValue:null,description:"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.",name:"accessibilityStates",required:!1,type:{name:"AccessibilityState[] | undefined"}},accessibilityHint:{defaultValue:null,description:"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.",name:"accessibilityHint",required:!1,type:{name:"string | undefined"}},accessibilityComponentType:{defaultValue:null,description:"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \u201cbutton\u201d).\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\nprovide a bit more context for TalkBack. To do so, you must specify the \u2018accessibilityComponentType\u2019 property\nfor any UI component. For instances, we support \u2018button\u2019, \u2018radiobutton_checked\u2019 and \u2018radiobutton_unchecked\u2019 and so on.\n@platform android",name:"accessibilityComponentType",required:!1,type:{name:'"none" | "button" | "radiobutton_checked" | "radiobutton_unchecked" | undefined'}},accessibilityLiveRegion:{defaultValue:null,description:"Indicates to accessibility services whether the user should be notified when this view changes.\nWorks for Android API >= 19 only.\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\n@platform android",name:"accessibilityLiveRegion",required:!1,type:{name:'"none" | "polite" | "assertive" | undefined'}},importantForAccessibility:{defaultValue:null,description:"Controls how view is important for accessibility which is if it fires accessibility events\nand if it is reported to accessibility services that query the screen.\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\n\nPossible values:\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\n      'yes' - The view is important for accessibility.\n      'no' - The view is not important for accessibility.\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.",name:"importantForAccessibility",required:!1,type:{name:'"auto" | "yes" | "no" | "no-hide-descendants" | undefined'}},accessibilityElementsHidden:{defaultValue:null,description:"A Boolean value indicating whether the accessibility elements contained within this accessibility element\nare hidden to the screen reader.\n@platform ios",name:"accessibilityElementsHidden",required:!1,type:{name:"boolean | undefined"}},accessibilityTraits:{defaultValue:null,description:"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\n@platform ios",name:"accessibilityTraits",required:!1,type:{name:'"none" | "disabled" | "button" | "link" | "search" | "image" | "text" | "adjustable" | "header" | "summary" | "selected" | "plays" | "key" | "frequentUpdates" | "startsMedia" | "allowsDirectInteraction" | "pageTurn" | AccessibilityTrait[] | undefined'}},onAccessibilityTap:{defaultValue:null,description:"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\n@platform ios",name:"onAccessibilityTap",required:!1,type:{name:"(() => void) | undefined"}},onMagicTap:{defaultValue:null,description:"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\n@platform ios",name:"onMagicTap",required:!1,type:{name:"(() => void) | undefined"}},accessibilityIgnoresInvertColors:{defaultValue:null,description:"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\n@platform ios",name:"accessibilityIgnoresInvertColors",required:!1,type:{name:"boolean | undefined"}}}}]}],entries:[{key:"docs/Contributing.mdx",value:{name:"Contributing",order:100,route:"/paramount/contributing",id:"b51efe4bfa8b3527bbe24a2caf0d7bdd",filepath:"docs/Contributing.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/docs/Contributing.mdx",slug:"docs-contributing",menu:"",headings:[{slug:"contributing",depth:1,value:"Contributing"},{slug:"pull-requests",depth:2,value:"Pull requests"},{slug:"development-for-react-native",depth:2,value:"Development for React Native"},{slug:"development-for-react-web",depth:2,value:"Development for React Web"},{slug:"making-changes",depth:2,value:"Making changes"},{slug:"running-tests",depth:2,value:"Running Tests"}]}},{key:"docs/Customization.mdx",value:{name:"Customization",order:90,id:"69d985a1321a38531948287b4a488518",filepath:"docs/Customization.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/docs/Customization.mdx",slug:"docs-customization",route:"/paramount/docs-customization",menu:"",headings:[{slug:"customization",depth:1,value:"Customization"},{slug:"look-and-feel",depth:2,value:"Look and Feel"},{slug:"components",depth:2,value:"Components"},{slug:"from-themeprovider",depth:3,value:"From ThemeProvider"},{slug:"per-instance",depth:3,value:"Per instance"},{slug:"usage",depth:2,value:"Usage"},{slug:"options",depth:2,value:"Options"}]}},{key:"docs/GettingStarted.mdx",value:{name:"Getting Started",order:95,id:"e07c692a8ffa2434282f2c51835c957f",filepath:"docs/GettingStarted.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/docs/GettingStarted.mdx",slug:"docs-getting-started",route:"/paramount/docs-getting-started",menu:"",headings:[{slug:"getting-started",depth:1,value:"Getting started"},{slug:"install",depth:2,value:"Install"},{slug:"setup-on-web",depth:2,value:"Setup on Web"},{slug:"setup-on-native",depth:2,value:"Setup on Native"},{slug:"usage",depth:2,value:"Usage"}]}},{key:"docs/Introduction.mdx",value:{name:"Introduction",order:100,route:"/paramount/",id:"c15c39e1d1431a3c37997b39e9e6d8fd",filepath:"docs/Introduction.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/docs/Introduction.mdx",slug:"docs-introduction",menu:"",headings:[{slug:"paramount",depth:1,value:"Paramount"},{slug:"warning",depth:2,value:"Warning"}]}},{key:"src/components/Alert/Alert.mdx",value:{name:"Alert",menu:"Components",id:"9c91e8af3f0bac2312d1cef1739af53e",filepath:"src/components/Alert/Alert.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Alert/Alert.mdx",slug:"src-components-alert-alert",route:"/paramount/src-components-alert-alert",headings:[{slug:"alert",depth:1,value:"Alert"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Avatar/Avatar.mdx",value:{name:"Avatar",menu:"Components",id:"9a79e9d26da01020ba207ec130a4a832",filepath:"src/components/Avatar/Avatar.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Avatar/Avatar.mdx",slug:"src-components-avatar-avatar",route:"/paramount/src-components-avatar-avatar",headings:[{slug:"avatar",depth:1,value:"Avatar"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Badge/Badge.mdx",value:{name:"Badge",menu:"Components",id:"a8a011343ed1ed523d69e226b479ce38",filepath:"src/components/Badge/Badge.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Badge/Badge.mdx",slug:"src-components-badge-badge",route:"/paramount/src-components-badge-badge",headings:[{slug:"badge",depth:1,value:"Badge"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Box/Box.mdx",value:{name:"Box",menu:"Components",id:"307c1b3e7f58af817d97ef7b9cae52ba",filepath:"src/components/Box/Box.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Box/Box.mdx",slug:"src-components-box-box",route:"/paramount/src-components-box-box",headings:[{slug:"box",depth:1,value:"Box"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"}]}},{key:"src/components/Button/Button.mdx",value:{name:"Button",menu:"Components",id:"2b773349a016959194c905ce6ad9d2d4",filepath:"src/components/Button/Button.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Button/Button.mdx",slug:"src-components-button-button",route:"/paramount/src-components-button-button",headings:[{slug:"button",depth:1,value:"Button"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Checkbox/Checkbox.mdx",value:{name:"Checkbox",menu:"Components",id:"6b594e68467646bd7b8dd84ff8303acc",filepath:"src/components/Checkbox/Checkbox.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Checkbox/Checkbox.mdx",slug:"src-components-checkbox-checkbox",route:"/paramount/src-components-checkbox-checkbox",headings:[{slug:"checkbox",depth:1,value:"Checkbox"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Collapsible/Collapsible.mdx",value:{name:"Collapsible",menu:"Components",id:"e11f69d6d379bda2c76826297f0efefa",filepath:"src/components/Collapsible/Collapsible.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Collapsible/Collapsible.mdx",slug:"src-components-collapsible-collapsible",route:"/paramount/src-components-collapsible-collapsible",headings:[{slug:"collapsible",depth:1,value:"Collapsible"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Counter/Counter.mdx",value:{name:"Counter",menu:"Components",id:"0b8a16fc2870210e3f6ad997ae2d24f8",filepath:"src/components/Counter/Counter.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Counter/Counter.mdx",slug:"src-components-counter-counter",route:"/paramount/src-components-counter-counter",headings:[{slug:"counter",depth:1,value:"Counter"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Dialog/Dialog.mdx",value:{name:"Dialog",menu:"Components",id:"f15f50ad1e0744e1fc72901020464ecf",filepath:"src/components/Dialog/Dialog.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Dialog/Dialog.mdx",slug:"src-components-dialog-dialog",route:"/paramount/src-components-dialog-dialog",headings:[{slug:"dialog",depth:1,value:"Dialog"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Divider/Divider.mdx",value:{name:"Divider",menu:"Components",id:"7cf17c44622a90ce67c71c4edd220189",filepath:"src/components/Divider/Divider.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Divider/Divider.mdx",slug:"src-components-divider-divider",route:"/paramount/src-components-divider-divider",headings:[{slug:"divider",depth:1,value:"Divider"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Drawer/Drawer.mdx",value:{name:"Drawer",menu:"Components",id:"e0358ef6fe96debfdede78b2ff2bfb3d",filepath:"src/components/Drawer/Drawer.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Drawer/Drawer.mdx",slug:"src-components-drawer-drawer",route:"/paramount/src-components-drawer-drawer",headings:[{slug:"drawer",depth:1,value:"Drawer"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Form/FormField.mdx",value:{name:"FormField",menu:"Components",id:"10f00b9b4c8fde80eca509cfcdd75d85",filepath:"src/components/Form/FormField.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Form/FormField.mdx",slug:"src-components-form-form-field",route:"/paramount/src-components-form-form-field",headings:[{slug:"formfield",depth:1,value:"FormField"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Icon/Icon.mdx",value:{name:"Icon",menu:"Components",id:"e3fc531106e64472fee730eea48e21ec",filepath:"src/components/Icon/Icon.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Icon/Icon.mdx",slug:"src-components-icon-icon",route:"/paramount/src-components-icon-icon",headings:[{slug:"icon",depth:1,value:"Icon"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"}]}},{key:"src/components/Inputs/TextInput.mdx",value:{name:"TextInput",menu:"Components",id:"abfbe58c5b551ae94d87d75b47b2355c",filepath:"src/components/Inputs/TextInput.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Inputs/TextInput.mdx",slug:"src-components-inputs-text-input",route:"/paramount/src-components-inputs-text-input",headings:[{slug:"textinput",depth:1,value:"TextInput"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/KitchenSink/KitchenSink.mdx",value:{name:"KitchenSink",menu:"Components",id:"337517c0ddc6acfed4fa816b8febe8f7",filepath:"src/components/KitchenSink/KitchenSink.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/KitchenSink/KitchenSink.mdx",slug:"src-components-kitchen-sink-kitchen-sink",route:"/paramount/src-components-kitchen-sink-kitchen-sink",headings:[{slug:"kitchensink",depth:1,value:"KitchenSink"}]}},{key:"src/components/Layout/Container.mdx",value:{name:"Container",menu:"Components",id:"58de77ad2b20692c625e150355897c9e",filepath:"src/components/Layout/Container.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Layout/Container.mdx",slug:"src-components-layout-container",route:"/paramount/src-components-layout-container",headings:[{slug:"container",depth:1,value:"Container"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Layout/Layout.mdx",value:{name:"Layout",menu:"Components",id:"a819fe37ad7c82494ab3ffb99e6b770c",filepath:"src/components/Layout/Layout.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Layout/Layout.mdx",slug:"src-components-layout-layout",route:"/paramount/src-components-layout-layout",headings:[{slug:"layout",depth:1,value:"Layout"},{slug:"setup",depth:2,value:"Setup"},{slug:"usage",depth:2,value:"Usage"},{slug:"currentscreensize",depth:3,value:"currentScreenSize"},{slug:"getresponsivevalue",depth:3,value:"getResponsiveValue"},{slug:"responsive-components",depth:3,value:"Responsive Components"},{slug:"options",depth:2,value:"Options"}]}},{key:"src/components/Layout/RowAndColumn.mdx",value:{name:"Row and Column",menu:"Components",id:"a5b96a111e30ea7a71a199b82d47a02d",filepath:"src/components/Layout/RowAndColumn.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Layout/RowAndColumn.mdx",slug:"src-components-layout-row-and-column",route:"/paramount/src-components-layout-row-and-column",headings:[{slug:"row-and-column",depth:1,value:"Row and Column"},{slug:"usage",depth:2,value:"Usage"},{slug:"column-wrapping",depth:3,value:"Column wrapping"},{slug:"offsets",depth:3,value:"Offsets"},{slug:"without-gutter",depth:3,value:"Without gutter"},{slug:"row-props",depth:2,value:"Row Props"},{slug:"row-customization",depth:2,value:"Row Customization"},{slug:"column-props",depth:2,value:"Column Props"},{slug:"column-customization",depth:2,value:"Column Customization"}]}},{key:"src/components/Layout/Visible.mdx",value:{name:"Visible",menu:"Components",id:"c230b1b6223a6a980a646d9d945e0461",filepath:"src/components/Layout/Visible.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Layout/Visible.mdx",slug:"src-components-layout-visible",route:"/paramount/src-components-layout-visible",headings:[{slug:"visible",depth:1,value:"Visible"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"}]}},{key:"src/components/ListItem/ListItem.mdx",value:{name:"ListItem",menu:"Components",id:"569ff5be15dcba93aec302b5ee418436",filepath:"src/components/ListItem/ListItem.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/ListItem/ListItem.mdx",slug:"src-components-list-item-list-item",route:"/paramount/src-components-list-item-list-item",headings:[{slug:"listitem",depth:1,value:"ListItem"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Modal/Modal.mdx",value:{name:"Modal",menu:"Components",id:"5175e150887a2d4ce14a3bff981fb9ef",filepath:"src/components/Modal/Modal.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Modal/Modal.mdx",slug:"src-components-modal-modal",route:"/paramount/src-components-modal-modal",headings:[{slug:"modal",depth:1,value:"Modal"},{slug:"usage",depth:2,value:"Usage"},{slug:"nested",depth:3,value:"Nested"},{slug:"using-browser-history",depth:3,value:"Using browser history"},{slug:"props",depth:2,value:"Props"}]}},{key:"src/components/Pickers/NativePicker.mdx",value:{name:"NativePicker",menu:"Components",id:"d77f7683d209bc7bb0df449e73e9e161",filepath:"src/components/Pickers/NativePicker.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Pickers/NativePicker.mdx",slug:"src-components-pickers-native-picker",route:"/paramount/src-components-pickers-native-picker",headings:[{slug:"nativepicker",depth:1,value:"NativePicker"},{slug:"usage",depth:2,value:"Usage"},{slug:"nativepickeritem-props",depth:2,value:"NativePickerItem Props"},{slug:"nativepicker-props",depth:2,value:"NativePicker Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Popover/Popover.mdx",value:{name:"Popover",menu:"Components",id:"67730dfeabc658e359403a639c85626f",filepath:"src/components/Popover/Popover.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Popover/Popover.mdx",slug:"src-components-popover-popover",route:"/paramount/src-components-popover-popover",headings:[{slug:"popover",depth:1,value:"Popover"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/ProgressBar/ProgressBar.mdx",value:{name:"ProgressBar",menu:"Components",id:"7e8c1133ccf7a5f1a01d6a9572c6bc69",filepath:"src/components/ProgressBar/ProgressBar.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/ProgressBar/ProgressBar.mdx",slug:"src-components-progress-bar-progress-bar",route:"/paramount/src-components-progress-bar-progress-bar",headings:[{slug:"progressbar",depth:1,value:"ProgressBar"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Rating/Rating.mdx",value:{name:"Rating",menu:"Components",id:"fe4f9d87b3b5667aa609707994327e3f",filepath:"src/components/Rating/Rating.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Rating/Rating.mdx",slug:"src-components-rating-rating",route:"/paramount/src-components-rating-rating",headings:[{slug:"rating",depth:1,value:"Rating"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/SelectList/SelectList.mdx",value:{name:"SelectList",menu:"Components",id:"3d840172dc087b86b462ab18107d90f7",filepath:"src/components/SelectList/SelectList.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/SelectList/SelectList.mdx",slug:"src-components-select-list-select-list",route:"/paramount/src-components-select-list-select-list",headings:[{slug:"selectlist",depth:1,value:"SelectList"},{slug:"usage",depth:2,value:"Usage"},{slug:"selectlist-props",depth:2,value:"SelectList Props"},{slug:"selectlistitem-props",depth:2,value:"SelectListItem Props"}]}},{key:"src/components/Slider/Slider.mdx",value:{name:"Slider",menu:"Components",id:"fba7aea813f537067eb68bf94ffcd70b",filepath:"src/components/Slider/Slider.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Slider/Slider.mdx",slug:"src-components-slider-slider",route:"/paramount/src-components-slider-slider",headings:[{slug:"slider",depth:1,value:"Slider"},{slug:"usage",depth:2,value:"Usage"},{slug:"with-range",depth:3,value:"With Range"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Switch/Switch.mdx",value:{name:"Switch",menu:"Components",id:"177a8a4cf0e62d32c5ae759392948ac1",filepath:"src/components/Switch/Switch.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Switch/Switch.mdx",slug:"src-components-switch-switch",route:"/paramount/src-components-switch-switch",headings:[{slug:"switch",depth:1,value:"Switch"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Tabs/Tabs.mdx",value:{name:"Tabs",menu:"Components",id:"3f5826f1160b5d0db16d6279c5dc708d",filepath:"src/components/Tabs/Tabs.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Tabs/Tabs.mdx",slug:"src-components-tabs-tabs",route:"/paramount/src-components-tabs-tabs",headings:[{slug:"tabs",depth:1,value:"Tabs"},{slug:"usage",depth:2,value:"Usage"},{slug:"tabs-props",depth:2,value:"Tabs Props"},{slug:"tabs-customization",depth:2,value:"Tabs Customization"},{slug:"tab-props",depth:2,value:"Tab Props"},{slug:"tab-customization",depth:2,value:"Tab Customization"}]}},{key:"src/components/Toast/Toast.mdx",value:{name:"Toast",menu:"Components",id:"365c0e636c0718fc87418d77a49a7599",filepath:"src/components/Toast/Toast.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Toast/Toast.mdx",slug:"src-components-toast-toast",route:"/paramount/src-components-toast-toast",headings:[{slug:"toast",depth:1,value:"Toast"},{slug:"setup",depth:2,value:"Setup"},{slug:"usage",depth:2,value:"Usage"},{slug:"toastprovider-props",depth:2,value:"ToastProvider Props"},{slug:"toast-options",depth:2,value:"Toast Options"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Typography/Heading.mdx",value:{name:"Heading",menu:"Components",id:"acbae1818dfab612ddeefc9b03e16b6b",filepath:"src/components/Typography/Heading.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Typography/Heading.mdx",slug:"src-components-typography-heading",route:"/paramount/src-components-typography-heading",headings:[{slug:"heading",depth:1,value:"Heading"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Typography/Label.mdx",value:{name:"Label",menu:"Components",id:"bb9fd874deb0ff97f5c8492048027b5c",filepath:"src/components/Typography/Label.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Typography/Label.mdx",slug:"src-components-typography-label",route:"/paramount/src-components-typography-label",headings:[{slug:"label",depth:1,value:"Label"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Typography/Paragraph.mdx",value:{name:"Paragraph",menu:"Components",id:"1c434638ef5ba67dd83142522d98c2af",filepath:"src/components/Typography/Paragraph.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Typography/Paragraph.mdx",slug:"src-components-typography-paragraph",route:"/paramount/src-components-typography-paragraph",headings:[{slug:"paragraph",depth:1,value:"Paragraph"},{slug:"usage",depth:2,value:"Usage"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}},{key:"src/components/Typography/Text.mdx",value:{name:"Text",menu:"Components",id:"0795dc9fbf08f58b48b826e3a3124d00",filepath:"src/components/Typography/Text.mdx",link:"https://github.com/WeTrustPlatform/paramount/edit/master/src/components/Typography/Text.mdx",slug:"src-components-typography-text",route:"/paramount/src-components-typography-text",headings:[{slug:"text",depth:1,value:"Text"},{slug:"usage",depth:2,value:"Usage"},{slug:"colors",depth:3,value:"Colors"},{slug:"font-weights",depth:3,value:"Font Weights"},{slug:"alignments",depth:3,value:"Alignments"},{slug:"transforms",depth:3,value:"Transforms"},{slug:"italic",depth:3,value:"Italic"},{slug:"props",depth:2,value:"Props"},{slug:"customization",depth:2,value:"Customization"}]}}]}},"./.docz/app/index.jsx":function(e,n,t){"use strict";t.r(n);var i=t("./node_modules/react/index.js"),a=t.n(i),r=t("./node_modules/react-dom/index.js"),o=t.n(r),d=t("./node_modules/docz/dist/index.esm.js"),l=t("./node_modules/docz-theme-default/dist/index.esm.js"),s={"docs/Contributing.mdx":function(){return Promise.all([t.e(0),t.e(36)]).then(t.bind(null,"./docs/Contributing.mdx"))},"docs/Customization.mdx":function(){return Promise.all([t.e(0),t.e(37)]).then(t.bind(null,"./docs/Customization.mdx"))},"docs/GettingStarted.mdx":function(){return Promise.all([t.e(0),t.e(38)]).then(t.bind(null,"./docs/GettingStarted.mdx"))},"docs/Introduction.mdx":function(){return Promise.all([t.e(0),t.e(39)]).then(t.bind(null,"./docs/Introduction.mdx"))},"src/components/Alert/Alert.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(33)]).then(t.bind(null,"./src/components/Alert/Alert.mdx"))},"src/components/Avatar/Avatar.mdx":function(){return Promise.all([t.e(0),t.e(19)]).then(t.bind(null,"./src/components/Avatar/Avatar.mdx"))},"src/components/Badge/Badge.mdx":function(){return Promise.all([t.e(0),t.e(20)]).then(t.bind(null,"./src/components/Badge/Badge.mdx"))},"src/components/Box/Box.mdx":function(){return Promise.all([t.e(0),t.e(34)]).then(t.bind(null,"./src/components/Box/Box.mdx"))},"src/components/Button/Button.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(35)]).then(t.bind(null,"./src/components/Button/Button.mdx"))},"src/components/Checkbox/Checkbox.mdx":function(){return Promise.all([t.e(0),t.e(7)]).then(t.bind(null,"./src/components/Checkbox/Checkbox.mdx"))},"src/components/Collapsible/Collapsible.mdx":function(){return Promise.all([t.e(0),t.e(8)]).then(t.bind(null,"./src/components/Collapsible/Collapsible.mdx"))},"src/components/Counter/Counter.mdx":function(){return Promise.all([t.e(0),t.e(17)]).then(t.bind(null,"./src/components/Counter/Counter.mdx"))},"src/components/Dialog/Dialog.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(9)]).then(t.bind(null,"./src/components/Dialog/Dialog.mdx"))},"src/components/Divider/Divider.mdx":function(){return Promise.all([t.e(0),t.e(28)]).then(t.bind(null,"./src/components/Divider/Divider.mdx"))},"src/components/Drawer/Drawer.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(21)]).then(t.bind(null,"./src/components/Drawer/Drawer.mdx"))},"src/components/Form/FormField.mdx":function(){return Promise.all([t.e(0),t.e(13)]).then(t.bind(null,"./src/components/Form/FormField.mdx"))},"src/components/Icon/Icon.mdx":function(){return Promise.all([t.e(0),t.e(22)]).then(t.bind(null,"./src/components/Icon/Icon.mdx"))},"src/components/Inputs/TextInput.mdx":function(){return Promise.all([t.e(0),t.e(16)]).then(t.bind(null,"./src/components/Inputs/TextInput.mdx"))},"src/components/KitchenSink/KitchenSink.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(3)]).then(t.bind(null,"./src/components/KitchenSink/KitchenSink.mdx"))},"src/components/Layout/Container.mdx":function(){return Promise.all([t.e(0),t.e(11)]).then(t.bind(null,"./src/components/Layout/Container.mdx"))},"src/components/Layout/Layout.mdx":function(){return Promise.all([t.e(0),t.e(40)]).then(t.bind(null,"./src/components/Layout/Layout.mdx"))},"src/components/Layout/RowAndColumn.mdx":function(){return Promise.all([t.e(0),t.e(6)]).then(t.bind(null,"./src/components/Layout/RowAndColumn.mdx"))},"src/components/Layout/Visible.mdx":function(){return Promise.all([t.e(0),t.e(12)]).then(t.bind(null,"./src/components/Layout/Visible.mdx"))},"src/components/ListItem/ListItem.mdx":function(){return Promise.all([t.e(0),t.e(15)]).then(t.bind(null,"./src/components/ListItem/ListItem.mdx"))},"src/components/Modal/Modal.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(30)]).then(t.bind(null,"./src/components/Modal/Modal.mdx"))},"src/components/Pickers/NativePicker.mdx":function(){return Promise.all([t.e(0),t.e(18)]).then(t.bind(null,"./src/components/Pickers/NativePicker.mdx"))},"src/components/Popover/Popover.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(29)]).then(t.bind(null,"./src/components/Popover/Popover.mdx"))},"src/components/ProgressBar/ProgressBar.mdx":function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,"./src/components/ProgressBar/ProgressBar.mdx"))},"src/components/Rating/Rating.mdx":function(){return Promise.all([t.e(0),t.e(27)]).then(t.bind(null,"./src/components/Rating/Rating.mdx"))},"src/components/SelectList/SelectList.mdx":function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,"./src/components/SelectList/SelectList.mdx"))},"src/components/Slider/Slider.mdx":function(){return Promise.all([t.e(0),t.e(32)]).then(t.bind(null,"./src/components/Slider/Slider.mdx"))},"src/components/Switch/Switch.mdx":function(){return Promise.all([t.e(0),t.e(10)]).then(t.bind(null,"./src/components/Switch/Switch.mdx"))},"src/components/Tabs/Tabs.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(31)]).then(t.bind(null,"./src/components/Tabs/Tabs.mdx"))},"src/components/Toast/Toast.mdx":function(){return Promise.all([t.e(0),t.e(1),t.e(14)]).then(t.bind(null,"./src/components/Toast/Toast.mdx"))},"src/components/Typography/Heading.mdx":function(){return Promise.all([t.e(0),t.e(24)]).then(t.bind(null,"./src/components/Typography/Heading.mdx"))},"src/components/Typography/Label.mdx":function(){return Promise.all([t.e(0),t.e(23)]).then(t.bind(null,"./src/components/Typography/Label.mdx"))},"src/components/Typography/Paragraph.mdx":function(){return Promise.all([t.e(0),t.e(25)]).then(t.bind(null,"./src/components/Typography/Paragraph.mdx"))},"src/components/Typography/Text.mdx":function(){return Promise.all([t.e(0),t.e(26)]).then(t.bind(null,"./src/components/Typography/Text.mdx"))}},u=t("./.docz/app/db.json"),p="/home/travis/build/WeTrustPlatform/paramount/.docz/app/root.jsx",c=function(){return a.a.createElement(l.a,{linkComponent:d.b,db:u,__source:{fileName:p,lineNumber:11}},a.a.createElement(d.e,{imports:s,__source:{fileName:p,lineNumber:12}}))},m=[],f=[],h=function(){return f.forEach(function(e){return e&&e()})},y=document.querySelector("#root");!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:c;m.forEach(function(e){return e&&e()}),o.a.render(a.a.createElement(e,{__source:{fileName:"/home/travis/build/WeTrustPlatform/paramount/.docz/app/index.jsx",lineNumber:14}}),y,h)}(c)},0:function(e,n,t){e.exports=t("./.docz/app/index.jsx")}});
//# sourceMappingURL=app.b111883d2051a66a3a7a.js.map