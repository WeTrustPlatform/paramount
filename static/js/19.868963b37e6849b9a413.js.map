{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["defaultProps","Avatar","props","source","_props$name","name","_props$size","size","_props$isSolid","isSolid","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","imageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","__source","fileName","_jsxFileName","lineNumber","onError","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","_props$name2","_props$size2","_props$isSolid2","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","_props$name3","_props$size3","_props$isSolid3","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","override","fontSize","lineHeight","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Icon","ListItem","___WEBPACK_IMPORTED_MODULE_7__","onPress","console","log","uri","title","description","of","isMDXComponent","_props$isDisabled","isDisabled","StyledTouchable","Touchable","touchableProps","StyledTextWrapper","TextWrapper","StyledTitle","Title","titleProps","_getOverrides7","StyledDescription","Description","_getOverrides8","descriptionProps","_getOverrides9","StyledAction","Action","_getOverrides10","rightIconProps","_getOverrides11","_getOverrides12","AvatarR","avatarProps","_getOverrides13","_getOverrides14","viewProps","flexDirection","colors","background","greyLight","content","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","flex","paddingLeft","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/19.979a7383.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Text } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   */\n  color?: FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nconst defaultProps = {\n  name: '',\n  size: 'medium' as const,\n  isSolid: false,\n};\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const imageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n  const [ImageR, imageProps] = getOverrides(\n    StyledImage,\n    props,\n    dlv(theme, 'overrides.Avatar.Image'),\n    overrides.Image,\n  );\n\n  return (\n    <Root\n      name={name}\n      size={size}\n      isSolid={isSolid}\n      color={color}\n      testID={testID}\n      {...rootProps}\n    >\n      {imageUnavailable && (\n        <Initials\n          name={name}\n          size={size}\n          isSolid={isSolid}\n          color={color}\n          {...initialsProps}\n        />\n      )}\n      {!imageUnavailable && !!source && (\n        <ImageR\n          onError={() => setHasImageFailedLoading(true)}\n          source={source}\n          {...imageProps}\n        />\n      )}\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size?: ControlSize | number;\n  name?: string;\n  isSolid?: boolean;\n  color?: FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const {\n    testID,\n    children,\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    style,\n  } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color || (keys[hashCode(name) % keys.length] as keyof FillColors)\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends ViewProps {\n  size?: ControlSize | number;\n  name?: string;\n  isSolid?: boolean;\n  color?: FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const {\n    name = defaultProps.name,\n    size = defaultProps.size,\n    isSolid = defaultProps.isSolid,\n    color,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      override={{\n        style: [\n          {\n            color:\n              appearances[\n                color ||\n                  (keys[hashCode(name) % keys.length] as keyof FillColors)\n              ].color,\n            fontSize: controlSize / 2,\n            lineHeight: controlSize,\n          },\n          style,\n        ],\n      }}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Icon, ListItem } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"listitem\"\n    }}>{`ListItem`}</h1>\n    <p>{`For image, it composes `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{`, you can pass `}<inlineCode parentName=\"p\">{`avatarProps`}</inlineCode>{` provide more specific customizations`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<ListItem\\n  onPress={() => console.log(\\'Press\\')}\\n  source={{ uri: \\'https://picsum.photos/200/200\\' }}\\n  title=\\\"Some label\\\"\\n  description=\\\"Some description\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Icon,\n      ListItem\n    }} mdxType=\"Playground\">\n  <ListItem onPress={() => console.log('Press')} source={{\n        uri: 'https://picsum.photos/200/200'\n      }} title=\"Some label\" description=\"Some description\" mdxType=\"ListItem\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ListItem} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageSourcePropType,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/overrides';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Text, TextProps } from '../Typography';\n\ninterface ListItemBaseProps {\n  /**\n   * Title of the list item\n   */\n  title?: string | false;\n\n  /**\n   * Description of the list item\n   */\n  description?: string | false;\n\n  /**\n   * Source of the avatar\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * When true, list item will not be able to be pressed.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Called when pressing list item\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ListItemOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  TextWrapper: TextWrapperProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n  Avatar: AvatarProps;\n}\n\nexport interface ListItemProps\n  extends WithOverrides<ListItemBaseProps, ListItemOverrides> {}\n\nconst defaultProps = {\n  isDisabled: false,\n};\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    isDisabled = defaultProps.isDisabled,\n    title,\n    description,\n    onPress,\n    testID,\n    source,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.ListItem.Touchable'),\n    overrides.Touchable,\n  );\n  const [TextWrapper, textProps] = getOverrides(\n    StyledTextWrapper,\n    props,\n    dlv(theme, 'overrides.ListItem.TextWrapper'),\n    overrides.TextWrapper,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.ListItem.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.ListItem.Description'),\n    overrides.Description,\n  );\n  const [Action, rightIconProps] = getOverrides(\n    StyledAction,\n    props,\n    dlv(theme, 'overrides.ListItem.Action'),\n    overrides.Action,\n  );\n  const [AvatarR, avatarProps] = getOverrides(\n    Avatar,\n    props,\n    dlv(theme, 'overrides.ListItem.Avatar'),\n    overrides.Avatar,\n  );\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.ListItem.Root'),\n    overrides.Root,\n  );\n\n  return (\n    <Root isDisabled={isDisabled} {...rootProps}>\n      <Touchable\n        onPress={onPress}\n        testID={testID}\n        isDisabled={isDisabled}\n        {...touchableProps}\n      >\n        {source && <AvatarR size=\"small\" source={source} {...avatarProps} />}\n        <TextWrapper source={source} {...textProps}>\n          <Title title={title} {...titleProps} />\n          <Description description={description} {...descriptionProps} />\n        </TextWrapper>\n      </Touchable>\n      <Action isDisabled={isDisabled} {...rightIconProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, isDisabled, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          height: 72,\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    style,\n    children,\n    isDisabled = defaultProps.isDisabled,\n    ...touchableProps\n  } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: string | false;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text size=\"large\" style={[{}, style]} {...textProps}>\n      {title}\n    </Text>\n  );\n};\n\ninterface TextWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n  source?: ImageSourcePropType | false;\n}\n\nconst StyledTextWrapper = (props: TextWrapperProps) => {\n  const { children, style, source, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        { flex: 1, justifyContent: 'center', paddingLeft: source ? 8 : 0 },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps {\n  description?: string | false;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text size=\"small\" color=\"muted\" style={[{}, style]} {...viewProps}>\n      {description}\n    </Text>\n  );\n};\n\ninterface ActionProps {\n  isDisabled: boolean;\n}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}