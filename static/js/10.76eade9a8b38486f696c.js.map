{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/Counter.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Counter/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/ProgressBar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ProgressBar/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["getButtonVariables","theme","appearances","minimal","default","backgroundColor","colors","background","content","color","text","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","appearance","size","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Loading","_Typography","_Button","Button","props","_props$appearance","_props$color","title","getStyles","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","style","View","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","getCounterVariables","container","count","counter","width","getCounterStyles","counterVariables","containerStyle","countStyle","counterStyle","disabledStyle","_Box","_Icon","_Counter","Counter","component","max","min","onIncrement","onDecrement","isDecrementDisabled","isIncrementDisabled","Box","TouchableOpacity","activeOpacity","undefined","Icon","name","concat","Feather","_ref","IconTag","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","_LoadingDots","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","Playground","__position","__code","__scope","CounterContainer","Props","ProgressBar","initial","_ref2","incBy","decBy","percent","progressStyle","of","isMDXComponent","getProgressBarStyles","overflow","_Animation","_ProgressBar","_props$percent","boundPercent","Math","useSpring","springDefaultConfig","Platform","OS","interpolate","w","friction","tension"],"mappings":"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","file":"static/js/10.d545315f.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface CounterVariables {\n  container: ViewStyle;\n  count: ViewStyle;\n  counter: ViewStyle;\n  disabled: ViewStyle;\n}\n\nexport const getCounterVariables = (theme: Theme): CounterVariables => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    count: {\n      justifyContent: 'center',\n    },\n    counter: {\n      alignItems: 'center',\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 1,\n      display: 'flex',\n      height: 40,\n      justifyContent: 'center',\n      width: 40,\n    },\n    disabled: {\n      borderColor: theme.colors.border.default,\n    },\n  };\n};\n\nexport interface CounterStyles {\n  containerStyle: ViewStyle;\n  countStyle: ViewStyle;\n  counterStyle: ViewStyle;\n  disabledStyle: ViewStyle;\n  textStyle: TextStyle;\n}\n\nexport type GetCounterStyles = (theme: Theme) => CounterStyles;\n\nexport const getCounterStyles: GetCounterStyles = theme => {\n  const counterVariables = getCounterVariables(theme);\n  const { container, counter, count, disabled } = counterVariables;\n\n  return {\n    containerStyle: container,\n    countStyle: count,\n    counterStyle: counter,\n    disabledStyle: disabled,\n    textStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport {\n  CounterStyles,\n  GetCounterStyles,\n  getCounterStyles,\n} from './Counter.styles';\n\nexport interface CounterProps {\n  count: number;\n  min?: number;\n  max?: number;\n  /* custom component in place of count */\n  component?: React.ReactNode;\n  onIncrement?: () => void;\n  onDecrement?: () => void;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetCounterStyles, DeepPartial<CounterStyles>>;\n}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    count,\n    component,\n    max,\n    min,\n    onIncrement,\n    onDecrement,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    containerStyle,\n    counterStyle,\n    countStyle,\n    textStyle,\n    disabledStyle,\n  } = mergeStyles(getCounterStyles, getStyles)(theme);\n\n  const isDecrementDisabled = min === count;\n  const isIncrementDisabled = max === count;\n\n  return (\n    <View style={containerStyle}>\n      <Box paddingRight={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isDecrementDisabled && disabledStyle),\n          }}\n          disabled={isDecrementDisabled}\n          onPress={!isDecrementDisabled ? onDecrement : undefined}\n        >\n          <Icon\n            name=\"minus\"\n            size={16}\n            color={\n              isDecrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n      {component || (\n        <View style={countStyle}>\n          <Text getStyles={() => ({ textStyle })}>{`${count}`}</Text>\n        </View>\n      )}\n      <Box paddingLeft={16}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          style={{\n            ...counterStyle,\n            ...(isIncrementDisabled && disabledStyle),\n          }}\n          disabled={isIncrementDisabled}\n          onPress={!isIncrementDisabled ? onIncrement : undefined}\n        >\n          <Icon\n            name=\"plus\"\n            size={16}\n            color={\n              isIncrementDisabled\n                ? theme.colors.text.muted\n                : theme.colors.text.primary\n            }\n          />\n        </TouchableOpacity>\n      </Box>\n    </View>\n  );\n};\n","export * from './Counter';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Counter as CounterContainer } from 'react-powerplug';\nimport { Playground, Props } from 'docz';\nimport { ProgressBar } from '.';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Counter } from '../Counter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<CounterContainer initial={0}>\\n  {({ count, incBy, decBy }) => (\\n    <Box>\\n      <ProgressBar\\n        percent={count}\\n        size=\\\"large\\\"\\n        getStyles={(props, theme) => ({\\n          containerStyle: {},\\n          progressStyle: {},\\n        })}\\n      />\\n      <Counter\\n        count={count}\\n        onDecrement={() => decBy(10)}\\n        onIncrement={() => incBy(10)}\\n        min={0}\\n        max={100}\\n      />\\n    </Box>\\n  )}\\n</CounterContainer>'} __scope={{\n      props: this ? this.props : props,\n      CounterContainer,\n      Playground,\n      Props,\n      ProgressBar,\n      Box,\n      Button,\n      Counter\n    }} mdxType=\"Playground\">\n  <CounterContainer initial={0} mdxType=\"CounterContainer\">\n    {({\n          count,\n          incBy,\n          decBy\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={count} size=\"large\" getStyles={(props, theme) => ({\n            containerStyle: {},\n            progressStyle: {}\n          })} mdxType=\"ProgressBar\" />\n        <Counter count={count} onDecrement={() => decBy(10)} onIncrement={() => incBy(10)} min={0} max={100} mdxType=\"Counter\" />\n      </Box>}\n  </CounterContainer>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { ControlSize, Theme } from '../../theme/ThemeInterface';\n\nexport interface ProgressBarVariables {\n  container: ViewStyle;\n  progress: ViewStyle;\n}\n\nexport interface ProgressBarStylesProps {\n  size: ControlSize;\n}\n\nexport type GetProgressBarStyles = (\n  progressStylesProps: ProgressBarStylesProps,\n  theme: Theme,\n) => ProgressBarStyles;\n\nexport interface ProgressBarStyles {\n  progressStyle: ViewStyle;\n  containerStyle: ViewStyle;\n}\n\nexport const getProgressBarStyles: GetProgressBarStyles = ({ size }, theme) => {\n  const height = theme.controlHeights[size] - 16;\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.greyDefault,\n      borderRadius: 999,\n      height,\n      overflow: 'hidden',\n    },\n    progressStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 999,\n      height: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetProgressBarStyles,\n  getProgressBarStyles,\n  ProgressBarStyles,\n} from './ProgressBar.styles';\n\nconst AnimatedView = animated(View);\n\nexport interface ProgressBarProps {\n  percent?: number;\n  size?: ControlSize;\n  getStyles?: ReplaceReturnType<\n    GetProgressBarStyles,\n    DeepPartial<ProgressBarStyles>\n  >;\n  testID?: string;\n}\n\nexport const ProgressBar = (props: ProgressBarProps) => {\n  const { percent = 0, size = 'medium', getStyles, testID } = props;\n  const theme = useTheme();\n\n  const { containerStyle, progressStyle } = mergeStyles(\n    getProgressBarStyles,\n    getStyles,\n  )({ size }, theme);\n\n  const boundPercent = Math.max(Math.min(percent, 100), 0);\n  const { width } = useSpring({\n    config: springDefaultConfig,\n    from: { width: boundPercent },\n    width: boundPercent,\n  });\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <AnimatedView\n        // @ts-ignore\n        accessibilityRole={Platform.OS === 'web' ? 'progress' : 'none'}\n        // @ts-ignore\n        style={{\n          ...progressStyle,\n          width: width.interpolate(w => `${w}%`),\n        }}\n      />\n    </View>\n  );\n};\n","export * from './ProgressBar';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 400,\n};\n"],"sourceRoot":""}