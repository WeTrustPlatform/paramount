{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/changeColor.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["alertVariables","theme","body","flex","container","_objectSpread2","backgroundColor","colors","background","content","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","title","danger","borderLeftColor","border","info","success","warning","getAlertStyles","_ref","intent","_alertVariables","intentStyle","_objectWithoutProperties2","bodyStyle","containerStyle","textStyle","titleStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","_mergeStyles2","_Box","_Icon","_Typography","_Alert","Alert","props","description","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","createElement","View","style","Box","paddingRight","justifyContent","Icon","name","size","color","resolveIcon","Text","weight","TouchableOpacity","onPress","paddingLeft","text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_changeColor","getButtonVariables","appearances","minimal","default","primary","secondary","button","defaultText","loadingBackgroundColor","overlay","dangerText","dangerLight","primaryText","primaryLight","secondaryText","secondaryLight","outline","borderColor","borderWidth","disabled","muted","sizes","small","fontSize","textSizes","height","controlHeights","controlPaddings","large","getButtonStyles","buttonStyleProps","appearance","isDisabled","isLoading","isInline","iconBefore","iconAfter","_getButtonVariables","baseStyles","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","alignSelf","flexWrap","focusColor","darken","alignItems","fontWeight","textAlign","innerButtonWrapperStyle","buttonContentWrapperStyle","_Loading","_Button","Button","_props$appearance","_props$color","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","TouchableHighlight","_extends2","accessible","accessibilityRole","underlayColor","ButtonContent","LoadingDots","pad","num","totalChars","length","changeColor","ratio","darker","replace","difference","Math","round","rgbValue","rgb","match","RegExp","alpha","decimal","substring","arg1","arg2","arg3","parseInt","split","toString","join","lighten","Feather","_Text","IconTag","concat","result","matches","toUpperCase","charAt","slice","convertToPascal","getTextColor","_native","AnimatedView","animated","items","trail","useTrail","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_react","_interopRequireDefault","_react2","_docz","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","ToastContext","ToastProvider","Toast","Consumer","_ref2","notify","offset","_ref3","Fragment","of","isMDXComponent","getToastStyles","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","wrapperStyle","onRemove","_props$duration","toastSettings","useEffect","timer","setTimeout","clearTimeout","defaultToastInstance","defaultToastContext","removeToast","createContext","useToast","useContext","_Animation","_Toast","_Toast2","_ToastContext","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","_toConsumableArray2","payload","toast","REMOVE_TOAST","filter","Error","children","idCounterRef","useRef","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray2","dispatch","useCallback","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","value","String","startsWith","err","transitions","useTransition","springDefaultConfig","enter","translateY","leave","Provider","item","transitionStyle","transform","_ToastProvider","friction","tension"],"mappings":"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","file":"static/js/6.db21145b.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" size={24} color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" size={24} color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" size={24} color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" size={24} color=\"info\" />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(getAlertStyles, getStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Box paddingRight={16} justifyContent=\"center\">\n          {resolveIcon(intent)}\n        </Box>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text weight=\"bold\">{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Box paddingLeft={16}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Box>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","export * from './Alert';\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { ButtonColor, Theme } from '../../theme/ThemeInterface';\nimport { darken } from './changeColor';\n\nexport type ButtonColorProps = ViewStyle & {\n  backgroundColor: string;\n  color: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ButtonColorProps };\n  primary: { [size in ButtonColor]: ButtonColorProps };\n  outline: { [size in ButtonColor]: ButtonColorProps };\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.button.default,\n          color: theme.colors.button.defaultText,\n\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.button.danger,\n          color: theme.colors.button.dangerText,\n\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.button.primary,\n          color: theme.colors.button.primaryText,\n\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.button.secondary,\n          color: theme.colors.button.secondaryText,\n\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.button.disabled,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n  innerButtonWrapperStyle: ViewStyle;\n  buttonContentWrapperStyle: ViewStyle;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n  iconBefore?: any;\n  iconAfter?: any;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n    iconBefore,\n    iconAfter,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor:\n      appearance === 'minimal' || appearance === 'outline'\n        ? theme.colors.button.default\n        : darken(buttonStyle.backgroundColor, 0.05),\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n\n    innerButtonWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      height: '100%',\n      justifyContent: 'center',\n    },\n\n    buttonContentWrapperStyle: {\n      paddingLeft: iconBefore ? 8 : 0,\n      paddingRight: iconAfter ? 8 : 0,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ButtonColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"primary\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'primary',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    buttonStyle,\n    textStyle,\n    focusColor,\n    innerButtonWrapperStyle,\n    buttonContentWrapperStyle,\n  } = mergeStyles(getButtonStyles, getStyles)(\n    {\n      appearance,\n      color,\n      iconAfter,\n      iconBefore,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View style={innerButtonWrapperStyle}>\n        {iconBefore}\n        <View style={buttonContentWrapperStyle}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </View>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","// From https://stackoverflow.com/questions/1507931/generate-lighter-darker-color-in-css-using-javascript\n\nconst pad = (num: string, totalChars: number) => {\n  num = num + '';\n  while (num.length < totalChars) {\n    num = '0' + num;\n  }\n  return num;\n};\n\n// Ratio is between 0 and 1\nconst changeColor = (color: string, ratio: number, darker: boolean) => {\n  // Trim trailing/leading whitespace\n  color = color.replace(/^\\s*|\\s*$/, '');\n\n  // Expand three-digit hex\n  color = color.replace(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i, '#$1$1$2$2$3$3');\n\n  // Calculate ratio\n  const difference = Math.round(ratio * 256) * (darker ? -1 : 1);\n  // Determine if input is RGB(A)\n  const rgbValue = '(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])';\n  const rgb = color.match(\n    new RegExp(\n      '^rgba?\\\\(\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '\\\\s*,\\\\s*' +\n        rgbValue +\n        '(?:\\\\s*,\\\\s*' +\n        '(0|1|0?\\\\.\\\\d+))?' +\n        '\\\\s*\\\\)$',\n      'i',\n    ),\n  );\n\n  const alpha = !!rgb && rgb[4] != null ? rgb[4] : null;\n  // Convert hex to decimal\n  const decimal = !!rgb\n    ? [rgb[1], rgb[2], rgb[3]]\n    : color\n        .replace(\n          /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,\n          (substring, arg1, arg2, arg3) => {\n            return (\n              parseInt(arg1, 16) +\n              ',' +\n              parseInt(arg2, 16) +\n              ',' +\n              parseInt(arg3, 16)\n            );\n          },\n        )\n        .split(/,/);\n\n  // Return RGB(A)\n  return !!rgb\n    ? 'rgb' +\n        (alpha !== null ? 'a' : '') +\n        '(' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[0], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[1], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        ', ' +\n        Math[darker ? 'max' : 'min'](\n          parseInt(decimal[2], 10) + difference,\n          darker ? 0 : 255,\n        ) +\n        (alpha !== null ? ', ' + alpha : '') +\n        ')'\n    : // Return hex\n      [\n        '#',\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[0], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[1], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n        pad(\n          Math[darker ? 'max' : 'min'](\n            parseInt(decimal[2], 10) + difference,\n            darker ? 0 : 255,\n          ).toString(16),\n          2,\n        ),\n      ].join('');\n};\n\nexport const darken = (color: string, ratio: number) => {\n  return changeColor(color, ratio, true);\n};\n\nexport const lighten = (color: string, ratio: number) => {\n  return changeColor(color, ratio, false);\n};\n","export * from './Button';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","export * from './Icon';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { ToastContext, ToastProvider, Toast } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Box';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider getStyles={(props, theme) => ({\n        containerStyle: {}\n      })} mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null,\n              // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000 // ...Alert props e.g. getStyles\n\n            });\n          }} title=\"Use\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <>\n          <Button onPress={() => notify({\n              title: 'Title',\n              description: 'Description',\n              isCloseable: true\n            })} title=\"Open default toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'success',\n              title: 'Title'\n            })} color=\"primary\" title=\"Open success toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'danger',\n              title: 'Title'\n            })} color=\"danger\" title=\"Open danger toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'warning',\n              title: 'Title'\n            })} color=\"secondary\" title=\"Open warning toast\" mdxType=\"Button\" />\n        </>}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\nexport type GetToastStyles = (props: {}, theme: Theme) => ToastStyles;\n\n// @ts-ignore: Compat with web\nexport const getToastStyles: GetToastStyles = (props, theme) => {\n  return {\n    containerStyle: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n    wrapperStyle: {\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { Omit } from 'ts-essentials';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const {\n    component,\n    id,\n    onRemove,\n    duration = 3000,\n    offset = 16,\n    ...toastSettings\n  } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} onClose={onRemove} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const { children, getStyles } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const theme = useTheme();\n\n  const { containerStyle, wrapperStyle } = mergeStyles(\n    getToastStyles,\n    getStyles,\n  )({ intent: 'info' }, theme);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(state.toasts, toast => toast.id, {\n    config: springDefaultConfig,\n\n    enter: { translateY: 10 },\n    from: { translateY: -500 },\n    leave: { translateY: -500 },\n  });\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View style={containerStyle}>\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              ...wrapperStyle,\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","export * from './Toast';\nexport * from './ToastContext';\nexport * from './ToastProvider';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}