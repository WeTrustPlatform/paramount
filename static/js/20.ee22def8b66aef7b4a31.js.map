{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react_default","a","createElement","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","slicedToArray","useCallback","AnimatedView","animated","Dots","_props$color","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","alignItems","flexDirection","justifyContent","_jsxFileName","map","index","key","borderRadius","marginLeft","marginRight","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","Button_jsxFileName","buttonAppearances","minimal","default","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","minHeight","controlHeights","controlPaddings","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","Dots_Dots","Fragment","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","ToastContext","ToastProvider","Toast","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","Consumer","_ref2","notify","___WEBPACK_IMPORTED_MODULE_6__","description","of","isMDXComponent","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/20.54cf7382.js","sourcesContent":["import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, ToastContext, ToastProvider, Toast } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Make sure to use `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` at the top-level component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<ThemeProvider>{children}</ThemeProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` you can use to create toasts from anywhere in the application.`}</p>\n    <Playground __position={0} __code={'<ToastProvider>\\n  {/*\\n    We use `ToastContext.Consumer` here due to limitations in docs\\n    Use `const { notify } = useToast()` inside your function component\\n   */}\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() =>\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            duration: 5000,\\n          })\\n        }\\n        title=\\\"Open toast\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    {\n          /*\n           We use `ToastContext.Consumer` here due to limitations in docs\n           Use `const { notify } = useToast()` inside your function component\n          */\n        }\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => notify({\n            title: 'Title',\n            description: 'Description',\n            duration: 5000\n          })} title=\"Open toast\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toast-options\"\n    }}>{`Toast Options`}</h2>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}