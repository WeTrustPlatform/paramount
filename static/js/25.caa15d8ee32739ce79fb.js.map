{"version":3,"sources":["webpack:///./src/components/Badge/Badge.mdx","webpack:///./src/components/Badge/Badge.styles.ts","webpack:///./src/components/Badge/Badge.tsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_Badge","_theme","_Layout","MDXContent","props","_this","_classCallCheck2","default","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","name","id","parentName","Playground","__position","__code","__scope","Badge","ThemeContext","Box","Consumer","theme","Object","keys","fills","solid","map","color","flexDirection","key","isSolid","shape","PropsTable","of","React","Component","getBadgeVariables","sizes","small","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getBadgeStyles","_ref","size","badgeVariables","colors","subtle","_badgeVariables$sizes","boxStyle","backgroundColor","textStyle","textTransform","displayName","__docgenInfo","description","defaultValue","required","type","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlBorderRadius","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_interopRequireWildcard","_mergeStyles2","_Box","_Typography","_Text","withTheme","children","_props$color","getStyles","_props$isSolid","_props$shape","_props$size","_mergeStyles","mergeStyles","style","_objectSpread2","alignItems","alignSelf","display","justifyContent","Strong","defaultTextStyle","getTextStyles","__class"],"mappings":"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","file":"static/js/25.809bcf91.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Badge from './Badge';\nimport { ThemeContext } from '../../theme';\nimport { Box } from '../Layout';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note`}</MDXTag>{` Accessibility/Interactivity is a responsibility of a wrapping component`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"default\"}}>{`Default`}</MDXTag>\n<Playground __position={0} __code={'<ThemeContext.Consumer>\\n  {theme => (\\n    <Box>\\n      {Object.keys(theme.fills.solid).map(color => (\\n        <Box flexDirection=\\\"row\\\" key={color}>\\n          <Badge color={color}>{color}</Badge>\\n          <Badge color={color} isSolid>\\n            {color}\\n          </Badge>\\n        </Box>\\n      ))}\\n    </Box>\\n  )}\\n</ThemeContext.Consumer>'} __scope={{props: this ? this.props : props,Badge,ThemeContext,Box}}>\n  <ThemeContext.Consumer>\n    {theme => (\n      <Box>\n        {Object.keys(theme.fills.solid).map(color => (\n          <Box flexDirection=\"row\" key={color}>\n            <Badge color={color}>{color}</Badge>\n            <Badge color={color} isSolid>\n              {color}\n            </Badge>\n          </Box>\n        ))}\n      </Box>\n    )}\n  </ThemeContext.Consumer>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"pills\"}}>{`Pills`}</MDXTag>\n<Playground __position={1} __code={'<ThemeContext.Consumer>\\n  {theme => (\\n    <Box>\\n      {Object.keys(theme.fills.solid).map(color => (\\n        <Box flexDirection=\\\"row\\\" key={color}>\\n          <Badge shape=\\\"pill\\\" color={color}>\\n            {color}\\n          </Badge>\\n          <Badge shape=\\\"pill\\\" color={color} isSolid>\\n            {color}\\n          </Badge>\\n        </Box>\\n      ))}\\n    </Box>\\n  )}\\n</ThemeContext.Consumer>'} __scope={{props: this ? this.props : props,Badge,ThemeContext,Box}}>\n  <ThemeContext.Consumer>\n    {theme => (\n      <Box>\n        {Object.keys(theme.fills.solid).map(color => (\n          <Box flexDirection=\"row\" key={color}>\n            <Badge shape=\"pill\" color={color}>\n              {color}\n            </Badge>\n            <Badge shape=\"pill\" color={color} isSolid>\n              {color}\n            </Badge>\n          </Box>\n        ))}\n      </Box>\n    )}\n  </ThemeContext.Consumer>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Badge} />\n           </MDXTag>\n  }\n}\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { FillColor, Fills, Theme } from '../../theme/ThemeInterface';\n\nexport interface BadgeSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type BadgeSize = keyof BadgeSizes;\n\nexport interface BadgeVariables {\n  fills: Fills;\n  sizes: BadgeSizes;\n}\nexport const getBadgeVariables = (theme: Theme): BadgeVariables => {\n  return {\n    fills: theme.fills,\n\n    sizes: {\n      small: {\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface BadgeStylesProps {\n  size: BadgeSize;\n  color: FillColor;\n  isSolid: boolean;\n}\n\nexport interface BadgeStyles {\n  textStyle: TextStyle;\n  boxStyle: ViewStyle;\n}\n\nexport type GetBadgeStyles = (\n  props: BadgeStylesProps,\n  theme: Theme,\n) => BadgeStyles;\n\nexport const getBadgeStyles: GetBadgeStyles = (\n  { size, color, isSolid },\n  theme,\n) => {\n  const badgeVariables = getBadgeVariables(theme);\n\n  const fills = isSolid\n    ? badgeVariables.fills.solid\n    : badgeVariables.fills.subtle;\n\n  const colors = fills[color];\n  const { height, paddingLeft, paddingRight } = badgeVariables.sizes[size];\n\n  return {\n    boxStyle: {\n      backgroundColor: colors.backgroundColor,\n      height,\n      paddingLeft,\n      paddingRight,\n    },\n    textStyle: {\n      color: colors.color,\n      textTransform: 'uppercase',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getBadgeVariables.displayName = \"getBadgeVariables\";\n    // @ts-ignore\n    getBadgeVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getBadgeVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Badge/Badge.styles.ts#getBadgeVariables\"] = { docgenInfo: getBadgeVariables.__docgenInfo, name: \"getBadgeVariables\", path: \"src/components/Badge/Badge.styles.ts#getBadgeVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getBadgeStyles.displayName = \"getBadgeStyles\";\n    // @ts-ignore\n    getBadgeStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getBadgeStyles\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"\\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSolid\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Badge/Badge.styles.ts#getBadgeStyles\"] = { docgenInfo: getBadgeStyles.__docgenInfo, name: \"getBadgeStyles\", path: \"src/components/Badge/Badge.styles.ts#getBadgeStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { FillColor } from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport Box, { Shape } from '../Layout/Box';\nimport { Strong } from '../Typography';\nimport { getTextStyles } from '../Typography/Text.styles';\nimport {\n  BadgeSize,\n  BadgeStyles,\n  GetBadgeStyles,\n  getBadgeStyles,\n} from './Badge.styles';\n\nexport interface BadgeProps {\n  children: React.ReactNode;\n  theme: Theme;\n  color?: FillColor;\n  size?: BadgeSize;\n  shape?: Shape;\n  isSolid?: boolean;\n  getStyles?: ReplaceReturnType<GetBadgeStyles, DeepPartial<BadgeStyles>>;\n}\n\nconst BadgeBase = (props: BadgeProps) => {\n  const {\n    children,\n    color = 'neutral',\n    getStyles,\n    isSolid = false,\n    shape = 'rounded',\n    size = 'small',\n    theme,\n  } = props;\n\n  const { boxStyle, textStyle } = mergeStyles(getBadgeStyles, getStyles)(\n    { size, color, isSolid },\n    theme,\n  );\n\n  return (\n    <Box\n      shape={shape}\n      style={{\n        alignItems: 'center',\n        alignSelf: 'flex-start',\n        backgroundColor: boxStyle.backgroundColor,\n        display: 'flex',\n        flexDirection: 'row',\n        height: boxStyle.height,\n        justifyContent: 'center',\n        paddingLeft: boxStyle.paddingLeft,\n        paddingRight: boxStyle.paddingRight,\n        ...boxStyle,\n      }}\n    >\n      <Strong\n        size={size}\n        getStyles={(...params) => {\n          const { textStyle: defaultTextStyle } = getTextStyles(...params);\n          return {\n            textStyle: {\n              ...defaultTextStyle,\n              ...textStyle,\n            },\n          };\n        }}\n      >\n        {children}\n      </Strong>\n    </Box>\n  );\n};\n\nexport const Badge = withTheme(BadgeBase);\nexport default Badge;\ntry {\n    // @ts-ignore\n    Badge.displayName = \"Badge\";\n    // @ts-ignore\n    Badge.__docgenInfo = { \"description\": \"\", \"displayName\": \"Badge\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"Shape\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSolid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetBadgeStyles, DeepPartial<BadgeStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Badge/Badge.tsx#Badge\"] = { docgenInfo: Badge.__docgenInfo, name: \"Badge\", path: \"src/components/Badge/Badge.tsx#Badge\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"neutral\\\" | \\\"blue\\\" | \\\"red\\\" | \\\"orange\\\" | \\\"yellow\\\" | \\\"green\\\" | \\\"teal\\\" | \\\"purple\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"Shape\" } }, \"isSolid\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSolid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetBadgeStyles, DeepPartial<BadgeStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Badge/Badge.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Badge/Badge.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}