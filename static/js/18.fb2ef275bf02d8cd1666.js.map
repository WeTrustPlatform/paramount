{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Avatar/Avatar.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts"],"names":["Avatar","props","source","name","_props$size","size","_props$isSolid","isSolid","_props$color","color","testID","_props$overrides","overrides","theme","useTheme","_React$useState","React","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","hasImageFailedLoading","setHasImageFailedLoading","imageUnavailable","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","rootProps","_getOverrides3","StyledInitials","Initials","_getOverrides4","initialsProps","_getOverrides5","StyledImage","Image","_getOverrides6","ImageR","imageProps","react__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","__source","fileName","_jsxFileName","lineNumber","onError","hashCode","s","str","String","hash","trim","length","i","charCodeAt","Math","abs","avatarScale","large","medium","small","children","style","appearances","fills","keys","controlSize","isControlSize","controlHeights","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_6__","alignItems","backgroundColor","borderRadius","display","height","justifyContent","overflow","position","width","textProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","initials","fallback","arguments","undefined","replace","split","slice","map","v","toUpperCase","join","getInitials","_Typography__WEBPACK_IMPORTED_MODULE_10__","fontSize","lineHeight","getStyle","react_native_web_dist_exports_Image__WEBPACK_IMPORTED_MODULE_5__","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Icon","ListItem","___WEBPACK_IMPORTED_MODULE_7__","onPress","console","log","uri","title","description","of","isMDXComponent","_props$isDisabled","isDisabled","StyledTouchable","Touchable","touchableProps","StyledTextWrapper","TextWrapper","StyledTitle","Title","titleProps","_getOverrides7","StyledDescription","Description","_getOverrides8","descriptionProps","_getOverrides9","StyledAction","Action","_getOverrides10","rightIconProps","_getOverrides11","StyledAvatar","_getOverrides12","AvatarR","avatarProps","_getOverrides13","_getOverrides14","hasAvatar","viewProps","flexDirection","colors","background","greyLight","content","react_native_web_dist_exports_TouchableOpacity__WEBPACK_IMPORTED_MODULE_5__","flex","_props$hasAvatar","paddingLeft","_Avatar__WEBPACK_IMPORTED_MODULE_9__","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/18.8d6ea567.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageSourcePropType,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { ControlSize, FillColor, FillColors } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { Text, TextProps } from '../Typography';\n\ninterface AvatarBaseProps {\n  /** The source attribute of the image. When it's not available, render initials instead. */\n  source?: ImageSourcePropType;\n\n  /**\n   * The size of the avatar.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * The name used for the initials and title attribute.\n   */\n  name?: string;\n\n  /**\n   * When true, render a solid background when initials are used.\n   * @default false\n   */\n  isSolid?: boolean;\n\n  /**\n   * The color used for the avatar.\n   * @default \"auto\"\n   */\n  color?: 'auto' | FillColor;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface AvatarOverrides {\n  Root: RootProps;\n  Initials: InitialsProps;\n  Image: ImageProps;\n}\n\nexport interface AvatarProps\n  extends WithOverrides<AvatarBaseProps, AvatarOverrides> {}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {\n    source,\n    name,\n    size = 'medium',\n    isSolid = false,\n    color = 'auto',\n    testID,\n    overrides = {},\n  } = props;\n\n  const theme = useTheme();\n  const [hasImageFailedLoading, setHasImageFailedLoading] = React.useState(\n    false,\n  );\n  const imageUnavailable = !source || hasImageFailedLoading;\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Avatar.Root'),\n    overrides.Root,\n  );\n  const [Initials, initialsProps] = getOverrides(\n    StyledInitials,\n    props,\n    dlv(theme, 'overrides.Avatar.Initial'),\n    overrides.Initials,\n  );\n  const [ImageR, imageProps] = getOverrides(\n    StyledImage,\n    props,\n    dlv(theme, 'overrides.Avatar.Image'),\n    overrides.Image,\n  );\n\n  return (\n    <Root\n      name={name}\n      size={size}\n      isSolid={isSolid}\n      color={color}\n      testID={testID}\n      {...rootProps}\n    >\n      {imageUnavailable && (\n        <Initials\n          name={name}\n          size={size}\n          isSolid={isSolid}\n          color={color}\n          {...initialsProps}\n        />\n      )}\n      {!imageUnavailable && !!source && (\n        <ImageR\n          onError={() => setHasImageFailedLoading(true)}\n          source={source}\n          {...imageProps}\n        />\n      )}\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\nexport const hashCode = (s?: string) => {\n  const str = String(s);\n  let hash = 0;\n  let char;\n  if (str.trim().length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    char = str.charCodeAt(i);\n    // tslint:disable-next-line\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    // tslint:disable-next-line\n    hash &= hash;\n  }\n  return Math.abs(hash);\n};\n\nexport type AvatarColor = 'automatic' | keyof FillColors;\n\nconst avatarScale: { [size in ControlSize]: number } = {\n  large: 2,\n  medium: 1.5,\n  small: 1,\n};\n\ninterface RootProps extends ViewProps, PropsWithChildren {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { testID, children, name, size, isSolid, color, style } = props;\n  const theme = useTheme();\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          backgroundColor:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].backgroundColor,\n          borderRadius: 9999,\n          display: 'flex',\n          height: controlSize,\n          justifyContent: 'center',\n          overflow: 'hidden',\n          position: 'relative',\n          width: controlSize,\n        },\n        style,\n      ]}\n      testID={testID}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getInitials = (name?: string, fallback = '?') => {\n  if (!name) return fallback;\n\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ') // Repeated spaces results in empty strings\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase()) // Watch out for empty strings\n    .join('');\n};\n\ninterface InitialsProps extends TextProps {\n  size: ControlSize | number;\n  name?: string;\n  isSolid: boolean;\n  color: 'auto' | FillColor;\n}\n\nconst StyledInitials = (props: InitialsProps) => {\n  const { name, size, isSolid, color, style, ...textProps } = props;\n  const theme = useTheme();\n\n  const appearances = theme.fills[isSolid ? 'solid' : 'subtle'];\n  const keys = Object.keys(appearances);\n\n  const controlSize = isControlSize(size)\n    ? theme.controlHeights[size] * avatarScale[size]\n    : size;\n\n  const initials = getInitials(name);\n\n  return (\n    <Text\n      {...textProps}\n      style={[\n        {\n          color:\n            appearances[\n              color === 'auto'\n                ? (keys[hashCode(name) % keys.length] as keyof FillColors)\n                : color\n            ].color,\n          fontSize: controlSize / 2,\n          lineHeight: controlSize,\n        },\n        getStyle(props, style),\n      ]}\n    >\n      {initials}\n    </Text>\n  );\n};\n\nconst StyledImage = (props: ImageProps) => {\n  const { style, ...imageProps } = props;\n\n  return (\n    <Image\n      style={[\n        {\n          height: '100%',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...imageProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Icon, ListItem } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"listitem\"\n    }}>{`ListItem`}</h1>\n    <p>{`For image, it composes `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{`, you can pass `}<inlineCode parentName=\"p\">{`avatarProps`}</inlineCode>{` provide more specific customizations`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<ListItem\\n  onPress={() => console.log(\\'Press\\')}\\n  source={{ uri: \\'https://picsum.photos/200/200\\' }}\\n  title=\\\"Some label\\\"\\n  description=\\\"Some description\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Icon,\n      ListItem\n    }} mdxType=\"Playground\">\n  <ListItem onPress={() => console.log('Press')} source={{\n        uri: 'https://picsum.photos/200/200'\n      }} title=\"Some label\" description=\"Some description\" mdxType=\"ListItem\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ListItem} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageSourcePropType,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Avatar, AvatarProps } from '../Avatar';\nimport { Text, TextProps } from '../Typography';\n\ninterface ListItemBaseProps {\n  /**\n   * Title of the list item\n   */\n  title?: OptionalString;\n\n  /**\n   * Description of the list item\n   */\n  description?: OptionalString;\n\n  /**\n   * Source of the avatar\n   */\n  source?: ImageSourcePropType;\n\n  /**\n   * When true, list item will not be able to be pressed.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Called when pressing list item\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ListItemOverrides {\n  Root: RootProps;\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  TextWrapper: TextWrapperProps;\n  Description: DescriptionProps;\n  Action: ActionProps;\n  Avatar: AvatarProps;\n}\n\nexport interface ListItemProps\n  extends WithOverrides<ListItemBaseProps, ListItemOverrides> {}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    isDisabled = false,\n    title,\n    description,\n    onPress,\n    testID,\n    source,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    dlv(theme, 'overrides.ListItem.Touchable'),\n    overrides.Touchable,\n  );\n  const [TextWrapper, textProps] = getOverrides(\n    StyledTextWrapper,\n    props,\n    dlv(theme, 'overrides.ListItem.TextWrapper'),\n    overrides.TextWrapper,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    dlv(theme, 'overrides.ListItem.Title'),\n    overrides.Title,\n  );\n  const [Description, descriptionProps] = getOverrides(\n    StyledDescription,\n    props,\n    dlv(theme, 'overrides.ListItem.Description'),\n    overrides.Description,\n  );\n  const [Action, rightIconProps] = getOverrides(\n    StyledAction,\n    props,\n    dlv(theme, 'overrides.ListItem.Action'),\n    overrides.Action,\n  );\n  const [AvatarR, avatarProps] = getOverrides(\n    StyledAvatar,\n    props,\n    dlv(theme, 'overrides.ListItem.Avatar'),\n    overrides.Avatar,\n  );\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.ListItem.Root'),\n    overrides.Root,\n  );\n\n  return (\n    <Root isDisabled={isDisabled} {...rootProps}>\n      <Touchable\n        onPress={onPress}\n        testID={testID}\n        isDisabled={isDisabled}\n        {...touchableProps}\n      >\n        <AvatarR size=\"small\" source={source} {...avatarProps} />\n        <TextWrapper\n          hasAvatar={\n            !!source ||\n            !!overrides.Avatar ||\n            !!dlv(theme, 'overrides.ListItem.Avatar')\n          }\n          {...textProps}\n        >\n          <Title title={title} {...titleProps} />\n          <Description description={description} {...descriptionProps} />\n        </TextWrapper>\n      </Touchable>\n      <Action isDisabled={isDisabled} {...rightIconProps} />\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, isDisabled, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          height: 72,\n          backgroundColor: isDisabled\n            ? theme.colors.background.greyLight\n            : theme.colors.background.content,\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps {\n  children?: React.ReactNode;\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const { style, children, isDisabled, ...touchableProps } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface TitleProps extends TextProps {\n  title?: OptionalString;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const { title, style, ...textProps } = props;\n\n  if (!title) return null;\n\n  return (\n    <Text size=\"large\" style={[{}, getStyle(props, style)]} {...textProps}>\n      {title}\n    </Text>\n  );\n};\n\ninterface TextWrapperProps extends ViewProps {\n  children?: React.ReactNode;\n  hasAvatar: boolean;\n}\n\nconst StyledTextWrapper = (props: TextWrapperProps) => {\n  const { children, style, hasAvatar = false, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        { flex: 1, justifyContent: 'center', paddingLeft: hasAvatar ? 8 : 0 },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface DescriptionProps extends TextProps {\n  description?: OptionalString;\n}\n\nconst StyledDescription = (props: DescriptionProps) => {\n  const { style, description, ...viewProps } = props;\n\n  if (!description) return null;\n\n  return (\n    <Text\n      size=\"small\"\n      color=\"muted\"\n      style={[{}, getStyle(props, style)]}\n      {...viewProps}\n    >\n      {description}\n    </Text>\n  );\n};\n\ninterface ActionProps {\n  isDisabled: boolean;\n}\n\nconst StyledAction = (props: ActionProps) => {\n  return <></>;\n};\n\nconst StyledAvatar = (props: AvatarProps) => {\n  const { source, name } = props;\n\n  if (!source && !name) return null;\n\n  return <Avatar {...props} />;\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n"],"sourceRoot":""}