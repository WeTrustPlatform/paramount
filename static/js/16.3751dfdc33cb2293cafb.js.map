{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Column.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Container.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Row.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/RowAndColumn.mdx"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","Column","xsmall","small","medium","large","xlarge","offsetXsmall","offsetSmall","offsetMedium","offsetLarge","offsetXlarge","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useLayout","useLayout","currentScreenSize","gridColumnCount","gutterWidth","React","GutterWidthContext","_splitColumnConfig","splitColumnConfig","columns","offsetColumns","columnCount","getColumnCount","flexBasis","getProportion","offsetColumnCount","marginLeft","react__WEBPACK_IMPORTED_MODULE_3__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_4__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","flex","maxWidth","paddingLeft","paddingRight","getStyle","dlv","matchedColumn","nearestColumn","currentScreenSizeIndex","DESC_ORDER_SCREEN_SIZES","indexOf","nearestSize","find","screenSize","index","getNearestColumn","concat","config","Container","size","_props$fluid","fluid","containerSizes","marginRight","getMaxWidth","width","undefined","defaultLayout","Row","_props$hasGutter","hasGutter","flexDirection","flexWrap","_jsxFileName","Provider","value","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_9__","___WEBPACK_IMPORTED_MODULE_5__","paddingVertical","___WEBPACK_IMPORTED_MODULE_6__","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","height","borderWidth","of","className","isMDXComponent"],"mappings":"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","file":"static/js/16.8d9745a3.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport {\n  ColumnCount,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\nimport { GutterWidthContext } from './Row';\n\nexport interface ColumnConfigBase {\n  /**\n   * Number of columns to span over when screen size is xsmall\n   */\n  xsmall?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is small\n   */\n  small?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is medium\n   */\n  medium?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is large\n   */\n  large?: ColumnCount;\n\n  /**\n   * Number of columns to span over when screen size is xlarge\n   */\n  xlarge?: ColumnCount;\n}\n\nexport interface ColumnConfig extends ColumnConfigBase {\n  /**\n   * Number of columns to offset when screen size is xsmall\n   */\n  offsetXsmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is small\n   */\n  offsetSmall?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is medium\n   */\n  offsetMedium?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is large\n   */\n  offsetLarge?: ColumnCount;\n\n  /**\n   * Number of columns to offset when screen size is xlarge\n   */\n  offsetXlarge?: ColumnCount;\n}\n\nexport interface ColumnProps extends ColumnConfig, Omit<ViewProps, 'style'> {\n  /** Content of the column. */\n  children?: React.ReactNode;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<ColumnProps, ViewStyle>;\n}\n\nexport type ColumnOverride = OverrideStyle<ColumnProps, ViewStyle>;\n\nexport const Column = (props: ColumnProps) => {\n  const {\n    children,\n    style,\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n    ...viewProps\n  } = props;\n\n  const theme = useTheme();\n  const { currentScreenSize, gridColumnCount } = useLayout();\n  const gutterWidth = React.useContext(GutterWidthContext);\n\n  const config = {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  };\n  const { columns, offsetColumns } = splitColumnConfig(config);\n\n  const columnCount = getColumnCount(columns, currentScreenSize);\n  const flexBasis = getProportion(columnCount || 12, gridColumnCount);\n  const offsetColumnCount = getColumnCount(offsetColumns, currentScreenSize);\n  const marginLeft = getProportion(offsetColumnCount || 0, gridColumnCount);\n\n  return (\n    <View\n      style={[\n        {\n          flex: 1,\n          flexBasis,\n          marginLeft,\n          maxWidth: flexBasis,\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Column.style')),\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\n// Find nearest matching column count\n// when currentScreenSize = xlarge and columns = { medium: 6 }, it should use medium column count\n// when currentScreenSize = small and columns = { medium: 6 }, it should return null\nconst getNearestColumn = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!columns[screenSize];\n  });\n\n  return nearestSize ? columns[nearestSize] : null;\n};\n\nconst getColumnCount = (\n  columns: ColumnConfigBase,\n  currentScreenSize: ScreenSize,\n) => {\n  const matchedColumn = columns[currentScreenSize];\n  if (matchedColumn) return matchedColumn;\n\n  const nearestColumn = getNearestColumn(columns, currentScreenSize);\n  if (nearestColumn) return nearestColumn;\n\n  return null;\n};\n\nexport const getProportion = (columnCount: number, gridColumnCount: number) => {\n  const percentPerColumn = 100 / gridColumnCount;\n\n  return `${columnCount * percentPerColumn}%`;\n};\n\nexport const splitColumnConfig = (config: ColumnConfig) => {\n  const {\n    xsmall,\n    small,\n    medium,\n    large,\n    xlarge,\n    offsetXsmall,\n    offsetSmall,\n    offsetMedium,\n    offsetLarge,\n    offsetXlarge,\n  } = config;\n  const columns = { xsmall, small, medium, large, xlarge };\n  const offsetColumns = {\n    large: offsetLarge,\n    medium: offsetMedium,\n    small: offsetSmall,\n    xlarge: offsetXlarge,\n    xsmall: offsetXsmall,\n  };\n\n  return { columns, offsetColumns };\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport {\n  ContainerSize,\n  ContainerSizes,\n  DESC_ORDER_SCREEN_SIZES,\n  ScreenSize,\n  useLayout,\n} from './LayoutContext';\n\nexport interface ContainerProps extends Omit<ViewProps, 'style'> {\n  /** Children node */\n  children?: React.ReactNode;\n\n  /**\n   * When true, it will not contain the width and occupy fully the parent container\n   * @default false\n   */\n  fluid?: boolean;\n\n  /**\n   * The size of the container. It will override the internal responsive mechanism, and will force the\n   * containment of a particular screen size\n   */\n  size?: ContainerSize;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<ContainerProps, ViewStyle>;\n}\n\nexport type ContainerOverride = OverrideStyle<ContainerProps, ViewStyle>;\n\n/**\n * On screens with size lg and above, caps maximum width of the content\n */\nexport const Container = (props: ContainerProps) => {\n  const { children, size, fluid = false, style, ...viewProps } = props;\n  const theme = useTheme();\n  const { gutterWidth, containerSizes, currentScreenSize } = useLayout();\n\n  return (\n    <View\n      style={[\n        {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: fluid\n            ? '100%'\n            : size\n            ? containerSizes[size]\n            : getMaxWidth(containerSizes, currentScreenSize),\n          paddingLeft: gutterWidth / 2,\n          paddingRight: gutterWidth / 2,\n          width: '100%',\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Container.style')),\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst getMaxWidth = (\n  containerSizes: ContainerSizes,\n  currentScreenSize: ScreenSize,\n) => {\n  const currentScreenSizeIndex = DESC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  const nearestSize = DESC_ORDER_SCREEN_SIZES.find((screenSize, index) => {\n    if (screenSize === 'xsmall') return false;\n    if (currentScreenSizeIndex > index) return false;\n\n    return !!containerSizes[screenSize];\n  });\n\n  if (nearestSize === 'xsmall') return undefined;\n\n  return nearestSize ? containerSizes[nearestSize] : undefined;\n};\n","import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/overrides';\nimport { ColumnProps } from './Column';\nimport { defaultLayout, useLayout } from './LayoutContext';\n\nexport interface RowProps extends Omit<ViewProps, 'style'> {\n  /**\n   * When true, there will be gutter between columns\n   * @default true\n   */\n  hasGutter?: boolean;\n\n  /**\n   * `Column` components\n   */\n  children:\n    | Array<React.ReactElement<ColumnProps>>\n    | React.ReactElement<ColumnProps>;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<RowProps, ViewStyle>;\n}\n\nexport type RowOverride = OverrideStyle<RowProps, ViewStyle>;\n\nexport const GutterWidthContext = React.createContext(\n  defaultLayout.gutterWidth,\n);\n\nexport const Row = (props: RowProps) => {\n  const { children, hasGutter = true, style, ...viewProps } = props;\n  const { gutterWidth } = useLayout();\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          marginLeft: hasGutter ? -gutterWidth / 2 : 0,\n          marginRight: hasGutter ? -gutterWidth / 2 : 0,\n        },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Row.style')),\n      ]}\n      {...viewProps}\n    >\n      <GutterWidthContext.Provider value={hasGutter ? gutterWidth : 0}>\n        {children}\n      </GutterWidthContext.Provider>\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Container, Column, Row, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"row-and-column\"\n    }}>{`Row and Column`}</h1>\n    <p><inlineCode parentName=\"p\">{`Column`}</inlineCode>{` renders at the width of defined columns count. It will match nearest defined size that is smaller than or equal to current screen size.\n`}<inlineCode parentName=\"p\">{`Row`}</inlineCode>{` wraps `}<inlineCode parentName=\"p\">{`Column`}</inlineCode>{`s to keep them horizontal`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={1}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={8}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column medium={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={1} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={8} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column medium={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"column-wrapping\"\n    }}>{`Column wrapping`}</h3>\n    <Playground __position={1} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column xsmall={9}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={4}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column xsmall={9} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={4} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"offsets\"\n    }}>{`Offsets`}</h3>\n    <Playground __position={2} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row>\\n        <Column offsetXsmall={2} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={4} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n      <Row>\\n        <Column offsetXsmall={6} xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={2} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={4} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n        <Row mdxType=\"Row\">\n          <Column offsetXsmall={6} xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"without-gutter\"\n    }}>{`Without gutter`}</h3>\n    <Playground __position={3} __code={'<LayoutProvider>\\n  <Box paddingVertical={16}>\\n    <Container>\\n      <Row hasGutter={false}>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n        <Column xsmall={6}>\\n          <Box backgroundColor=\\\"#67c6bb\\\" height={48} borderWidth={1} />\\n        </Column>\\n      </Row>\\n    </Container>\\n  </Box>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Container,\n      Column,\n      Row,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Box paddingVertical={16} mdxType=\"Box\">\n      <Container mdxType=\"Container\">\n        <Row hasGutter={false} mdxType=\"Row\">\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n          <Column xsmall={6} mdxType=\"Column\">\n            <Box backgroundColor=\"#67c6bb\" height={48} borderWidth={1} mdxType=\"Box\" />\n          </Column>\n        </Row>\n      </Container>\n    </Box>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"row-props\"\n    }}>{`Row Props`}</h2>\n    <Props of={Row} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"row-customization\"\n    }}>{`Row Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RowStyles {\n  rowStyle: ViewStyle;\n}\n\ngetStyles={(RowProps, Theme) => RowStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View rowStyle />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"column-props\"\n    }}>{`Column Props`}</h2>\n    <Props of={Column} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"column-customization\"\n    }}>{`Column Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ColumnStyles {\n  columnStyle: ViewStyle;\n}\n\ngetStyles={(ColumnProps, Theme) => ColumnStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View columnStyle />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}