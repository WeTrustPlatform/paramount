{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","Playground","__position","__code","__scope","this","Props","Avatar","Icon","ListItem","onPress","console","log","rightIcon","color","size","name","leftIcon","source","uri","label","description","isDisabled","getStyles","theme","imageWrapperStyle","leftWrapperStyle","textWrapperStyle","containerStyle","textStyle","focusBackgroundColor","wrapperStyle","of","isMDXComponent"],"mappings":"oYAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,6BAOMG,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAR,EAAAY,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAG5E,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,YADR,aAGA,EAAAf,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAAA,oCAA8B,EAAAZ,EAAAY,KAAA,cAAYI,WAAW,KAAvB,UAA9B,mBAAmG,EAAAhB,EAAAY,KAAA,cAAYI,WAAW,KAAvB,eAAnG,0CACA,EAAAhB,EAAAY,KAACT,EAAAc,WAAD,CAAYC,WAAY,EAAGC,OAAQ,wiBAAmjBC,QAAS,CAC7lBV,MAAOW,KAAOA,KAAKX,MAAQA,EAC3BO,wBACAK,cACAC,gBACAC,YACAC,qBACCX,QAAQ,eACb,EAAAd,EAAAY,KAACR,EAAAqB,SAAD,CAAUC,QAAS,kBAAMC,QAAQC,IAAI,UAAUC,WAAW,EAAA7B,EAAAY,KAACR,EAAAoB,KAAD,CAAMM,MAAM,UAAUC,KAAM,GAAIC,KAAK,gBAAgBlB,QAAQ,SAAWmB,UAAU,EAAAjC,EAAAY,KAACR,EAAAmB,OAAD,CAAQQ,KAAM,GAAIG,OAAQ,CAChKC,IAAK,iCACJrB,QAAQ,WAAasB,MAAM,aAAaC,YAAY,mBAAmBN,KAAK,QAAQO,YAAY,EAAOC,UAAW,SAAC7B,EAAO8B,GAAR,MAAmB,CACtIC,kBAAmB,GACnBC,iBAAkB,GAClBC,iBAAkB,GAClBC,eAAgB,GAChBC,UAAW,GACXC,qBAAsB,UACtBC,aAAc,KACZjC,QAAQ,eAEd,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAmB,MAAD,CAAO0B,GAAIvB,WAAUX,QAAQ,qMAIjCP,EAAW0C,gBAAiB","file":"static/js/23.9437480e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Avatar, Icon, ListItem } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"listitem\"\n    }}>{`ListItem`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <p>{`For image, it composes `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{`, you can pass `}<inlineCode parentName=\"p\">{`avatarProps`}</inlineCode>{` provide more specific customizations`}</p>\n    <Playground __position={0} __code={'<ListItem\\n  onPress={() => console.log(\\'Press\\')}\\n  rightIcon={<Icon color=\\\"#7e7e7e\\\" size={24} name=\\\"chevron-right\\\" />}\\n  leftIcon={\\n    <Avatar size={45} source={{ uri: \\'https://picsum.photos/200/200\\' }} />\\n  }\\n  label=\\\"Some label\\\"\\n  description=\\\"Some description\\\"\\n  size=\\\"large\\\"\\n  isDisabled={false}\\n  getStyles={(props, theme) => ({\\n    imageWrapperStyle: {},\\n    leftWrapperStyle: {},\\n    textWrapperStyle: {},\\n    containerStyle: {},\\n    textStyle: {},\\n    focusBackgroundColor: \\'#fafafa\\',\\n    wrapperStyle: {},\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Avatar,\n      Icon,\n      ListItem\n    }} mdxType=\"Playground\">\n  <ListItem onPress={() => console.log('Press')} rightIcon={<Icon color=\"#7e7e7e\" size={24} name=\"chevron-right\" mdxType=\"Icon\" />} leftIcon={<Avatar size={45} source={{\n        uri: 'https://picsum.photos/200/200'\n      }} mdxType=\"Avatar\" />} label=\"Some label\" description=\"Some description\" size=\"large\" isDisabled={false} getStyles={(props, theme) => ({\n        imageWrapperStyle: {},\n        leftWrapperStyle: {},\n        textWrapperStyle: {},\n        containerStyle: {},\n        textStyle: {},\n        focusBackgroundColor: '#fafafa',\n        wrapperStyle: {}\n      })} mdxType=\"ListItem\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={ListItem} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}