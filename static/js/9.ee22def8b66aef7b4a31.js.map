{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useForceUpdate.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/LoadingIndicators/Dots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/Picker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/Picker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/usePicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/ControlSize.ts"],"names":["reducer","state","action","useForceUpdate","_React$useReducer","React","useReducer","dispatch","Object","slicedToArray","useCallback","AnimatedView","animated","View","Dots","props","theme","useTheme","_props$size","size","_props$color","color","colors","text","primary","forceUpdate","trail","useTrail","config","duration","from","opacity","onRest","reset","to","_to","asyncToGenerator","regenerator_default","a","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","react_default","createElement","style","alignItems","flexDirection","justifyContent","__source","fileName","_jsxFileName","lineNumber","map","index","key","backgroundColor","borderRadius","height","marginLeft","marginRight","width","Button","_props$appearance","appearance","_props$isDisabled","isDisabled","_props$isLoading","isLoading","_props$onPress","onPress","title","testID","_props$overrides","overrides","_getOverrides","getOverrides","StyledTouchable","dlv","Touchable","_getOverrides2","touchableProps","_getOverrides3","StyledTitle","Title","_getOverrides4","titleProps","_getOverrides5","StyledLoading","Loading","_getOverrides6","loadingProps","_getOverrides7","StyledIcon","IconBefore","_getOverrides8","iconBeforeProps","_getOverrides9","IconAfter","_getOverrides10","iconAfterProps","esm_extends","Button_jsxFileName","children","objectWithoutProperties","buttonAppearances","minimal","default","background","content","danger","secondary","greyLight","button","dangerLight","primaryLight","secondaryLight","outline","borderColor","borderWidth","border","getButtonAppearances","_ref","isControlSize","controlBorderRadius","minHeight","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","TouchableOpacity","accessibilityRole","disabled","objectSpread","getButtonTextColor","defaultText","dangerText","primaryText","secondaryText","textProps","textSize","textSizes","Text","weight","muted","display","fontWeight","textAlign","paddingHorizontal","getStyle","Dots_Dots","Fragment","State","_props$initial","initial","_React$useState","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setState","newState","layoutProps","MDXLayout","MDXContent","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","Playground","Props","Picker","___WEBPACK_IMPORTED_MODULE_5__","value","_ref2","___WEBPACK_IMPORTED_MODULE_6__","onValueChange","tab","data","Array","fill","v","i","concat","of","isMDXComponent","_props$data","_props$onValueChange","keyExtractor","isMulti","StyledRoot","Root","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","rootProps","StyledItem","Item","itemProps","_usePicker","usePicker","items","handleSelect","react__WEBPACK_IMPORTED_MODULE_4___default","item","onSelect","isSelected","viewProps","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","flex","_Button__WEBPACK_IMPORTED_MODULE_8__","isArray","itemValue","itemIndex","filter","val","some","selVal","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","useControlSizeUtils","_theme__WEBPACK_IMPORTED_MODULE_0__","getControlHeight","getSmallerTextSize","large","small","getTextSize","getSmallerHeightControlSize","getHeightControlSize"],"mappings":"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","file":"static/js/9.254f8a37.js","sourcesContent":["import React from 'react';\n\nconst reducer = (state: boolean, action: null): boolean => !state;\n\nexport const useForceUpdate = () => {\n  const [, dispatch] = React.useReducer(reducer, true);\n\n  // Turn dispatch(required_parameter) into dispatch().\n  return React.useCallback(() => {\n    dispatch(null);\n  }, [dispatch]);\n};\n","import React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nimport { useForceUpdate } from '../../hooks';\nimport { useTheme } from '../../theme';\n\nconst AnimatedView = animated(View);\n\nexport interface DotsProps {\n  color?: string;\n  size?: number;\n}\n\nexport const Dots = (props: DotsProps) => {\n  const theme = useTheme();\n  const { size = 10, color = theme.colors.text.primary } = props;\n  const forceUpdate = useForceUpdate();\n\n  const trail = useTrail(3, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    onRest: forceUpdate,\n    reset: true,\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ opacity: 1 });\n      // tslint:disable-next-line\n      await next({ opacity: 0 });\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={index}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: 999,\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { ButtonColor, ControlSize, Theme, useTheme } from '../../theme';\nimport { isControlSize } from '../../utils/ControlSize';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { OptionalString } from '../../utils/types';\nimport { Dots } from '../LoadingIndicators';\nimport { Text, TextProps } from '../Typography';\n\ninterface ButtonBaseProps {\n  /** Title of the button */\n  title?: OptionalString;\n\n  /**\n   * The color of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /** Called when button is pressed */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nexport interface ButtonOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconBefore: IconProps;\n  IconAfter: IconProps;\n  Loading: LoadingProps;\n}\n\nexport interface ButtonProps\n  extends WithOverrides<ButtonBaseProps, ButtonOverrides> {}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    color = 'default',\n    isDisabled = false,\n    isLoading = false,\n    size = 'medium',\n    onPress = () => {\n      return;\n    },\n    title,\n    testID,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Touchable, touchableProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n      onPress,\n      testID,\n    },\n    dlv(theme, 'overrides.Button.Touchable'),\n    overrides.Touchable,\n  );\n  const [Title, titleProps] = getOverrides(\n    StyledTitle,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      size,\n      title,\n    },\n    dlv(theme, 'overrides.Button.Title'),\n    overrides.Title,\n  );\n  const [Loading, loadingProps] = getOverrides(\n    StyledLoading,\n    props,\n    {\n      appearance,\n      color,\n    },\n    dlv(theme, 'overrides.Button.Loading'),\n    overrides.Loading,\n  );\n  const [IconBefore, iconBeforeProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconBefore'),\n    overrides.IconBefore,\n  );\n  const [IconAfter, iconAfterProps] = getOverrides(\n    StyledIcon,\n    props,\n    {\n      appearance,\n      color,\n      isDisabled,\n      isLoading,\n      size,\n    },\n    dlv(theme, 'overrides.Button.IconAfter'),\n    overrides.IconAfter,\n  );\n\n  return (\n    <Touchable {...touchableProps}>\n      <IconBefore {...iconBeforeProps} />\n      {isLoading ? <Loading {...loadingProps} /> : <Title {...titleProps} />}\n      <IconAfter {...iconAfterProps} />\n    </Touchable>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface ButtonAppearances {\n  minimal: { [size in ButtonColor]: ViewStyle };\n  primary: { [size in ButtonColor]: ViewStyle };\n  outline: { [size in ButtonColor]: ViewStyle };\n}\n\ntype ButtonAppearance = keyof ButtonAppearances;\n\nconst getButtonAppearances = (\n  theme: Theme,\n  isLoading: boolean,\n): ButtonAppearances => {\n  return {\n    minimal: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n      },\n    },\n    primary: {\n      default: {\n        backgroundColor: isLoading\n          ? theme.colors.background.greyLight\n          : theme.colors.button.default,\n      },\n      danger: {\n        backgroundColor: isLoading\n          ? theme.colors.background.dangerLight\n          : theme.colors.button.danger,\n      },\n      primary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.primaryLight\n          : theme.colors.button.primary,\n      },\n      secondary: {\n        backgroundColor: isLoading\n          ? theme.colors.background.secondaryLight\n          : theme.colors.button.secondary,\n      },\n    },\n\n    outline: {\n      default: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.text.default,\n        borderWidth: 3,\n      },\n      danger: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.danger,\n        borderWidth: 3,\n      },\n      primary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.primary,\n        borderWidth: 3,\n      },\n      secondary: {\n        backgroundColor: theme.colors.background.content,\n        borderColor: theme.colors.border.secondary,\n        borderWidth: 3,\n      },\n    },\n  };\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n  size: ControlSize | number;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    isLoading,\n    size,\n    children,\n    style,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n  const buttonAppearances = getButtonAppearances(theme, isLoading);\n\n  const { borderRadius, minHeight, paddingLeft, paddingRight } = isControlSize(\n    size,\n  )\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        minHeight: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size] + 8,\n        paddingRight: theme.controlPaddings[size] + 8,\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        minHeight: size,\n        paddingLeft: theme.controlPaddings.medium + 8,\n        paddingRight: theme.controlPaddings.medium + 8,\n      };\n\n  return (\n    <TouchableOpacity\n      accessibilityRole=\"button\"\n      disabled={!!(isDisabled || isLoading)}\n      style={[\n        {\n          borderRadius,\n          minHeight,\n          paddingLeft,\n          paddingRight,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          ...buttonAppearances[appearance][color],\n          ...(isDisabled && {\n            backgroundColor: theme.colors.button.disabled,\n          }),\n        },\n        style,\n      ]}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonTextColors {\n  minimal: { [size in ButtonColor]: string };\n  primary: { [size in ButtonColor]: string };\n  outline: { [size in ButtonColor]: string };\n}\n\nconst getButtonTextColor = (theme: Theme): ButtonTextColors => {\n  return {\n    minimal: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n    primary: {\n      default: theme.colors.button.defaultText,\n      danger: theme.colors.button.dangerText,\n      primary: theme.colors.button.primaryText,\n      secondary: theme.colors.button.secondaryText,\n    },\n\n    outline: {\n      default: theme.colors.text.default,\n      danger: theme.colors.text.danger,\n      primary: theme.colors.text.primary,\n      secondary: theme.colors.text.secondary,\n    },\n  };\n};\n\ninterface TitleProps extends TextProps {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n}\n\nconst StyledTitle = (props: TitleProps) => {\n  const {\n    appearance,\n    color,\n    isDisabled,\n    size,\n    title,\n    style,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const textSize = isControlSize(size)\n    ? theme.textSizes[size]\n    : theme.textSizes.medium;\n\n  if (!title) return null;\n\n  return (\n    <Text\n      weight=\"bold\"\n      style={[\n        {\n          alignItems: 'center',\n          color: isDisabled\n            ? theme.colors.text.muted\n            : getButtonTextColor(theme)[appearance][color],\n          display: 'flex',\n          fontWeight: '600',\n          justifyContent: 'center',\n          textAlign: 'center',\n          paddingHorizontal: 8,\n          ...textSize,\n        },\n        getStyle(props, style),\n      ]}\n      {...textProps}\n    >\n      {title}\n    </Text>\n  );\n};\n\ninterface LoadingProps {\n  color: ButtonColor;\n  appearance: ButtonAppearance;\n}\n\nconst StyledLoading = (props: LoadingProps) => {\n  const { appearance, color } = props;\n  const theme = useTheme();\n\n  return <Dots color={getButtonTextColor(theme)[appearance][color]} />;\n};\n\ninterface IconProps extends PropsWithChildren {\n  size: ControlSize | number;\n  color: ButtonColor;\n  title?: OptionalString;\n  appearance: ButtonAppearance;\n  isDisabled: boolean;\n  isLoading: boolean;\n}\n\nconst StyledIcon = (props: IconProps) => {\n  return <></>;\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State, Picker } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"picker\"\n    }}>{`Picker`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'Tab 1\\' }}>\\n  {({ state, setState }) => (\\n    <Picker\\n      value={state.value}\\n      onValueChange={tab => setState({ value: tab })}\\n      data={new Array(4).fill(0).map((v, i) => ({\\n        value: `Tab ${i + 1}`,\\n      }))}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      Picker\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'Tab 1'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Picker value={state.value} onValueChange={tab => setState({\n          value: tab\n        })} data={new Array(4).fill(0).map((v, i) => ({\n          value: `Tab ${i + 1}`\n        }))} mdxType=\"Picker\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Picker} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Button } from '../Button';\nimport {\n  PickerItem,\n  PickerItemProps,\n  usePicker,\n  UsePickerProps,\n} from './usePicker';\n\nexport interface PickerOverrides<\n  TValue extends any,\n  TItem extends PickerItem<TValue>,\n  TItemProps extends ItemProps<TValue, TItem & PickerItemProps>\n> {\n  Root: RootProps;\n  Item: TItemProps;\n}\n\nexport interface ItemProps<\n  TValue extends any,\n  TItem extends PickerItem<TValue> & PickerItemProps\n> {\n  item: TItem;\n  onSelect?: () => void;\n}\n\nexport interface PickerProps<\n  TValue extends any,\n  TItem extends PickerItem<TValue>,\n  TItemProps extends ItemProps<TValue, TItem & PickerItemProps>,\n  TIsMulti extends boolean = false\n>\n  extends WithOverrides<\n    UsePickerProps<TValue, TItem, TIsMulti>,\n    PickerOverrides<TValue, TItem, TItemProps>\n  > {}\n\nexport const Picker = <\n  TValue extends any,\n  TItem extends PickerItem<TValue>,\n  TItemProps extends ItemProps<TValue, TItem & PickerItemProps>,\n  TIsMulti extends boolean = false\n>(\n  props: PickerProps<TValue, TItem, TItemProps, TIsMulti>,\n) => {\n  const {\n    data = [],\n    value,\n    onValueChange = () => {\n      return;\n    },\n    keyExtractor,\n    isMulti,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    dlv(theme, 'overrides.Picker.Root'),\n    overrides.Root,\n  );\n  const [Item, itemProps] = getOverrides(\n    StyledItem,\n    props,\n    dlv(theme, 'overrides.Picker.Item'),\n    overrides.Item,\n  );\n\n  const { items, handleSelect } = usePicker({\n    value,\n    onValueChange,\n    data,\n    isMulti,\n    keyExtractor,\n  });\n\n  return (\n    <Root {...rootProps}>\n      {items.map(item => (\n        <Item\n          key={item.key}\n          onSelect={() => handleSelect(item.value, item.index, item.isSelected)}\n          item={item}\n          {...itemProps}\n        />\n      ))}\n    </Root>\n  );\n};\n\ninterface RootProps extends ViewProps {\n  children?: React.ReactNode;\n}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        {\n          borderRadius: theme.controlBorderRadius.medium,\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const StyledItem = <\n  TValue extends any,\n  TItem extends PickerItem<TValue>,\n  TItemProps extends ItemProps<TValue, TItem & PickerItemProps>\n>(\n  props: TItemProps,\n) => {\n  const { item, onSelect } = props;\n  const { isSelected, value } = item;\n  const theme = useTheme();\n\n  return (\n    <Button\n      color={isSelected ? 'primary' : 'default'}\n      overrides={{\n        Touchable: {\n          style: {\n            backgroundColor: isSelected ? 'white' : 'transparent',\n            paddingLeft: 0,\n            paddingRight: 0,\n          },\n        },\n        Title: {\n          style: {\n            color: isSelected\n              ? theme.colors.text.primary\n              : theme.colors.text.muted,\n          },\n        },\n      }}\n      title={typeof value === 'string' ? value : 'Invalid value'}\n      onPress={onSelect}\n    />\n  );\n};\n","import * as React from 'react';\n\ntype Value<\n  TValue extends any,\n  TIsMulti extends boolean = false\n> = TIsMulti extends true ? TValue[] : TValue;\n\nexport interface PickerItem<TValue extends any> {\n  value: TValue;\n  key?: string;\n}\n\nexport interface PickerItemProps {\n  key: string;\n  isSelected: boolean;\n  index: number;\n}\n\nexport interface UsePickerProps<\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n> {\n  /**\n   * Set whether it should allow multiple selections. You should specify the value to get proper type-checking.\n   * @default false\n   */\n  isMulti?: TIsMulti;\n\n  /**\n   * Select item or items.\n   * For single-select use single string.\n   * For multi-select use string array\n   *\n   * *This is a controlled component*; Value will reflect selected items\n   */\n  value?: Value<TValue, TIsMulti> | null;\n\n  /**\n   * Called when a select list item is pressed\n   */\n  onValueChange?: (value: Value<TValue, TIsMulti>, index: number) => void;\n\n  /**\n   * List of data\n   */\n  data?: Array<TPickerItem>;\n\n  /**\n   * Used to extract a unique key for a given item at the specified index.\n   * Key is used for caching and as the react key to track item re-ordering.\n   * The default extractor checks item.key, then falls back to using the index, like React does.\n   */\n  keyExtractor?: (item: TPickerItem) => string;\n}\n\nconst isMulti = <TValue extends any>(\n  value: TValue | TValue[],\n): value is TValue[] => Array.isArray(value);\n\nexport const usePicker = <\n  TValue extends any,\n  TPickerItem extends PickerItem<TValue>,\n  TIsMulti extends boolean = false\n>(\n  props: UsePickerProps<TValue, TPickerItem, TIsMulti>,\n) => {\n  const {\n    value,\n    onValueChange = () => {\n      return;\n    },\n    data = [],\n    keyExtractor,\n  } = props;\n\n  const handleSelect = React.useCallback(\n    (itemValue: TValue, itemIndex: number, isSelected: boolean) => {\n      if (isMulti(value)) {\n        if (isSelected) {\n          onValueChange(\n            // @ts-ignore: TODO: make this work\n            value.filter(val => val !== itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        } else {\n          onValueChange(\n            value.concat(itemValue) as Value<TValue, TIsMulti>,\n            itemIndex,\n          );\n        }\n      } else {\n        onValueChange(itemValue as Value<TValue, TIsMulti>, itemIndex);\n      }\n    },\n    [value, onValueChange],\n  );\n\n  const items = data.map((item, index) => {\n    const isSelected = (isMulti(value)\n      ? //\n        // @ts-ignore: TODO: make this work\n        value.some(selVal => selVal === item.value)\n      : value === item.value) as boolean;\n\n    return {\n      ...item,\n      key: keyExtractor ? keyExtractor(item) : item.key || `${index}`,\n      index,\n      isSelected,\n    };\n  }) as (TPickerItem & PickerItemProps)[];\n\n  return {\n    handleSelect,\n    items,\n  };\n};\n","import { ControlSize, useTheme, TextSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n\nexport const useControlSizeUtils = () => {\n  const theme = useTheme();\n\n  const getControlHeight = (size: ControlSize | number): number => {\n    if (typeof size === 'number') return size;\n\n    return theme.controlHeights[size];\n  };\n\n  const getHeightControlSize = (size: ControlSize | number): ControlSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size < theme.controlHeights.medium) return 'small';\n    }\n\n    return size as ControlSize;\n  };\n\n  const getTextSize = (size: TextSize | number): TextSize => {\n    if (typeof size === 'number') {\n      if (size >= theme.controlHeights.large) return 'large';\n      if (size >= theme.controlHeights.medium) return 'medium';\n      if (size >= theme.controlHeights.small) return 'small';\n      if (size < theme.controlHeights.small) return 'xsmall';\n    }\n\n    return size as TextSize;\n  };\n\n  const getSmallerTextSize = (size: TextSize | number): TextSize => {\n    switch (getTextSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      case 'small':\n        return 'xsmall';\n      default:\n        return 'xsmall';\n    }\n  };\n\n  const getSmallerHeightControlSize = (\n    size: ControlSize | number,\n  ): ControlSize => {\n    switch (getHeightControlSize(size)) {\n      case 'large':\n        return 'medium';\n      case 'medium':\n        return 'small';\n      default:\n        return 'small';\n    }\n  };\n\n  return {\n    getControlHeight,\n    getSmallerTextSize,\n    getSmallerHeightControlSize,\n  };\n};\n"],"sourceRoot":""}