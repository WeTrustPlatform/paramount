{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/State.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/isControlSize.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["propToFn","backgroundColor","color","theme","colors","background","elevation","elevations","shape","containerShapes","Box","props","children","testID","viewStyles","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","useTheme","transformedStyles","pureStyles","prop","styleFn","style","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","__source","fileName","lineNumber","State","_props$initial","initial","_React$useState","React","useState","_React$useState2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","setState","useCallback","newState","Icon","_ref","name","_ref$size","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","TextInput","___WEBPACK_IMPORTED_MODULE_6__","value","_ref2","___WEBPACK_IMPORTED_MODULE_8__","placeholder","onChangeText","leftIcon","___WEBPACK_IMPORTED_MODULE_7__","isInvalid","isClearable","onClear","console","log","of","className","isMDXComponent","getTextInputStyles","_ref$isClearable","_ref$isDisabled","isDisabled","_ref$isInvalid","numberOfLines","hasLeftIcon","hasRightIcon","rightIcon","isControlSize","borderRadius","controlBorderRadius","height","controlHeights","paddingLeft","controlPaddings","paddingRight","textSize","textSizes","medium","containerStyle","position","inputStyle","objectSpread","content","borderColor","border","borderWidth","width","greyDark","danger","paddingVertical","leftContainerStyle","alignItems","display","justifyContent","left","paddingHorizontal","zIndex","placeholderTextColor","muted","rightContainerStyle","right","TextInputBase","getStyles","innerRef","_props$isClearable","_props$isDisabled","_props$onClear","textContentType","_props$onChangeText","placeholderTextColorProp","textInputProps","objectWithoutProperties","_mergeStyles","mergeStyles","react","View","esm_extends","ref","editable","TouchableOpacity","onPress","Icon_web","TextInput_TextInputBase","getFontWeight","fontWeights","fontWeight","textColors","textColor","getTextSize","fontSize","getTextStyles","_ref$color","_ref$align","align","weight","_ref$isItalic","isItalic","transform","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamily","fontFamilies","textAlign","fontStyle","textTransform","palette","lightest","light","base","dark","darkest","small","large","overlay","greyLight","greyDefault","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","primary","secondary","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","white","selected","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","blue","red","orange","yellow","green","teal","purple","subtle","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","_props$value","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","merge","all"],"mappings":"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","file":"static/js/13.de0b10ed.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({ name, color, size = 24 }: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return (\n    <IconTag\n      color={color ? getTextColor(theme.colors.text)(color) : color}\n      size={size}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"TextInput\\\"\\n      size=\\\"large\\\"\\n      onChangeText={text => setState({ value: text })}\\n      leftIcon={<Icon name=\\\"menu\\\" size={24} />}\\n      isInvalid={false}\\n      isClearable // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"TextInput\" size=\"large\" onChangeText={text => setState({\n          value: text\n        })} leftIcon={<Icon name=\"menu\" size={24} mdxType=\"Icon\" />} isInvalid={false} isClearable // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={TextInput} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`TextInputStyles {\n  inputStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\ngetStyles={(TextInputProps, Theme) => TextInputStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View leftContainerStyle>{leftIcon}</View>\n  <RNTextInput inputStyle placeholderTextColor />\n  <View rightContainerStyle>{rightIcon}</View>\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { isControlSize } from '../../utils/isControlSize';\nimport { TextInputProps } from './TextInput';\n\nexport interface TextInputStyles {\n  inputStyle: TextStyle;\n  placeholderTextColor: string;\n  containerStyle: ViewStyle;\n  leftContainerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n}\n\nexport type GetTextInputStyles = (\n  props: TextInputProps,\n  theme: Theme,\n) => TextInputStyles;\n\nexport const getTextInputStyles: GetTextInputStyles = (\n  {\n    size = 'medium',\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    numberOfLines,\n    leftIcon,\n    rightIcon,\n  },\n  theme,\n) => {\n  const hasLeftIcon = !!leftIcon;\n  const hasRightIcon = !!(rightIcon || isClearable);\n\n  const {\n    borderRadius,\n    height,\n    paddingLeft,\n    paddingRight,\n    textSize,\n  } = isControlSize(size)\n    ? {\n        borderRadius: theme.controlBorderRadius[size],\n        height: theme.controlHeights[size],\n        paddingLeft: theme.controlPaddings[size],\n        paddingRight: theme.controlPaddings[size],\n        textSize: theme.textSizes[size],\n      }\n    : {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: size,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n        textSize: theme.textSizes.medium,\n      };\n\n  return {\n    containerStyle: {\n      position: 'relative',\n    },\n    inputStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.default,\n      borderRadius,\n      borderWidth: 1,\n      color: theme.colors.text.default,\n      height,\n      paddingLeft,\n      paddingRight,\n      width: '100%',\n      ...textSize,\n      ...(isDisabled\n        ? { backgroundColor: theme.colors.background.greyDark }\n        : {}),\n      ...(isInvalid ? { borderColor: theme.colors.border.danger } : {}),\n      ...(numberOfLines\n        ? {\n            height: numberOfLines * height,\n            paddingVertical: 16,\n          }\n        : {}),\n      ...(hasLeftIcon && { paddingLeft: 40 }),\n      ...(hasRightIcon && { paddingRight: 40 }),\n    },\n    leftContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      left: 0,\n      paddingHorizontal: 8,\n      position: 'absolute',\n      zIndex: 1,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: 1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Icon } from '../Icon';\nimport {\n  GetTextInputStyles,\n  getTextInputStyles,\n  TextInputStyles,\n} from './TextInput.styles';\n\nexport interface TextInputProps extends RNTextInputProps {\n  /**\n   * Size of the text input.\n   * @default medium\n   */\n  size?: ControlSize | number;\n\n  /**\n   * When true, text input is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, text input will be highlighted as invalid\n   */\n  isInvalid?: boolean;\n\n  /**\n   * Icon placed on the left side\n   */\n  leftIcon?: React.ReactNode;\n\n  /**\n   * Icon placed on the left side\n   */\n  rightIcon?: React.ReactNode;\n\n  /**\n   * Called when clear icon is pressed.\n   */\n  onClear?: () => void;\n\n  /**\n   * When true, when value is not empty, a clear icon is displayed\n   */\n  isClearable?: boolean;\n\n  /** Use `ref` instead */\n  innerRef?: React.Ref<RNTextInput>;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: ReplaceReturnType<\n    GetTextInputStyles,\n    DeepPartial<TextInputStyles>\n  >;\n}\n\nconst TextInputBase = (props: TextInputProps) => {\n  const {\n    getStyles,\n    innerRef,\n    isClearable = false,\n    isDisabled = false,\n    isInvalid = false,\n    leftIcon,\n    onClear = () => {\n      return;\n    },\n    rightIcon,\n    size = 'medium',\n    value,\n    textContentType,\n    onChangeText = () => {\n      return;\n    },\n    placeholderTextColor: placeholderTextColorProp,\n    ...textInputProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    inputStyle,\n    placeholderTextColor,\n    containerStyle,\n    leftContainerStyle,\n    rightContainerStyle,\n  } = mergeStyles(getTextInputStyles, getStyles)(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {leftIcon && <View style={leftContainerStyle}>{leftIcon}</View>}\n      {/*\n      // @ts-ignore: name prop being passed for web */}\n      <RNTextInput\n        ref={innerRef}\n        style={inputStyle}\n        editable={!isDisabled}\n        placeholderTextColor={placeholderTextColorProp || placeholderTextColor}\n        name={textContentType}\n        value={value}\n        onChangeText={onChangeText}\n        textContentType={textContentType}\n        {...textInputProps}\n      />\n      {((value && isClearable) || rightIcon) && (\n        <View style={rightContainerStyle}>\n          {value && isClearable ? (\n            <TouchableOpacity\n              onPress={() => {\n                onChangeText('');\n                onClear();\n              }}\n            >\n              <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n            </TouchableOpacity>\n          ) : (\n            rightIcon\n          )}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TextInput = React.forwardRef<RNTextInput, TextInputProps>(\n  (props, ref) => {\n    return <TextInputBase {...props} innerRef={ref} />;\n  },\n);\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import { ControlSize } from '../theme';\n\nexport const isControlSize = (\n  size: ControlSize | number,\n): size is ControlSize => {\n  if (typeof size === 'number') return false;\n\n  return true;\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}