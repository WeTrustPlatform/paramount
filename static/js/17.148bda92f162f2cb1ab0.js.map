{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Icon/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts"],"names":["getAlertStyles","_ref","theme","_ref$intent","intent","bodyStyle","flex","containerStyle","Object","objectSpread","alignItems","backgroundColor","colors","background","content","borderLeftColor","border","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","justifyContent","padding","elevations","descriptionStyle","leftWrapperStyle","titleStyle","Alert","props","title","description","icon","_props$intent","getStyles","testID","_props$actionNode","actionNode","useTheme","_mergeStyles","mergeStyles","components","react","View","style","__source","fileName","_jsxFileName","lineNumber","Box","paddingRight","Icon_web","name","color","resolveIcon","Text","textStyle","weight","propToFn","elevation","shape","containerShapes","children","viewStyles","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","transformedStyles","pureStyles","prop","styleFn","push","react__WEBPACK_IMPORTED_MODULE_1__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_2__","Icon","_ref$color","_ref$size","size","IconTag","Feather","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_getTextSize$fontSize","getTextSize","textSizes","fontSize","iconSize","react__WEBPACK_IMPORTED_MODULE_0__","getTextColor","text","layoutProps","MDXLayout","MDXContent","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","ToastContext","ToastProvider","Toast","___WEBPACK_IMPORTED_MODULE_8__","___WEBPACK_IMPORTED_MODULE_7__","Consumer","_ref2","notify","___WEBPACK_IMPORTED_MODULE_6__","onPress","duration","of","isMDXComponent","component","onRemove","_props$duration","toastSettings","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","React","timer","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_2__","_Alert__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","defaultToastInstance","defaultToastContext","danger","removeToast","success","warning","useToast","getToastStyles","_props$position","position","left","marginBottom","marginLeft","marginRight","marginTop","maxWidth","Platform","OS","right","top","bottom","zIndex","wrapperStyle","width","AnimatedView","animated","ActionType","hasCustomId","initialState","toasts","reducer","state","action","type","ADD_TOAST","toConsumableArray","payload","toast","REMOVE_TOAST","filter","Error","_props$offset","offset","idCounterRef","_React$useReducer","_React$useReducer2","slicedToArray","dispatch","toastInstance","uniqueId","current","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","String","startsWith","err","transitions","useTransition","config","springDefaultConfig","enter","translateY","from","leave","getTransitionConfig","Provider","map","item","transitionStyle","key","transform","esm_extends","friction","tension"],"mappings":"sjCAeO,IAAMA,EAAiC,SAAAC,EAAsBC,GAAU,IAAAC,EAAAF,EAA7BG,cAA6B,IAAAD,EAApB,OAAoBA,EAC5E,MAAO,CACLE,UAAW,CACTC,KAAM,GAERC,eAAeC,OAAAC,EAAA,EAAAD,CAAA,CACbE,WAAY,SACZC,gBAAiBT,EAAMU,OAAOC,WAAWC,QACzCC,gBAAiBb,EAAMU,OAAOI,OAAOZ,GACrCa,gBAAiB,EACjBC,aAAchB,EAAMiB,oBAAoBC,OACxCC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBC,QAAS,IACNtB,EAAMuB,WAAW,IAEtBC,iBAAkB,GAClBC,iBAAkB,CAChBN,QAAS,OACTf,KAAM,EACNgB,cAAe,OAEjBM,WAAY,+xBCOhB,IAgBaC,EAAQ,SAACC,GAAsB,IAExCC,EAOED,EAPFC,MACAC,EAMEF,EANFE,YACAC,EAKEH,EALFG,KAJwCC,EAStCJ,EAJF1B,cALwC,IAAA8B,EAK/B,OAL+BA,EAMxCC,EAGEL,EAHFK,UACAC,EAEEN,EAFFM,OAPwCC,EAStCP,EADFQ,kBARwC,IAAAD,EAQ3B,KAR2BA,EAWpCnC,EAAQqC,cAX4BC,EAmBtCC,YAAYzC,EAAgBmC,EAAWjC,EAAMwC,WAAW1C,eAAxDyC,CACF,CAAErC,UACFF,GAPAyB,EAdwCa,EAcxCb,iBACApB,EAfwCiC,EAexCjC,eACAF,EAhBwCmC,EAgBxCnC,UACAqB,EAjBwCc,EAiBxCd,iBACAE,EAlBwCY,EAkBxCZ,WAMF,OACEe,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOtC,EAAgB6B,OAAQA,EAArCU,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACEN,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOlB,EAAbmB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACY,OAAThB,EACG,KACAA,GACEU,EAAA,cAACO,EAAA,EAAD,CAAKC,aAAc,GAAI5B,eAAe,SAAtCuB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KA9CM,SAAC7C,GACnB,OAAQA,GACN,IAAK,UACH,OAAOuC,EAAA,cAACS,EAAA,EAAD,CAAMC,KAAK,eAAeC,MAAM,UAAhCR,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACT,IAAK,UACH,OAAON,EAAA,cAACS,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,MAAM,UAAlCR,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACT,IAAK,SACH,OAAON,EAAA,cAACS,EAAA,EAAD,CAAMC,KAAK,eAAeC,MAAM,SAAhCR,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACT,QACE,OAAON,EAAA,cAACS,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAM,OAAxBR,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAsCIM,CAAYnD,IAGrBuC,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOxC,EAAbyC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACEN,EAAA,cAACa,EAAA,EAAD,CAAMrB,UAAW,iBAAO,CAAEsB,UAAW7B,IAAe8B,OAAO,OAA3DZ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACGlB,GAEHY,EAAA,cAACa,EAAA,EAAD,CAAMrB,UAAW,iBAAO,CAAEsB,UAAW/B,IAArCoB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACGjB,KAINM,gxBC5FP,IAAMqB,EAAW,CACfhD,gBAAiB,SAAC2C,EAAwBpD,GAExC,OAAIA,EAAMU,OAAOC,WAAWyC,GAEnB,CAAE3C,gBAAiBT,EAAMU,OAAOC,WAAWyC,IAE7C,CACL3C,gBAAiB2C,IAGrBM,UAAW,SAACA,EAA8B1D,GAA/B,OACTA,EAAMuB,WAAWmC,IACnBC,MAAO,SAACA,EAAuB3D,GAAxB,OAAyCA,EAAM4D,gBAAgBD,KAG3DX,EAAM,SAACpB,GAAoB,IAC9BiC,EAAoCjC,EAApCiC,SAAU3B,EAA0BN,EAA1BM,OAAW4B,EADSxD,OAAAyD,EAAA,EAAAzD,CACMsB,EADN,uBAEhC5B,EAAQqC,cACR2B,EAAoB,GACpBC,EAAa,GAEnB,IAAK,IAAMC,KAAQJ,EACjB,GAAII,EAAM,CAER,IAAMC,EAAUV,EAASS,GAEzB,GAAIC,EAAS,CAEX,IAAMxB,EAAQwB,EAAQL,EAAWI,GAAOlE,GAExCgE,EAAkBI,KAAKzB,QAGvBsB,EAAWC,GAAQJ,EAAWI,GAKpC,OACEG,EAAA,cAACC,EAAA,EAAD,CAAMpC,OAAQA,EAAQS,MAAO,CAACsB,EAAYD,GAA1CpB,SAAA,CAAAC,mFAAAE,WAAA,KACGc,kdCrCA,IAAMU,EAAO,SAAAxE,GAIH,IAHfoD,EAGepD,EAHfoD,KAGeqB,EAAAzE,EAFfqD,aAEe,IAAAoB,EAFP,UAEOA,EAAAC,EAAA1E,EADf2E,YACe,IAAAD,EADR,SACQA,EACTzE,EAAQqC,cAERsC,EAAUC,EAAO,KAAAC,OAhBzB,SAAyB1B,GACvB,IAIM2B,EAAS3B,EAAK4B,QAAQ,UAJV,SAACC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOH,EAAOI,OAAO,GAAGD,cAAgBH,EAAOK,MAAM,GAUxBC,CAAgBjC,KAH9BkC,EAIWC,YAAYtF,EAAMuF,UAAlBD,CAA6BZ,GAA/Cc,SACFC,EAA2B,kBAATf,QALT,IAAAW,EAII,GAJJA,GAKwC,EAAIX,EAE3D,OACEgB,EAAA,cAACf,EAAD,CAASvB,MAAOuC,YAAa3F,EAAMU,OAAOkF,KAA1BD,CAAgCvC,GAAQsB,KAAMe,EAA9D7C,SAAA,CAAAC,yFAAAE,WAAA,47BChBE8C,EAAc,GAGdC,EAAY,UACH,SAASC,EAAThG,GAGZ,IAFDyC,EAECzC,EAFDyC,WACGZ,EACFtB,OAAAyD,EAAA,EAAAzD,CAAAP,EAAA,gBACD,OAAOO,OAAA0F,EAAA,EAAA1F,CAACwF,EAADxF,OAAA2F,EAAA,EAAA3F,CAAA,GAAeuF,EAAiBjE,EAAhC,CAAuCY,WAAYA,EAAY0D,QAAQ,YAAvEtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGLzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,SADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,SADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,YAAWzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,sBAAX,mEAAwIzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,qBAAxI,KACAzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAA,OAAA2F,EAAA,EAAA3F,CAAA,CAAM8F,WAAW,OAAU,CAC5BC,UAAa,gBADZ,CAAAzD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,sDAILzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,SADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6CAA4CzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,iBAA5C,mEACAzC,OAAA0F,EAAA,EAAA1F,CAACgG,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,ufAA4fC,QAAS,CACtiB7E,MAAO8E,KAAOA,KAAK9E,MAAQA,EAC3B+E,eACAC,UACA5D,QACA6D,WACAC,iBACAC,kBACAC,WACCd,QAAQ,aATXtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAUFzC,OAAA0F,EAAA,EAAA1F,CAAC2G,EAAA,EAAD,CAAef,QAAQ,gBAAvBtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAOEzC,OAAA0F,EAAA,EAAA1F,CAAC4G,EAAA,EAAaC,SAAd,CAAAvE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAqE,GAAA,IACKC,EADLD,EACKC,OADL,OAES/G,OAAA0F,EAAA,EAAA1F,CAACgH,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAAO,CAClCxF,MAAO,QACPC,YAAa,cACb0F,SAAU,OACR3F,MAAM,aAAaqE,QAAQ,SAJzBtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAQZzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,uBADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6BAGAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAGzC,OAAA0F,EAAA,EAAA1F,CAAA,MAAI8F,WAAW,IAAfxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,aAAH,sBAA0DzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,0BAA1D,sBAA8IzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAA9I,2FAA4RzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,cAA5R,4BAA0WzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,2BAC1WzC,OAAA0F,EAAA,EAAA1F,CAACgG,EAAA,EAAD,CAAOmB,GAAIV,IAAeb,QAAQ,QAAlCtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,iBADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,uBAGAzC,OAAA0F,EAAA,EAAA1F,CAACgG,EAAA,EAAD,CAAOmB,GAAIT,IAAOd,QAAQ,QAA1BtD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAA,OAAA2F,EAAA,EAAA3F,CAAQ,CACN6F,GAAM,iBADR,CAAAvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,uBAGAzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,YAAWzC,OAAA0F,EAAA,EAAA1F,CAAA,cAAY8F,WAAW,IAAvBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kBAAX,YAA6EzC,OAAA0F,EAAA,EAAA1F,CAAA,UAAQ8F,WAAW,IAAnBxD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,uBAC7EzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAA,OAAA2F,EAAA,EAAA3F,CAAA,CAAM8F,WAAW,OAAU,CAC5BC,UAAa,gBADZ,CAAAzD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,yJASLzC,OAAA0F,EAAA,EAAA1F,CAAA,KAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eACAzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAsC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAAKzC,OAAA0F,EAAA,EAAA1F,CAAA,OAAAA,OAAA2F,EAAA,EAAA3F,CAAA,CAAM8F,WAAW,OAAU,CAC5BC,UAAa,gBADZ,CAAAzD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kTAcTgD,EAAW2B,gBAAiB,i6CChErB,IAAMV,EAAQ,SAACpF,GAAsB,IAClC+F,EAA+D/F,EAA/D+F,UAAeC,GAAgDhG,EAApDuE,GAAoDvE,EAAhDgG,UADmBC,EAC6BjG,EAAtC4F,gBADS,IAAAK,EACE,IADFA,EACWC,EADXxH,OAAAyH,EAAA,EAAAzH,CAC6BsB,EAD7B,0CAQ1C,OALAoG,YAAgB,WACd,IAAMC,EAAQC,WAAW,kBAAMN,KAAYJ,GAC3C,OAAO,kBAAMW,aAAaF,KACzB,IAEIG,EAAA,cAAAA,EAAA,cAAGT,GAAaS,EAAA,cAACC,EAAA,EAAD/H,OAAAgI,EAAA,EAAAhI,CAAA,GAAWwH,EAAX,CAAAlF,SAAA,CAAAC,uFAAAE,WAAA,uRC/CzBwF,EAAAC,EAAAC,EAAA,sBAAA3B,IAAA,IAAApB,EAAA6C,EAAA,qPAYA,IAAMG,EAAsC,CAC1CvC,GAAI,IACJyB,SAAU,kBAAM,OAGZe,EAAoC,CACxCC,OAAQ,kBAAMF,GACdrB,OAAQ,kBAAMqB,GACdG,YAAa,SAAA1C,KAGb2C,QAAS,kBAAMJ,GACfK,QAAS,kBAAML,IAGJ5B,EAAekB,gBAAoBW,uNAEzC,IAAMK,EAAW,WACtB,OAAOhB,aAAiBlB,0jDCdnB,IAAMmC,EAAiC,SAACrH,EAAO5B,GAAU,IAAAkJ,EACjCtH,EAArBuH,gBADsD,IAAAD,EAC3C,MAD2CA,EAG9D,MAAO,CACL7I,eAAeC,OAAAC,EAAA,EAAAD,CAAA,CACb8I,KAAM,GACNC,aAAc,EACdC,WAAY,OACZC,YAAa,OACbC,UAAW,EACXC,SAAU,IAEVN,SAA0B,QAAhBO,IAASC,GAAe,QAAU,WAC5CC,MAAO,IACU,QAAbT,EACA,CACEU,IAAK,GAEP,CACEC,OAAQ,IAfF,CAiBZC,OAAQ,MAEVC,aAAc,CACZb,SAAU,WACVc,MAAO,sXC7BPC,EAAeC,mBAASzH,smBAqB9B,IAUK0H,EAVCC,EAAc,SAACvC,GAAD,QAAoCA,EAAc3B,IAMhEmE,EAAmC,CACvCC,OAAQ,cAGLH,qEASL,IAAMI,EAAU,SAACC,EAA2BC,GAC1C,OAAQA,EAAOC,MACb,KAAKP,EAAWQ,UACd,MAAO,CAAEL,OAAM,GAAA1F,OAAAvE,OAAAuK,EAAA,EAAAvK,CAAMmK,EAAMF,QAAZ,CAAoBG,EAAOI,QAAQC,SACpD,KAAKX,EAAWY,aACd,MAAO,CACLT,OAAQE,EAAMF,OAAOU,OAAO,SAAAF,GAAK,OAAIA,EAAM5E,KAAOuE,EAAOI,QAAQ3E,MAErE,QACE,MAAM,IAAI+E,QAwBHnE,EAET,SAAAnF,GAAS,IACHiC,EAAuDjC,EAAvDiC,SADGsH,EACoDvJ,EAA7CwJ,cADP,IAAAD,EACgB,GADhBA,EAAAjC,EACoDtH,EAAhCuH,gBADpB,IAAAD,EAC+B,MAD/BA,EACsCjH,EAAcL,EAAdK,UAC3CoJ,EAAerD,SAAa,GAFvBsD,EAIetD,aAAiBwC,EAASF,GAJzCiB,EAAAjL,OAAAkL,EAAA,EAAAlL,CAAAgL,EAAA,GAIJb,EAJIc,EAAA,GAIGE,EAJHF,EAAA,GAMLvL,EAAQqC,cANHC,EAQ8BC,YACvC0G,EACAhH,EACAjC,EAAMwC,WAAWyG,eAHsB1G,CAIvC,CAAE6I,SAAQjC,YAAYnJ,GAJhBK,EARGiC,EAQHjC,eAAgB2J,EARb1H,EAQa0H,aAoBlB3C,EAASW,cAAkB,SAACF,GAChC,IAAM4D,EAfoB,SAAC5D,GAC3B,IAAM6D,IAAaN,EAAaO,QAC1BzF,EAAKkE,EAAYvC,GAAZ,GAAAjD,OACJiD,EAAc3B,GADV,KAAAtB,OACgB8G,GADhB,GAAA9G,OAEJ8G,GAEP,OAAOrL,OAAAC,EAAA,EAAAD,CAAA,CACL6F,KACAyB,SAAU,kBACR6D,EAAS,CAAEd,KAAMP,EAAWY,aAAcF,QAAS,CAAE3E,UACpD2B,GAKiB+D,CAAoB/D,GAG1C,GAAIuC,EAAYvC,GAAgB,KAAAgE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAC9B,QAAAC,EAAAC,EAAoB1B,EAAMF,OAA1B6B,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAvBf,EAAuBmB,EAAAM,MAE5BC,OAAO1B,EAAM5E,IAAIuG,WAAWD,OAAO3E,EAAc3B,MACnDsF,EAAS,CACPX,QAAS,CAAE3E,GAAI4E,EAAM5E,IACrBwE,KAAMP,EAAWY,gBANO,MAAA2B,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAA,QAAAA,EAAA,oBAAAJ,EAAA,MAAAC,IAchC,OAFAP,EAAS,CAAEd,KAAMP,EAAWQ,UAAWE,QAAS,CAAEC,MAAOW,KAElDA,GACN,IAEGkB,EAAcC,wBAClBpC,EAAMF,OACN,SAAAQ,GAAK,OAAIA,EAAM5E,IAzES,SAACiF,EAAgBjC,GAC3C,MAAiB,QAAbA,EACK,CACL2D,OAAQC,IAERC,MAAO,CAAEC,WAAY7B,GACrB8B,KAAM,CAAED,YAAa,KACrBE,MAAO,CAAEF,YAAa,MAInB,CACLH,OAAQC,IAERC,MAAO,CAAEC,YAAa7B,GACtB8B,KAAM,CAAED,WAAY,KACpBE,MAAO,CAAEF,WAAY,MA0DrBG,CAAoBhC,EAAQjC,IAG9B,OACE1G,EAAA,cAACqE,EAAA,EAAauG,SAAd,CACEb,MAAO,CACL5D,OAAQ,SAACd,GAAD,OACNT,EAAO/G,OAAAC,EAAA,EAAAD,CAAA,GAAKwH,EAAN,CAAqB5H,OAAQ,aACrCmH,OAAQ,SAACS,GAAD,OAAkCT,EAAO/G,OAAAC,EAAA,EAAAD,CAAA,GAAKwH,KACtDgB,QAAS,SAAChB,GAAD,OACPT,EAAO/G,OAAAC,EAAA,EAAAD,CAAA,GAAKwH,EAAN,CAAqB5H,OAAQ,cACrC6I,QAAS,SAACjB,GAAD,OACPT,EAAO/G,OAAAC,EAAA,EAAAD,CAAA,GAAKwH,EAAN,CAAqB5H,OAAQ,cAErC2I,YAAa,SAAC1C,GAAD,OACXsF,EAAS,CAAEd,KAAMP,EAAWY,aAAcF,QAAS,CAAE3E,UAX3DvD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAcGc,EACDpB,EAAA,cAACC,EAAA,EAAD,CAAMC,MAAOtC,EAAbuC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACG6J,EAAYU,IAAI,SAAAvN,GAAA,IAAGwN,EAAHxN,EAAGwN,KAAaC,EAAhBzN,EAAS6B,MAAwB6L,EAAjC1N,EAAiC0N,IAAjC,OACfhL,EAAA,cAACyH,EAAD,CACEuD,IAAKA,EAEL9K,MAAKrC,OAAAC,EAAA,EAAAD,CAAA,GACA0J,EADA,CAEH0D,UAAW,CAAC,CAAET,WAAYO,EAAgBP,eAL9CrK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAQEN,EAAA,cAACuE,EAAA,EAAD1G,OAAAqN,EAAA,EAAArN,CAAA,GAAWiN,EAAX,CAAA3K,SAAA,CAAAC,SAAAC,EAAAC,WAAA,kSCxKZwF,EAAAC,EAAAC,EAAA,sBAAAsE,IAAO,IAAMA,EAAsB,CACjCa,SAAU,GACVC,QAAS","file":"static/js/17.29638752.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme';\nimport { AlertProps } from './Alert';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  titleStyle: TextStyle;\n  descriptionStyle: TextStyle;\n}\n\nexport type GetAlertStyles = (props: AlertProps, theme: Theme) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent = 'info' }, theme) => {\n  return {\n    bodyStyle: {\n      flex: 1,\n    },\n    containerStyle: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.background.content,\n      borderLeftColor: theme.colors.border[intent],\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    descriptionStyle: {},\n    leftWrapperStyle: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n    },\n    titleStyle: {},\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport type Intent = 'danger' | 'info' | 'success' | 'warning';\n\n/**\n * Alert properties\n */\nexport interface AlertProps {\n  /** Title of the alert. */\n  title?: string;\n\n  /** Description of the alert. */\n  description?: string;\n\n  /** Replace the icon of the alert on the left. Set to null to remove icon */\n  icon?: React.ReactNode;\n\n  /**\n   * Intent of the alert.\n   * @default info\n   */\n  intent?: Intent;\n\n  /**\n   * Component displayed on the right side of the alert.\n   * @default null\n   */\n  actionNode?: React.ReactNode;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n\n  /** Used to locate this view in end-to-end tests. */\n  testID?: string;\n}\n\nconst resolveIcon = (intent: Intent) => {\n  switch (intent) {\n    case 'success':\n      return <Icon name=\"check-circle\" color=\"success\" />;\n    case 'warning':\n      return <Icon name=\"alert-triangle\" color=\"warning\" />;\n    case 'danger':\n      return <Icon name=\"alert-circle\" color=\"danger\" />;\n    default:\n      return <Icon name=\"info\" color=\"info\" />;\n  }\n};\n\n/**\n * Alert with intent\n */\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n    actionNode = null,\n  } = props;\n\n  const theme = useTheme();\n\n  const {\n    leftWrapperStyle,\n    containerStyle,\n    bodyStyle,\n    descriptionStyle,\n    titleStyle,\n  } = mergeStyles(getAlertStyles, getStyles, theme.components.getAlertStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      <View style={leftWrapperStyle}>\n        {icon === null\n          ? null\n          : icon || (\n              <Box paddingRight={16} justifyContent=\"center\">\n                {resolveIcon(intent)}\n              </Box>\n            )}\n        <View style={bodyStyle}>\n          <Text getStyles={() => ({ textStyle: titleStyle })} weight=\"bold\">\n            {title}\n          </Text>\n          <Text getStyles={() => ({ textStyle: descriptionStyle })}>\n            {description}\n          </Text>\n        </View>\n      </View>\n      {actionNode}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { BackgroundColor, ContainerShape, Theme, useTheme } from '../../theme';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n}\n\nconst propToFn = {\n  backgroundColor: (color: BackgroundColor, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n    return {\n      backgroundColor: color,\n    };\n  },\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) =>\n    theme.elevations[elevation],\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { useTheme } from '../../theme';\nimport { getTextColor, getTextSize } from '../Typography/Text.styles';\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport const Icon = ({\n  name,\n  color = 'default',\n  size = 'medium',\n}: IconProps) => {\n  const theme = useTheme();\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n  const { fontSize = 16 } = getTextSize(theme.textSizes)(size);\n  const iconSize = typeof size === 'string' ? fontSize + 8 : size;\n\n  return (\n    <IconTag color={getTextColor(theme.colors.text)(color)} size={iconSize} />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, ToastContext, ToastProvider, Toast } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Put `}<inlineCode parentName=\"p\">{`ToastProvider`}</inlineCode>{` at the top level component to wrap components that make use of `}<inlineCode parentName=\"p\">{`ToastContext`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<ToastProvider>{children}</ToastProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` you can use to create toasts from anywhere in the application.`}</p>\n    <Playground __position={0} __code={'<ToastProvider>\\n  {/*\\n    We use `ToastContext.Consumer` here due to limitations in docs\\n    Use `const { notify } = useToast()` inside your function component\\n   */}\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() =>\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            duration: 100000,\\n          })\\n        }\\n        title=\\\"Open toast\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      ToastContext,\n      ToastProvider,\n      Toast\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    {\n          /*\n           We use `ToastContext.Consumer` here due to limitations in docs\n           Use `const { notify } = useToast()` inside your function component\n          */\n        }\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => notify({\n            title: 'Title',\n            description: 'Description',\n            duration: 100000\n          })} title=\"Open toast\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"toastprovider-props\"\n    }}>{`ToastProvider Props`}</h2>\n    <p><em parentName=\"p\">{`Note`}</em>{`: In order for the `}<inlineCode parentName=\"p\">{`position=\"bottom\"`}</inlineCode>{` prop to match the `}<inlineCode parentName=\"p\">{`offset`}</inlineCode>{` exactly, try to keep the title and message short. This is due to derived height of the `}<inlineCode parentName=\"p\">{`Toast`}</inlineCode>{` being \"hard-coded\" when `}<inlineCode parentName=\"p\">{`position=\"bottom\"`}</inlineCode></p>\n    <Props of={ToastProvider} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"toast-options\"\n    }}>{`Toast Options`}</h2>\n    <Props of={Toast} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop on `}<strong parentName=\"p\">{`ToastProvider`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\n\ngetStyles={(ToastProviderProps, Theme) => ToastProviderStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<>\n  {children}\n  <View containerStyle>\n    <View wrapperStyle>\n      <Alert />\n    </View>\n  </View>\n</>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { Alert, AlertProps } from '../Alert';\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends AlertProps {\n  /**\n   * Duration for how long the toast should stay active.\n   * @default 3000\n   */\n  duration?: number;\n\n  /**\n   * Custom component to override the entire toast.\n   */\n  component?: React.ReactNode;\n\n  /**\n   * Assign an id to the toast so you can remove it later.\n   */\n  id?: ToastId;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  /**\n   * (Ignore) Assign an id to the toast so you can remove it later.\n   */\n  id: ToastId;\n\n  /**\n   * (Ignore) Callback invoked when the duration is up.\n   */\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const { component, id, onRemove, duration = 3000, ...toastSettings } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => onRemove(), duration);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <>{component || <Alert {...toastSettings} />}</>;\n};\n","import * as React from 'react';\n\nimport { ToastId, ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n  removeToast: (id: ToastId) => void;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  removeToast: id => {\n    return;\n  },\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n\nexport const useToast = () => {\n  return React.useContext(ToastContext);\n};\n","import { Platform, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { ToastProviderProps } from './ToastProvider';\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n}\n\nexport type GetToastStyles = (\n  props: ToastProviderProps,\n  theme: Theme,\n) => ToastStyles;\n\n// @ts-ignore: Compat with web\nexport const getToastStyles: GetToastStyles = (props, theme) => {\n  const { position = 'top' } = props;\n\n  return {\n    containerStyle: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      ...(position === 'top'\n        ? {\n            top: 0,\n          }\n        : {\n            bottom: 68,\n          }),\n      zIndex: 100,\n    },\n    wrapperStyle: {\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTransition } from 'react-spring/native.cjs';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nconst AnimatedView = animated(View);\n\nexport type ToastPosition = 'top' | 'bottom';\n\nexport interface ToastProviderProps {\n  /**\n   * Position from which to display the toast from\n   * @default top\n   */\n  position?: ToastPosition;\n\n  /**\n   * Offset toast from the edge of the container (screen).\n   * @default 16\n   */\n  offset?: number;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\ninterface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst initialState: ToastProviderState = {\n  toasts: [],\n};\n\nenum ActionType {\n  ADD_TOAST = 'ADD_TOAST',\n  REMOVE_TOAST = 'REMOVE_TOAST',\n}\n\ntype Action =\n  | { type: ActionType.ADD_TOAST; payload: { toast: ToastInstance } }\n  | { type: ActionType.REMOVE_TOAST; payload: { id: ToastId } };\n\nconst reducer = (state: ToastProviderState, action: Action) => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return { toasts: [...state.toasts, action.payload.toast] };\n    case ActionType.REMOVE_TOAST:\n      return {\n        toasts: state.toasts.filter(toast => toast.id !== action.payload.id),\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst getTransitionConfig = (offset: number, position: ToastPosition) => {\n  if (position === 'top') {\n    return {\n      config: springDefaultConfig,\n\n      enter: { translateY: offset },\n      from: { translateY: -500 },\n      leave: { translateY: -500 },\n    };\n  }\n\n  return {\n    config: springDefaultConfig,\n\n    enter: { translateY: -offset },\n    from: { translateY: 500 },\n    leave: { translateY: 500 },\n  };\n};\n\nexport const ToastProvider: React.FunctionComponent<\n  ToastProviderProps\n> = props => {\n  const { children, offset = 16, position = 'top', getStyles } = props;\n  const idCounterRef = React.useRef(0);\n  // Use reducer because we want access previous value of state\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const theme = useTheme();\n\n  const { containerStyle, wrapperStyle } = mergeStyles(\n    getToastStyles,\n    getStyles,\n    theme.components.getToastStyles,\n  )({ offset, position }, theme);\n\n  const createToastInstance = (toastSettings: ToastSettings): ToastInstance => {\n    const uniqueId = ++idCounterRef.current;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () =>\n        dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      ...toastSettings,\n    };\n  };\n\n  const notify = React.useCallback((toastSettings: ToastSettings) => {\n    const toastInstance = createToastInstance(toastSettings);\n\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(toastSettings)) {\n      for (const toast of state.toasts) {\n        // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          dispatch({\n            payload: { id: toast.id },\n            type: ActionType.REMOVE_TOAST,\n          });\n        }\n      }\n    }\n\n    dispatch({ type: ActionType.ADD_TOAST, payload: { toast: toastInstance } });\n\n    return toastInstance;\n  }, []);\n\n  const transitions = useTransition(\n    state.toasts,\n    toast => toast.id,\n    getTransitionConfig(offset, position),\n  );\n\n  return (\n    <ToastContext.Provider\n      value={{\n        danger: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'danger' }),\n        notify: (toastSettings: ToastSettings) => notify({ ...toastSettings }),\n        success: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'success' }),\n        warning: (toastSettings: ToastSettings) =>\n          notify({ ...toastSettings, intent: 'warning' }),\n\n        removeToast: (id: ToastId) =>\n          dispatch({ type: ActionType.REMOVE_TOAST, payload: { id } }),\n      }}\n    >\n      {children}\n      <View style={containerStyle}>\n        {transitions.map(({ item, props: transitionStyle, key }) => (\n          <AnimatedView\n            key={key}\n            // @ts-ignore\n            style={{\n              ...wrapperStyle,\n              transform: [{ translateY: transitionStyle.translateY }],\n            }}\n          >\n            <Toast {...item} />\n          </AnimatedView>\n        ))}\n      </View>\n    </ToastContext.Provider>\n  );\n};\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 450,\n};\n"],"sourceRoot":""}