{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/Checkbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/LabeledCheckbox.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Checkbox/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/FormField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Form/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useFreezeBody.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/ListItem/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ModalPicker.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/ModalPicker.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerButtonWrapper.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Pickers/PickerItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListField.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/SelectListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/SelectList/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["getCheckboxVariables","theme","base","backgroundColor","colors","background","white","borderColor","border","default","borderWidth","height","width","checked","primaryDefault","checkedFocus","primaryDark","disabled","greyDark","shape","circle","borderRadius","square","controlBorderRadius","small","uncheckedFocus","greyLight","getCheckboxStyles","_ref","isChecked","isDisabled","checkboxVariables","checkboxFocusBackgroundColor","checkboxStyle","_objectSpread2","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Checkbox","Checkbox","props","_props$isChecked","_props$isDisabled","_props$isInteractive","isInteractive","checkedIcon","_props$onChange","onChange","_props$shape","getStyles","testID","accessibilityProps","_objectWithoutProperties2","useTheme","_mergeStyles","mergeStyles","createElement","TouchableHighlight","_extends2","accessible","style","underlayColor","onPress","View","alignItems","display","justifyContent","Icon","name","size","color","text","_Layout","_Typography","LabeledCheckbox","label","_props$position","position","restProps","Box","flexDirection","Text","Spacing","paddingHorizontal","_LabeledCheckbox","FormField","error","children","description","passThroughProps","marginBottom","Label","cloneElement","_FormField","Object","keys","forEach","key","defineProperty","exports","enumerable","get","isWindowAboveMinWidth","minWidth","Dimensions","isWindowBelowMaxWidth","maxWidth","Responsive","isAboveMinWidth","isBelowMaxWidth","matches","_useMeasure2","ViewMeasure","onMeasure","viewProps","isRenderProp","_useMeasure","useMeasure","forwardRef","onLayout","ref","measurements","_ViewMeasure","_Responsive","_useElement","_useFreezeBody","useElement","id","rootElemRef","useRef","useEffect","rootElem","parentElem","rootContainer","document","setAttribute","createRootElement","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","useFreezeBody","isFrozen","unfreeze","overflow","createRef","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","e","nativeEvent","getListItemVariables","borderBottomWidth","focusBackgroundColor","selected","sizes","fontSize","textSizes","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","wrapper","getListItemStyles","isSelected","selectListVariables","_sizes$size","sizeStyles","containerStyle","imageWrapperStyle","marginRight","leftWrapperStyle","textStyle","textWrapperStyle","wrapperStyle","_ListItem","ListItem","_props$size","_props$rightIcon","rightIcon","leftIcon","_","_ModalContent","CloseableModal","rightSide","onClose","modalProps","Modal","ModalContent","TouchableOpacity","event","preventDefault","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","this","ModalBase","Component","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_web","_Helpers","transparent","_props$isBackgroundSc","isBackgroundScrollable","_props$animationType","animationType","isUnmounting","animationTimer","targetElement","isInView","setIsInView","elementRef","focusTrapRef","animationDuration","deactivateFocus","setTimeout","deactivate","initialFocus","onDeactivate","activate","clearTimeout","_useSpring","useSpring","opacity","createPortal","animated","div","tabIndex","bottom","left","right","top","transform","interpolate","v","concat","zIndex","marginLeft","prototype","hasOwnProperty","call","_exportNames","_FormModal","_Modal","_react2","_docz","_reactPowerplug","_ModalPicker","_PickerItem","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","Playground","__position","__code","__scope","Props","State","ModalPicker","PickerItem","initial","value","_ref2","setState","header","selectedValue","onValueChange","itemValue","itemIndex","pickerStyle","itemStyle","isMDXComponent","_SelectList","_PickerButton","_props$useHistory","_props$selectedValue","isModalOpen","setIsModalOpen","data","Children","toArray","map","child","selectedIndex","findIndex","d","selectedData","selectedLabel","Fragment","PickerButton","title","SelectList","initialScrollIndex","initialNumToRender","index","getPickerButtonVariables","focus","invalid","danger","placeholderTextColor","muted","getPickerButtonStyles","pickerStylesProps","pickerVariables","controlSizeStyles","textSizeStyles","rightContainerStyle","_PickerButtonWrapper","PickerButtonWrapper","SelectListItem","SelectListBase","isMulti","innerRef","flatListProps","handleOnPress","Array","isArray","filter","val","childrenArray","FlatList","keyExtractor","item","getItemLayout","offset","renderItem","selectListItem","some","selVal","onSelect","_Form","SelectListField","withTheme","memo","_props$index","_props$isSelected","_props$onSelect","listItemProps","_SelectListItem","_SelectListField","Feather","IconTag","result","replace","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/7.b766e7f9.js","sourcesContent":["import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { CheckboxShape } from './Checkbox';\n\nexport interface ShapeStyle {\n  circle: ViewStyle;\n  square: ViewStyle;\n}\n\nexport interface CheckboxVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  checked: ViewStyle;\n  checkedFocus: ViewStyle;\n  uncheckedFocus: ViewStyle;\n  shape: ShapeStyle;\n}\n\nexport const getCheckboxVariables = (theme: Theme): CheckboxVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      height: 32,\n      width: 32,\n    },\n    checked: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderColor: 'transparent',\n    },\n    checkedFocus: {\n      backgroundColor: theme.colors.background.primaryDark,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n      borderColor: theme.colors.border.default,\n    },\n    shape: {\n      circle: {\n        borderRadius: 999,\n      },\n      square: {\n        borderRadius: theme.controlBorderRadius.small,\n      },\n    },\n    uncheckedFocus: {\n      backgroundColor: theme.colors.background.greyLight,\n    },\n  };\n};\n\nexport interface CheckboxStylesProps {\n  isChecked: boolean;\n  isDisabled: boolean;\n  shape: CheckboxShape;\n}\n\nexport interface CheckboxStyles {\n  checkboxStyle: ViewStyle;\n  checkboxFocusBackgroundColor?: string;\n}\n\nexport type GetCheckboxStyles = (\n  checkboxStylesProps: CheckboxStylesProps,\n  theme: Theme,\n) => CheckboxStyles;\n\nexport const getCheckboxStyles: GetCheckboxStyles = (\n  { isChecked, isDisabled, shape },\n  theme,\n) => {\n  const checkboxVariables = getCheckboxVariables(theme);\n\n  return {\n    checkboxFocusBackgroundColor: isChecked\n      ? checkboxVariables.checkedFocus.backgroundColor\n      : checkboxVariables.uncheckedFocus.backgroundColor,\n    checkboxStyle: {\n      ...checkboxVariables.base,\n      ...(isChecked ? checkboxVariables.checked : {}),\n      ...(isDisabled ? checkboxVariables.disabled : {}),\n      ...checkboxVariables.shape[shape],\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  CheckboxStyles,\n  GetCheckboxStyles,\n  getCheckboxStyles,\n} from './Checkbox.styles';\n\nexport type CheckboxShape = 'circle' | 'square';\n\nexport interface CheckboxProps extends AccessibilityProps {\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  /** Sometimes we just want the display of the checkbox  */\n  isInteractive?: boolean;\n  checkedIcon?: React.ReactNode;\n  /** @default square */\n  shape?: CheckboxShape;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n  getStyles?: ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>;\n  testID?: string;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    isInteractive = true,\n    checkedIcon,\n    onChange = () => null,\n    shape = 'square',\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { checkboxStyle, checkboxFocusBackgroundColor } = mergeStyles(\n    getCheckboxStyles,\n    getStyles,\n  )({ isChecked, isDisabled, shape }, theme);\n\n  return (\n    <TouchableHighlight\n      accessible\n      style={checkboxStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      {...(isInteractive\n        ? {\n            disabled: isDisabled,\n            onPress: onChange,\n          }\n        : {\n            disabled: true,\n          })}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {isChecked\n          ? checkedIcon || (\n              <Icon name=\"check\" size={20} color={theme.colors.text.white} />\n            )\n          : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport { Checkbox, CheckboxProps } from '../Checkbox/Checkbox';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface LabeledCheckboxProps extends CheckboxProps {\n  label?: string;\n  position?: 'left' | 'right';\n  color?: TextColor;\n  size?: TextSize;\n}\n\nexport const LabeledCheckbox = (props: LabeledCheckboxProps) => {\n  const { label, position = 'right', color, size, ...restProps } = props;\n\n  if (!label) {\n    return <Checkbox {...restProps} />;\n  }\n\n  return (\n    <Box flexDirection=\"row\" alignItems=\"center\">\n      {position === 'left' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n      <Spacing paddingHorizontal={1}>\n        <Checkbox {...restProps} />\n      </Spacing>\n      {position === 'right' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n    </Box>\n  );\n};\n","export {\n  LabeledCheckbox as Checkbox,\n  LabeledCheckboxProps as CheckboxProps,\n} from './LabeledCheckbox';\n","import * as React from 'react';\n\nimport { Box } from '../Layout';\nimport { Label, Text } from '../Typography';\n\nexport interface FormFieldProps {\n  error?: string | null;\n  label?: string | null;\n  description?: string | null;\n  children?: React.ReactNode;\n}\n\nexport const FormField = (props: FormFieldProps) => {\n  const { label, error, children, description, ...passThroughProps } = props;\n\n  return (\n    <Box>\n      {label && (\n        <Box marginBottom={4}>\n          <Label>{label}</Label>\n        </Box>\n      )}\n      <Box marginBottom={4}>\n        {/*\n        // @ts-ignore: TODO: Find right way to type this */}\n        {React.cloneElement(children, passThroughProps)}\n      </Box>\n      {error && (\n        <Box marginBottom={4}>\n          <Text color=\"danger\">{error}</Text>\n        </Box>\n      )}\n      {description && <Text>{description}</Text>}\n    </Box>\n  );\n};\n","export * from './FormField';\n","import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from './useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useFreezeBody';\n","import * as React from 'react';\n\nconst createRootElement = (id: string) => {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id: string) => {\n  const rootElemRef = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const parentElem = createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(parentElem);\n\n    if (rootElemRef.current) {\n      parentElem.appendChild(rootElemRef.current);\n    }\n\n    return () => {\n      if (rootElemRef.current) rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!rootElemRef.current) {\n      // @ts-ignore\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useFreezeBody = ({ isFrozen }: { isFrozen: boolean }) => {\n  React.useEffect(() => {\n    const freeze = () => {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    };\n\n    const unfreeze = () => {\n      document.body.style.overflow = '';\n      document.body.style.height = '';\n    };\n\n    if (isFrozen) freeze();\n    else unfreeze();\n\n    return () => unfreeze();\n  }, [isFrozen]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.white,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focusBackgroundColor: theme.colors.background.greyLight,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large.fontSize || 18,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: theme.textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './ListItem';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { animated, useSpring } from 'react-spring/web.cjs';\n\nimport { useElement, useFreezeBody } from '../Helpers';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    isBackgroundScrollable = false,\n    onRequestClose,\n    animationType = 'none',\n  } = props;\n  let isUnmounting = false;\n  let animationTimer: any = null;\n  const targetElement = useElement('modal');\n  const [isInView, setIsInView] = React.useState(visible);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n  const animationDuration = animationType === 'none' ? 0 : 350;\n\n  useFreezeBody({ isFrozen: !!(!isBackgroundScrollable && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        animationTimer = setTimeout(\n          () => setIsInView(false),\n          animationDuration,\n        );\n\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) {\n      activateFocus();\n      setIsInView(true);\n    } else {\n      deactivateFocus();\n    }\n\n    return () => {\n      isUnmounting = true;\n      clearTimeout(animationTimer);\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  const { opacity, y } = useSpring({\n    opacity: animationType === 'fade' ? (visible ? 1 : 0) : 1,\n    y: animationType === 'slide' ? (visible ? 0 : 100) : 0,\n  });\n\n  return ReactDOM.createPortal(\n    <animated.div\n      tabIndex={-1}\n      ref={elementRef}\n      // @ts-ignore\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        display: isInView ? 'flex' : 'none',\n        flexDirection: 'column',\n        left: 0,\n        opacity,\n        position: isBackgroundScrollable ? 'absolute' : 'fixed',\n        right: 0,\n        top: 0,\n        transform: y.interpolate(v => `translateY(${v}%)`),\n        zIndex: 1000,\n      }}\n    >\n      {visible ? children : null}\n    </animated.div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { State } from 'react-powerplug';\nimport { ModalPicker } from './ModalPicker';\nimport { PickerItem } from './PickerItem';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modalpicker\"\n    }}>{`ModalPicker`}</h1>\n    <Playground __position={0} __code={'<State initial={{ value: \\'css\\' }}>\\n  {({ state, setState }) => (\\n    <ModalPicker\\n      useHistory={false}\\n      header={null}\\n      size=\\\"large\\\"\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <PickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <PickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <PickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <PickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <PickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <PickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <PickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <PickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <PickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <PickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <PickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <PickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <PickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <PickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <PickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <PickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <PickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <PickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <PickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </ModalPicker>\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      State,\n      ModalPicker,\n      PickerItem\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'css'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <ModalPicker useHistory={false} header={null} size=\"large\" selectedValue={state.value} onValueChange={(itemValue, itemIndex) => setState({\n          value: itemValue\n        })} getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {}\n        })} mdxType=\"ModalPicker\">\n        <PickerItem label=\"C\" value=\"c\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"C#\" value=\"c#\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"C++\" value=\"c++\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"CSS\" value=\"css\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Elixir\" value=\"elixir\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Elm\" value=\"elm\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Erlang\" value=\"erlang\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Go\" value=\"go\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Haskell\" value=\"haskell\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"HTML\" value=\"html\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Java\" value=\"java\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"JavaScript\" value=\"js\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Lua\" value=\"lua\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Python\" value=\"python\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"R\" value=\"r\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Ruby\" value=\"ruby\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Rust\" value=\"rust\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Switft\" value=\"swift\" mdxType=\"PickerItem\" />\n        <PickerItem label=\"Typescript\" value=\"typescript\" mdxType=\"PickerItem\" />\n      </ModalPicker>}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\nimport { PickerProps as RNPickerProps } from 'react-native';\n\nimport { CloseableModal } from '../Modal';\nimport { SelectList, SelectListItemBaseProps } from '../SelectList';\nimport { GetPickerButtonStylesProp, PickerButton } from './PickerButton';\nimport { PickerButtonSize } from './PickerButton.styles';\n\nexport interface ModalPickerProps extends RNPickerProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactNode;\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n}\n\nconst SELECTED_INDEX_OFFSET = 3;\n\n// REVIEW: When the window height is larger than the select list, and initial scroll index is at the bottom half, there is unscrollable blank space\n// it is a rare use case that can be solved by using ref to `scrollToIndex`\nexport const ModalPicker = (props: ModalPickerProps) => {\n  const {\n    header,\n    getStyles,\n    useHistory = false,\n    selectedValue = null,\n    onValueChange,\n    children,\n    size = 'medium',\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n  const selectedIndex = data.findIndex(d => d.value === selectedValue);\n  const selectedData = selectedIndex >= 0 ? data[selectedIndex] : null;\n  const selectedLabel = selectedData ? selectedData.label : null;\n\n  return (\n    <>\n      <PickerButton\n        onPress={() => setIsModalOpen(true)}\n        getStyles={getStyles}\n        size={size}\n        title={selectedLabel}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        {header}\n        <SelectList\n          initialScrollIndex={selectedIndex - SELECTED_INDEX_OFFSET}\n          initialNumToRender={30}\n          selectedValue={selectedValue}\n          onValueChange={(value, index) => {\n            if (onValueChange) onValueChange(value, index);\n            setIsModalOpen(false);\n          }}\n        >\n          {children}\n        </SelectList>\n      </CloseableModal>\n    </>\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PickerButtonSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type PickerButtonSize = keyof PickerButtonSizes;\n\nexport interface PickerButtonTextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PickerButtonTextSize = keyof PickerButtonTextSizes;\n\nexport interface PickerButtonVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  focus: ViewStyle;\n  invalid: ViewStyle;\n  placeholderTextColor: string;\n  sizes: PickerButtonSizes;\n}\n\nexport const getPickerButtonVariables = (\n  theme: Theme,\n): PickerButtonVariables => {\n  return {\n    base: {\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n    },\n    focus: {},\n    invalid: {\n      borderColor: theme.colors.border.danger,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: 40,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: 40,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: 40,\n      },\n    },\n  };\n};\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport interface PickerButtonStylesProps {\n  size: PickerButtonSize;\n}\nexport type GetPickerButtonStyles = (\n  pickerStylesProps: PickerButtonStylesProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  pickerStylesProps,\n  theme,\n) => {\n  const pickerVariables = getPickerButtonVariables(theme);\n  const { base, sizes } = pickerVariables;\n  const { size } = pickerStylesProps;\n\n  const controlSizeStyles = sizes[size];\n  const textSizeStyles = theme.textSizes[size];\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.white,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      backgroundColor: 'transparent',\n      width: '100%',\n      ...base,\n      ...controlSizeStyles,\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableOpacity,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Text } from '../Typography';\nimport {\n  GetPickerButtonStyles,\n  getPickerButtonStyles,\n  PickerButtonSize,\n} from './PickerButton.styles';\nimport { PickerButtonWrapper } from './PickerButtonWrapper';\n\nexport type GetPickerButtonStylesProp = ReplaceReturnType<\n  GetPickerButtonStyles,\n  DeepPartial<PickerButtonStyles>\n>;\n\nexport interface PickerButtonStyles extends AccessibilityProps {\n  title?: string | null;\n  onPress?: (event: GestureResponderEvent) => void;\n  size?: PickerButtonSize;\n  getStyles?: GetPickerButtonStylesProp;\n}\n\nexport const PickerButton = (props: PickerButtonStyles) => {\n  const {\n    getStyles,\n    onPress,\n    size = 'medium',\n    title,\n    ...accessibilityProps\n  } = props;\n  const theme = useTheme();\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper getStyles={getStyles}>\n      <TouchableOpacity\n        style={[{ justifyContent: 'center' }, pickerStyle]}\n        onPress={onPress}\n        {...accessibilityProps}\n      >\n        <Text style={itemStyle}>{title}</Text>\n      </TouchableOpacity>\n    </PickerButtonWrapper>\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetPickerButtonStylesProp } from './PickerButton';\nimport { getPickerButtonStyles, PickerButtonSize } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n  children: React.ReactNode;\n}\n\nexport const PickerButtonWrapper = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children, size = 'medium' } = props;\n  const theme = useTheme();\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon name=\"chevron-down\" size={32} color={theme.colors.text.default} />\n      </View>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { SelectListItem } from '../SelectList';\n\nexport const PickerItem = SelectListItem;\n","import * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListProps\n  extends Omit<\n    Omit<FlatListProps<SelectListItemBaseProps>, 'data'>,\n    'renderItem'\n  > {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  selectedValue: string | string[];\n  innerRef?: React.Ref<FlatList<SelectListItemBaseProps>>;\n  isMulti?: boolean;\n  onValueChange: (\n    itemValue: string | string[],\n    itemIndex: number,\n  ) => void | undefined;\n}\n\nconst SelectListBase = (props: SelectListProps): any => {\n  const {\n    selectedValue,\n    onValueChange,\n    isMulti,\n    children,\n    innerRef,\n    ...flatListProps\n  } = props;\n  const theme = useTheme();\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val !== itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n\n  return (\n    <FlatList\n      ref={innerRef}\n      keyExtractor={item => item.value}\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={data}\n      renderItem={({ item, index }) => {\n        const selectListItem = childrenArray[index];\n\n        const isSelected =\n          isMulti && Array.isArray(selectedValue)\n            ? selectedValue.some(selVal => selVal === item.value)\n            : selectedValue === item.value;\n\n        return React.cloneElement(selectListItem, {\n          index,\n          isSelected,\n          onSelect: handleOnPress,\n        });\n      }}\n      {...flatListProps}\n    />\n  );\n};\n\nexport const SelectList = React.forwardRef<\n  FlatList<SelectListItemBaseProps>,\n  SelectListProps\n>((props, ref) => {\n  return <SelectListBase {...props} innerRef={ref} />;\n});\n","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport { SelectList, SelectListProps } from './SelectList';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListFieldProps extends FormFieldProps, SelectListProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n}\n\nconst SelectListFieldBase = (props: SelectListFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <SelectList {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const SelectListField = withTheme(SelectListFieldBase);\nexport default SelectListField;\n","import * as React from 'react';\n\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\n\nexport interface SelectListItemBaseProps {\n  index?: number;\n  isSelected?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  value: string;\n  label: string;\n}\n\nexport interface SelectListItemProps\n  extends SelectListItemBaseProps,\n    ListItemProps {\n  isDisabled?: boolean;\n}\n\nconst SelectListItemBase = (props: SelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    value,\n    ...listItemProps\n  } = props;\n\n  return (\n    <ListItem\n      onPress={e => {\n        e.preventDefault();\n        onSelect(value, index, isSelected);\n      }}\n      label={label}\n      rightIcon={\n        <Checkbox isInteractive={false} shape=\"circle\" isChecked={isSelected} />\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport const SelectListItem = React.memo(SelectListItemBase);\n","export * from './SelectList';\nexport * from './SelectListItem';\nexport * from './SelectListField';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}