{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Box","Button","Drawer","Text","Toggle","___WEBPACK_IMPORTED_MODULE_9__","_ref2","on","toggle","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","___WEBPACK_IMPORTED_MODULE_6__","onPress","title","___WEBPACK_IMPORTED_MODULE_7__","space","isVisible","onRequestClose","___WEBPACK_IMPORTED_MODULE_5__","width","height","backgroundColor","_ref3","position","_ref4","_ref5","of","isMDXComponent","AnimatedView","animated","View","_props$isVisible","_props$position","_props$offset","offset","_props$shouldLockBody","shouldLockBodyScroll","_props$useHistory","useHistory","children","_props$onRequestClose","_props$overrides","overrides","theme","useTheme","_getOverrides","getOverrides","StyledRoot","dlv","Root","_getOverrides2","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","rootProps","_getOverrides3","StyledContent","Content","_getOverrides4","contentProps","_getOverrides5","Overlay","_getOverrides6","OverlayR","overlayProps","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","_Modal__WEBPACK_IMPORTED_MODULE_12__","visible","transparent","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__","style","viewProps","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_7__","alignItems","display","justifyContent","_useSpring","animation","useSpring","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","springDefaultConfig","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","zIndex","_props$onPress","_props$color","color","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_3___default","react_native_web_dist_exports_TouchableWithoutFeedback__WEBPACK_IMPORTED_MODULE_4__","event","preventDefault","react_native_web_dist_exports_View__WEBPACK_IMPORTED_MODULE_5__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","bottom","left","right","top","getStyle"],"mappings":"8yBAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,YAAvEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAGLR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,UADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,gBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAK,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6CACAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACU,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,+xCAA80CC,QAAS,CACx3Cd,MAAOe,KAAOA,KAAKf,MAAQA,EAC3BgB,eACAC,UACAC,QACAC,WACAC,WACAC,SACAC,YACCjB,QAAQ,aATXC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAUFR,OAAAE,EAAA,EAAAF,CAACsB,EAAA,EAAD,CAAQlB,QAAQ,SAAhBC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAe,GAAA,IACKC,EADLD,EACKC,GACAC,EAFLF,EAEKE,OAFL,OAGSzB,OAAAE,EAAA,EAAAF,CAAA0B,EAAAC,EAAAC,SAAA,KACN5B,OAAAE,EAAA,EAAAF,CAAC6B,EAAA,EAAD,CAAQC,QAASL,EAAQM,MAAM,qBAAqB3B,QAAQ,SAA5DC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAR,OAAAE,EAAA,EAAAF,CAACgC,EAAA,EAAD,CAAQC,MAAM,MAAMC,UAAWV,EAAIW,eAAgBV,EAAQrB,QAAQ,SAAnEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACER,OAAAE,EAAA,EAAAF,CAACoC,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQnC,QAAQ,MAAhEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAIRR,OAAAE,EAAA,EAAAF,CAACsB,EAAA,EAAD,CAAQlB,QAAQ,SAAhBC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAgC,GAAA,IACKhB,EADLgB,EACKhB,GACAC,EAFLe,EAEKf,OAFL,OAGSzB,OAAAE,EAAA,EAAAF,CAAA0B,EAAAC,EAAAC,SAAA,KACN5B,OAAAE,EAAA,EAAAF,CAAC6B,EAAA,EAAD,CAAQC,QAASL,EAAQM,MAAM,kBAAkB3B,QAAQ,SAAzDC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAR,OAAAE,EAAA,EAAAF,CAACgC,EAAA,EAAD,CAAQC,MAAM,MAAMQ,SAAS,MAAMP,UAAWV,EAAIW,eAAgBV,EAAQrB,QAAQ,SAAlFC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACER,OAAAE,EAAA,EAAAF,CAACoC,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQnC,QAAQ,MAAhEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAIRR,OAAAE,EAAA,EAAAF,CAACsB,EAAA,EAAD,CAAQlB,QAAQ,SAAhBC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAkC,GAAA,IACKlB,EADLkB,EACKlB,GACAC,EAFLiB,EAEKjB,OAFL,OAGSzB,OAAAE,EAAA,EAAAF,CAAA0B,EAAAC,EAAAC,SAAA,KACN5B,OAAAE,EAAA,EAAAF,CAAC6B,EAAA,EAAD,CAAQC,QAASL,EAAQM,MAAM,mBAAmB3B,QAAQ,SAA1DC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAR,OAAAE,EAAA,EAAAF,CAACgC,EAAA,EAAD,CAAQC,MAAM,MAAMQ,SAAS,OAAOP,UAAWV,EAAIW,eAAgBV,EAAQrB,QAAQ,SAAnFC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACER,OAAAE,EAAA,EAAAF,CAACoC,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQnC,QAAQ,MAAhEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,UAIRR,OAAAE,EAAA,EAAAF,CAACsB,EAAA,EAAD,CAAQlB,QAAQ,SAAhBC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACG,SAAAmC,GAAA,IACKnB,EADLmB,EACKnB,GACAC,EAFLkB,EAEKlB,OAFL,OAGSzB,OAAAE,EAAA,EAAAF,CAAA0B,EAAAC,EAAAC,SAAA,KACN5B,OAAAE,EAAA,EAAAF,CAAC6B,EAAA,EAAD,CAAQC,QAASL,EAAQM,MAAM,oBAAoB3B,QAAQ,SAA3DC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MACAR,OAAAE,EAAA,EAAAF,CAACgC,EAAA,EAAD,CAAQC,MAAM,MAAMQ,SAAS,QAAQP,UAAWV,EAAIW,eAAgBV,EAAQrB,QAAQ,SAApFC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KACER,OAAAE,EAAA,EAAAF,CAACoC,EAAA,EAAD,CAAKC,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQnC,QAAQ,MAAhEC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,WAKNR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,EAAA,EAAAH,CAAQ,CACNS,GAAM,SADR,CAAAJ,SAAA,CAAAC,SAAAC,EAAAC,WAAA,eAGAR,OAAAE,EAAA,EAAAF,CAACU,EAAA,EAAD,CAAOkC,GAAIzB,IAAQf,QAAQ,QAA3BC,SAAA,CAAAC,SAAAC,EAAAC,WAAA,6LAIJZ,EAAWiD,gBAAiB,ilCC/EtBC,EAAeC,mBAASC,ujBAwDvB,IAAM7B,EAAS,SAACpB,GAAuB,IAAAkD,EAWxClD,EATFmC,iBAF0C,IAAAe,KAAAC,EAWxCnD,EARF0C,gBAH0C,IAAAS,EAG/B,SAH+BA,EAAAC,EAWxCpD,EAPFqD,cAJ0C,IAAAD,EAIjC,EAJiCA,EAAAE,EAWxCtD,EANFuD,4BAL0C,IAAAD,KAAAE,EAWxCxD,EALFyD,kBAN0C,IAAAD,KAO1CE,EAIE1D,EAJF0D,SAP0CC,EAWxC3D,EAHFoC,sBAR0C,IAAAuB,EAQzB,kBAAM,MARmBA,EAS1CzB,EAEElC,EAFFkC,MAT0C0B,EAWxC5D,EADF6D,iBAV0C,IAAAD,EAU9B,GAV8BA,EAYtCE,EAAQC,cAZ8BC,EAclBC,YACxBC,EACAlE,EACA,GACAmE,IAAIL,EAAO,yBACXD,EAAUO,MAnBgCC,EAAApE,OAAAqE,EAAA,EAAArE,CAAA+D,EAAA,GAcrCI,EAdqCC,EAAA,GAc/BE,EAd+BF,EAAA,GAAAG,EAqBZP,YAC9BQ,EACAzE,EACA,CAAE0C,WAAUW,SAAQnB,SACpBiC,IAAIL,EAAO,4BACXD,EAAUa,SA1BgCC,EAAA1E,OAAAqE,EAAA,EAAArE,CAAAuE,EAAA,GAqBrCE,EArBqCC,EAAA,GAqB5BC,EArB4BD,EAAA,GAAAE,EA4BXZ,YAC/Ba,IACA9E,EACA,CAAE+B,QAASK,GACX+B,IAAIL,EAAO,4BACXD,EAAUiB,SAjCgCC,EAAA9E,OAAAqE,EAAA,EAAArE,CAAA4E,EAAA,GA4BrCG,EA5BqCD,EAAA,GA4B3BE,EA5B2BF,EAAA,GAoC5C,OACEG,EAAAtD,EAAAuD,cAACC,EAAA,EAAD,CACEC,QAASlD,EACTmD,aAAW,EACXlD,eAAgBA,EAChBmB,qBAAsBA,EACtBE,WAAYA,EALdnD,SAAA,CAAAC,SAAAC,EAAAC,WAAA,MAOEyE,EAAAtD,EAAAuD,cAACf,EAADnE,OAAAsF,EAAA,EAAAtF,CAAA,GAAUsE,EAAV,CAAAjE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OACEyE,EAAAtD,EAAAuD,cAACT,EAADzE,OAAAsF,EAAA,EAAAtF,CAAA,GAAa2E,EAAb,CAAAtE,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAA4BiD,GAC5BwB,EAAAtD,EAAAuD,cAACH,EAAD/E,OAAAsF,EAAA,EAAAtF,CAAA,GAAcgF,EAAd,CAAA3E,SAAA,CAAAC,SAAAC,EAAAC,WAAA,qNAYR,IAAMyD,EAAa,SAAClE,GAAqB,IAC/B0D,EAAkC1D,EAAlC0D,SAAU8B,EAAwBxF,EAAxBwF,MAAUC,EADWxF,OAAAyF,EAAA,EAAAzF,CACGD,EADH,sBAGvC,OACEkF,EAAAtD,EAAAuD,cAACQ,EAAA,EAAD1F,OAAAsF,EAAA,EAAAtF,CAAA,CACEuF,MAAO,CACL,CACEI,WAAY,SACZC,QAAS,OACTtD,OAAQ,OACRuD,eAAgB,SAChBxD,MAAO,QAETkD,IAEEC,EAXN,CAAAnF,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAaGiD,IAWDe,EAAgB,SAACzE,GAAwB,IAAA+F,EACrCrD,EAA2D1C,EAA3D0C,SAAUW,EAAiDrD,EAAjDqD,OAAQK,EAAyC1D,EAAzC0D,SAAUxB,EAA+BlC,EAA/BkC,MAAOsD,EAAwBxF,EAAxBwF,MAAUC,EADRxF,OAAAyF,EAAA,EAAAzF,CACsBD,EADtB,kDAGvCgG,EAAYC,qBAASF,EAAA,GAAA9F,OAAAiG,EAAA,EAAAjG,CAAA8F,EACxBrD,EAAWW,GADapD,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,SAEjBI,KAFiBlG,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,OAAA9F,OAAAiG,EAAA,EAAAjG,CAAA,GAGhByC,GAAY,MAHIzC,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,SAIlB,GAJkBA,IAO3B,OAEEb,EAAAtD,EAAAuD,cAACpC,EAAD9C,OAAAsF,EAAA,EAAAtF,CAAA,CACEuF,MAAO,CAACvF,OAAAmG,EAAA,EAAAnG,QAAAiG,EAAA,EAAAjG,CAAA,CAEJyC,SAAU,WACVJ,MAAO,OACP+D,OAAQ,GACP3D,EAAWsD,EAAUtD,KACJ,SAAbA,GAAoC,UAAbA,IAC1BR,GAAS,CACPK,OAAQ,OACRD,MAAOJ,IAEO,WAAbQ,GAAsC,QAAbA,IAC5BR,GAAS,CACPK,OAAQL,EACRI,MAAO,SAGbkD,IAEEC,EApBN,CAAAnF,SAAA,CAAAC,SAAAC,EAAAC,WAAA,OAsBGiD,owCC/JA,IAAMoB,EAAU,SAAC9E,GAAwB,IAAAsG,EAQ1CtG,EANF+B,eAF4C,IAAAuE,EAElC,aAFkCA,EAAAC,EAQ1CvG,EAHFwG,aAL4C,IAAAD,EAKpC,OALoCA,EAM5Cf,EAEExF,EAFFwF,MACGC,EAPyCxF,OAAAwG,EAAA,EAAAxG,CAQ1CD,EAR0C,6BASxC8D,EAAQC,cAEd,OACE2C,EAAA9E,EAAAuD,cAACwB,EAAA,EAAD,CACE5E,QAAS,SAAA6E,GACPA,EAAMC,iBACN9E,KAHJzB,SAAA,CAAAC,SAAAC,EAAAC,WAAA,KAMEiG,EAAA9E,EAAAuD,cAAC2B,EAAA,EAAD7G,OAAA8G,EAAA,EAAA9G,CAAA,CACEuF,MAAO,CACL,CACEhD,gBACY,SAAVgE,EAAmB,kBAAoB,wBACzCQ,OAAQ,EACRzE,OAAQ,OACR0E,KAAM,EACNvE,SAAU,WACVwE,MAAO,EACPC,IAAK,EACL7E,MAAO,QAET8E,YAASpH,EAAOwF,GAChB4B,YAASpH,EAAOmE,IAAIL,EAAO,8BAEzB2B,EAhBN,CAAAnF,SAAA,CAAAC,SAAAC,EAAAC,WAAA","file":"static/js/32.e8b2c905.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Button, Drawer, Text, Toggle } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <p>{`Slides a panel from defined position`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onRequestClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"top\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"left\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"right\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Button,\n      Drawer,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"top\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"left\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"right\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Drawer} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import dlv from 'dlv';\nimport React from 'react';\nimport { View, ViewProps } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { useTheme } from '../../theme';\nimport { getOverrides, WithOverrides } from '../../utils/Overrides';\nimport { Modal } from '../Modal';\nimport { Overlay, OverlayProps } from '../Overlay';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nconst AnimatedView = animated(View);\n\ninterface DrawerBaseProps {\n  /**\n   * (Web only) When true, upon going back in history/navigation, it will call `onRequestClose`. On Native, it already does that\n   * @default false\n   */\n  useHistory?: boolean;\n\n  /**\n   * (Web only) When true, the body of the document will not scroll when dialog is opened\n   * @default true\n   */\n  shouldLockBodyScroll?: boolean;\n\n  /**\n   * When true, it will display the drawer\n   * @default false\n   */\n  isVisible?: boolean;\n\n  /**\n   * Called when clicking on overlay or pressing Esc\n   */\n  onRequestClose?: () => void;\n\n  /**\n   * Amount to offset from the edge of window.\n   * @default 0\n   */\n  offset?: number;\n\n  /**\n   * Amount of % screen or px to take up.\n   */\n  space?: number | string;\n\n  /**\n   * The position to slide from.\n   * @default bottom\n   */\n  position?: Position;\n\n  /** Content of the drawer body */\n  children: React.ReactNode;\n}\n\nexport interface DrawerOverrides {\n  Root: RootProps;\n  Content: ContentProps;\n  Overlay: OverlayProps;\n}\n\nexport interface DrawerProps\n  extends WithOverrides<DrawerBaseProps, DrawerOverrides> {}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    isVisible = false,\n    position = 'bottom',\n    offset = 0,\n    shouldLockBodyScroll = true,\n    useHistory = false,\n    children,\n    onRequestClose = () => null,\n    space,\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Drawer.Root'),\n    overrides.Root,\n  );\n  const [Content, contentProps] = getOverrides(\n    StyledContent,\n    props,\n    { position, offset, space },\n    dlv(theme, 'overrides.Drawer.Content'),\n    overrides.Content,\n  );\n  const [OverlayR, overlayProps] = getOverrides(\n    Overlay,\n    props,\n    { onPress: onRequestClose },\n    dlv(theme, 'overrides.Drawer.Overlay'),\n    overrides.Overlay,\n  );\n\n  return (\n    <Modal\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n      shouldLockBodyScroll={shouldLockBodyScroll}\n      useHistory={useHistory}\n    >\n      <Root {...rootProps}>\n        <Content {...contentProps}>{children}</Content>\n        <OverlayR {...overlayProps} />\n      </Root>\n    </Modal>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n          width: '100%',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface ContentProps extends ViewProps, PropsWithChildren {\n  offset: number;\n  space?: number | string;\n  position: Position;\n}\n\nconst StyledContent = (props: ContentProps) => {\n  const { position, offset, children, space, style, ...viewProps } = props;\n\n  const animation = useSpring({\n    [position]: offset,\n    config: springDefaultConfig,\n    from: { [position]: -600 },\n    reset: true,\n  });\n\n  return (\n    // @ts-ignore\n    <AnimatedView\n      style={[\n        {\n          position: 'absolute',\n          width: '100%',\n          zIndex: 1,\n          [position]: animation[position],\n          ...((position === 'left' || position === 'right') &&\n            space && {\n              height: '100%',\n              width: space,\n            }),\n          ...((position === 'bottom' || position === 'top') &&\n            space && {\n              height: space,\n              width: '100%',\n            }),\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </AnimatedView>\n  );\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype OverlayColor = 'dark' | 'light';\n\nexport interface OverlayProps extends Omit<ViewProps, 'style'> {\n  onPress?: () => void;\n\n  /**\n   * @default \"dark\"\n   */\n  color?: OverlayColor;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<OverlayProps, ViewStyle>;\n}\n\nexport type OverlayOverride = OverrideStyle<OverlayProps, ViewStyle>;\n\nexport const Overlay = (props: OverlayProps) => {\n  const {\n    onPress = () => {\n      return;\n    },\n    color = 'dark',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View\n        style={[\n          {\n            backgroundColor:\n              color === 'dark' ? 'rgba(0,0,0,0.3)' : 'rgba(255,255,255,0.3)',\n            bottom: 0,\n            height: '100%',\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n          },\n          getStyle(props, style),\n          getStyle(props, dlv(theme, 'overrides.Overlay.style')),\n        ]}\n        {...viewProps}\n      />\n    </TouchableWithoutFeedback>\n  );\n};\n"],"sourceRoot":""}