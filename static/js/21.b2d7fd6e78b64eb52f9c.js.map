{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Inputs/TextInput.mdx"],"names":["_react2","_interopRequireDefault","__webpack_require__","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","mdx","_extends2","mdxType","id","parentName","href","Playground","__position","__code","__scope","this","Props","Box","State","Icon","TextInput","initial","value","_ref2","state","setState","name","placeholder","size","isDisabled","isInvalid","keyboardType","onChangeText","text","onSubmitEditing","e","console","log","leftIcon","rightIcon","undefined","isClearable","onClear","getStyles","theme","inputStyle","placeholderTextColor","colors","muted","isMDXComponent"],"mappings":"mYAEEA,GADAC,EAAAC,EAAA,kCACAA,EAAA,kDAEFC,EAAAD,EAAA,yCACAE,EAAAF,EAAA,6BAOMG,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,GACF,EAAAC,EAAA,SAAAH,EAAA,gBACD,OAAO,EAAAR,EAAAY,KAACN,GAAD,EAAAO,EAAA,YAAeR,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYK,QAAQ,eAG5E,EAAAd,EAAAY,KAAA,KAAQ,CACNG,GAAM,aADR,cAGA,EAAAf,EAAAY,KAAA,wCAAkC,EAAAZ,EAAAY,KAAA,cAAYI,WAAW,KAAvB,aAAlC,8CAAqI,EAAAhB,EAAAY,KAAA,OAAAC,EAAA,UAAGG,WAAW,KAAQ,CACvJC,KAAQ,2DADyH,sBAGrI,EAAAjB,EAAAY,KAAA,KAAQ,CACNG,GAAM,SADR,UAGA,EAAAf,EAAAY,KAACT,EAAAe,WAAD,CAAYC,WAAY,EAAGC,OAAQ,m0BAA80BC,QAAS,CACx3BX,MAAOY,KAAOA,KAAKZ,MAAQA,EAC3BQ,wBACAK,cACAC,UACAC,cACAC,YACAC,uBACCb,QAAQ,eACb,EAAAd,EAAAY,KAACR,EAAAqB,MAAD,CAAOG,QAAS,CACVC,MAAO,IACNf,QAAQ,SACZ,SAAAgB,GAAA,IACKC,EADLD,EACKC,MACAC,EAFLF,EAEKE,SAFL,OAGS,EAAAhC,EAAAY,KAACR,EAAAuB,UAAD,CAAWM,KAAK,QAAQJ,MAAOE,EAAMF,MAAOK,YAAY,2BAA2BC,KAAK,QAAQC,YAAY,EAAOC,WAAW,EAAOC,aAAa,gBAAgBC,aAAc,SAAAC,GAAI,OAAIR,EAAS,CACrMH,MAAOW,KACLC,gBAAiB,SAAAC,GAAC,OAAIC,QAAQC,IAAI,oBAAoBC,UAAU,EAAA7C,EAAAY,KAACR,EAAAoB,IAAD,CAAKV,QAAQ,QAC7E,EAAAd,EAAAY,KAACR,EAAAsB,KAAD,CAAMO,KAAK,OAAOE,KAAM,GAAIrB,QAAQ,UAC9BgC,eAAWC,EAAWC,aAAa,EAC7CC,QAAS,kBAAMN,QAAQC,IAAI,aAC3BM,UAAW,SAACxC,EAAOyC,GAAR,MAAmB,CAC5BC,WAAY,GACZC,qBAAsBF,EAAMG,OAAOd,KAAKe,QACtCzC,QAAQ,2MAMpBP,EAAWiD,gBAAiB","file":"static/js/21.d23d97ff.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, State, Icon, TextInput } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes of React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode>{` component (i.e. you can pass its props). `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react-native/docs/textinput\"\n      }}>{`See more details`}</a></p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      name=\\\"field\\\"\\n      value={state.value}\\n      placeholder=\\\"Add your own placeholder\\\"\\n      size=\\\"large\\\"\\n      isDisabled={false}\\n      isInvalid={false}\\n      keyboardType=\\\"email-address\\\"\\n      onChangeText={text => setState({ value: text })}\\n      onSubmitEditing={e => console.log(\\'Submit on enter\\')}\\n      leftIcon={\\n        <Box>\\n          <Icon name=\\\"menu\\\" size={24} />\\n        </Box>\\n      }\\n      rightIcon={undefined}\\n      isClearable={true} // Mutually exclusive with rightIcon\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n      getStyles={(props, theme) => ({\\n        inputStyle: {},\\n        placeholderTextColor: theme.colors.text.muted,\\n      })}\\n    />\\n  )}\\n</State>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      State,\n      Icon,\n      TextInput\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput name=\"field\" value={state.value} placeholder=\"Add your own placeholder\" size=\"large\" isDisabled={false} isInvalid={false} keyboardType=\"email-address\" onChangeText={text => setState({\n          value: text\n        })} onSubmitEditing={e => console.log('Submit on enter')} leftIcon={<Box mdxType=\"Box\">\n            <Icon name=\"menu\" size={24} mdxType=\"Icon\" />\n          </Box>} rightIcon={undefined} isClearable={true} // Mutually exclusive with rightIcon\n        onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        getStyles={(props, theme) => ({\n          inputStyle: {},\n          placeholderTextColor: theme.colors.text.muted\n        })} mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}