{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/BulletedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Code.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Heading.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Label.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Link.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/List.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/ListItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedItem.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/NumberedList.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Paragraph.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactNative","_theme","shapeMapping","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","propToFn","elevation","theme","elevations","shape","_shape","_x","apply","this","arguments","toString","Box","props","children","propStyle","style","testID","viewStyles","_objectWithoutProperties2","default","useTheme","transformedStyles","pureStyles","prop","styleFn","push","createElement","View","_Box","hasGrid","height","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","Spacing","marshalledProps","_objectSpread2","gridPointMultiplier","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Spacing","_ListItem","BulletItem","icon","listItemProps","iconColor","ListItem","_extends2","mark","_List","BulletedList","List","listType","_Text","Code","appearance","textProps","code","Text","fontFamily","styles","backgroundColor","colors","background","greyDefault","StyleSheet","create","getHeadingSize","headingSizes","size","fontSize","getHeadingStyles","_ref","align","color","weight","sizeStyle","headingStyle","getTextColor","text","fontFamilies","heading","fontWeight","getFontWeight","fontWeights","textAlign","_mergeStyles2","_Heading","Heading","accessibilityLevel","_props$size","_props$align","_props$color","getStyles","mergeStyles","accessibilityRole","Platform","OS","aria-level","Label","Link","_Layout","finalChildren","Children","map","listItem","index","isValidElement","cloneElement","paddingLeftMap","large","medium","small","xsmall","flexDirection","alignItems","width","isInline","NumberedItem","concat","NumberedList","getParagraphSize","paragraphSizes","getParagraphStyles","paragraphStyle","getFontFamily","_Paragraph","Paragraph","_props$fontFamily","accessibilityLabel","textColors","textColor","getTextSize","textSizes","getTextStyles","isBold","isItalic","transform","textStyle","alignSelf","fontStyle","textTransform","_props$isInline","_props$isBold","_props$isItalic","_Code","_Label","_Link","_NumberedList","_BulletItem","_NumberedItem","_BulletedList","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles"],"mappings":"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","file":"static/js/2.df6751f3.js","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport { Theme, useTheme } from '../../theme';\n\nexport const BASE_BORDER_RADII = 4;\n\nexport type Shape =\n  | 'circle'\n  | 'pill'\n  | 'rounded'\n  | 'roundedBottom'\n  | 'roundedLeft'\n  | 'roundedRight'\n  | 'roundedTop'\n  | 'square';\n\nexport interface BoxProps extends ViewStyle {\n  style?: ViewStyle;\n  children?: React.ReactNode;\n\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n  shape?: Shape;\n}\n\nexport const shapeMapping: {\n  [shape: string]: ViewStyle;\n} = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: BASE_BORDER_RADII,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderBottomRightRadius: BASE_BORDER_RADII,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: BASE_BORDER_RADII,\n    borderTopLeftRadius: BASE_BORDER_RADII,\n  },\n  roundedRight: {\n    borderBottomRightRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  roundedTop: {\n    borderTopLeftRadius: BASE_BORDER_RADII,\n    borderTopRightRadius: BASE_BORDER_RADII,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nconst propToFn = {\n  elevation: (elevation: 0 | 1 | 2 | 3 | 4, theme: Theme) => {\n    return theme.elevations[elevation];\n  },\n  shape: (shape: Shape) => shapeMapping[shape],\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, style: propStyle, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      // @ts-ignore\n      const styleFn = propToFn[prop];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop] = viewStyles[prop];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles, propStyle]}>\n      {children}\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { Box, BoxProps } from './Box';\n\nexport type GridScale =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18;\n\nconst DEFAULT_GRD_POINT_MULTPLIER = 8;\n\nexport interface SpacingProps extends BoxProps {\n  gridPointMultiplier?: number;\n  height?: GridScale;\n\n  margin?: GridScale;\n  marginBottom?: GridScale;\n  marginEnd?: GridScale;\n  marginHorizontal?: GridScale;\n  marginLeft?: GridScale;\n  marginRight?: GridScale;\n  marginStart?: GridScale;\n  marginTop?: GridScale;\n  marginVertical?: GridScale;\n\n  padding?: GridScale;\n  paddingBottom?: GridScale;\n  paddingEnd?: GridScale;\n  paddingHorizontal?: GridScale;\n  paddingLeft?: GridScale;\n  paddingRight?: GridScale;\n  paddingStart?: GridScale;\n  paddingTop?: GridScale;\n  paddingVertical?: GridScale;\n}\n\nconst hasGrid = {\n  height: true,\n\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n};\n\nexport const Spacing = (props: SpacingProps) => {\n  const marshalledProps = { ...props };\n\n  for (const prop in props) {\n    // @ts-ignore\n    if (hasGrid[prop]) {\n      // @ts-ignore\n      marshalledProps[prop] =\n        // @ts-ignore\n        props[prop] *\n        (props.gridPointMultiplier || DEFAULT_GRD_POINT_MULTPLIER);\n    }\n  }\n\n  return <Box {...marshalledProps} />;\n};\n","export * from './Box';\nexport * from './Spacing';\n","import * as React from 'react';\n\nimport { TextColor } from '../../theme/ThemeInterface';\nimport { ListItem, ListItemProps } from './ListItem';\n\nexport interface BulletItemProps extends ListItemProps {\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n  iconColor?: TextColor;\n}\n\nexport const BulletItem = (props: BulletItemProps) => {\n  const { icon, iconColor, ...listItemProps } = props;\n\n  return <ListItem mark={icon} {...listItemProps} />;\n};\n","import * as React from 'react';\n\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface BulletedListProps {\n  size?: TextSize;\n  icon?: React.ReactNode;\n  iconColor?: TextColor;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const BulletedList = (props: BulletedListProps) => {\n  return <List listType=\"ul\" {...props} />;\n};\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { Text, TextProps } from './Text';\n\nexport interface CodeProps extends TextProps {\n  appearance?: 'default' | 'minimal';\n}\n\nexport const Code = (props: CodeProps) => {\n  const { appearance, ...textProps } = props;\n  const theme = useTheme();\n\n  const code = <Text fontFamily=\"mono\" {...textProps} />;\n\n  if (appearance === 'default') {\n    return (\n      <View\n        style={[\n          styles.default,\n          {\n            backgroundColor: theme.colors.background.greyDefault,\n          },\n        ]}\n      >\n        {code}\n      </View>\n    );\n  }\n\n  return code;\n};\n\nconst styles = StyleSheet.create({\n  default: {\n    borderRadius: 2,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    paddingTop: 3,\n  },\n});\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  HeadingSize,\n  HeadingSizes,\n  TextColor,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingVariables {\n  size: HeadingSizes;\n}\n\nexport interface HeadingStyles {\n  headingStyle: TextStyle;\n}\n\nexport interface HeadingStylesProps {\n  size: HeadingSize;\n  align: TextAlign;\n  color: TextColor;\n  weight?: FontWeight;\n}\n\nexport type GetHeadingStyles = (\n  headingStylesProps: HeadingStylesProps,\n  theme: Theme,\n) => HeadingStyles;\n\nexport const getHeadingSize = (headingSizes: HeadingSizes) => (\n  size: HeadingSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetHeadingSize = headingSizes[size] as TextStyle;\n\n  return presetHeadingSize || { fontSize: size };\n};\n\nexport const getHeadingStyles: GetHeadingStyles = (\n  { size, align, color, weight },\n  theme,\n) => {\n  const sizeStyle = getHeadingSize(theme.headingSizes)(size);\n\n  return {\n    headingStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.heading,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Platform, Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { FontWeight, HeadingSize, TextColor } from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetHeadingStyles,\n  getHeadingStyles,\n  HeadingStyles,\n} from './Heading.styles';\nimport { TextAlign } from './types';\n\nexport interface HeadingProps extends TextProps {\n  children: React.ReactNode;\n  size?: HeadingSize;\n  align?: TextAlign;\n  color?: TextColor;\n  weight?: FontWeight;\n  accessibilityLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n\n  getStyles?: ReplaceReturnType<GetHeadingStyles, DeepPartial<HeadingStyles>>;\n}\n\nexport const Heading = (props: HeadingProps) => {\n  const {\n    accessibilityLevel,\n    size = 'medium',\n    align = 'left',\n    color = 'default',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { headingStyle } = mergeStyles(getHeadingStyles, getStyles)(\n    { size, align, color, weight },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'heading' : 'none'}\n      aria-level={accessibilityLevel} // Web\n      style={headingStyle}\n      {...textProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport { Text, TextProps } from './Text';\n\nexport const Label = (props: TextProps) => {\n  const { children, ...textProps } = props;\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'label' : 'none'}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import * as React from 'react';\n\nimport { Text, TextProps } from './Text';\n\nexport const Link = (props: TextProps) => {\n  return <Text color=\"primary\" {...props} />;\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Spacing } from '../Layout';\nimport { BulletItemProps } from './BulletItem';\nimport { NumberedItemProps } from './NumberedItem';\n\nexport interface ListProps {\n  icon?: React.ReactNode;\n  listType?: 'ol' | 'ul';\n  size?: TextSize;\n  children: Array<React.ReactElement<NumberedItemProps | BulletItemProps>>;\n}\n\nexport const List = (props: ListProps) => {\n  const { listType, children, icon, size = 'medium' } = props;\n\n  const finalChildren = React.Children.map(children, (listItem, index) => {\n    if (!React.isValidElement(listItem)) {\n      return listItem;\n    }\n\n    return React.cloneElement(listItem, {\n      // Prefer more granularly defined icon if present\n      // @ts-ignore\n      icon: listItem.props.icon || icon,\n      index: listType === 'ol' ? index + 1 : null,\n      size: listItem.props.size || size,\n    });\n  });\n\n  return (\n    <View\n      // @ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'list' : 'none'}\n    >\n      <Spacing margin={0} marginLeft={1} padding={0}>\n        {finalChildren}\n      </Spacing>\n    </View>\n  );\n};\n","import * as React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { Spacing } from '../Layout';\nimport { Text, TextProps } from './Text';\n\nconst paddingLeftMap = {\n  large: 3,\n  medium: 2,\n  small: 2,\n  xsmall: 1,\n};\n\nexport interface ListItemProps extends TextProps {\n  children: React.ReactNode;\n  size?: TextSize;\n  mark: React.ReactNode;\n}\n\nexport const ListItem = (props: ListItemProps) => {\n  const { size = 'medium', mark, ...textProps } = props;\n\n  const paddingLeft =\n    typeof size === 'number' ? 2 : (paddingLeftMap[size] as 1 | 2 | 3);\n\n  return (\n    // @ts-ignore\n    <View accessibilityRole={Platform.OS === 'web' ? 'listitem' : 'none'}>\n      <Spacing flexDirection=\"row\" alignItems=\"center\" marginVertical={1}>\n        <Spacing>{mark}</Spacing>\n        <Spacing width=\"100%\" paddingLeft={paddingLeft}>\n          <Text isInline size={size} {...textProps} />\n        </Spacing>\n      </Spacing>\n    </View>\n  );\n};\n","import * as React from 'react';\n\nimport { ListItem, ListItemProps } from './ListItem';\nimport { Text } from './Text';\n\nexport interface NumberedItemProps extends ListItemProps {\n  index: number;\n  children: React.ReactNode;\n}\n\nexport const NumberedItem = (props: NumberedItemProps) => {\n  const { index, ...listItemProps } = props;\n\n  return (\n    <ListItem\n      mark={\n        <Text size={listItemProps.size} {...listItemProps}>{`${index}.`}</Text>\n      }\n      {...listItemProps}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport { TextSize } from '../../theme/ThemeInterface';\nimport { List } from './List';\nimport { ListItemProps } from './ListItem';\n\nexport interface NumberedListProps {\n  size?: TextSize;\n  children: Array<React.ReactElement<ListItemProps>>;\n}\n\nexport const NumberedList = (props: NumberedListProps) => {\n  return <List listType=\"ol\" {...props} />;\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  ParagraphSizes,\n  TextColor,\n  TextColors,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { getFontFamily, getFontWeight, getTextColor } from './Text.styles';\nimport { TextAlign } from './types';\n\nexport interface ParagraphVariables {\n  color: TextColors;\n  size: ParagraphSizes;\n  fontFamily: FontFamilies;\n}\n\nexport interface ParagraphStylesProps {\n  align: TextAlign;\n  size: ParagraphSize;\n  color: TextColor;\n  fontFamily: FontFamily;\n  weight?: FontWeight;\n}\n\nexport interface ParagraphStyles {\n  paragraphStyle: TextStyle;\n}\n\nexport type GetParagraphStyles = (\n  paragraphStylesProps: ParagraphStylesProps,\n  theme: Theme,\n) => ParagraphStyles;\n\nexport const getParagraphSize = (paragraphSizes: ParagraphSizes) => (\n  size: ParagraphSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetParagraphSize = paragraphSizes[size] as TextStyle;\n\n  return presetParagraphSize || { fontSize: size };\n};\n\nexport const getParagraphStyles: GetParagraphStyles = (\n  { size, color, fontFamily, align, weight },\n  theme,\n) => {\n  const sizeStyle = getParagraphSize(theme.paragraphSizes)(size);\n\n  return {\n    paragraphStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      marginBottom: '1em',\n      marginTop: '1em',\n      textAlign: align,\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontFamily,\n  FontWeight,\n  ParagraphSize,\n  TextColor,\n} from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetParagraphStyles,\n  getParagraphStyles,\n  ParagraphStyles,\n} from './Paragraph.styles';\nimport { TextAlign } from './types';\n\n// @ts-ignore: need to override for web purposes\nexport interface ParagraphProps extends TextProps {\n  children: React.ReactNode;\n  color?: TextColor;\n  size?: ParagraphSize;\n  weight?: FontWeight;\n  align?: TextAlign;\n  fontFamily?: FontFamily;\n\n  getStyles?: ReplaceReturnType<\n    GetParagraphStyles,\n    DeepPartial<ParagraphStyles>\n  >;\n}\n\nexport const Paragraph = (props: ParagraphProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    getStyles,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { paragraphStyle } = mergeStyles(getParagraphStyles, getStyles)(\n    { align, size, color, fontFamily, weight },\n    theme,\n  );\n\n  return (\n    <Text\n      // @ts-ignore\n      accessibilityLabel=\"p\"\n      style={paragraphStyle}\n      {...textProps}\n    >\n      {children}\n    </Text>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontFamilies,\n  FontFamily,\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/ThemeInterface';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextVariables {\n  size: TextSizes;\n  fontFamily: FontFamilies;\n}\n\nexport interface TextStylesProps {\n  isBold: boolean;\n  isItalic: boolean;\n  size: TextSize;\n  color: TextColor;\n  align: TextAlign;\n  transform?: TextTransform;\n  fontFamily: FontFamily;\n  isInline: boolean;\n  weight?: FontWeight;\n}\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (\n  textStylesProps: TextStylesProps,\n  theme: Theme,\n) => TextStyles;\n\nexport const getFontFamily = (fontFamilies: FontFamilies) => (\n  fontFamily: FontFamily,\n) => fontFamilies[fontFamily];\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    size,\n    color,\n    fontFamily,\n    isInline,\n    isBold,\n    isItalic,\n    align,\n    transform,\n    weight,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: getFontFamily(theme.fontFamilies)(fontFamily),\n      ...(isBold && {\n        fontWeight: '600',\n      }),\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n          }\n        : {}),\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","import * as React from 'react';\nimport { Text as RNText, TextProps as RNTextProps } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport {\n  FontFamily,\n  FontWeight,\n  TextColor,\n  TextSize,\n} from '../../theme/ThemeInterface';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { GetTextStyles, getTextStyles, TextStyles } from './Text.styles';\nimport { TextAlign, TextTransform } from './types';\n\nexport interface TextStyleProps {\n  isInline?: boolean;\n  size?: TextSize;\n  color?: TextColor;\n  align?: TextAlign;\n  transform?: TextTransform;\n  fontFamily?: FontFamily;\n  weight?: FontWeight;\n  isBold?: boolean;\n  isItalic?: boolean;\n}\n\n// @ts-ignore: need to override for web purposes\nexport interface TextProps extends RNTextProps, TextStyleProps {\n  children: React.ReactNode;\n\n  getStyles?: ReplaceReturnType<GetTextStyles, DeepPartial<TextStyles>>;\n}\n\nexport const Text = (props: TextProps) => {\n  const {\n    children,\n    color = 'default',\n    fontFamily = 'text',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isInline = false,\n    getStyles,\n    isBold = false,\n    isItalic = false,\n    transform,\n    ...textProps\n  } = props;\n  const theme = useTheme();\n\n  const { textStyle } = mergeStyles(getTextStyles, getStyles)(\n    {\n      align,\n      color,\n      fontFamily,\n      isBold,\n      isInline,\n      isItalic,\n      size,\n      transform,\n      weight,\n    },\n    theme,\n  );\n\n  return (\n    <RNText style={textStyle} {...textProps}>\n      {children}\n    </RNText>\n  );\n};\n","export * from './Code';\nexport * from './Heading';\nexport * from './Label';\nexport * from './Link';\nexport * from './NumberedList';\nexport * from './Paragraph';\nexport * from './BulletItem';\nexport * from './NumberedItem';\nexport * from './Text';\nexport * from './BulletedList';\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}