{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/Alert.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Alert/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/Toast.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastContext.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/ToastProvider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Toast/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/constants/Animation.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["alertVariables","theme","body","flex","container","_objectSpread2","default","backgroundColor","colors","background","content","borderLeftWidth","borderRadius","controlBorderRadius","medium","display","flexDirection","padding","elevations","message","title","danger","borderLeftColor","border","info","success","warning","getAlertStyles","_ref","intent","_alertVariables","intentStyle","_objectWithoutProperties2","bodyStyle","containerStyle","textStyle","titleStyle","React","_interopRequireWildcard","__webpack_require__","_reactNative","_icons","_theme","_mergeStyles2","_Layout","_Typography","_Alert","Alert","props","description","component","onClose","_props$isCloseable","isCloseable","icon","_props$intent","getStyles","testID","useTheme","_mergeStyles","mergeStyles","createElement","View","style","Box","paddingRight","justifyContent","Icon","name","size","color","text","resolveIcon","Text","isBold","TouchableOpacity","onPress","paddingLeft","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_Button","BackButton","Button","_extends2","appearance","isInline","iconBefore","getButtonVariables","appearances","minimal","focusColor","greyDefault","primary","secondary","greyLight","borderColor","loadingBackgroundColor","overlay","dangerDefault","white","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","fontSize","textSizes","height","controlHeights","controlPaddings","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","alignSelf","flexWrap","alignItems","fontWeight","textAlign","_Loading","_props$appearance","_props$color","iconAfter","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","_props$size","accessibilityProps","TouchableHighlight","accessible","accessibilityRole","underlayColor","ButtonContent","LoadingDots","_BackButton","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","this","arguments","map","index","marginLeft","marginRight","width","_LoadingDots","_react","_interopRequireDefault","_react2","_docz","_","layoutProps","MDXLayout","MDXContent","components","mdx","mdxType","id","parentName","Playground","__position","__code","__scope","Props","ToastContext","ToastProvider","Toast","Consumer","_ref2","notify","offset","_ref3","Fragment","of","isMDXComponent","getToastVariables","base","paddingBottom","paddingTop","backgroundDanger","textDanger","backgroundInfo","textInfo","backgroundSuccess","successDefault","textSuccess","backgroundWarning","warningDefault","textWarning","left","marginBottom","marginTop","maxWidth","position","Platform","OS","right","top","zIndex","getToastStyles","_Animation","onRemove","_props$duration","toastSettings","useSpring","springDefaultConfig","translateY","onRest","delay","transform","defaultToastInstance","defaultToastContext","createContext","_Toast","_Toast2","_ToastContext","hasCustomId","ToastProviderBase","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","removeToast","setState","previousState","toasts","filter","toast","toastInstance","createToastInstance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","state","Symbol","iterator","done","value","String","startsWith","err","return","concat","_toConsumableArray2","slice","uniqueId","idCounter","_this2","_this$props","children","currentToast","_slicedToArray2","Provider","Component","withTheme","_ToastProvider","friction","tension","Feather","IconTag","result","replace","matches","toUpperCase","charAt","convertToPascal","_Icon"],"mappings":"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","file":"static/js/6.64abda43.js","sourcesContent":["import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants/Intent';\nimport { Theme } from '../../theme';\n\nexport interface AlertStyles {\n  containerStyle: ViewStyle;\n  bodyStyle: ViewStyle;\n  titleStyle: TextStyle;\n  textStyle: TextStyle;\n}\n\nexport interface AlertSeparatedVariables {\n  container: ViewStyle;\n  body: ViewStyle;\n  title: TextStyle;\n  message: TextStyle;\n}\n\nexport interface AlertVariables extends AlertSeparatedVariables {\n  danger: AlertSeparatedVariables;\n  info: AlertSeparatedVariables;\n  success: AlertSeparatedVariables;\n  warning: AlertSeparatedVariables;\n}\n\nexport const alertVariables = (theme: Theme): AlertVariables => {\n  return {\n    body: {\n      flex: 1,\n    },\n    container: {\n      backgroundColor: theme.colors.background.content,\n      borderLeftWidth: 5,\n      borderRadius: theme.controlBorderRadius.medium,\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 16,\n      ...theme.elevations[2],\n    },\n    message: {},\n    title: {},\n\n    danger: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.danger,\n      },\n      message: {},\n      title: {},\n    },\n    info: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.info,\n      },\n      message: {},\n      title: {},\n    },\n    success: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.success,\n      },\n      message: {},\n      title: {},\n    },\n    warning: {\n      body: {},\n      container: {\n        borderLeftColor: theme.colors.border.warning,\n      },\n      message: {},\n      title: {},\n    },\n  };\n};\n\nexport interface AlertStyleProps {\n  intent: Intent;\n}\n\nexport type GetAlertStyles = (\n  alertStyleProps: AlertStyleProps,\n  theme: Theme,\n) => AlertStyles;\n\nexport const getAlertStyles: GetAlertStyles = ({ intent }, theme) => {\n  const { container, body, title, message, ...intents } = alertVariables(theme);\n\n  const intentStyle = intents[intent];\n\n  return {\n    bodyStyle: {\n      ...body,\n      ...intentStyle.body,\n    },\n    containerStyle: {\n      ...container,\n      ...intentStyle.container,\n    },\n    textStyle: {\n      ...message,\n      ...intentStyle.message,\n    },\n    titleStyle: {\n      ...title,\n      ...intentStyle.title,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Intent } from '../../constants/Intent';\nimport { Icon } from '../../icons';\nimport { Theme, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Layout';\nimport { Text } from '../Typography';\nimport { AlertStyles, GetAlertStyles, getAlertStyles } from './Alert.styles';\n\nexport interface AlertProps {\n  title?: string;\n  description?: string;\n  testID?: string;\n  /* custom component, will take precedence over title and description */\n  component?: React.ReactNode;\n  onClose?: () => void;\n  isCloseable?: boolean;\n  icon?: React.ReactNode | null;\n  intent?: Intent;\n\n  getStyles?: ReplaceReturnType<GetAlertStyles, DeepPartial<AlertStyles>>;\n}\n\nconst resolveIcon = (intent: Intent, theme: Theme) => {\n  switch (intent) {\n    case 'success':\n      return (\n        <Icon name=\"check-circle\" size={24} color={theme.colors.text.success} />\n      );\n    case 'warning':\n      return (\n        <Icon\n          name=\"alert-triangle\"\n          size={24}\n          color={theme.colors.text.warning}\n        />\n      );\n    case 'danger':\n      return (\n        <Icon name=\"alert-circle\" size={24} color={theme.colors.text.danger} />\n      );\n    default:\n      return <Icon name=\"info\" size={24} color={theme.colors.text.info} />;\n  }\n};\n\nexport const Alert = (props: AlertProps) => {\n  const {\n    title,\n    description,\n    component,\n    onClose,\n    isCloseable = false,\n    icon,\n    intent = 'info',\n    getStyles,\n    testID,\n  } = props;\n\n  const theme = useTheme();\n\n  const { containerStyle, bodyStyle } = mergeStyles(getAlertStyles, getStyles)(\n    { intent },\n    theme,\n  );\n\n  return (\n    <View style={containerStyle} testID={testID}>\n      {icon || (\n        <Box paddingRight={16} justifyContent=\"center\">\n          {resolveIcon(intent, theme)}\n        </Box>\n      )}\n      {component || (\n        <View style={bodyStyle}>\n          <Text isBold>{title}</Text>\n          <Text>{description}</Text>\n        </View>\n      )}\n      {isCloseable && (\n        <TouchableOpacity onPress={onClose}>\n          <Box paddingLeft={16}>\n            <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n          </Box>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n","export * from './Alert';\n","import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: theme.colors.text.white,\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.content,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small * 2,\n        paddingRight: theme.controlPaddings.small * 2,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium * 2,\n        paddingRight: theme.controlPaddings.medium * 2,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large * 2,\n        paddingRight: theme.controlPaddings.large * 2,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Box } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Box paddingLeft={iconBefore ? 8 : 0} paddingRight={iconAfter ? 8 : 0}>\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Box>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native.cjs';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { ToastContext, ToastProvider, Toast } from '.';\nimport { Button } from '../Button';\nimport { Box } from '../Layout';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<ToastProvider\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n  })}\\n>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <Button\\n        onPress={() => {\\n          notify({\\n            title: \\'Title\\',\\n            description: \\'Description\\',\\n            component: null, // A React Component that overrides title and description\\n            isCloseable: true,\\n            offset: 16,\\n            duration: 3000,\\n            // ...Alert props e.g. getStyles\\n          })\\n        }}\\n        title=\\\"Use\\\"\\n      />\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider getStyles={(props, theme) => ({\n        containerStyle: {}\n      })} mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <Button onPress={() => {\n            notify({\n              title: 'Title',\n              description: 'Description',\n              component: null,\n              // A React Component that overrides title and description\n              isCloseable: true,\n              offset: 16,\n              duration: 3000 // ...Alert props e.g. getStyles\n\n            });\n          }} title=\"Use\" mdxType=\"Button\" />}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<ToastProvider>\\n  <ToastContext.Consumer>\\n    {({ notify }) => (\\n      <>\\n        <Button\\n          onPress={() =>\\n            notify({\\n              title: \\'Title\\',\\n              description: \\'Description\\',\\n              isCloseable: true,\\n            })\\n          }\\n          title=\\\"Open default toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'success\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"primary\\\"\\n          title=\\\"Open success toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'danger\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"danger\\\"\\n          title=\\\"Open danger toast\\\"\\n        />\\n        <Button\\n          onPress={() =>\\n            notify({\\n              description: \\'Description\\',\\n              intent: \\'warning\\',\\n              title: \\'Title\\',\\n            })\\n          }\\n          color=\\\"secondary\\\"\\n          title=\\\"Open warning toast\\\"\\n        />\\n      </>\\n    )}\\n  </ToastContext.Consumer>\\n</ToastProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ToastContext,\n      ToastProvider,\n      Toast,\n      Button,\n      Box\n    }} mdxType=\"Playground\">\n  <ToastProvider mdxType=\"ToastProvider\">\n    <ToastContext.Consumer>\n      {({\n            notify\n          }) => <>\n          <Button onPress={() => notify({\n              title: 'Title',\n              description: 'Description',\n              isCloseable: true\n            })} title=\"Open default toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'success',\n              title: 'Title'\n            })} color=\"primary\" title=\"Open success toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'danger',\n              title: 'Title'\n            })} color=\"danger\" title=\"Open danger toast\" mdxType=\"Button\" />\n          <Button onPress={() => notify({\n              description: 'Description',\n              intent: 'warning',\n              title: 'Title'\n            })} color=\"secondary\" title=\"Open warning toast\" mdxType=\"Button\" />\n        </>}\n    </ToastContext.Consumer>\n  </ToastProvider>\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Toast} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { Platform, TextStyle, ViewStyle } from 'react-native';\n\nimport { Intent } from '../../constants';\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface ToastVariables {\n  base: ViewStyle;\n  /** The area on screen where the toast appears */\n  container: ViewStyle;\n\n  textSuccess: TextStyle;\n  backgroundSuccess: ViewStyle;\n  textDanger: TextStyle;\n  backgroundDanger: ViewStyle;\n  textWarning: TextStyle;\n  backgroundWarning: ViewStyle;\n  textInfo: TextStyle;\n  backgroundInfo: ViewStyle;\n}\n\nexport const getToastVariables = (theme: Theme): ToastVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.content,\n      borderRadius: theme.controlBorderRadius.medium,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n      ...theme.elevations[2],\n    },\n\n    backgroundDanger: {\n      backgroundColor: theme.colors.background.dangerDefault,\n    },\n    textDanger: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundInfo: {\n      backgroundColor: theme.colors.background.content,\n    },\n    textInfo: {\n      color: theme.colors.text.default,\n    },\n\n    backgroundSuccess: {\n      backgroundColor: theme.colors.background.successDefault,\n    },\n    textSuccess: {\n      color: theme.colors.text.white,\n    },\n\n    backgroundWarning: {\n      backgroundColor: theme.colors.background.warningDefault,\n    },\n    textWarning: {\n      color: theme.colors.text.white,\n    },\n\n    container: {\n      left: 32,\n      marginBottom: 0,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: 0,\n      maxWidth: 560,\n      // @ts-ignore: Compat with web\n      position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n      right: 32,\n      top: 10,\n      zIndex: 100,\n    },\n  };\n};\n\nexport interface ToastStyles {\n  containerStyle: ViewStyle;\n}\n\nexport interface ToastStylesProps {\n  intent: Intent;\n}\n\nexport type GetToastStyles = (\n  toastStylesProps: ToastStylesProps,\n  theme: Theme,\n) => ToastStyles;\n\nexport const getToastStyles: GetToastStyles = ({ intent }, theme) => {\n  const toastVariables = getToastVariables(theme);\n\n  return {\n    containerStyle: toastVariables.container,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useSpring } from 'react-spring/native.cjs';\nimport { Omit } from 'ts-essentials';\n\nimport { springDefaultConfig } from '../../constants/Animation';\nimport { Alert, AlertProps } from '../Alert';\n\nconst AnimatedView = animated(View);\n\nexport type ToastId = string;\n\nexport interface ToastSettings extends Omit<AlertProps, 'onClose'> {\n  id?: ToastId;\n  offset?: number;\n  /* duration for how long the toast should stay active */\n  duration?: number;\n  /* custom component, will override every other setting */\n  component?: React.ReactNode;\n}\n\nexport interface ToastInstance extends ToastSettings {\n  id: ToastId;\n  onRemove: () => void;\n}\n\n// tslint:disable-next-line\nexport interface ToastProps extends ToastInstance {}\n\nexport const Toast = (props: ToastProps) => {\n  const {\n    component,\n    id,\n    onRemove,\n    duration = 3000,\n    offset = 16,\n    ...toastSettings\n  } = props;\n\n  const style = useSpring({\n    config: springDefaultConfig,\n\n    from: { translateY: -500 },\n    onRest: () => onRemove(),\n    to: async next => {\n      // tslint:disable-next-line\n      await next({ translateY: 10 });\n      // tslint:disable-next-line\n      await next({ translateY: -500, delay: duration });\n    },\n  });\n\n  return (\n    // @ts-ignore\n    <AnimatedView style={{ transform: [{ translateY: style.translateY }] }}>\n      {component || <Alert {...toastSettings} onClose={onRemove} />}\n    </AnimatedView>\n  );\n};\n","import * as React from 'react';\n\nimport { ToastInstance, ToastSettings } from './Toast';\n\nexport interface ToastContext {\n  danger: (toastSettings: ToastSettings) => ToastInstance;\n  notify: (toastSettings: ToastSettings) => ToastInstance;\n  success: (toastSettings: ToastSettings) => ToastInstance;\n  warning: (toastSettings: ToastSettings) => ToastInstance;\n}\n\nconst defaultToastInstance: ToastInstance = {\n  id: '1',\n  onRemove: () => null,\n};\n\nconst defaultToastContext: ToastContext = {\n  danger: () => defaultToastInstance,\n  notify: () => defaultToastInstance,\n  success: () => defaultToastInstance,\n  warning: () => defaultToastInstance,\n};\n\nexport const ToastContext = React.createContext(defaultToastContext);\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Toast, ToastId, ToastInstance, ToastSettings } from './Toast';\nimport { GetToastStyles, getToastStyles, ToastStyles } from './Toast.styles';\nimport { ToastContext } from './ToastContext';\n\nexport interface ToastProviderProps {\n  children?: React.ReactNode;\n  theme: Theme;\n  getStyles?: ReplaceReturnType<GetToastStyles, DeepPartial<ToastStyles>>;\n}\n\nexport interface ToastProviderState {\n  toasts: ToastInstance[];\n}\n\nconst hasCustomId = (toastSettings: ToastSettings) => !!toastSettings.id;\n\nclass ToastProviderBase extends React.Component<\n  ToastProviderProps,\n  ToastProviderState\n> {\n  public static idCounter: number = 0;\n\n  constructor(props: ToastProviderProps) {\n    super(props);\n\n    this.state = {\n      toasts: [],\n    };\n  }\n\n  public removeToast = (id: ToastId) => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.filter(toast => toast.id !== id),\n      };\n    });\n  };\n\n  public notify = (toastSettings: ToastSettings) => {\n    const toastInstance = this.createToastInstance(toastSettings);\n\n    // If there's a custom toast D passed, close existing toasts with the same custom D\n    if (hasCustomId(toastSettings)) {\n      for (const toast of this.state.toasts) {\n        // Since unique D is still appended to a custom D, skip the unique D and check only prefix\n        if (String(toast.id).startsWith(String(toastSettings.id))) {\n          this.removeToast(toast.id);\n        }\n      }\n    }\n\n    this.setState(previousState => {\n      return {\n        // Immediately remove the current toast\n        toasts: [...previousState.toasts.slice(1), toastInstance],\n      };\n    });\n\n    return toastInstance;\n  };\n\n  public createToastInstance = (\n    toastSettings: ToastSettings,\n  ): ToastInstance => {\n    const uniqueId = ++ToastProviderBase.idCounter;\n    const id = hasCustomId(toastSettings)\n      ? `${toastSettings.id}-${uniqueId}`\n      : `${uniqueId}`;\n\n    return {\n      id,\n      onRemove: () => this.removeToast(id),\n      ...toastSettings,\n    };\n  };\n\n  public render() {\n    const { children, theme, getStyles } = this.props;\n    const { toasts } = this.state;\n    const [currentToast] = toasts;\n\n    // Intent does not matter here\n    // Consider using a different style getter for toast provider\n    const { containerStyle } = mergeStyles(getToastStyles, getStyles)(\n      { intent: 'info' },\n      theme,\n    );\n\n    return (\n      <ToastContext.Provider\n        value={{\n          danger: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'danger' }),\n          notify: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings }),\n          removeToast: (id: ToastId) => this.removeToast(id),\n          success: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'success' }),\n          warning: (toastSettings: ToastSettings) =>\n            this.notify({ ...toastSettings, intent: 'warning' }),\n        }}\n      >\n        {children}\n        <View style={containerStyle}>\n          {currentToast && <Toast key={currentToast.id} {...currentToast} />}\n        </View>\n      </ToastContext.Provider>\n    );\n  }\n}\n\nexport const ToastProvider = withTheme(ToastProviderBase);\n","export * from './Toast';\nexport * from './ToastContext';\nexport * from './ToastProvider';\n","export const springDefaultConfig = {\n  friction: 40,\n  tension: 400,\n};\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}