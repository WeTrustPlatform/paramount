{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["initialMeasurements","height","pageX","pageY","width","x","y","adjustPageY","Platform","OS","window","scrollY","useMeasure","props","onMeasure","ref","_React$useState","React","_React$useState2","Object","slicedToArray","measurements","setMeasurements","handleMeasure","layout","handle","findNodeHandle","current","prevMeasurements","UIManager","measure","newMeasurements","objectSpread","handleLayout","e","nativeEvent","handleResize","Dimensions","addEventListener","removeEventListener","onLayout","ViewMeasure","children","viewProps","objectWithoutProperties","isRenderProp","_useMeasure","react","View","esm_extends","__source","fileName","lineNumber","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Slider","___WEBPACK_IMPORTED_MODULE_5__","size","value","onValueChange","console","log","onSlidingComplete","onSlidingStart","parentName","step","minimumValue","maximumValue","of","className","isMDXComponent","usePrevious","getSliderStyles","theme","_props$size","controlSize","controlHeights","containerStyle","justifyContent","selectedTrackStyle","backgroundColor","colors","background","primaryDefault","borderRadius","position","thumbStyle","content","borderColor","border","primary","borderWidth","zIndex","unselectedTrackStyle","greyDark","getBoundedValueBase","isRangeValue","Array","isArray","getLeftValue","getRightValue","_props$value","initialValue","_props$onSlidingStart","_props$onSlidingCompl","_props$onValueChange","_props$minimumValue","_props$maximumValue","_props$step","getStyles","_props$isRange","isRange","leftThumbAccessibilityLabel","leftThumbAccessibilityHint","rightThumbAccessibilityHint","rightThumbAccessibilityLabel","finalInitialValue","setValue","_React$useState3","_React$useState4","isSliding","setIsSliding","_React$useState5","_React$useState6","trackMeasurements","setTrackMeasurements","prevIsSliding","valuePerPixel","pixelPerValue","isRangeSlider","handleLeftSlide","dx","leftValue","roundedLeftValue","Math","round","finalLeftValue","updatedValue","previousValue","setLeftValue","handleRightSlide","rightValue","roundedRightValue","finalRightValue","setRightValue","makeThumbRef","handler","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","_","_ref2","onPanResponderRelease","leftThumbRef","rightThumbRef","useTheme","_mergeStyles","mergeStyles","left","right","cursor","style","accessible","accessibilityLabel","accessibilityHint","panHandlers","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","overlay","greyLight","greyDefault","primaryLight","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","default","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","text","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","fills","solid","neutral","color","blue","red","orange","yellow","green","teal","purple","subtle","fontFamilies","heading","mono","fontWeights","bold","normal","headingSizes","xxxlarge","fontSize","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","textSizes","xsmall","controlPaddings","containerShapes","circle","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","react_default","a","createElement","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","styles","push","merge","all"],"mappings":"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","file":"static/js/33.728c6f57.js","sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n  ref: React.MutableRefObject<any>;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst adjustPageY = (pageY: number) => {\n  // On the web, when scroll position is restored (e.g. User is scrolled down and refreshes the page)\n  // We need to adjust pageY accordingly. Required to correct behavior of positioner\n  return Platform.OS === 'web' ? pageY + window.scrollY : pageY;\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const { onMeasure, ref } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleMeasure = React.useCallback(\n    (layout?: LayoutRectangle) => {\n      const handle = findNodeHandle(ref.current);\n      const prevMeasurements = measurements;\n\n      if (handle) {\n        UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n          const newMeasurements = {\n            ...prevMeasurements,\n            ...layout,\n            pageX,\n            pageY: adjustPageY(pageY),\n          };\n\n          setMeasurements(newMeasurements);\n\n          if (onMeasure) onMeasure(newMeasurements);\n        });\n      }\n    },\n    [measurements],\n  );\n\n  const handleLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      // Use the value from here, isntead of inside UIManager.measure callback\n      // Async behavior will nullify nativeEvent\n      const layout = e.nativeEvent.layout;\n      handleMeasure(layout);\n    },\n    [handleMeasure, measurements],\n  );\n\n  const handleResize = React.useCallback(() => {\n    handleMeasure();\n  }, [handleMeasure, measurements]);\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleResize);\n\n    return () => Dimensions.removeEventListener('change', handleResize);\n  }, [measurements]);\n\n  return {\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderProp = (props: Measurements) => JSX.Element;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderProp;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const ref = React.useRef<View>(null);\n  const { measurements, onLayout } = useMeasure({ onMeasure, ref });\n\n  return (\n    <View\n      ref={ref}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Slider } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Slider\\n  size=\\\"small\\\"\\n  value={0.3}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider size=\"small\" value={0.3} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} mdxType=\"Slider\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-range\"\n    }}>{`With Range`}</h3>\n    <p>{`By using `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` as an array of `}<inlineCode parentName=\"p\">{`[number, number]`}</inlineCode>{`, it will automatically transform into a range slider. The minimum range is the value of the step`}</p>\n    <Playground __position={1} __code={'<Slider\\n  value={[30, 60]}\\n  step={5}\\n  minimumValue={0}\\n  maximumValue={100}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider value={[30, 60]} step={5} minimumValue={0} maximumValue={100} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} mdxType=\"Slider\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Slider} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`SliderStyles {\n  containerStyle: ViewStyle; // { height: thumbSize }\n  selectedTrackStyle: ViewStyle;\n  thumbStyle: ViewStyle; // { height: thumbSize, width: thumbSize }\n  unselectedTrackStyle: ViewStyle;\n}\n\ngetStyles={(SliderProps, Theme) => SliderStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <View unselectedTrackStyle />\n  <View selectedTrackStyle />\n  <View thumbStyle />\n  <View thumbStyle />\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>(value);\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { SliderProps } from './Slider';\n\nexport interface SliderStyles {\n  containerStyle: ViewStyle;\n  selectedTrackStyle: ViewStyle;\n  thumbStyle: ViewStyle;\n  unselectedTrackStyle: ViewStyle;\n}\n\nexport type GetSliderStyles = (\n  props: SliderProps,\n  theme: Theme,\n) => SliderStyles;\n\nexport const getSliderStyles: GetSliderStyles = (props, theme) => {\n  const { size = 'medium' } = props;\n\n  const controlSize = theme.controlHeights[size];\n\n  return {\n    containerStyle: { height: controlSize, justifyContent: 'center' },\n    selectedTrackStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 8,\n      height: 8,\n      position: 'absolute',\n      width: '100%',\n    },\n    thumbStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 3,\n      height: controlSize,\n      position: 'absolute',\n      width: controlSize,\n      zIndex: 1,\n    },\n    unselectedTrackStyle: {\n      backgroundColor: theme.colors.background.greyDark,\n      borderRadius: 8,\n      height: 8,\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { PanResponder, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { usePrevious } from '../../hooks';\nimport { ControlSize, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport {\n  GetSliderStyles,\n  getSliderStyles,\n  SliderStyles,\n} from './Slider.styles';\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type RangeValue = [number, number];\nexport type SliderValue = number | RangeValue;\n\nexport interface SliderProps {\n  /**\n   * Set whether it should slide a range.\n   * However, if initialValue is set, it will take precedence over this prop\n   * @default false\n   */\n  isRange?: boolean;\n\n  /**\n   * Size of the thumb, and thus the whole slider\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue; which default to 0 and 1 respectively.\n   *\n   * *This is not a controlled component*; you don't need to update the\n   * value during dragging.\n   * @default 0\n   */\n  value?: SliderValue;\n\n  /**\n   * Step value of the slider. The value should be\n   * between 0 and (maximumValue - minimumValue).\n   * @default 0\n   */\n  step?: number;\n\n  /**\n   * Initial minimum value of the slider.\n   * @default 0\n   */\n  minimumValue?: number;\n\n  /**\n   * Initial maximum value of the slider.\n   * @default 1\n   */\n  maximumValue?: number;\n\n  /**\n   * If true the user won't be able to move the slider.\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: (value: SliderValue) => void;\n\n  /**\n   * Callback that is called when the user releases the slider;\n   * regardless if the value has changed. The current value is passed\n   * as an argument to the callback handler.\n   */\n  onSlidingComplete?: (value: SliderValue) => void;\n\n  /**\n   * Callback called when the user starts changing the value.\n   */\n  onSlidingStart?: (value: SliderValue) => void;\n\n  /**\n   * Callback to get element styles.\n   */\n  getStyles?: ReplaceReturnType<GetSliderStyles, DeepPartial<SliderStyles>>;\n\n  /** Label for screen readers */\n  leftThumbAccessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  leftThumbAccessibilityHint?: string;\n\n  /** Label for screen readers */\n  rightThumbAccessibilityLabel?: string;\n\n  /** Hint for screen readers */\n  rightThumbAccessibilityHint?: string;\n\n  /**\n   * Used to locate this view in UI automation tests.\n   */\n  testID?: string;\n}\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst getBoundedValueBase = ({\n  maximumValue,\n  minimumValue,\n}: {\n  maximumValue: number;\n  minimumValue: number;\n}) => (value: number) =>\n  value > maximumValue\n    ? maximumValue\n    : value < minimumValue\n    ? minimumValue\n    : value;\n\nconst isRangeValue = (value: SliderValue): value is [number, number] =>\n  Array.isArray(value);\n\nconst getLeftValue = (value: SliderValue): number => {\n  if (isRangeValue(value)) return value[0];\n  return value;\n};\n\nconst getRightValue = (value: SliderValue): number => {\n  if (isRangeValue(value)) return value[1];\n  return value;\n};\n\nconst setLeftValue = (\n  previousValue: SliderValue,\n  leftValue: number,\n): SliderValue => {\n  return isRangeValue(previousValue)\n    ? [leftValue, previousValue[1]]\n    : leftValue;\n};\n\nconst setRightValue = (\n  previousValue: SliderValue,\n  rightValue: number,\n): SliderValue => {\n  return isRangeValue(previousValue)\n    ? [previousValue[0], rightValue]\n    : rightValue;\n};\n\nexport const Slider = (props: SliderProps) => {\n  const {\n    value: initialValue = 0,\n    onSlidingStart = () => undefined,\n    onSlidingComplete = () => undefined,\n    onValueChange = () => undefined,\n    minimumValue = 0,\n    maximumValue = 1,\n    step = 0,\n    getStyles,\n    isRange = false,\n    leftThumbAccessibilityLabel,\n    leftThumbAccessibilityHint,\n    rightThumbAccessibilityHint,\n    rightThumbAccessibilityLabel,\n  } = props;\n\n  const finalInitialValue =\n    initialValue || (isRange ? [minimumValue, maximumValue] : minimumValue);\n\n  const [value, setValue] = React.useState(finalInitialValue);\n  const [isSliding, setIsSliding] = React.useState(false);\n  const [trackMeasurements, setTrackMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const prevIsSliding = usePrevious(isSliding);\n  const valuePerPixel = (maximumValue - minimumValue) / trackMeasurements.width;\n  const pixelPerValue = trackMeasurements.width / (maximumValue - minimumValue);\n  const isRangeSlider = isRangeValue(value);\n\n  const handleLeftSlide = (dx: number) => {\n    const leftValue = getLeftValue(value) + dx * valuePerPixel;\n    const roundedLeftValue = step\n      ? Math.round(leftValue / step) * step\n      : leftValue;\n\n    const finalLeftValue = getBoundedValueBase({\n      maximumValue: isRangeSlider ? getRightValue(value) - step : maximumValue,\n      minimumValue,\n    })(getLeftValue(roundedLeftValue));\n    const updatedValue = setLeftValue(value, finalLeftValue);\n\n    setValue(updatedValue);\n    onValueChange(updatedValue);\n  };\n\n  const handleRightSlide = (dx: number) => {\n    const rightValue = getRightValue(value) + dx * valuePerPixel;\n    const roundedRightValue = step\n      ? Math.round(rightValue / step) * step\n      : rightValue;\n\n    const finalRightValue = getBoundedValueBase({\n      maximumValue,\n      minimumValue: getLeftValue(value) + step,\n    })(getRightValue(roundedRightValue));\n\n    const updatedValue = setRightValue(value, finalRightValue);\n\n    setValue(updatedValue);\n    onValueChange(updatedValue);\n  };\n\n  const makeThumbRef = (handler: (dx: number) => void) =>\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => {\n        onSlidingStart(value);\n        return true;\n      },\n\n      onPanResponderGrant: () => {\n        setIsSliding(true);\n      },\n\n      onPanResponderMove: (_, { dx }) => handler(dx),\n\n      onPanResponderRelease: () => {\n        setIsSliding(false);\n      },\n    });\n\n  const leftThumbRef = React.useRef(makeThumbRef(handleLeftSlide));\n  const rightThumbRef = React.useRef(makeThumbRef(handleRightSlide));\n\n  React.useEffect(() => {\n    // We need to update the callback `onPanResponderMove` because it uses memoized `value`\n    leftThumbRef.current = makeThumbRef(handleLeftSlide);\n    rightThumbRef.current = makeThumbRef(handleRightSlide);\n\n    // We need to callback here because we need latest value instead of memoized one\n    if (prevIsSliding && !isSliding) onSlidingComplete(value);\n\n    // We diff valuePerPixel because on loading the component it may be NaN as it is calculating the measurements of the track\n  }, [isSliding, valuePerPixel]);\n\n  const theme = useTheme();\n  const {\n    containerStyle,\n    selectedTrackStyle,\n    thumbStyle,\n    unselectedTrackStyle,\n  } = mergeStyles(getSliderStyles, getStyles, theme.components.getSliderStyles)(\n    props,\n    theme,\n  );\n\n  const left = getLeftValue(value) * pixelPerValue;\n  const right = getRightValue(value) * pixelPerValue;\n  const cursor = isSliding ? 'grabbing' : 'grab';\n\n  return (\n    <ViewMeasure onMeasure={setTrackMeasurements} style={{ ...containerStyle }}>\n      <View style={unselectedTrackStyle} />\n      <View\n        style={{\n          ...selectedTrackStyle,\n          ...(isRangeSlider ? { left, width: right - left } : { width: left }),\n        }}\n      />\n      <View\n        accessible\n        // @ts-ignore\n        style={{ ...thumbStyle, left: left - thumbStyle.width / 2, cursor }}\n        accessibilityLabel={leftThumbAccessibilityLabel}\n        accessibilityHint={leftThumbAccessibilityHint}\n        {...leftThumbRef.current.panHandlers}\n      />\n      {isRangeSlider && (\n        <View\n          accessible\n          // @ts-ignore\n          style={{ ...thumbStyle, left: right - thumbStyle.width / 2, cursor }}\n          accessibilityLabel={rightThumbAccessibilityLabel}\n          accessibilityHint={rightThumbAccessibilityHint}\n          {...rightThumbRef.current.panHandlers}\n        />\n      )}\n    </ViewMeasure>\n  );\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}