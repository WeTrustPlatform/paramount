(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"./src/components/Typography/Text.mdx":function(e,t,o){var n=o("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=n(o("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),l=n(o("./node_modules/@babel/runtime/helpers/classCallCheck.js")),r=n(o("./node_modules/@babel/runtime/helpers/createClass.js")),m=n(o("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js")),s=n(o("./node_modules/@babel/runtime/helpers/getPrototypeOf.js")),i=n(o("./node_modules/@babel/runtime/helpers/inherits.js")),d=n(o("./node_modules/react/index.js")),c=o("./node_modules/@mdx-js/tag/dist/index.js"),u=o("./node_modules/docz/dist/index.m.js"),x=o("./src/components/Typography/index.ts"),p=o("./src/components/Layout/index.ts"),T=function(e){function t(e){var o;return(0,l.default)(this,t),(o=(0,m.default)(this,(0,s.default)(t).call(this,e))).layout=null,o}return(0,i.default)(t,e),(0,r.default)(t,[{key:"render",value:function(){var e=this.props,t=e.components,o=(0,a.default)(e,["components"]);return d.default.createElement(c.MDXTag,{name:"wrapper",components:t},d.default.createElement(c.MDXTag,{name:"h1",components:t,props:{id:"text"}},"Text"),d.default.createElement(c.MDXTag,{name:"p",components:t},"Composes React Native's ",d.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Text")," component (i.e. you can pass its props)"),d.default.createElement(c.MDXTag,{name:"p",components:t},d.default.createElement(c.MDXTag,{name:"strong",components:t,parentName:"p"},"Note!!!")," In web environment sometimes you need to wrap ",d.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"Text")," in a ",d.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"<Box>")," or provide a parent node with ",d.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"display: flex")," and ",d.default.createElement(c.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"flex-direction: column")," for centering to work properly. In React Native it is non issue because all nodes be default have these properties"),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"usage"}},"Usage"),d.default.createElement(u.Playground,{__position:0,__code:'<Box>\n  <Text\n    color="primary" // or custom\n    align="left"\n    size="large" // small - large or number\n    fontFamily="text"\n    weight="normal"\n    isBold\n    isItalic\n    isInline\n    transform="uppercase"\n    getStyles={(props, theme) => ({\n      textStyle: {},\n    })}\n  >\n    Lorem ipsum dolar set amet\n  </Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,null,d.default.createElement(x.Text,{color:"primary",align:"left",size:"large",fontFamily:"text",weight:"normal",isBold:!0,isItalic:!0,isInline:!0,transform:"uppercase",getStyles:function(e,t){return{textStyle:{}}}},"Lorem ipsum dolar set amet"))),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"sizes"}},"Sizes"),d.default.createElement(u.Playground,{__position:1,__code:'<Box flexDirection="column">\n  <Text size="small">small</Text>\n  <Text size="medium">medium</Text>\n  <Text size="large">large</Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,{flexDirection:"column"},d.default.createElement(x.Text,{size:"small"},"small"),d.default.createElement(x.Text,{size:"medium"},"medium"),d.default.createElement(x.Text,{size:"large"},"large"))),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"colors"}},"Colors"),d.default.createElement(u.Playground,{__position:2,__code:'<Box flexDirection="column">\n  <Text color="#16a054">#16a054</Text>\n  <Text color="dark">dark</Text>\n  <Text color="default">default</Text>\n  <Text color="muted">muted</Text>\n  <Text color="selected">selected</Text>\n  <Text color="danger">danger</Text>\n  <Text color="info">info</Text>\n  <Text color="none">none</Text>\n  <Text color="success">success</Text>\n  <Text color="warning">warning</Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,{flexDirection:"column"},d.default.createElement(x.Text,{color:"#16a054"},"#16a054"),d.default.createElement(x.Text,{color:"dark"},"dark"),d.default.createElement(x.Text,{color:"default"},"default"),d.default.createElement(x.Text,{color:"muted"},"muted"),d.default.createElement(x.Text,{color:"selected"},"selected"),d.default.createElement(x.Text,{color:"danger"},"danger"),d.default.createElement(x.Text,{color:"info"},"info"),d.default.createElement(x.Text,{color:"none"},"none"),d.default.createElement(x.Text,{color:"success"},"success"),d.default.createElement(x.Text,{color:"warning"},"warning"))),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"font-families"}},"Font Families"),d.default.createElement(u.Playground,{__position:3,__code:'<Box flexDirection="column">\n  <Text fontFamily="heading">heading</Text>\n  <Text fontFamily="text">text</Text>\n  <Text fontFamily="mono">mono</Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,{flexDirection:"column"},d.default.createElement(x.Text,{fontFamily:"heading"},"heading"),d.default.createElement(x.Text,{fontFamily:"text"},"text"),d.default.createElement(x.Text,{fontFamily:"mono"},"mono"))),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"font-weights"}},"Font Weights"),d.default.createElement(u.Playground,{__position:4,__code:'<Box flexDirection="column">\n  <Text weight="500">500</Text>\n  <Text weight="700">700</Text>\n  <Text weight="bold">bold</Text>\n  <Text weight="normal">normal</Text>\n  <Text weight="light">light</Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,{flexDirection:"column"},d.default.createElement(x.Text,{weight:"500"},"500"),d.default.createElement(x.Text,{weight:"700"},"700"),d.default.createElement(x.Text,{weight:"bold"},"bold"),d.default.createElement(x.Text,{weight:"normal"},"normal"),d.default.createElement(x.Text,{weight:"light"},"light"))),d.default.createElement(c.MDXTag,{name:"h3",components:t,props:{id:"variations"}},"Variations"),d.default.createElement(u.Playground,{__position:5,__code:'<Box flexDirection="column">\n  <Text isBold>Lorem ipsum dolar set amet</Text>\n  <Text isItalic>Lorem ipsum dolar set amet</Text>\n  <Text isItalic isBold>\n    Lorem ipsum dolar set amet\n  </Text>\n  <Text align="left">Lorem ipsum dolar set amet</Text>\n  <Text align="center">Lorem ipsum dolar set amet</Text>\n  <Text align="right">Lorem ipsum dolar set amet</Text>\n  <Text transform="uppercase">Lorem ipsum dolar set amet</Text>\n  <Text transform="lowercase">Lorem ipsum dolar set amet</Text>\n  <Text transform="capitalize">Lorem ipsum dolar set amet</Text>\n</Box>',__scope:{props:this?this.props:o,Text:x.Text,Box:p.Box}},d.default.createElement(p.Box,{flexDirection:"column"},d.default.createElement(x.Text,{isBold:!0},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{isItalic:!0},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{isItalic:!0,isBold:!0},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{align:"left"},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{align:"center"},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{align:"right"},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{transform:"uppercase"},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{transform:"lowercase"},"Lorem ipsum dolar set amet"),d.default.createElement(x.Text,{transform:"capitalize"},"Lorem ipsum dolar set amet"))))}}]),t}(d.default.Component);t.default=T}}]);
//# sourceMappingURL=48.8f107e0e39da3c8a4f22.js.map