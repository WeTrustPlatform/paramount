{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/Slider.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Slider/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useLockBodyScroll.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/hooks/usePrevious.ts","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["_reactNative","__webpack_require__","isWindowAboveMinWidth","minWidth","Dimensions","get","width","isWindowBelowMaxWidth","maxWidth","Responsive","props","children","isAboveMinWidth","isBelowMaxWidth","matches","React","_interopRequireWildcard","_useMeasure2","ViewMeasure","onMeasure","viewProps","_objectWithoutProperties2","isRenderProp","_useMeasure","useMeasure","forwardRef","measurements","onLayout","createElement","View","_extends2","ref","_ViewMeasure","Object","keys","forEach","key","defineProperty","exports","enumerable","_Responsive","_react2","_interopRequireDefault","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","this","Props","Slider","size","initialValue","step","minimumValue","maximumValue","onValueChange","value","console","log","onSlidingComplete","onSlidingStart","getStyles","theme","containerStyle","selectedTrackStyle","thumbStyle","unselectedTrackStyle","parentName","of","isMDXComponent","getSliderStyles","height","justifyContent","backgroundColor","colors","background","primaryDefault","borderRadius","position","content","borderColor","border","primary","borderWidth","zIndex","greyDark","_hooks","_theme","_mergeStyles2","_Helpers","_Slider","initialMeasurements","pageX","pageY","x","y","getBoundedValueBase","isRange","Array","isArray","getLeftValue","getRightValue","_props$initialValue","_props$onSlidingStart","_props$onSlidingCompl","_props$onValueChange","_props$minimumValue","_props$maximumValue","_props$size","_props$step","_React$useState","useState","_React$useState2","_slicedToArray2","setValue","_React$useState3","_React$useState4","isSliding","setIsSliding","_React$useState5","_React$useState6","trackMeasurements","setTrackMeasurements","prevIsSliding","usePrevious","valuePerPixel","pixelPerValue","isRangeSlider","handleLeftSlide","dx","leftValue","roundedLeftValue","Math","round","finalLeftValue","updatedValue","previousValue","setLeftValue","handleRightSlide","rightValue","roundedRightValue","finalRightValue","setRightValue","makeThumbRef","handler","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","_ref2","onPanResponderRelease","leftThumbRef","useRef","rightThumbRef","useEffect","current","useTheme","_mergeStyles","mergeStyles","left","right","cursor","style","_objectSpread2","accessible","panHandlers","_usePrevious","_useElement","_useLockBodyScroll","_exenv","useElement","element","rootElem","rootElement","rootContainer","document","setAttribute","body","lastElementChild","insertBefore","nextElementSibling","appendChild","remove","childNodes","length","canUseDOM","useLockBodyScroll","isLocked","originalStyle","window","getComputedStyle","overflow","unlock","arguments","undefined","createRef","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","e","nativeEvent","deepMerge","require","getDefaultStyles","getOverridingStyles","defaultStyles","apply"],"mappings":"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","file":"static/js/11.b2160284.js","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from '../../hooks/useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, measurements, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Slider } from '.';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Slider\\n  size={40}\\n  initialValue={0.3}\\n  step={0}\\n  minimumValue={0}\\n  maximumValue={1}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n  getStyles={(props, theme) => ({\\n    containerStyle: {},\\n    selectedTrackStyle: {},\\n    thumbStyle: {},\\n    unselectedTrackStyle: {},\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider size={40} initialValue={0.3} step={0} minimumValue={0} maximumValue={1} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} getStyles={(props, theme) => ({\n        containerStyle: {},\n        selectedTrackStyle: {},\n        thumbStyle: {},\n        unselectedTrackStyle: {}\n      })} mdxType=\"Slider\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-range\"\n    }}>{`With Range`}</h3>\n    <p>{`By using `}<inlineCode parentName=\"p\">{`initialValue`}</inlineCode>{` as an array of `}<inlineCode parentName=\"p\">{`[number, number]`}</inlineCode>{`, it will automatically translate it into a range slider. The minimum range is the value of the step`}</p>\n    <Playground __position={1} __code={'<Slider\\n  initialValue={[30, 60]} // This is an [number, number] instead of a number\\n  step={5}\\n  minimumValue={0}\\n  maximumValue={100}\\n  onValueChange={value => console.log(\\'onValueChange\\', value)}\\n  onSlidingComplete={value => console.log(\\'onSlidingComplete\\', value)}\\n  onSlidingStart={value => console.log(\\'onSlidingStart\\', value)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Slider\n    }} mdxType=\"Playground\">\n  <Slider initialValue={[30, 60]} // This is an [number, number] instead of a number\n      step={5} minimumValue={0} maximumValue={100} onValueChange={value => console.log('onValueChange', value)} onSlidingComplete={value => console.log('onSlidingComplete', value)} onSlidingStart={value => console.log('onSlidingStart', value)} mdxType=\"Slider\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Slider} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface SliderStylesProps {\n  size: number;\n}\n\nexport interface SliderStyles {\n  containerStyle: ViewStyle;\n  selectedTrackStyle: ViewStyle;\n  thumbStyle: ViewStyle;\n  unselectedTrackStyle: ViewStyle;\n}\n\nexport type GetSliderStyles = (\n  props: SliderStylesProps,\n  theme: Theme,\n) => SliderStyles;\n\nexport const getSliderStyles: GetSliderStyles = (props, theme) => {\n  const { size } = props;\n\n  return {\n    containerStyle: { height: size, justifyContent: 'center' },\n    selectedTrackStyle: {\n      backgroundColor: theme.colors.background.primaryDefault,\n      borderRadius: 8,\n      height: 8,\n      position: 'absolute',\n      width: '100%',\n    },\n    thumbStyle: {\n      backgroundColor: theme.colors.background.content,\n      borderColor: theme.colors.border.primary,\n      borderRadius: 999,\n      borderWidth: 3,\n      height: size,\n      position: 'absolute',\n      width: size,\n      zIndex: 1,\n    },\n    unselectedTrackStyle: {\n      backgroundColor: theme.colors.background.greyDark,\n      borderRadius: 8,\n      height: 8,\n      position: 'absolute',\n      width: '100%',\n    },\n  };\n};\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { PanResponder, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { usePrevious } from '../../hooks';\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { ViewMeasure } from '../Helpers';\nimport {\n  GetSliderStyles,\n  getSliderStyles,\n  SliderStyles,\n} from './Slider.styles';\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport type RangeValue = [number, number];\nexport type SliderValue = number | RangeValue;\n\nexport interface SliderProps {\n  /** Size of the thumb, and thus the whole slider */\n  size?: number;\n\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue; which default to 0 and 1 respectively.\n   * Default value is 0.\n   *\n   * *This is not a controlled component*; you don't need to update the\n   * value during dragging.\n   */\n  initialValue?: SliderValue;\n\n  /**\n   * Step value of the slider. The value should be\n   * between 0 and (maximumValue - minimumValue).\n   * Default value is 0.\n   */\n  step?: number;\n\n  /**\n   * Initial minimum value of the slider. Default value is 0.\n   */\n  minimumValue?: number;\n\n  /**\n   * Initial maximum value of the slider. Default value is 1.\n   */\n  maximumValue?: number;\n\n  /**\n   * If true the user won't be able to move the slider.\n   * Default value is false.\n   */\n  disabled?: boolean;\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: (value: SliderValue) => void;\n\n  /**\n   * Callback that is called when the user releases the slider;\n   * regardless if the value has changed. The current value is passed\n   * as an argument to the callback handler.\n   */\n  onSlidingComplete?: (value: SliderValue) => void;\n\n  /**\n   * Callback called when the user starts changing the value (e.g. when the slider is pressed)\n   */\n  onSlidingStart?: (value: SliderValue) => void;\n\n  getStyles?: ReplaceReturnType<GetSliderStyles, DeepPartial<SliderStyles>>;\n\n  /**\n   * Used to locate this view in UI automation tests.\n   */\n  testID?: string;\n}\n\nconst initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\nconst getBoundedValueBase = ({\n  maximumValue,\n  minimumValue,\n}: {\n  maximumValue: number;\n  minimumValue: number;\n}) => (value: number) =>\n  value > maximumValue\n    ? maximumValue\n    : value < minimumValue\n    ? minimumValue\n    : value;\n\nconst isRange = (value: SliderValue): value is [number, number] =>\n  Array.isArray(value);\n\nconst getLeftValue = (value: SliderValue): number => {\n  if (isRange(value)) return value[0];\n  return value;\n};\n\nconst getRightValue = (value: SliderValue): number => {\n  if (isRange(value)) return value[1];\n  return value;\n};\n\nconst setLeftValue = (\n  previousValue: SliderValue,\n  leftValue: number,\n): SliderValue => {\n  return isRange(previousValue) ? [leftValue, previousValue[1]] : leftValue;\n};\n\nconst setRightValue = (\n  previousValue: SliderValue,\n  rightValue: number,\n): SliderValue => {\n  return isRange(previousValue) ? [previousValue[0], rightValue] : rightValue;\n};\n\nexport const Slider = (props: SliderProps) => {\n  const {\n    initialValue = 0,\n    onSlidingStart = () => undefined,\n    onSlidingComplete = () => undefined,\n    onValueChange = () => undefined,\n    minimumValue = 0,\n    maximumValue = 1,\n    size = 40,\n    step = 0,\n    getStyles,\n  } = props;\n\n  const [value, setValue] = React.useState(initialValue);\n  const [isSliding, setIsSliding] = React.useState(false);\n  const [trackMeasurements, setTrackMeasurements] = React.useState(\n    initialMeasurements,\n  );\n  const prevIsSliding = usePrevious(isSliding);\n  const valuePerPixel = (maximumValue - minimumValue) / trackMeasurements.width;\n  const pixelPerValue = trackMeasurements.width / (maximumValue - minimumValue);\n  const isRangeSlider = isRange(value);\n\n  const handleLeftSlide = (dx: number) => {\n    const leftValue = getLeftValue(value) + dx * valuePerPixel;\n    const roundedLeftValue = step\n      ? Math.round(leftValue / step) * step\n      : leftValue;\n\n    const finalLeftValue = getBoundedValueBase({\n      maximumValue: isRangeSlider ? getRightValue(value) - step : maximumValue,\n      minimumValue,\n    })(getLeftValue(roundedLeftValue));\n    const updatedValue = setLeftValue(value, finalLeftValue);\n\n    setValue(updatedValue);\n    onValueChange(updatedValue);\n  };\n\n  const handleRightSlide = (dx: number) => {\n    const rightValue = getRightValue(value) + dx * valuePerPixel;\n    const roundedRightValue = step\n      ? Math.round(rightValue / step) * step\n      : rightValue;\n\n    const finalRightValue = getBoundedValueBase({\n      maximumValue,\n      minimumValue: getLeftValue(value) + step,\n    })(getRightValue(roundedRightValue));\n\n    const updatedValue = setRightValue(value, finalRightValue);\n\n    setValue(updatedValue);\n    onValueChange(updatedValue);\n  };\n\n  const makeThumbRef = (handler: (dx: number) => void) =>\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => {\n        onSlidingStart(value);\n        return true;\n      },\n\n      onPanResponderGrant: () => {\n        setIsSliding(true);\n      },\n\n      onPanResponderMove: (_, { dx }) => handler(dx),\n\n      onPanResponderRelease: () => {\n        setIsSliding(false);\n      },\n    });\n\n  const leftThumbRef = React.useRef(makeThumbRef(handleLeftSlide));\n  const rightThumbRef = React.useRef(makeThumbRef(handleRightSlide));\n\n  React.useEffect(() => {\n    // We need to update the callback `onPanResponderMove` because it uses memoized `value`\n    leftThumbRef.current = makeThumbRef(handleLeftSlide);\n    rightThumbRef.current = makeThumbRef(handleRightSlide);\n\n    // We need to callback here because we need latest value instead of memoized one\n    if (prevIsSliding && !isSliding) onSlidingComplete(value);\n\n    // We diff valuePerPixel because on loading the component it may be NaN as it is calculating the measurements of the track\n  }, [isSliding, valuePerPixel]);\n\n  const theme = useTheme();\n  const {\n    containerStyle,\n    selectedTrackStyle,\n    thumbStyle,\n    unselectedTrackStyle,\n  } = mergeStyles(getSliderStyles, getStyles)({ size }, theme);\n\n  const left = getLeftValue(value) * pixelPerValue;\n  const right = getRightValue(value) * pixelPerValue;\n  const cursor = isSliding ? 'grabbing' : 'grab';\n\n  return (\n    <ViewMeasure onMeasure={setTrackMeasurements} style={{ ...containerStyle }}>\n      <View style={unselectedTrackStyle} />\n      <View\n        style={{\n          ...selectedTrackStyle,\n          ...(isRangeSlider ? { left, width: right - left } : { width: left }),\n        }}\n      />\n      <View\n        accessible\n        style={{ ...thumbStyle, left: left - size / 2, cursor }}\n        {...leftThumbRef.current.panHandlers}\n      />\n      {isRangeSlider && (\n        <View\n          accessible\n          style={{ ...thumbStyle, left: right - size / 2, cursor }}\n          {...rightThumbRef.current.panHandlers}\n        />\n      )}\n    </ViewMeasure>\n  );\n};\n","export * from './Slider';\n","export * from './usePrevious';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useLockBodyScroll';\n","import { canUseDOM } from 'exenv';\nimport * as React from 'react';\n\nconst createElement = (id?: string) => {\n  const rootContainer = document.createElement('div');\n\n  if (id) rootContainer.setAttribute('id', id);\n\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id?: string) => {\n  const element = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const rootElement = createElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    addRootElement(rootElement);\n\n    if (element.current) rootElement.appendChild(element.current);\n\n    return () => {\n      if (element.current) element.current.remove();\n      if (rootElement.childNodes.length === -1) rootElement.remove();\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!element.current && canUseDOM) {\n      // @ts-ignore\n      element.current = document.createElement('div');\n    }\n    return element.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useLockBodyScroll = ({ isLocked }: { isLocked: boolean }) => {\n  React.useEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n\n    const lock = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    const unlock = () => {\n      document.body.style.overflow = originalStyle;\n    };\n\n    if (isLocked) lock();\n    else unlock();\n\n    return () => unlock();\n  }, [isLocked]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\nexport const initialMeasurements = {\n  height: 0,\n  pageX: 0,\n  pageY: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n};\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps = {}) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState(initialMeasurements);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\n\nexport const usePrevious = <TValue = any>(value: TValue) => {\n  const ref = React.useRef<TValue>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n","import { DeepPartial } from 'ts-essentials';\n\n// tslint:disable-next-line\nconst deepMerge = require('deepmerge');\n\nexport type GetStyles<TStyles = any> = (...args: any[]) => TStyles;\n\nexport type GetStylesOptional<TStyles = any> = (\n  ...args: any[]\n) => DeepPartial<TStyles>;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TPartialStyles = any>(\n  getDefaultStyles: GetStyles<TStyles>,\n  getOverridingStyles?: GetStyles<TPartialStyles>,\n) => (...args: any[]): TStyles => {\n  const defaultStyles = getDefaultStyles(...args);\n\n  return getOverridingStyles\n    ? deepMerge(defaultStyles, getOverridingStyles(...args))\n    : defaultStyles;\n};\n"],"sourceRoot":""}