(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./src/components/Slider/Slider.mdx":function(e,n,l){var o=l("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(n,"__esModule",{value:!0}),n.default=m;var i=o(l("./node_modules/@babel/runtime/helpers/extends.js")),t=o(l("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js")),a=(o(l("./node_modules/react/index.js")),l("./node_modules/@mdx-js/react/dist/index.es.js")),r=l("./node_modules/docz/dist/index.esm.js"),u=l("./src/components/index.ts"),d={},s="wrapper";function m(e){var n=e.components,l=(0,t.default)(e,["components"]);return(0,a.mdx)(s,(0,i.default)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"slider"},"Slider"),(0,a.mdx)("h3",{id:"usage"},"Usage"),(0,a.mdx)(r.Playground,{__position:0,__code:"<Slider\n  size={40}\n  initialValue={0.3} // either number for single thumb slider or [number, number] for range slider\n  step={0}\n  isRange={false} // Only used if you are not passing initialValue\n  minimumValue={0}\n  maximumValue={1}\n  onValueChange={value => console.log('onValueChange', value)}\n  onSlidingComplete={value => console.log('onSlidingComplete', value)}\n  onSlidingStart={value => console.log('onSlidingStart', value)}\n  getStyles={(props, theme) => ({\n    containerStyle: {},\n    selectedTrackStyle: {},\n    thumbStyle: {},\n    unselectedTrackStyle: {},\n  })}\n/>",__scope:{props:this?this.props:l,Playground:r.Playground,Props:r.Props,Slider:u.Slider},mdxType:"Playground"},(0,a.mdx)(u.Slider,{size:40,initialValue:.3,step:0,isRange:!1,minimumValue:0,maximumValue:1,onValueChange:function(e){return console.log("onValueChange",e)},onSlidingComplete:function(e){return console.log("onSlidingComplete",e)},onSlidingStart:function(e){return console.log("onSlidingStart",e)},getStyles:function(e,n){return{containerStyle:{},selectedTrackStyle:{},thumbStyle:{},unselectedTrackStyle:{}}},mdxType:"Slider"})),(0,a.mdx)("h3",{id:"with-range"},"With Range"),(0,a.mdx)("p",null,"By using ",(0,a.mdx)("inlineCode",{parentName:"p"},"initialValue")," as an array of ",(0,a.mdx)("inlineCode",{parentName:"p"},"[number, number]"),", it will automatically translate it into a range slider. The minimum range is the value of the step"),(0,a.mdx)(r.Playground,{__position:1,__code:"<Slider\n  initialValue={[30, 60]} // This is an [number, number] instead of a number\n  step={5}\n  minimumValue={0}\n  maximumValue={100}\n  onValueChange={value => console.log('onValueChange', value)}\n  onSlidingComplete={value => console.log('onSlidingComplete', value)}\n  onSlidingStart={value => console.log('onSlidingStart', value)}\n/>",__scope:{props:this?this.props:l,Playground:r.Playground,Props:r.Props,Slider:u.Slider},mdxType:"Playground"},(0,a.mdx)(u.Slider,{initialValue:[30,60],step:5,minimumValue:0,maximumValue:100,onValueChange:function(e){return console.log("onValueChange",e)},onSlidingComplete:function(e){return console.log("onSlidingComplete",e)},onSlidingStart:function(e){return console.log("onSlidingStart",e)},mdxType:"Slider"})),(0,a.mdx)("h3",{id:"props"},"Props"),(0,a.mdx)(r.Props,{of:u.Slider,mdxType:"Props"}))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Slider/Slider.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=30.b2d7fd6e78b64eb52f9c.js.map