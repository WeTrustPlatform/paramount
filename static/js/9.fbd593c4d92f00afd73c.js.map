{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/Drawer.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Drawer/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","_props$color","title","getStyles","iconAfter","icon","_props$isDisabled","iconLoading","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","ButtonContent","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react","_interopRequireDefault","_react2","_docz","_reactPowerplug","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","this","Props","Toggle","Drawer","Box","space","isVisible","onClose","console","log","offset","position","modalContainerStyle","containerStyle","_ref2","on","toggle","Fragment","width","_ref3","_ref4","_ref5","isMDXComponent","getDrawerVariables","container","zIndex","modalContainer","getDrawerStyles","drawerVariables","_Modal","_Overlay","_Drawer","children","_props$onClose","_props$position","_props$offset","value","Animated","Value","spring","bounciness","speed","toValue","start","Modal","visible","transparent","onRequestClose","_objectSpread3","_defineProperty2","Overlay","_native","AnimatedView","animated","items","trail","useTrail","length","config","duration","from","opacity","reset","to","_to","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_context","prev","stop","_x","apply","arguments","map","index","marginLeft","marginRight","_LoadingDots","_ModalContent","CloseableModal","rightSide","modalProps","ModalContent","TouchableOpacity","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","window","addEventListener","handlePopstate","_this$props","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","ReactDOM","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","body","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","maxWidth","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_props$transparent","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/9.ae95c2f0.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TextStyle,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * Icon in place of title\n   * @default \"null\"\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    icon,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {/*\n        // @ts-ignore */}\n          <ButtonContent {...props} textStyle={textStyle} />\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport interface ButtonContentProps extends ButtonProps {\n  textStyle: TextStyle;\n}\n\nconst ButtonContent = (props: ButtonContentProps) => {\n  const { isLoading, iconLoading, icon, title, textStyle } = props;\n\n  if (isLoading) return iconLoading || <LoadingDots color={textStyle.color} />;\n  if (icon) return icon;\n  if (title) return <Text getStyles={() => ({ textStyle })}>{title}</Text>;\n\n  return null;\n};\n","export * from './Button';\nexport * from './BackButton';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Toggle } from 'react-powerplug';\nimport { Drawer } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Drawer\\n  space=\\\"30%\\\"\\n  isVisible={false}\\n  onClose={() => console.log(\\'Close\\')}\\n  offset={0}\\n  position=\\\"left\\\"\\n  getStyles={(props, theme) => ({\\n    modalContainerStyle: {},\\n    containerStyle: {},\\n  })}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      Drawer,\n      Button,\n      Box,\n      Spacing,\n      Text\n    }} mdxType=\"Playground\">\n  <Drawer space=\"30%\" isVisible={false} onClose={() => console.log('Close')} offset={0} position=\"left\" getStyles={(props, theme) => ({\n        modalContainerStyle: {},\n        containerStyle: {}\n      })} mdxType=\"Drawer\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h3>\n    <Playground __position={1} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"top\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"left\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer space=\\\"30%\\\" position=\\\"right\\\" isVisible={on} onClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Toggle,\n      Drawer,\n      Button,\n      Box,\n      Spacing,\n      Text\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"top\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"left\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n      <Toggle mdxType=\"Toggle\">\n  {({\n          on,\n          toggle\n        }) => <>\n      <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n      <Drawer space=\"30%\" position=\"right\" isVisible={on} onClose={toggle} mdxType=\"Drawer\">\n        <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n      </Drawer>\n    </>}\n      </Toggle>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DrawerVariables {\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDrawerVariables = (theme: Theme): DrawerVariables => {\n  return {\n    container: {\n      position: 'absolute',\n      width: '100%',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DrawerStyles {\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDrawerStyles = (theme: Theme) => DrawerStyles;\n\nexport const getDrawerStyles: GetDrawerStyles = theme => {\n  const drawerVariables = getDrawerVariables(theme);\n\n  return {\n    containerStyle: drawerVariables.container,\n    modalContainerStyle: drawerVariables.modalContainer,\n  };\n};\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DrawerStyles,\n  GetDrawerStyles,\n  getDrawerStyles,\n} from './Drawer.styles';\n\ntype Position = 'bottom' | 'top' | 'right' | 'left';\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc */\n  onClose?: () => void;\n  /** Amount to offset from the edge of window @default 0 */\n  offset?: number;\n  /** Amount of % screen to take up. */\n  space?: number | string;\n  /** Which side to draw from @default bottom */\n  position?: Position;\n  getStyles?: ReplaceReturnType<GetDrawerStyles, DeepPartial<DrawerStyles>>;\n}\n\nexport const Drawer = (props: DrawerProps) => {\n  const {\n    children,\n    isVisible,\n    onClose = () => null,\n    position = 'bottom',\n    offset = 0,\n    space,\n    getStyles,\n  } = props;\n\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle } = mergeStyles(\n    getDrawerStyles,\n    getStyles,\n  )(theme);\n\n  if (!isVisible) return null;\n\n  const value = new Animated.Value(-500);\n\n  Animated.spring(value, {\n    bounciness: 0,\n    speed: 70,\n    toValue: offset,\n  }).start();\n\n  return (\n    <Modal visible transparent onRequestClose={onClose}>\n      <View style={modalContainerStyle}>\n        <Animated.View\n          style={{\n            ...containerStyle,\n            [position]: value,\n            ...((position === 'left' || position === 'right') &&\n              space && {\n                height: '100%',\n                width: space,\n              }),\n            ...((position === 'bottom' || position === 'top') &&\n              space && {\n                height: space,\n                width: '100%',\n              }),\n          }}\n        >\n          {children}\n        </Animated.View>\n        <Overlay onPress={onClose} />\n      </View>\n    </Modal>\n  );\n};\n","export * from './Drawer';\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { animated, useTrail } from 'react-spring/native';\n\nconst AnimatedView = animated(View);\n\nexport interface LoadingDotsProps {\n  color?: string;\n  size?: number;\n}\n\nconst items = ['1', '2', '3'];\n\nexport const LoadingDots = (props: LoadingDotsProps) => {\n  const { size = 10, color = '#aaa' } = props;\n\n  const trail = useTrail(items.length, {\n    config: { duration: 800 },\n    from: { opacity: 0 },\n    reset: true,\n    to: async next => {\n      while (true) {\n        // tslint:disable-next-line\n        await next({ opacity: 1 });\n        // tslint:disable-next-line\n        await next({ opacity: 0 });\n      }\n    },\n  });\n\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      {trail.map((style, index) => (\n        <AnimatedView\n          key={items[index]}\n          // @ts-ignore\n          style={{\n            backgroundColor: color,\n            borderRadius: '50%',\n            height: size,\n            marginLeft: 3,\n            marginRight: 3,\n            opacity: style.opacity,\n            width: size,\n          }}\n        />\n      ))}\n    </View>\n  );\n};\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}