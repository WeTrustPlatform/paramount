{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/Responsive.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/ViewMeasure.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useElement.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useFreezeBody.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/useMeasure.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["_reactNative","__webpack_require__","isWindowAboveMinWidth","minWidth","Dimensions","get","width","isWindowBelowMaxWidth","maxWidth","Responsive","props","children","isAboveMinWidth","isBelowMaxWidth","matches","React","_interopRequireWildcard","_useMeasure2","ViewMeasure","onMeasure","viewProps","_objectWithoutProperties2","default","isRenderProp","_useMeasure","useMeasure","forwardRef","onLayout","createElement","View","_extends2","ref","measurements","_ViewMeasure","Object","keys","forEach","key","defineProperty","exports","enumerable","_Responsive","_useElement","_useFreezeBody","useElement","id","rootElemRef","useRef","useEffect","rootElem","existingParent","document","querySelector","concat","parentElem","rootContainer","setAttribute","createRootElement","body","lastElementChild","insertBefore","nextElementSibling","current","appendChild","remove","childNodes","length","useFreezeBody","_ref","isFrozen","unfreeze","style","overflow","height","createRef","_React$useState","useState","pageX","pageY","x","y","_React$useState2","_slicedToArray2","setMeasurements","handleMeasure","layout","UIManager","measure","findNodeHandle","newMeasurements","_objectSpread2","e","nativeEvent","_","_icons","_theme","_Layout","_ModalContent","CloseableModal","rightSide","onClose","modalProps","theme","useTheme","Modal","ModalContent","Box","flexDirection","justifyContent","TouchableOpacity","onPress","event","preventDefault","paddingHorizontal","Icon","color","colors","text","size","name","_Typography","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","alignItems","display","Text","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","visible","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","onRequestClose","go","handleEscapeKey","replaceState","removeEventListener","this","ModalBase","Component","HistoryModal","_ref$useHistory","useHistory","_HistoryModal","_focusTrap","_interopRequireDefault","ReactDOM","_Helpers","transparent","_props$isBackgroundSc","isBackgroundScrollable","isUnmounting","targetElement","elementRef","focusTrapRef","deactivateFocus","deactivate","initialFocus","onDeactivate","activate","createPortal","tabIndex","backgroundColor","bottom","left","position","right","top","zIndex","marginLeft","marginRight","prototype","hasOwnProperty","call","_exportNames","_FormModal","_Modal","getOverlayVariables","overlay","cursor","getOverlayStyles","overlayVariables","overlayStyle","background","_mergeStyles2","_Overlay","Overlay","_props$transparent","getStyles","mergeStyles","TouchableWithoutFeedback","Feather","IconTag","result","replace","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"wOACA,IAAAA,EAAAC,EAAA,4iCAgBO,IAAMC,EAAwB,SAACC,GAGpC,OAFmBC,aAAWC,IAAI,UAEhBC,MAAQH,mOAGrB,IAAMI,EAAwB,SAACC,GAGpC,OAFmBJ,aAAWC,IAAI,UAEhBC,MAAQE,mOAGrB,IAAMC,EAAa,SAACC,GAA2B,IAC5CC,EAAiCD,EAAjCC,SAAUR,EAAuBO,EAAvBP,SAAUK,EAAaE,EAAbF,SAExBI,GAAkB,EAClBC,GAAkB,EAElBV,IACFS,EAAkBV,EAAsBC,IAGtCK,IACFK,EAAkBN,EAAsBC,IAG1C,IACMM,EAAUF,GAAmBC,EAGnC,MAJyC,oBAAbF,EAINA,EAAS,CAAEG,YAAaA,EAAUH,EAAW,6mBC/CrEI,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,iDAEAgB,EAAAhB,EAAA,itBAeO,IAAMiB,EAAc,SAACR,GAA4B,IAC9CS,EAAsCT,EAAtCS,UAAWR,EAA2BD,EAA3BC,SAAaS,GADsB,EAAAC,EAAAC,SACRZ,EADQ,0BAEhDa,EAAmC,oBAAbZ,EAF0Ba,GAGrB,EAAAP,EAAAQ,YAAW,CAAEN,cAAtCO,EAH8CF,EAG9CE,WAAYC,EAHkCH,EAGlCG,SAEpB,OACEZ,EAAAa,cAAC5B,EAAA6B,MAAD,EAAAC,EAAAR,SAAA,CACES,IAAKL,EACLC,SAAUA,EAEVhB,SAAUY,EAAeZ,EAASqB,cAAgBrB,GAC9CS,wTC7BV,IAAAa,EAAAhC,EAAA,4CAAAiC,OAAAC,KAAAF,GAAAG,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAA4B,EAAAI,QACA,IAAAI,EAAAxC,EAAA,2CAAAiC,OAAAC,KAAAM,GAAAL,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAoC,EAAAJ,QACA,IAAAb,EAAAvB,EAAA,0CAAAiC,OAAAC,KAAAX,GAAAY,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAmB,EAAAa,QACA,IAAAK,EAAAzC,EAAA,0CAAAiC,OAAAC,KAAAO,GAAAN,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAqC,EAAAL,QACA,IAAAM,EAAA1C,EAAA,6CAAAiC,OAAAC,KAAAQ,GAAAP,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAsC,EAAAN,kNCJA,IAAAtB,EAAAC,EAAAf,EAAA,kCAmBa2C,EAAa,SAACC,GACzB,IAAMC,EAAc/B,EAAMgC,OAAgB,MAE1ChC,EAAMiC,UAAU,WACd,IAboBC,EAadC,EAAiBC,SAASC,cAAT,IAAAC,OAA2BR,IAC5CS,EAAaJ,GApBG,SAACL,GACzB,IAAMU,EAAgBJ,SAASvB,cAAc,OAE7C,OADA2B,EAAcC,aAAa,KAAMX,GAC1BU,EAiBgCE,CAAkBZ,GAWvD,OARKK,IAjBeD,EAkBHK,EAjBfH,SAASO,KAAKC,kBAChBR,SAASO,KAAKE,aACZX,EACAE,SAASO,KAAKC,iBAAiBE,qBAiB7Bf,EAAYgB,SACdR,EAAWS,YAAYjB,EAAYgB,SAG9B,WACDhB,EAAYgB,SAAShB,EAAYgB,QAAQE,UACP,IAAlCV,EAAWW,WAAWC,QACxBZ,EAAWU,WAGd,IAUH,OAPOlB,EAAYgB,UAEfhB,EAAYgB,QAAUX,SAASvB,cAAc,QAExCkB,EAAYgB,kaChDvB,IAAA/C,EAAAC,EAAAf,EAAA,kCAEakE,EAAgB,SAAAC,GAAyC,IAAtCC,EAAsCD,EAAtCC,SAC9BtD,EAAMiC,UAAU,WACd,IAKMsB,EAAW,WACfnB,SAASO,KAAKa,MAAMC,SAAW,GAC/BrB,SAASO,KAAKa,MAAME,OAAS,IAM/B,OAHIJ,GATFlB,SAASO,KAAKa,MAAMC,SAAW,SAC/BrB,SAASO,KAAKa,MAAME,OAAS,SAS1BH,IAEE,kBAAMA,MACZ,CAACD,4mBClBNtD,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,knBAsBO,IAAMwB,EAAa,SAACf,GACzB,IAAMgB,EAAaX,EAAM2D,YACjBvD,EAAcT,EAAdS,UAF4CwD,EAGZ5D,EAAM6D,SAAS,CACrDH,OAAQ,EACRI,MAAO,EACPC,MAAO,EACPxE,MAAO,EACPyE,EAAG,EACHC,EAAG,IAT+CC,GAAA,EAAAC,EAAA5D,SAAAqD,EAAA,GAG7C3C,EAH6CiD,EAAA,GAG/BE,EAH+BF,EAAA,GAmB9CG,EAAgB,SAACC,GACrBC,YAAUC,SAER,EAAAvF,EAAAwF,gBAAe9D,EAAWoC,SAC1B,SAACiB,EAAGC,EAAG1E,EAAOmE,EAAQI,EAAOC,GAC3B,IAAMW,GAAe,EAAAC,EAAApE,SAAA,GAChBU,EACAqD,EAFgB,CAGnBR,QACAC,UAGFK,EAAgBM,GAEZtE,GACFA,EAAUsE,MAMlB,MAAO,CACL/D,aACAM,eACAL,SA/BmB,SAACgE,GAGpB,IAAMN,EAASM,EAAEC,YAAYP,OAC7BD,EAAcC,IA4BdlE,UAAWiE,mjBCnEfrE,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,iDAEA4F,EAAA5F,EAAA,mCACA6F,EAAA7F,EAAA,wBACA8F,EAAA9F,EAAA,wBACA+F,EAAA/F,EAAA,oCACAgG,EAAAhG,EAAA,qXAQO,IAAMiG,EAAiB,SAACxF,GAA+B,IACpDC,EAAgDD,EAAhDC,SAAUwF,EAAsCzF,EAAtCyF,UAAWC,EAA2B1F,EAA3B0F,QAAYC,GADmB,EAAAhF,EAAAC,SACJZ,EADI,oCAGtD4F,GAAQ,EAAAP,EAAAQ,YAEd,OACExF,EAAAa,cAACiE,EAAAW,MAAUH,EACTtF,EAAAa,cAACqE,EAAAQ,aAAD,KACE1F,EAAAa,cAACoE,EAAAU,IAAD,CAAKC,cAAc,MAAMC,eAAe,iBACtC7F,EAAAa,cAAC5B,EAAA6G,iBAAD,CACEtC,MAAO,CAAEjE,MAAO,GAAImE,OAAQ,GAAImC,eAAgB,UAChDE,QAAS,SAAAC,GACPA,EAAMC,iBACNZ,MAGFrF,EAAAa,cAAC5B,EAAA6B,KAAD,CAAM0C,MAAO,CAAE0C,kBAAmB,IAChClG,EAAAa,cAACkE,EAAAoB,KAAD,CAAMC,MAAOb,EAAMc,OAAOC,KAAK/F,QAASgG,KAAM,GAAIC,KAAK,QAG1DpB,GAEFxF,gnBCrCTI,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,iDAEAuH,EAAAvH,EAAA,wCACAwH,EAAAxH,EAAA,+UAOO,IAAMyH,EAAY,SAAChH,GAA0B,IAEhDC,EAKED,EALFC,SACAyF,EAIE1F,EAJF0F,QACAuB,EAGEjH,EAHFiH,QAJgDC,EAO9ClH,EAFFmH,iBALgD,IAAAD,EAKpC,QALoCA,EAM7CE,GAN6C,EAAAzG,EAAAC,SAO9CZ,EAP8C,8CASlD,OACEK,EAAAa,cAAC6F,EAAAvB,gBAAD,EAAApE,EAAAR,SAAA,CACE8E,QAASA,EACTD,UACEpF,EAAAa,cAAC5B,EAAA6G,iBAAD,CACEC,QAAS,SAAAC,GACPA,EAAMC,iBACNW,MAGF5G,EAAAa,cAAC5B,EAAA6B,KAAD,CACE0C,MAAO,CACLwD,WAAY,SACZC,QAAS,OACTvD,OAAQ,OACRmC,eAAgB,SAChBK,kBAAmB,KAGrBlG,EAAAa,cAAC4F,EAAAS,KAAD,CAAMC,QAAM,GAAEL,MAIhBC,GAEHnH,wjCC7CPI,EAAAC,EAAAf,EAAA,kCAGAkI,EAAAlI,EAAA,4CAEImI,EAAU,EASRC,mNACGD,UAAYA,IAEZE,mBAAqB,SAACC,GAAqC,IACxDC,EAAYC,EAAK/H,MAAjB8H,QAEJD,EAAcC,UAAYA,IACxBA,EACFC,EAAKC,uBAELD,EAAKE,2BAKJC,qBAAuB,WAC5BH,EAAKI,uBAGAH,qBAAuB,WAGzBI,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,UAG1BU,QAAQG,WAAR,EAAAC,EAAA5H,SAAA,GAEOwH,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAA5H,SAAA,GACCwH,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAA7H,SAAA,GAEFmH,EAAKL,SAAU,MAGpB,IAKJgB,OAAOC,iBAAiB,WAAYZ,EAAKa,gBAAgB,MAIpDA,eAAiB,SAACvC,GAAyB,IAAAwC,EACZd,EAAK/H,MAAjC8H,EADwCe,EACxCf,QAASgB,EAD+BD,EAC/BC,eAGbzC,EAAMgC,OACLhC,EAAMgC,MAAMC,OACZjC,EAAMgC,MAAMC,MAAMP,EAAKL,WAC1BoB,IAEAf,EAAKI,oBACLW,MAOChB,GACDzB,EAAMgC,OACNhC,EAAMgC,MAAMC,OACZjC,EAAMgC,MAAMC,MAAMP,EAAKL,UAEvBU,QAAQW,IAAI,MAKTC,gBAAkB,WAAM,IACrBF,EAAmBf,EAAK/H,MAAxB8I,gBAGLV,QAAQC,OACPD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,WAC3BoB,IAGAf,EAAKI,oBACLW,IACAV,QAAQW,IAAI,OAKTd,qBAAuB,WAE1BG,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMP,EAAKL,WAEzBK,EAAKI,oBACLC,QAAQW,IAAI,OAITZ,kBAAoB,WACzBC,QAAQa,cAAR,EAAAT,EAAA5H,SAAA,GAEOwH,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAA5H,SAAA,GACCwH,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAA7H,SAAA,GAEFmH,EAAKL,SAAU,MAGpB,IAGFgB,OAAOQ,oBAAoB,WAAYnB,EAAKa,gBAAgB,+EAG9C,IACHjD,GADG,EAAAvE,EAAAR,SAAA,GACYuI,KAAKnJ,OAE/B,OAAOK,EAAAa,cAACuG,EAAA2B,WAAD,EAAAhI,EAAAR,SAAA,GAAe+E,EAAf,CAA2BmD,eAAgBK,KAAKH,0BArH5B3I,EAAMgJ,WAyHxBC,EAAe,SAAA5F,GAGH,IAAA6F,EAAA7F,EAFvB8F,kBAEuB,IAAAD,KADpBvJ,GACoB,EAAAW,EAAAC,SAAA8C,EAAA,gBACvB,OAAI8F,EAAmBnJ,EAAAa,cAACyG,EAAqB3H,GAEtCK,EAAAa,cAACuG,EAAA2B,UAAcpJ,2TC7IxB,IAAAyJ,EAAAlK,EAAA,+CAAAiC,OAAAC,KAAAgI,GAAA/H,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAA8J,EAAA9H,yRCAA,IAAA+H,EAAAC,EAAApK,EAAA,uCACAc,EAAAC,EAAAf,EAAA,kCACAqK,EAAAtJ,EAAAf,EAAA,sCAEAsK,EAAAtK,EAAA,qCAMa6J,EAAY,SAACpJ,GAAoD,IAE1EC,EAKED,EALFC,SACA6J,EAIE9J,EAJF8J,YACAhC,EAGE9H,EAHF8H,QAJ0EiC,EAOxE/J,EAFFgK,8BAL0E,IAAAD,KAM1EjB,EACE9I,EADF8I,eAEEmB,GAAe,EACbC,GAAgB,EAAAL,EAAA3H,YAAW,SAC3BiI,EAAa9J,EAAMgC,OAAuB,MAC1C+H,EAAe/J,EAAMgC,OAAkB,MAsC7C,OApCA,EAAAwH,EAAApG,eAAc,CAAEE,WAAcqG,IAA0BlC,KAExDzH,EAAMiC,UAAU,WACd,IAAM+H,EAAkB,WAClBD,EAAahH,UACfgH,EAAahH,QAAQkH,aAErBF,EAAahH,QAAU,OAuB3B,OAHI0E,EAfEqC,EAAW/G,UAAYgH,EAAahH,UAEtCgH,EAAahH,SAAU,EAAAsG,EAAA9I,SAAgBuJ,EAAW/G,QAAS,CACzDmH,aAAcJ,EAAW/G,QACzBoH,aAAc,WACR1B,GAAkBhB,IAAYmC,GAChCnB,OAKNsB,EAAahH,QAAQqH,YAKpBJ,IAEE,WACLJ,GAAe,EACfI,MAED,CAACvC,IAECA,EAEE8B,EAASc,aACdrK,EAAAa,cAAA,OACEyJ,UAAW,EACXtJ,IAAK8I,EACLtG,MAAO,CACL+G,gBAAiBd,EAAc,cAAgB,QAC/Ce,OAAQ,EACRC,KAAM,EACNC,SAAUf,EAAyB,WAAa,QAChDgB,MAAO,EACPC,IAAK,EACLC,OAAQ,MAGTjL,GAEHiK,GAlBmB,4ZC3DvB,IAAA7J,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,2WAMO,IAAMwG,EAAe,SAAC/F,GAA6B,IAChDC,EAAaD,EAAbC,SAER,OACEI,EAAAa,cAAC5B,EAAA6B,KAAD,CACE0C,MAAO,CACLE,OAAQ,OACRoH,WAAY,OACZC,YAAa,OACbtL,SAAU,MAGXG,6gBCnBP,IAAAwH,EAAAlI,EAAA,4CAAAiC,OAAAC,KAAAgG,GAAA/F,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA6J,UAAAC,eAAAC,KAAAC,EAAA7J,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAA8H,EAAA9F,SACA,IAAA8H,EAAAlK,EAAA,+CAAAiC,OAAAC,KAAAgI,GAAA/H,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA6J,UAAAC,eAAAC,KAAAC,EAAA7J,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAA8J,EAAA9H,SACA,IAAA8J,EAAAlM,EAAA,wCAAAiC,OAAAC,KAAAgK,GAAA/J,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA6J,UAAAC,eAAAC,KAAAC,EAAA7J,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAA8L,EAAA9J,SACA,IAAAoF,EAAAxH,EAAA,6CAAAiC,OAAAC,KAAAsF,GAAArF,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAA6J,UAAAC,eAAAC,KAAAC,EAAA7J,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAoH,EAAApF,SACA,IAAA+J,EAAAnM,EAAA,smCCIO,IAAMoM,EAAsB,SAAC/F,GAClC,MAAO,CACLgG,QAAS,CACPf,OAAQ,EACRgB,OAAQ,OACR9H,OAAQ,OACR+G,KAAM,EACNC,SAAU,WACVC,MAAO,EACPC,IAAK,EACLrL,MAAO,ooCAkBN,IAAMkM,EAAqC,SAAApI,EAAkBkC,GAAU,IAAzBkE,EAAyBpG,EAAzBoG,YAC7CiC,EA5BC,CACLH,QAAS,CACPf,OAAQ,EACRgB,OAAQ,OACR9H,OAAQ,OACR+G,KAAM,EACNC,SAAU,WACVC,MAAO,EACPC,IAAK,EACLrL,MAAO,SAqBX,MAAO,CACLoM,cAAY,EAAAhH,EAAApE,SAAA,GACPmL,EAAiBH,QADV,CAEVhB,gBAAiBd,EACb,cACAlE,EAAMc,OAAOuF,WAAWL,0aC5ClC,IAAAvL,EAAAC,EAAAf,EAAA,kCACAD,EAAAC,EAAA,iDAGA8F,EAAA9F,EAAA,wBACA2M,EAAA3M,EAAA,8BACA4M,EAAA5M,EAAA,8CAYa6M,EAAU,SAACpM,GAAwB,IACtCoG,EAA4CpG,EAA5CoG,QADsCiG,EACMrM,EAAnC8J,mBAD6B,IAAAuC,KACRC,EAActM,EAAdsM,UAChC1G,GAAQ,EAAAP,EAAAQ,YAENmG,GAAiB,EAAAE,EAAAK,aAAYT,mBAAkBQ,EAA9B,CACvB,CAAExC,eACFlE,GAFMoG,aAKR,OACE3L,EAAAa,cAAC5B,EAAAkN,yBAAD,CACEpG,QAAS,SAAAC,GACPA,EAAMC,iBACNF,MAGF/F,EAAAa,cAAC5B,EAAA6B,KAAD,CAAM0C,MAAOmI,6SClCnB,IAAAG,EAAA5M,EAAA,wCAAAiC,OAAAC,KAAA0K,GAAAzK,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAnC,IAAA,kBAAAwM,EAAAxK,iMCAA,IAAAtB,EAAAC,EAAAf,EAAA,kCACAkN,EAAAnM,EAAAf,EAAA,yDAae,SAAAmE,GAAsC,IAAnCmD,EAAmCnD,EAAnCmD,KAAMJ,EAA6B/C,EAA7B+C,MAAOG,EAAsBlD,EAAtBkD,KAEvB8F,EAAUD,EAAO,KAAA9J,OAXzB,SAAyBkE,GACvB,IAIM8F,EAAS9F,EAAK+F,QAAQ,UAJV,SAACxM,GACjB,OAAOA,EAAQ,GAAGyM,gBAIpB,OAAOF,EAAOG,OAAO,GAAGD,cAAgBF,EAAOI,MAAM,GAKxBC,CAAgBnG,KAE7C,OAAOxG,EAAAa,cAACwL,EAAD,CAASjG,MAAOA,EAAOG,KAAMA,yPClBtC,IAAAqG,EAAAtD,EAAApK,EAAA","file":"static/js/3.1cde2e42.js","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nexport type ResponsiveRenderPropType = (\n  props: ResponsiveChildrenProps,\n) => React.ReactNode;\n\nexport interface ResponsiveChildrenProps {\n  matches: boolean;\n}\n\nexport interface ResponsiveProps {\n  children: React.ReactNode | ResponsiveRenderPropType;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nexport const isWindowAboveMinWidth = (minWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width > minWidth;\n};\n\nexport const isWindowBelowMaxWidth = (maxWidth: number) => {\n  const scaledSize = Dimensions.get('window');\n\n  return scaledSize.width < maxWidth;\n};\n\nexport const Responsive = (props: ResponsiveProps) => {\n  const { children, minWidth, maxWidth } = props;\n\n  let isAboveMinWidth = true;\n  let isBelowMaxWidth = true;\n\n  if (minWidth) {\n    isAboveMinWidth = isWindowAboveMinWidth(minWidth);\n  }\n\n  if (maxWidth) {\n    isBelowMaxWidth = isWindowBelowMaxWidth(maxWidth);\n  }\n\n  const isRenderProp = typeof children === 'function';\n  const matches = isAboveMinWidth && isBelowMaxWidth;\n\n  // @ts-ignore\n  return isRenderProp ? children({ matches }) : matches ? children : null;\n};\n","import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\nimport { Measurements, useMeasure } from './useMeasure';\n\nexport type ViewMeasureRenderPropType = (\n  props: Measurements,\n) => React.ReactNode;\n\nexport interface ViewMeasureProps extends ViewProps {\n  onMeasure?: (props: Measurements) => void;\n  children: React.ReactNode | ViewMeasureRenderPropType;\n}\n\n/**\n * Wraps content in a `View` with which the measurements are calculated\n */\n\nexport const ViewMeasure = (props: ViewMeasureProps) => {\n  const { onMeasure, children, ...viewProps } = props;\n  const isRenderProp = typeof children === 'function';\n  const { forwardRef, onLayout } = useMeasure({ onMeasure });\n\n  return (\n    <View\n      ref={forwardRef}\n      onLayout={onLayout}\n      // @ts-ignore\n      children={isRenderProp ? children(measurements) : children}\n      {...viewProps}\n    />\n  );\n};\n","export * from './ViewMeasure';\nexport * from './Responsive';\nexport * from './useMeasure';\nexport * from './useElement';\nexport * from './useFreezeBody';\n","import * as React from 'react';\n\n// ported from https://www.jayfreestone.com/writing/react-portals-with-hooks/\n\nconst createRootElement = (id: string) => {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n};\n\nconst addRootElement = (rootElem: Element) => {\n  if (document.body.lastElementChild) {\n    document.body.insertBefore(\n      rootElem,\n      document.body.lastElementChild.nextElementSibling,\n    );\n  }\n};\n\nexport const useElement = (id: string) => {\n  const rootElemRef = React.useRef<Element>(null);\n\n  React.useEffect(() => {\n    const existingParent = document.querySelector(`#${id}`);\n    const parentElem = existingParent || createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    if (!existingParent) {\n      addRootElement(parentElem);\n    }\n\n    if (rootElemRef.current) {\n      parentElem.appendChild(rootElemRef.current);\n    }\n\n    return () => {\n      if (rootElemRef.current) rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }, []);\n\n  const getRootElem = () => {\n    if (!rootElemRef.current) {\n      // @ts-ignore\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  };\n\n  return getRootElem();\n};\n","import * as React from 'react';\n\nexport const useFreezeBody = ({ isFrozen }: { isFrozen: boolean }) => {\n  React.useEffect(() => {\n    const freeze = () => {\n      document.body.style.overflow = 'hidden';\n      document.body.style.height = '100vh';\n    };\n\n    const unfreeze = () => {\n      document.body.style.overflow = '';\n      document.body.style.height = '';\n    };\n\n    if (isFrozen) freeze();\n    else unfreeze();\n\n    return () => unfreeze();\n  }, [isFrozen]);\n};\n","import * as React from 'react';\nimport {\n  findNodeHandle,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  UIManager,\n} from 'react-native';\n\nexport interface Measurements {\n  height: number;\n  pageX: number;\n  pageY: number;\n  width: number;\n  x: number;\n  y: number;\n}\nexport interface UseMeasureProps {\n  onMeasure?: (props: Measurements) => void;\n}\n\n/**\n * A render prop to measure given node by passing `onLayout` and `ref` handlers. This differs from `ViewMeasure` in that it does not create any node in the tree\n */\nexport const useMeasure = (props: UseMeasureProps) => {\n  const forwardRef = React.createRef<any>();\n  const { onMeasure } = props;\n  const [measurements, setMeasurements] = React.useState({\n    height: 0,\n    pageX: 0,\n    pageY: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    // Use the value from here, isntead of inside UIManager.measure callback\n    // Async behavior will nullify nativeEvent\n    const layout = e.nativeEvent.layout;\n    handleMeasure(layout);\n  };\n\n  const handleMeasure = (layout?: LayoutRectangle) => {\n    UIManager.measure(\n      // @ts-ignore\n      findNodeHandle(forwardRef.current)!,\n      (x, y, width, height, pageX, pageY) => {\n        const newMeasurements = {\n          ...measurements,\n          ...layout,\n          pageX,\n          pageY,\n        };\n\n        setMeasurements(newMeasurements);\n\n        if (onMeasure) {\n          onMeasure(newMeasurements);\n        }\n      },\n    );\n  };\n\n  return {\n    forwardRef,\n    measurements,\n    onLayout: handleLayout,\n    onMeasure: handleMeasure,\n  };\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.Component<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { useElement, useFreezeBody } from '../Helpers';\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport const ModalBase = (props: ModalBaseProps): React.ReactPortal | null => {\n  const {\n    children,\n    transparent,\n    visible,\n    isBackgroundScrollable = false,\n    onRequestClose,\n  } = props;\n  let isUnmounting = false;\n  const targetElement = useElement('modal');\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const focusTrapRef = React.useRef<FocusTrap>(null);\n\n  useFreezeBody({ isFrozen: !!(!isBackgroundScrollable && visible) });\n\n  React.useEffect(() => {\n    const deactivateFocus = () => {\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        // @ts-ignore\n        focusTrapRef.current = null;\n      }\n    };\n\n    const activateFocus = () => {\n      if (elementRef.current && !focusTrapRef.current) {\n        // @ts-ignore\n        focusTrapRef.current = createFocusTrap(elementRef.current, {\n          initialFocus: elementRef.current,\n          onDeactivate: () => {\n            if (onRequestClose && visible && !isUnmounting) {\n              onRequestClose();\n            }\n          },\n        });\n\n        focusTrapRef.current.activate();\n      }\n    };\n\n    if (visible) activateFocus();\n    else deactivateFocus();\n\n    return () => {\n      isUnmounting = true;\n      deactivateFocus();\n    };\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return ReactDOM.createPortal(\n    <div\n      tabIndex={-1}\n      ref={elementRef}\n      style={{\n        backgroundColor: transparent ? 'transparent' : 'white',\n        bottom: 0,\n        left: 0,\n        position: isBackgroundScrollable ? 'absolute' : 'fixed',\n        right: 0,\n        top: 0,\n        zIndex: 1000,\n      }}\n    >\n      {children}\n    </div>,\n    targetElement,\n  );\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}