{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/ButtonGroup.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Calendars/Month/IncrementalMultiMonthCalendar.tsx","webpack:///./src/components/Calendars/Month/ModalMultiMonthCalendarSelect.tsx","webpack:///./src/components/Calendars/Month/MonthBody.tsx","webpack:///./src/components/Calendars/Month/MonthCalendar.tsx","webpack:///./src/components/Calendars/Month/MonthCalendarHeader.tsx","webpack:///./src/components/Calendars/Month/MonthDay.tsx","webpack:///./src/components/Calendars/Month/MultiMonthCalendar.tsx","webpack:///./src/components/Calendars/Month/MultiMonthCalendarSelect.tsx","webpack:///./src/components/Calendars/Month/WeekDays.tsx","webpack:///./src/components/Calendars/Month/constants.ts","webpack:///./src/components/Calendars/Month/index.ts","webpack:///./src/components/Calendars/Month/utils/chunk.ts","webpack:///./src/components/Calendars/Month/utils/getWeeksInMonth.ts","webpack:///./src/components/Calendars/constants.ts","webpack:///./src/components/Calendars/index.ts","webpack:///./src/components/Calendars/utils.ts","webpack:///./src/components/Checkbox/Checkbox.styles.ts","webpack:///./src/components/Checkbox/Checkbox.tsx","webpack:///./src/components/Checkbox/LabeledCheckbox.tsx","webpack:///./src/components/Checkbox/index.ts","webpack:///./src/components/Dialog/ConfirmDialog.tsx","webpack:///./src/components/Dialog/Dialog.styles.ts","webpack:///./src/components/Dialog/Dialog.tsx","webpack:///./src/components/Dialog/index.ts","webpack:///./src/components/Divider/Divider.styles.ts","webpack:///./src/components/Divider/Divider.tsx","webpack:///./src/components/Divider/index.ts","webpack:///./src/components/Form/Form.web.tsx","webpack:///./src/components/Form/FormField.tsx","webpack:///./src/components/Form/index.ts","webpack:///./src/components/ListItem/ListItem.styles.ts","webpack:///./src/components/ListItem/ListItem.tsx","webpack:///./src/components/ListItem/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/components/Overlay/Overlay.styles.ts","webpack:///./src/components/Overlay/Overlay.tsx","webpack:///./src/components/Overlay/index.ts","webpack:///./src/components/Pickers/CalendarDatePicker.tsx","webpack:///./src/components/Pickers/DialogPicker.tsx","webpack:///./src/components/Pickers/ModalPicker.tsx","webpack:///./src/components/Pickers/NativePicker.tsx","webpack:///./src/components/Pickers/NativePickerItem.tsx","webpack:///./src/components/Pickers/PickerButton.styles.ts","webpack:///./src/components/Pickers/PickerButton.tsx","webpack:///./src/components/Pickers/PickerButtonWrapper.tsx","webpack:///./src/components/Pickers/PickerItem.tsx","webpack:///./src/components/Pickers/Pickers.mdx","webpack:///./src/components/SelectList/SelectList.tsx","webpack:///./src/components/SelectList/SelectListField.tsx","webpack:///./src/components/SelectList/SelectListItem.tsx","webpack:///./src/components/SelectList/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","_interopRequireDefault","BackButton","props","theme","createElement","default","_extends2","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","withTheme","displayName","__docgenInfo","description","title","defaultValue","required","type","value","isLoading","isActive","isDisabled","onPress","iconAfter","iconLoading","getStyles","testID","accessible","accessibilityLabel","accessibilityRole","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","_Layout","directionToFlexDirectionMap","horizontal","vertical","ButtonGroup","children","_props$direction","direction","childrenLength","Children","count","finalChildren","map","child","index","isValidElement","button","buttonSize","buttonBorderRadius","controlBorderRadius","cloneElement","buttonStyle","_objectSpread2","borderBottomWidth","borderColor","border","borderRadius","borderWidth","elevation","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftWidth","Box","flexDirection","_ButtonGroup","_BackButton","__class","_dateFns","_","IncrementalMultiMonthCalendar","_props$showMoreText","showMoreText","_props$initialStartMo","initialStartMonthDate","subMonths","Date","_props$initialEndMont","initialEndMonthDate","addMonths","multiMonthCalendarProps","_objectWithoutProperties2","_React$useState","useState","_React$useState2","_slicedToArray2","endMonthDate","setEndMonthDate","_React$useState3","_React$useState4","startMonthDate","Fragment","MultiMonthCalendar","Spacing","paddingTop","Button","selectedStartDate","selectedEndDate","firstDayOfWeekIndex","onSelect","_Divider","_Modal","_MultiMonthCalendarSelect","defaultSetText","headerStartDate","headerEndDate","format","concat","applyChanges","clear","placeholderEndDate","placeholderStartDate","showMore","ModalMultiMonthCalendarSelect","_props$children","_props$useHistory","useHistory","_props$selectedStartD","propSelectedStartDate","_props$selectedEndDat","propSelectedEndDate","onValueChange","_props$useRange","useRange","_props$setText","setText","isModalOpen","setIsModalOpen","selectedDateRange","setSelectedDateRange","handleClose","useCallback","FormModal","visible","onRequestClose","onClose","clearText","onClear","startDate","endDate","Divider","paddingVertical","paddingHorizontal","event","preventDefault","openModal","_constants","_MonthDay","MonthBody","month","useContext","ThemeContext","weeks","week","key","days","day","date","isCurrentMonth","isSelected","isSelectedStart","isSelectedEnd","flex","justifyContent","alignItems","DATE_FORMAT","isSelectionStart","isSelectionEnd","toISOString","zIndex","backgroundColor","background","primary","focus","height","width","memo","prevProps","nextProps","selectedRange","_utils","_MonthBody","_getWeeksInMonth","MonthCalendar","_props$date","_props$firstDayOfWeek","DEFAULT_FIRST_DAY_OF_WEEK","_marshalTimeRange","marshalTimeRange","_marshalTimeRange2","getWeeksInMonth","_reactNative","_Typography","MonthCalendarHeader","onPressStartDate","onPressEndDate","headerStartDateText","placeholderStartDateText","headerEndDateText","placeholderEndDateText","TouchableOpacity","Heading","MonthDay","_props$onSelect","TouchableHighlight","style","underlayColor","View","DEFAULT_MONTH_DAY_HEIGHT","position","right","left","Text","_props$startMonthDate","_props$endMonthDate","Error","_marshalTimeRange3","_marshalTimeRange4","months","getWeeksInMultiMonth","formattedMonth","_MonthCalendarHeader","_WeekDays","MultiMonthCalendarSelect","handleSelect","isBefore","isAfter","paddingBottom","ScrollView","WeekDays","dates","firstDayOfWeek","addDays","startOfWeek","push","getDaysInWeek","padding","_MonthCalendar","_MultiMonthCalendar","_IncrementalMultiMonthCalendar","_ModalMultiMonthCalendarSelect","Month","array","Math","max","length","resIndex","result","Array","ceil","slice","_chunk","getMonthDatesFromDate","eachDay","startOfMonth","endOfMonth","getDatesBefore","startOfMonthDate","getFirstDayOfWeek","beforeDates","fromDate","getDay","subDays","getDatesAfter","endOfMonthDate","afterDates","lastDayOfWeek","getLastDayOfWeek","toDate","monthPageInDates","monthDates","chunkBySeven","chunk","monthDate","arguments","undefined","transformDateToDay","getDaysInMonth","currentDays","selectedStartDateIndex","findIndex","isSameDay","isSelectedStartDateWithinMonth","selectedEndDateIndex","isSelectedEndDateWithinMonth","beforeSelectedDays","selectedDays","afterSelectedDays","getCurrentMonthDays","beforeDays","hasSelectedDatesBeforeMonth","getBeforeMonthDays","afterDays","hasSelectedDatesAfterMonth","getAfterMonthDays","getISOWeek","monthsCount","differenceInMonths","monthsDates","getMonthsDates","isWithinRange","areRangesOverlapping","Calendars","console","error","getCheckboxVariables","base","plain","checked","checkedFocus","disabled","shape","circle","square","small","uncheckedFocus","tint1","_ref","isChecked","checkboxVariables","checkboxFocusBackgroundColor","checkboxStyle","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","textSizes","elevations","controlPaddings","controlHeights","_mergeStyles2","_Checkbox","Checkbox","_props$isChecked","_props$isDisabled","_props$isInteractive","isInteractive","checkedIcon","_props$onChange","onChange","_props$shape","accessibilityProps","_mergeStyles","mergeStyles","getCheckboxStyles","display","LabeledCheckbox","label","_props$position","restProps","_LabeledCheckbox","_Dialog","ConfirmDialogHeader","ConfirmDialogFooter","_ref2","_ref2$color","onConfirm","cancelLabel","confirmLabel","paddingLeft","ConfirmDialog","_props$cancelLabel","_props$confirmLabel","footer","header","dialogProps","isVisible","getDialogVariables","body","maxHeight","container","maxWidth","minWidth","modalContainer","getDialogStyles","dialogVariables","bodyStyle","containerStyle","modalContainerStyle","_Overlay","Dialog","_props$onRequestClose","Modal","transparent","Overlay","_ConfirmDialog","styleMap","dividerStyle","getDividerStyles","onSubmit","Formweb","FormField","passThroughProps","marginBottom","Label","_FormField","_Form","Form","_Text","getListItemVariables","getTextVariables","focusBackgroundColor","selected","sizes","fontSize","paddingRight","medium","large","wrapper","selectListVariables","_sizes$size","sizeStyles","imageWrapperStyle","marginRight","leftWrapperStyle","textStyle","textWrapperStyle","wrapperStyle","_ListItem","ListItem","_props$size","_props$rightIcon","rightIcon","leftIcon","getListItemStyles","avatarProps","_ModalContent","CloseableModal","rightSide","modalProps","isBackgroundScrollable","animated","animationType","onShow","presentationStyle","supportedOrientations","onDismiss","onOrientationChange","hardwareAccelerated","_CloseableModal","_props$clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModal","componentDidUpdate","previousProps","_this","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","_this$props","go","handleEscapeKey","replaceState","removeEventListener","this","PureComponent","_ref$useHistory","HistoryModalweb","_HistoryModal","_focusTrap","ReactDOM","ModalBase","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","top","ModalContent","marginLeft","_FormModal","getOverlayVariables","overlay","cursor","overlayVariables","overlayStyle","_props$transparent","getOverlayStyles","TouchableWithoutFeedback","_onPress","_x","apply","toString","Object","keys","forEach","defineProperty","exports","enumerable","get","_Month","_PickerButton","CalendarDatePicker","_SelectList","DialogPicker","_props$selectedValue","selectedValue","isDialogOpen","setIsDialogOpen","data","toArray","selectedIndex","d","selectedData","selectedLabel","SelectList","initialScrollIndex","testId","itemStyle","hitSlop","onLayout","pointerEvents","removeClippedSubviews","nativeID","collapsable","needsOffscreenAlphaCompositing","renderToHardwareTextureAndroid","accessibilityViewIsModal","accessibilityActions","onAccessibilityAction","shouldRasterizeIOS","onStartShouldSetResponder","onMoveShouldSetResponder","onResponderEnd","onResponderGrant","onResponderReject","onResponderMove","onResponderRelease","onResponderStart","onResponderTerminationRequest","onResponderTerminate","onStartShouldSetResponderCapture","onMoveShouldSetResponderCapture","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onTouchEndCapture","enabled","mode","prompt","ModalPicker","initialNumToRender","_PickerButtonWrapper","NativePickerBase","innerRef","pickerProps","getPickerButtonStyles","pickerStyle","Picker","NativePicker","forwardRef","ForwardRefExoticComponent","RNPicker","Item","PickerItem","getPickerButtonVariables","invalid","danger","placeholderTextColor","muted","pickerStylesProps","pickerVariables","controlSizeStyles","textSizeStyles","Platform","OS","rightContainerStyle","PickerButton","PickerButtonWrapper","SelectListItem","MemoExoticComponent","_react","_tag","_docz","_reactPowerplug","_ModalPicker","_DialogPicker","_NativePicker","_CalendarDatePicker","_PickerItem","_NativePickerItem","MDXContent","layout","components","MDXTag","id","Playground","__position","__code","__scope","State","NativePickerItem","initial","setState","itemValue","itemIndex","_ref3","parentName","_ref4","_ref4$state","Component","SelectListBase","isMulti","flatListProps","handleOnPress","isArray","filter","val","childrenArray","FlatList","keyExtractor","item","getItemLayout","offset","renderItem","selectListItem","some","selVal","ItemSeparatorComponent","ListEmptyComponent","ListFooterComponent","ListHeaderComponent","columnWrapperStyle","keyboardShouldPersistTaps","extraData","legacyImplementation","numColumns","onEndReached","onEndReachedThreshold","onRefresh","onViewableItemsChanged","refreshing","viewabilityConfig","debug","disableVirtualization","getItem","getItemCount","inverted","listKey","maxToRenderPerBatch","onScrollToIndexFailed","progressViewOffset","renderScrollComponent","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","windowSize","contentContainerStyle","invertStickyHeaders","keyboardDismissMode","onContentSizeChange","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollEnd","onMomentumScrollBegin","pagingEnabled","scrollEnabled","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","refreshControl","snapToAlignment","snapToInterval","snapToOffsets","snapToStart","snapToEnd","alwaysBounceHorizontal","alwaysBounceVertical","automaticallyAdjustContentInsets","bounces","bouncesZoom","canCancelContentTouches","centerContent","contentInset","contentOffset","contentInsetAdjustmentBehavior","decelerationRate","directionalLockEnabled","indicatorStyle","maximumZoomScale","minimumZoomScale","onScrollAnimationEnd","pinchGestureEnabled","scrollEventThrottle","scrollIndicatorInsets","scrollsToTop","stickyHeaderIndices","zoomScale","endFillColor","scrollPerfTag","overScrollMode","nestedScrollEnabled","SelectListField","_props$index","_props$isSelected","listItemProps","e","_SelectListItem","_SelectListField","Feather","IconTag","replace","matches","toUpperCase","charAt","convertToPascal","Iconweb","_Icon","icons"],"mappings":"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","file":"static/js/8.043e3474.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { withTheme } from '../../theme';\nimport Button, { ButtonProps } from './Button';\n\nconst BackButton = (props: ButtonProps) => {\n  const { theme } = props;\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n\nexport default withTheme(BackButton);\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Theme, withTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ButtonProps } from './Button';\n\nexport type ButtonGroupDirection = 'vertical' | 'horizontal';\n\nexport interface ButtonGroupProps {\n  /**\n   * @default vertical\n   */\n  direction?: ButtonGroupDirection;\n  children: Array<React.ReactElement<ButtonProps>>;\n  theme: Theme;\n}\n\nconst directionToFlexDirectionMap: { [direction: string]: 'row' | 'column' } = {\n  horizontal: 'row',\n  vertical: 'column',\n};\n\nconst ButtonGroup: React.SFC<ButtonGroupProps> = props => {\n  const { children, direction = 'vertical', theme } = props;\n\n  const childrenLength = React.Children.count(children);\n\n  const finalChildren = React.Children.map(children, (child, index) => {\n    if (!React.isValidElement(child)) {\n      return child;\n    }\n\n    // @ts-ignore\n    const button = child as React.ReactElement<ButtonProps>;\n    const buttonSize = button.props.size || 'medium';\n    const buttonBorderRadius = theme.controlBorderRadius[buttonSize];\n\n    return React.cloneElement(button, {\n      getStyles: () => {\n        return {\n          buttonStyle: {\n            ...(direction === 'vertical'\n              ? {\n                  borderBottomWidth: 1,\n                  borderColor: theme.colors.border.default,\n                  borderRadius: 0,\n                  borderWidth: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderTopLeftRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderBottomWidth: 0,\n                  }),\n                }\n              : {\n                  borderColor: theme.colors.border.default,\n                  borderLeftWidth: 0,\n                  borderRadius: 0,\n                  elevation: 0,\n\n                  ...(index === 0 && {\n                    borderBottomLeftRadius: buttonBorderRadius,\n                    borderTopLeftRadius: buttonBorderRadius,\n                  }),\n                  ...(childrenLength - 1 === index && {\n                    borderBottomRightRadius: buttonBorderRadius,\n                    borderTopRightRadius: buttonBorderRadius,\n                  }),\n                }),\n          },\n        };\n      },\n    });\n  });\n\n  return (\n    <Box flexDirection={directionToFlexDirectionMap[direction]}>\n      {finalChildren}\n    </Box>\n  );\n};\n\nexport default withTheme(ButtonGroup);\ntry {\n    // @ts-ignore\n    ButtonGroup.displayName = \"ButtonGroup\";\n    // @ts-ignore\n    ButtonGroup.__docgenInfo = { \"description\": \"\", \"displayName\": \"ButtonGroup\", \"props\": { \"direction\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"direction\", \"required\": false, \"type\": { \"name\": \"ButtonGroupDirection\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/ButtonGroup.tsx#ButtonGroup\"] = { docgenInfo: ButtonGroup.__docgenInfo, name: \"ButtonGroup\", path: \"src/components/Button/ButtonGroup.tsx#ButtonGroup\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Button, ButtonProps } from './Button';\nexport { default as ButtonGroup, ButtonGroupProps } from './ButtonGroup';\nexport { default as BackButton } from './BackButton';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Button/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { addMonths, subMonths } from 'date-fns';\nimport * as React from 'react';\n\nimport { MultiMonthCalendar } from '..';\nimport { Button } from '../../Button';\nimport { Spacing } from '../../Layout';\nimport { MultiMonthCalendarProps } from './MultiMonthCalendar';\n\nexport interface IncrementalMultiMonthCalendarProps\n  extends MultiMonthCalendarProps {\n  showMoreText?: string;\n  initialStartMonthDate?: Date;\n  initialEndMonthDate?: Date;\n}\n\nconst IncrementalMultiMonthCalendarBase = (\n  props: IncrementalMultiMonthCalendarProps,\n) => {\n  const {\n    showMoreText = 'Show more months',\n    initialStartMonthDate = subMonths(new Date(), 1),\n    initialEndMonthDate = addMonths(new Date(), 1),\n    ...multiMonthCalendarProps\n  } = props;\n  const [endMonthDate, setEndMonthDate] = React.useState(initialEndMonthDate);\n  const [startMonthDate, setStartMonthDate] = React.useState(\n    initialStartMonthDate,\n  );\n\n  return (\n    <>\n      <MultiMonthCalendar\n        {...multiMonthCalendarProps}\n        startMonthDate={startMonthDate}\n        endMonthDate={endMonthDate}\n      />\n      <Spacing paddingTop={3}>\n        <Button\n          onPress={() => setEndMonthDate(addMonths(endMonthDate, 2))}\n          title={showMoreText}\n          appearance=\"minimal\"\n          color=\"primary\"\n        />\n      </Spacing>\n    </>\n  );\n};\n\nexport const IncrementalMultiMonthCalendar = IncrementalMultiMonthCalendarBase;\n\nexport default IncrementalMultiMonthCalendar;\ntry {\n    // @ts-ignore\n    IncrementalMultiMonthCalendar.displayName = \"IncrementalMultiMonthCalendar\";\n    // @ts-ignore\n    IncrementalMultiMonthCalendar.__docgenInfo = { \"description\": \"\", \"displayName\": \"IncrementalMultiMonthCalendar\", \"props\": { \"showMoreText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showMoreText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"initialStartMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialStartMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"initialEndMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialEndMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/IncrementalMultiMonthCalendar.tsx#IncrementalMultiMonthCalendar\"] = { docgenInfo: IncrementalMultiMonthCalendar.__docgenInfo, name: \"IncrementalMultiMonthCalendar\", path: \"src/components/Calendars/Month/IncrementalMultiMonthCalendar.tsx#IncrementalMultiMonthCalendar\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { format } from 'date-fns';\nimport * as React from 'react';\n\nimport { Button } from '../../Button';\nimport { Divider } from '../../Divider';\nimport { Spacing } from '../../Layout';\nimport { FormModal } from '../../Modal';\nimport MultiMonthCalendarSelect, {\n  MultiMonthCalendarSelectProps,\n  MultiMonthCalendarSelectText,\n} from './MultiMonthCalendarSelect';\n\nexport interface ModalMultiMonthCalendarSelectChildrenProps {\n  openModal?: () => void;\n}\n\nexport interface ModalMultiMonthCalendarSelectText\n  extends MultiMonthCalendarSelectText {\n  applyChanges: string;\n  title: string;\n  clear: string;\n}\n\nexport type SetText = (\n  startDate: Date | null,\n  endDate: Date | null,\n) => ModalMultiMonthCalendarSelectText;\n\nexport interface ModalMultiMonthCalendarSelectProps\n  extends MultiMonthCalendarSelectProps {\n  children: (\n    props: ModalMultiMonthCalendarSelectChildrenProps,\n  ) => React.ReactNode;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  setText?: SetText;\n}\n\nconst DATE_FORMAT = 'D MMM YYYY';\nconst FULL_DATE_FORMAT = 'Do MMMM YYYY';\n\nexport const defaultSetText: SetText = (\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n) => {\n  let title = '';\n  let headerStartDate = '';\n  let headerEndDate = '';\n\n  if (!selectedStartDate) {\n    title = 'Select date';\n  } else if (selectedStartDate && !selectedEndDate) {\n    title = format(selectedStartDate, FULL_DATE_FORMAT);\n    headerStartDate = format(selectedStartDate, DATE_FORMAT);\n  } else if (selectedStartDate && selectedEndDate) {\n    title = `${format(selectedStartDate, DATE_FORMAT)} - ${format(\n      selectedEndDate,\n      DATE_FORMAT,\n    )}`;\n    headerStartDate = `${format(selectedStartDate, DATE_FORMAT)}`;\n    headerEndDate = `${format(selectedEndDate, DATE_FORMAT)}`;\n  }\n\n  return {\n    applyChanges: 'Apply changes',\n    clear: 'Clear',\n    headerEndDate,\n    headerStartDate,\n    placeholderEndDate: 'End date',\n    placeholderStartDate: 'Start date',\n    showMore: 'Show more months',\n    title,\n  };\n};\n\nconst ModalMultiMonthCalendarSelectBase = (\n  props: ModalMultiMonthCalendarSelectProps,\n) => {\n  const {\n    children = () => null,\n    useHistory = false,\n    selectedStartDate: propSelectedStartDate = null,\n    selectedEndDate: propSelectedEndDate = null,\n    onValueChange,\n    useRange = false,\n    initialStartMonthDate,\n    initialEndMonthDate,\n    setText = defaultSetText,\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [selectedDateRange, setSelectedDateRange] = React.useState({\n    selectedEndDate: propSelectedEndDate,\n    selectedStartDate: propSelectedStartDate,\n  });\n  const { selectedStartDate, selectedEndDate } = selectedDateRange;\n\n  const handleClose = React.useCallback(() => {\n    setSelectedDateRange({\n      selectedEndDate: propSelectedEndDate,\n      selectedStartDate: propSelectedStartDate,\n    });\n    setIsModalOpen(false);\n  }, [propSelectedEndDate, propSelectedStartDate]);\n\n  const text = setText(selectedStartDate, selectedEndDate);\n\n  return (\n    <>\n      <FormModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={handleClose}\n        onClose={handleClose}\n        clearText={text.clear}\n        onClear={() => {\n          setSelectedDateRange({\n            selectedEndDate: null,\n            selectedStartDate: null,\n          });\n        }}\n      >\n        <MultiMonthCalendarSelect\n          useRange={useRange}\n          selectedEndDate={selectedEndDate}\n          selectedStartDate={selectedStartDate}\n          initialStartMonthDate={initialStartMonthDate}\n          initialEndMonthDate={initialEndMonthDate}\n          onValueChange={(startDate, endDate) =>\n            setSelectedDateRange({\n              selectedEndDate: endDate,\n              selectedStartDate: startDate,\n            })\n          }\n          text={text}\n        />\n        <Divider />\n        <Spacing paddingVertical={1} paddingHorizontal={2}>\n          <Button\n            onPress={event => {\n              event.preventDefault();\n              setIsModalOpen(false);\n              if (onValueChange) {\n                onValueChange(selectedStartDate, selectedEndDate);\n              }\n            }}\n            title={text.applyChanges}\n            color=\"primary\"\n          />\n        </Spacing>\n      </FormModal>\n      {children({ openModal: () => setIsModalOpen(true) })}\n    </>\n  );\n};\n\nexport const ModalMultiMonthCalendarSelect = ModalMultiMonthCalendarSelectBase;\n\nexport default ModalMultiMonthCalendarSelect;\ntry {\n    // @ts-ignore\n    ModalMultiMonthCalendarSelect.displayName = \"ModalMultiMonthCalendarSelect\";\n    // @ts-ignore\n    ModalMultiMonthCalendarSelect.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalMultiMonthCalendarSelect\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"setText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setText\", \"required\": false, \"type\": { \"name\": \"SetText\" } }, \"useRange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"useRange\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(selectedStartDate: Date, selectedEndDate: Date) => void\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"MultiMonthCalendarSelectText\" } }, \"showMoreText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showMoreText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"initialStartMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialStartMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"initialEndMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialEndMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/ModalMultiMonthCalendarSelect.tsx#ModalMultiMonthCalendarSelect\"] = { docgenInfo: ModalMultiMonthCalendarSelect.__docgenInfo, name: \"ModalMultiMonthCalendarSelect\", path: \"src/components/Calendars/Month/ModalMultiMonthCalendarSelect.tsx#ModalMultiMonthCalendarSelect\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { format } from 'date-fns';\nimport * as React from 'react';\n\nimport { ThemeContext } from '../../../theme';\nimport { Box } from '../../Layout';\nimport { Month } from '../types';\nimport { DATE_FORMAT } from './constants';\nimport MonthDay, { MonthDayBaseProps } from './MonthDay';\n\nexport interface MonthBodyProps extends MonthDayBaseProps {\n  month: Month;\n}\n\nconst MonthBody = (props: MonthBodyProps) => {\n  const { onSelect, month } = props;\n\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <Box>\n      {month.weeks.map(week => (\n        <Box flexDirection=\"row\" key={week.index}>\n          {week.days.map(day => {\n            const {\n              date,\n              isCurrentMonth,\n              isSelected,\n              isSelectedStart,\n              isSelectedEnd,\n            } = day;\n\n            if (!isCurrentMonth) {\n              return (\n                <Box\n                  flex={1}\n                  justifyContent=\"center\"\n                  alignItems=\"flex-start\"\n                  key={date.toISOString()}\n                  paddingVertical={4}\n                  zIndex={-1}\n                >\n                  <Box\n                    backgroundColor={\n                      isSelected\n                        ? theme.colors.background.primary.focus\n                        : 'transparent'\n                    }\n                    flex={1}\n                    height={40}\n                    width=\"100%\"\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <Box\n                flex={1}\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                key={format(date, DATE_FORMAT)}\n              >\n                <MonthDay\n                  onSelect={onSelect}\n                  date={date}\n                  isSelected={isSelected}\n                  isSelectionStart={isSelectedStart}\n                  isSelectionEnd={isSelectedEnd}\n                />\n              </Box>\n            );\n          })}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nconst propsAreEqual = (\n  prevProps: MonthBodyProps,\n  nextProps: MonthBodyProps,\n) => {\n  return (\n    prevProps.month.selectedRange === nextProps.month.selectedRange &&\n    prevProps.onSelect === nextProps.onSelect\n  );\n};\n\nexport default React.memo(MonthBody, propsAreEqual);\ntry {\n    // @ts-ignore\n    MonthBody.displayName = \"MonthBody\";\n    // @ts-ignore\n    MonthBody.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthBody\", \"props\": { \"month\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"month\", \"required\": true, \"type\": { \"name\": \"Month\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthBody.tsx#MonthBody\"] = { docgenInfo: MonthBody.__docgenInfo, name: \"MonthBody\", path: \"src/components/Calendars/Month/MonthBody.tsx#MonthBody\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Box } from '../../Layout';\nimport { DEFAULT_FIRST_DAY_OF_WEEK } from '../constants';\nimport { marshalTimeRange } from '../utils';\nimport MonthBody from './MonthBody';\nimport { MonthDayBaseProps } from './MonthDay';\nimport { getWeeksInMonth } from './utils/getWeeksInMonth';\n\nexport interface MonthCalendarProps extends MonthDayBaseProps {\n  /** Date to which display its month for. @default Date */\n  date?: Date;\n  /** Highlights the date or start date on the calendar */\n  selectedStartDate?: Date | null;\n  /** Highlights the end date on the calendar. Will created a selected range */\n  selectedEndDate?: Date | null;\n  firstDayOfWeekIndex?: number;\n}\n\nconst MonthCalendar = (props: MonthCalendarProps) => {\n  const {\n    date = new Date(),\n    firstDayOfWeekIndex = DEFAULT_FIRST_DAY_OF_WEEK,\n    selectedStartDate: propSelectedStartDate = null,\n    selectedEndDate: propSelectedEndDate = null,\n    onSelect,\n  } = props;\n\n  const [selectedStartDate, selectedEndDate] = marshalTimeRange(\n    propSelectedStartDate,\n    propSelectedEndDate,\n  );\n\n  const month = getWeeksInMonth(\n    date,\n    selectedStartDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  return (\n    <Box flex={1} width=\"100%\">\n      <MonthBody onSelect={onSelect} month={month} />\n    </Box>\n  );\n};\n\nexport default MonthCalendar;\ntry {\n    // @ts-ignore\n    MonthCalendar.displayName = \"MonthCalendar\";\n    // @ts-ignore\n    MonthCalendar.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthCalendar\", \"props\": { \"date\": { \"defaultValue\": null, \"description\": \"Date to which display its month for. @default Date\", \"name\": \"date\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthCalendar.tsx#MonthCalendar\"] = { docgenInfo: MonthCalendar.__docgenInfo, name: \"MonthCalendar\", path: \"src/components/Calendars/Month/MonthCalendar.tsx#MonthCalendar\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { Box } from '../../Layout';\nimport { Heading } from '../../Typography';\n\nexport interface MonthCalendarHeaderProps {\n  /** Prop to be passed to modal */\n  useRange?: boolean;\n\n  onPressStartDate?: () => void;\n  onPressEndDate?: () => void;\n  selectedStartDate?: Date | null;\n  selectedEndDate?: Date | null;\n\n  headerStartDateText?: string;\n  placeholderStartDateText?: string;\n  headerEndDateText?: string;\n  placeholderEndDateText?: string;\n}\n\nconst MonthCalendarHeaderBase = (props: MonthCalendarHeaderProps) => {\n  const {\n    selectedStartDate = null,\n    selectedEndDate = null,\n    useRange = false,\n    onPressStartDate,\n    onPressEndDate,\n    headerStartDateText,\n    placeholderStartDateText,\n    headerEndDateText,\n    placeholderEndDateText,\n  } = props;\n\n  return (\n    <Box flexDirection=\"row\">\n      <Box flex={1}>\n        <TouchableOpacity onPress={onPressStartDate}>\n          <Heading size=\"xlarge\">\n            {selectedStartDate ? headerStartDateText : placeholderStartDateText}\n          </Heading>\n        </TouchableOpacity>\n      </Box>\n      {useRange && (\n        <Box flex={1}>\n          <TouchableOpacity onPress={onPressEndDate}>\n            <Heading size=\"xlarge\">\n              {selectedEndDate ? headerEndDateText : placeholderEndDateText}\n            </Heading>\n          </TouchableOpacity>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport const MonthCalendarHeader = MonthCalendarHeaderBase;\n\nexport default MonthCalendarHeader;\ntry {\n    // @ts-ignore\n    MonthCalendarHeader.displayName = \"MonthCalendarHeader\";\n    // @ts-ignore\n    MonthCalendarHeader.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthCalendarHeader\", \"props\": { \"useRange\": { \"defaultValue\": null, \"description\": \"Prop to be passed to modal\", \"name\": \"useRange\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPressStartDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressStartDate\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onPressEndDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPressEndDate\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"headerStartDateText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headerStartDateText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"placeholderStartDateText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"placeholderStartDateText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"headerEndDateText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headerEndDateText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"placeholderEndDateText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"placeholderEndDateText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthCalendarHeader.tsx#MonthCalendarHeader\"] = { docgenInfo: MonthCalendarHeader.__docgenInfo, name: \"MonthCalendarHeader\", path: \"src/components/Calendars/Month/MonthCalendarHeader.tsx#MonthCalendarHeader\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { TouchableHighlight, View } from 'react-native';\n\nimport { ThemeContext } from '../../../theme';\nimport { Text } from '../../Typography';\nimport { DEFAULT_MONTH_DAY_HEIGHT } from './constants';\n\nexport interface MonthDayBaseProps {\n  onSelect?: (date: Date) => void;\n}\n\nexport interface MonthDayProps extends MonthDayBaseProps {\n  date: Date;\n  isSelected: boolean;\n  isSelectionStart: boolean;\n  isSelectionEnd: boolean;\n}\n\nconst MonthDay = (props: MonthDayProps) => {\n  const {\n    isSelected,\n    isSelectionStart,\n    isSelectionEnd,\n    date,\n    onSelect = () => null,\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <TouchableHighlight\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        paddingVertical: 4,\n        width: '100%',\n      }}\n      underlayColor=\"transparent\"\n      onPress={() => onSelect(date)}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          backgroundColor:\n            isSelected && !isSelectionStart && !isSelectionEnd\n              ? theme.colors.background.primary.focus\n              : 'transparent',\n          flex: 1,\n          flexDirection: 'row',\n          height: DEFAULT_MONTH_DAY_HEIGHT - 4,\n          justifyContent: 'center',\n          position: 'relative',\n        }}\n      >\n        {isSelectionStart && !isSelectionEnd && (\n          <View\n            style={{\n              backgroundColor: theme.colors.background.primary.focus,\n              height: '100%',\n              position: 'absolute',\n              right: 0,\n              width: '50%',\n            }}\n          />\n        )}\n        {isSelectionEnd && !isSelectionStart && (\n          <View\n            style={{\n              backgroundColor: theme.colors.background.primary.focus,\n              height: '100%',\n              left: 0,\n              position: 'absolute',\n              width: '50%',\n            }}\n          />\n        )}\n        <View\n          style={{\n            alignItems: 'center',\n            backgroundColor: isSelected\n              ? theme.colors.background.primary.focus\n              : 'transparent',\n            borderRadius: 999,\n            flexDirection: 'row',\n            height: DEFAULT_MONTH_DAY_HEIGHT - 4,\n            justifyContent: 'center',\n            width: DEFAULT_MONTH_DAY_HEIGHT - 4,\n          }}\n        >\n          <Text color={isSelected ? 'plain' : 'default'}>\n            {format(date, 'D')}\n          </Text>\n        </View>\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport default MonthDay;\ntry {\n    // @ts-ignore\n    MonthDay.displayName = \"MonthDay\";\n    // @ts-ignore\n    MonthDay.__docgenInfo = { \"description\": \"\", \"displayName\": \"MonthDay\", \"props\": { \"date\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"date\", \"required\": true, \"type\": { \"name\": \"Date\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"isSelectionStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelectionStart\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"isSelectionEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelectionEnd\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MonthDay.tsx#MonthDay\"] = { docgenInfo: MonthDay.__docgenInfo, name: \"MonthDay\", path: \"src/components/Calendars/Month/MonthDay.tsx#MonthDay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { addMonths, format } from 'date-fns';\nimport * as React from 'react';\nimport { Omit } from 'ts-essentials';\n\nimport { Box, Spacing } from '../../Layout';\nimport { Heading } from '../../Typography';\nimport { DEFAULT_FIRST_DAY_OF_WEEK } from '../constants';\nimport { marshalTimeRange } from '../utils';\nimport MonthBody from './MonthBody';\nimport { MonthCalendarProps } from './MonthCalendar';\nimport { getWeeksInMultiMonth } from './utils/getWeeksInMonth';\n\nexport interface MultiMonthCalendarProps\n  extends Omit<MonthCalendarProps, 'date'> {\n  startMonthDate?: Date;\n  endMonthDate?: Date;\n}\n\nconst MultiMonthCalendar = (props: MultiMonthCalendarProps) => {\n  const {\n    firstDayOfWeekIndex = DEFAULT_FIRST_DAY_OF_WEEK,\n    startMonthDate = new Date(),\n    endMonthDate = addMonths(new Date(), 1),\n    selectedStartDate: propSelectedStartDate = null,\n    selectedEndDate: propSelectedEndDate = null,\n    onSelect,\n  } = props;\n\n  const [startDate, endDate] = marshalTimeRange(startMonthDate, endMonthDate);\n\n  if (!startDate || !endDate) {\n    throw new Error(\n      'Please pass correct startMonthDate and endMonthDate in MultiMonthCalendar',\n    );\n  }\n\n  const [selectedStartDate, selectedEndDate] = marshalTimeRange(\n    propSelectedStartDate,\n    propSelectedEndDate,\n  );\n\n  const months = getWeeksInMultiMonth(\n    startDate,\n    endDate,\n    selectedStartDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  return (\n    <Box flex={1} width=\"100%\">\n      {months.map(month => {\n        return (\n          <Box key={month.formattedMonth}>\n            <Spacing paddingVertical={3}>\n              <Heading size=\"xlarge\">\n                {format(month.month, 'MMMM YYYY')}\n              </Heading>\n            </Spacing>\n            <MonthBody month={month} onSelect={onSelect} />\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default MultiMonthCalendar;\ntry {\n    // @ts-ignore\n    MultiMonthCalendar.displayName = \"MultiMonthCalendar\";\n    // @ts-ignore\n    MultiMonthCalendar.__docgenInfo = { \"description\": \"\", \"displayName\": \"MultiMonthCalendar\", \"props\": { \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MultiMonthCalendar.tsx#MultiMonthCalendar\"] = { docgenInfo: MultiMonthCalendar.__docgenInfo, name: \"MultiMonthCalendar\", path: \"src/components/Calendars/Month/MultiMonthCalendar.tsx#MultiMonthCalendar\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { isAfter, isBefore } from 'date-fns';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\n\nimport { IncrementalMultiMonthCalendar } from '.';\nimport { Spacing } from '../../Layout';\nimport { IncrementalMultiMonthCalendarProps } from './IncrementalMultiMonthCalendar';\nimport MonthCalendarHeader from './MonthCalendarHeader';\nimport WeekDays from './WeekDays';\n\nexport interface MultiMonthCalendarSelectProps\n  extends IncrementalMultiMonthCalendarProps {\n  useRange?: boolean;\n\n  onValueChange?: (\n    selectedStartDate: Date | null,\n    selectedEndDate: Date | null,\n  ) => void;\n  text: MultiMonthCalendarSelectText;\n}\n\nexport interface MultiMonthCalendarSelectText {\n  showMore: string;\n  headerStartDate: string;\n  placeholderStartDate: string;\n  headerEndDate: string;\n  placeholderEndDate: string;\n}\n\nconst MultiMonthCalendarSelectBase = (props: MultiMonthCalendarSelectProps) => {\n  const {\n    selectedStartDate = null,\n    selectedEndDate = null,\n    useRange = false,\n    onValueChange,\n    initialStartMonthDate,\n    initialEndMonthDate,\n    text,\n  } = props;\n\n  const handleSelect = React.useCallback(\n    (date: Date) => {\n      if (!onValueChange) return;\n\n      if (useRange) {\n        if (\n          (!selectedStartDate && !selectedEndDate) ||\n          (selectedStartDate && selectedEndDate)\n        ) {\n          onValueChange(date, null);\n        } else if (selectedStartDate && !selectedEndDate) {\n          if (isBefore(date, selectedStartDate)) {\n            onValueChange(date, null);\n          } else if (isAfter(date, selectedStartDate)) {\n            onValueChange(selectedStartDate, date);\n          }\n        }\n      } else {\n        onValueChange(date, null);\n      }\n    },\n    [selectedStartDate, selectedEndDate],\n  );\n\n  return (\n    <>\n      <Spacing paddingHorizontal={2} paddingTop={1} paddingBottom={2}>\n        <MonthCalendarHeader\n          useRange={useRange}\n          selectedStartDate={selectedStartDate}\n          selectedEndDate={selectedEndDate}\n          headerStartDateText={text.headerStartDate}\n          onPressStartDate={() => {\n            if (onValueChange) {\n              onValueChange(null, null);\n            }\n          }}\n          onPressEndDate={() => {\n            if (onValueChange) {\n              onValueChange(selectedStartDate, null);\n            }\n          }}\n          placeholderStartDateText={text.placeholderStartDate}\n          headerEndDateText={text.headerEndDate}\n          placeholderEndDateText={text.placeholderEndDate}\n        />\n        <Spacing paddingTop={1}>\n          <WeekDays />\n        </Spacing>\n      </Spacing>\n      <ScrollView>\n        <Spacing paddingBottom={3} paddingHorizontal={2}>\n          <IncrementalMultiMonthCalendar\n            selectedStartDate={selectedStartDate}\n            selectedEndDate={selectedEndDate}\n            onSelect={handleSelect}\n            initialStartMonthDate={initialStartMonthDate}\n            initialEndMonthDate={initialEndMonthDate}\n            showMoreText={text.showMore}\n          />\n        </Spacing>\n      </ScrollView>\n    </>\n  );\n};\n\nexport const MultiMonthCalendarSelect = MultiMonthCalendarSelectBase;\n\nexport default MultiMonthCalendarSelect;\ntry {\n    // @ts-ignore\n    MultiMonthCalendarSelect.displayName = \"MultiMonthCalendarSelect\";\n    // @ts-ignore\n    MultiMonthCalendarSelect.__docgenInfo = { \"description\": \"\", \"displayName\": \"MultiMonthCalendarSelect\", \"props\": { \"useRange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"useRange\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(selectedStartDate: Date, selectedEndDate: Date) => void\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"MultiMonthCalendarSelectText\" } }, \"showMoreText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showMoreText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"initialStartMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialStartMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"initialEndMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialEndMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/MultiMonthCalendarSelect.tsx#MultiMonthCalendarSelect\"] = { docgenInfo: MultiMonthCalendarSelect.__docgenInfo, name: \"MultiMonthCalendarSelect\", path: \"src/components/Calendars/Month/MultiMonthCalendarSelect.tsx#MultiMonthCalendarSelect\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { addDays, format, startOfWeek } from 'date-fns';\nimport * as React from 'react';\n\nimport { Box, Spacing } from '../../Layout';\nimport { Text } from '../../Typography';\nimport { DEFAULT_FIRST_DAY_OF_WEEK } from '../constants';\n\nexport interface WeekDaysProps {\n  firstDayOfWeekIndex?: number;\n}\n\nconst getDaysInWeek = (firstDayOfWeekIndex: number) => {\n  const week = [];\n  const firstDayOfWeek = addDays(startOfWeek(new Date()), firstDayOfWeekIndex);\n\n  for (let index = 0; index < 7; index++) {\n    week.push(addDays(firstDayOfWeek, index));\n  }\n\n  return week;\n};\n\nconst WeekDays = (props: WeekDaysProps) => {\n  const { firstDayOfWeekIndex = DEFAULT_FIRST_DAY_OF_WEEK } = props;\n  const dates = getDaysInWeek(firstDayOfWeekIndex);\n\n  return (\n    <Box flex={1} flexDirection=\"row\">\n      {dates.map(date => {\n        return (\n          <Spacing\n            key={date.toISOString()}\n            flex={1}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            padding={1}\n          >\n            <Text>{format(date, 'dd')}</Text>\n          </Spacing>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default WeekDays;\ntry {\n    // @ts-ignore\n    WeekDays.displayName = \"WeekDays\";\n    // @ts-ignore\n    WeekDays.__docgenInfo = { \"description\": \"\", \"displayName\": \"WeekDays\", \"props\": { \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/WeekDays.tsx#WeekDays\"] = { docgenInfo: WeekDays.__docgenInfo, name: \"WeekDays\", path: \"src/components/Calendars/Month/WeekDays.tsx#WeekDays\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export const DATE_FORMAT = 'YYYY-MM-DD';\nexport const DEFAULT_MONTH_DAY_HEIGHT = 48;\n","export { default as MonthCalendar, MonthCalendarProps } from './MonthCalendar';\nexport {\n  default as MultiMonthCalendar,\n  MultiMonthCalendarProps,\n} from './MultiMonthCalendar';\nexport {\n  default as IncrementalMultiMonthCalendar,\n  IncrementalMultiMonthCalendarProps,\n} from './IncrementalMultiMonthCalendar';\nexport {\n  default as ModalMultiMonthCalendarSelect,\n  ModalMultiMonthCalendarSelectProps,\n} from './ModalMultiMonthCalendarSelect';\nexport {\n  default as MultiMonthCalendarSelect,\n  MultiMonthCalendarSelectProps,\n} from './MultiMonthCalendarSelect';\ntry {\n    // @ts-ignore\n    Month.displayName = \"Month\";\n    // @ts-ignore\n    Month.__docgenInfo = { \"description\": \"\", \"displayName\": \"Month\", \"props\": { \"useRange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"useRange\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(selectedStartDate: Date, selectedEndDate: Date) => void\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"MultiMonthCalendarSelectText\" } }, \"showMoreText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showMoreText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"initialStartMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialStartMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"initialEndMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialEndMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/Month/index.ts#Month\"] = { docgenInfo: Month.__docgenInfo, name: \"Month\", path: \"src/components/Calendars/Month/index.ts#Month\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","// From Lodash\n\nexport const chunk = <TArrayElement = any>(\n  array: TArrayElement[],\n  size: number,\n): TArrayElement[][] => {\n  size = Math.max(size, 0);\n  const length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  let index = 0;\n  let resIndex = 0;\n  const result = new Array(Math.ceil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = array.slice(index, (index += size));\n  }\n\n  return result;\n};\n","import {\n  addDays,\n  addMonths,\n  areRangesOverlapping,\n  differenceInMonths,\n  eachDay,\n  endOfMonth,\n  format,\n  getISOWeek,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isWithinRange,\n  startOfMonth,\n  subDays,\n} from 'date-fns';\n\nimport { Day, Month } from '../../types';\nimport { DATE_FORMAT } from '../constants';\nimport { chunk } from './chunk';\n\nconst getFirstDayOfWeek = (firstDayOfWeekIndex: number) =>\n  (7 + firstDayOfWeekIndex) % 7 || 7;\n\nconst getLastDayOfWeek = (firstDayOfWeekIndex: number) =>\n  (firstDayOfWeekIndex + 6) % 7;\n\nconst getMonthDatesFromDate = (date: Date): Date[] =>\n  eachDay(startOfMonth(date), endOfMonth(date));\n\nconst getDatesBefore = (\n  startOfMonthDate: Date,\n  firstDayOfWeekIndex: number,\n) => {\n  const firstDayOfWeek = getFirstDayOfWeek(firstDayOfWeekIndex);\n  let beforeDates: Date[] = [];\n\n  let fromDate = startOfMonthDate;\n\n  if (fromDate.getDay() !== firstDayOfWeek) {\n    fromDate = addDays(fromDate, -(fromDate.getDay() + 7 - firstDayOfWeek) % 7);\n  }\n\n  if (isBefore(fromDate, startOfMonthDate)) {\n    beforeDates = eachDay(fromDate, subDays(startOfMonthDate, 1));\n  }\n\n  return beforeDates;\n};\n\nconst getDatesAfter = (endOfMonthDate: Date, firstDayOfWeekIndex: number) => {\n  let afterDates: Date[] = [];\n\n  const lastDayOfWeek = getLastDayOfWeek(firstDayOfWeekIndex);\n\n  let toDate = endOfMonthDate;\n\n  if (toDate.getDay() !== lastDayOfWeek) {\n    toDate = addDays(toDate, (lastDayOfWeek + 7 - toDate.getDay()) % 7);\n  }\n\n  if (isAfter(toDate, endOfMonthDate)) {\n    afterDates = eachDay(addDays(endOfMonthDate, 1), toDate);\n  }\n\n  return afterDates;\n};\n\nexport const monthPageInDates = (\n  date: Date,\n  firstDayOfWeekIndex: number,\n): Date[] => {\n  const monthDates = getMonthDatesFromDate(date);\n  const startOfMonthDate = monthDates[0];\n  const endOfMonthDate = monthDates[monthDates.length - 1];\n\n  const beforeDates = getDatesBefore(startOfMonthDate, firstDayOfWeekIndex);\n  const afterDates = getDatesAfter(endOfMonthDate, firstDayOfWeekIndex);\n\n  return beforeDates.concat(monthDates, afterDates);\n};\n\nconst chunkBySeven = <TData = any>(array: TData[]) => chunk(array, 7);\n\nexport const monthPageInWeeks = (\n  monthDate: Date,\n  firstDayOfWeekIndex: number = 1,\n) => chunkBySeven(monthPageInDates(monthDate, firstDayOfWeekIndex));\n\nconst transformDateToDay = (\n  isSelected: boolean,\n  isCurrentMonth: boolean = true,\n) => (date: Date): Day => ({\n  date,\n  isCurrentMonth,\n  isSelected,\n  isSelectedEnd: false,\n  isSelectedStart: false,\n});\n\nconst getCurrentMonthDays = (\n  monthDates: Date[],\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n) => {\n  if (!selectedStartDate) return monthDates.map(transformDateToDay(false));\n\n  const selectedStartDateIndex = monthDates.findIndex(date =>\n    isSameDay(date, selectedStartDate),\n  );\n  const isSelectedStartDateWithinMonth = selectedStartDateIndex !== -1;\n\n  const selectedEndDateIndex = selectedEndDate\n    ? monthDates.findIndex(date => isSameDay(date, selectedEndDate))\n    : selectedStartDateIndex;\n\n  const isSelectedEndDateWithinMonth = selectedEndDateIndex !== -1;\n\n  const beforeSelectedDays = isSelectedStartDateWithinMonth\n    ? monthDates.slice(0, selectedStartDateIndex).map(transformDateToDay(false))\n    : [];\n\n  const selectedDates = monthDates.slice(\n    isSelectedStartDateWithinMonth ? selectedStartDateIndex : 0,\n    isSelectedEndDateWithinMonth ? selectedEndDateIndex : monthDates.length,\n  );\n\n  const selectedDays = selectedDates.map(transformDateToDay(true));\n\n  const afterSelectedDays = isSelectedEndDateWithinMonth\n    ? monthDates.slice(selectedEndDateIndex).map(transformDateToDay(false))\n    : [];\n\n  const days = beforeSelectedDays.concat(selectedDays, afterSelectedDays);\n\n  days[selectedStartDateIndex] = {\n    ...days[selectedStartDateIndex],\n    isSelected: true,\n    isSelectedStart: true,\n  };\n\n  days[selectedEndDateIndex] = {\n    ...days[selectedEndDateIndex],\n    isSelected: true,\n    isSelectedEnd: true,\n  };\n\n  return days;\n};\n\nconst getBeforeMonthDays = (\n  startOfMonthDate: Date,\n  selectedStartDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const hasSelectedDatesBeforeMonth = !!(\n    selectedStartDate && isBefore(selectedStartDate, startOfMonthDate)\n  );\n  const beforeDates = getDatesBefore(startOfMonthDate, firstDayOfWeekIndex);\n\n  return beforeDates.map(\n    transformDateToDay(hasSelectedDatesBeforeMonth, false),\n  );\n};\n\nconst getAfterMonthDays = (\n  endOfMonthDate: Date,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const hasSelectedDatesAfterMonth = !!(\n    selectedEndDate && isAfter(selectedEndDate, endOfMonthDate)\n  );\n  const afterDates = getDatesAfter(endOfMonthDate, firstDayOfWeekIndex);\n\n  return afterDates.map(transformDateToDay(hasSelectedDatesAfterMonth, false));\n};\n\nexport const getDaysInMonth = (\n  monthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n) => {\n  const monthDates = getMonthDatesFromDate(monthDate);\n  const startOfMonthDate = monthDates[0];\n  const endOfMonthDate = monthDates[monthDates.length - 1];\n\n  const currentDays = getCurrentMonthDays(\n    monthDates,\n    selectedStartDate,\n    selectedEndDate,\n  );\n  const beforeDays = getBeforeMonthDays(\n    startOfMonthDate,\n    selectedStartDate,\n    firstDayOfWeekIndex,\n  );\n  const afterDays = getAfterMonthDays(\n    endOfMonthDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  return beforeDays.concat(currentDays, afterDays);\n};\n\nexport const getWeeksInMonth = (\n  monthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n): Month => {\n  const days = getDaysInMonth(\n    monthDate,\n    selectedStartDate,\n    selectedEndDate,\n    firstDayOfWeekIndex,\n  );\n\n  const selectedRange = `${\n    selectedStartDate ? format(selectedStartDate, DATE_FORMAT) : ''\n  }-${selectedEndDate ? format(selectedEndDate, DATE_FORMAT) : ''}`;\n\n  return {\n    formattedMonth: format(monthDate, DATE_FORMAT),\n    month: monthDate,\n    selectedRange,\n    weeks: chunkBySeven(days).map(week => ({\n      days: week,\n      index: getISOWeek(week[0].date),\n    })),\n  };\n};\n\nconst getMonthsDates = (startDate: Date, endDate: Date) => {\n  const monthsCount = differenceInMonths(endDate, startDate);\n\n  const monthsDates: Date[] = [];\n\n  for (let index = 0; index < monthsCount; index++) {\n    monthsDates.push(addMonths(startDate, index));\n  }\n\n  return monthsDates;\n};\n\nexport const getWeeksInMultiMonth = (\n  startMonthDate: Date,\n  endMonthDate: Date,\n  selectedStartDate: Date | null,\n  selectedEndDate: Date | null,\n  firstDayOfWeekIndex: number = 1,\n): Month[] => {\n  const monthsDates = getMonthsDates(startMonthDate, endMonthDate);\n\n  return monthsDates.map(monthDate => {\n    if (!selectedStartDate) {\n      return getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n    }\n\n    const startOfMonthDate = startOfMonth(monthDate);\n    const endOfMonthDate = endOfMonth(monthDate);\n\n    if (!selectedEndDate) {\n      const isSelectedStartDateWithinMonth = isWithinRange(\n        selectedStartDate,\n        startOfMonthDate,\n        endOfMonthDate,\n      );\n\n      return isSelectedStartDateWithinMonth\n        ? getWeeksInMonth(\n            monthDate,\n            selectedStartDate,\n            null,\n            firstDayOfWeekIndex,\n          )\n        : getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n    }\n\n    const isMonthOverlappingWithSelectedRange =\n      areRangesOverlapping(\n        startOfMonthDate,\n        endOfMonthDate,\n        selectedStartDate,\n        selectedEndDate,\n      ) || isSameDay(selectedEndDate, startOfMonthDate);\n\n    return isMonthOverlappingWithSelectedRange\n      ? getWeeksInMonth(\n          monthDate,\n          selectedStartDate,\n          selectedEndDate,\n          firstDayOfWeekIndex,\n        )\n      : getWeeksInMonth(monthDate, null, null, firstDayOfWeekIndex);\n  });\n};\n","export const DAY_DATE_FORMAT = 'YYYY-MM-DD';\nexport const TOTAL_MINUTES_IN_DAY = 24 * 60;\nexport const DEFAULT_FIRST_DAY_OF_WEEK = 1;\n","export {\n  default as MonthCalendar,\n  MonthCalendarProps,\n} from './Month/MonthCalendar';\nexport {\n  default as MultiMonthCalendar,\n  MultiMonthCalendarProps,\n} from './Month/MultiMonthCalendar';\ntry {\n    // @ts-ignore\n    Calendars.displayName = \"Calendars\";\n    // @ts-ignore\n    Calendars.__docgenInfo = { \"description\": \"\", \"displayName\": \"Calendars\", \"props\": { \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Calendars/index.ts#Calendars\"] = { docgenInfo: Calendars.__docgenInfo, name: \"Calendars\", path: \"src/components/Calendars/index.ts#Calendars\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { isBefore } from 'date-fns';\n\nexport const marshalTimeRange = (\n  startDate: Date | null = null,\n  endDate: Date | null = null,\n): [Date | null, Date | null] => {\n  if (endDate && startDate && isBefore(endDate, startDate)) {\n    console.error('Selected end date cannot be before selected start date');\n    return [null, null];\n  }\n\n  if (endDate && !startDate) {\n    console.error('Selected end date cannot exist without selected start date');\n    return [null, null];\n  }\n\n  return [startDate, endDate];\n};\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { CheckboxShape } from './Checkbox';\n\nexport interface ShapeStyle {\n  circle: ViewStyle;\n  square: ViewStyle;\n}\n\nexport interface CheckboxVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  checked: ViewStyle;\n  checkedFocus: ViewStyle;\n  uncheckedFocus: ViewStyle;\n  shape: ShapeStyle;\n}\n\nexport const getCheckboxVariables = (theme: Theme): CheckboxVariables => {\n  return {\n    base: {\n      backgroundColor: theme.colors.background.plain,\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n      height: 32,\n      width: 32,\n    },\n    checked: {\n      backgroundColor: theme.colors.background.primary.default,\n      borderColor: 'transparent',\n    },\n    checkedFocus: {\n      backgroundColor: theme.colors.background.primary.focus,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n      borderColor: theme.colors.border.default,\n    },\n    shape: {\n      circle: {\n        borderRadius: 999,\n      },\n      square: {\n        borderRadius: theme.controlBorderRadius.small,\n      },\n    },\n    uncheckedFocus: {\n      backgroundColor: theme.colors.background.tint1,\n    },\n  };\n};\n\nexport interface CheckboxStylesProps {\n  isChecked: boolean;\n  isDisabled: boolean;\n  shape: CheckboxShape;\n}\n\nexport interface CheckboxStyles {\n  checkboxStyle: ViewStyle;\n  checkboxFocusBackgroundColor?: string;\n}\n\nexport type GetCheckboxStyles = (\n  checkboxStylesProps: CheckboxStylesProps,\n  theme: Theme,\n) => CheckboxStyles;\n\nexport const getCheckboxStyles: GetCheckboxStyles = (\n  { isChecked, isDisabled, shape },\n  theme,\n) => {\n  const checkboxVariables = getCheckboxVariables(theme);\n\n  return {\n    checkboxFocusBackgroundColor: isChecked\n      ? checkboxVariables.checkedFocus.backgroundColor\n      : checkboxVariables.uncheckedFocus.backgroundColor,\n    checkboxStyle: {\n      ...checkboxVariables.base,\n      ...(isChecked ? checkboxVariables.checked : {}),\n      ...(isDisabled ? checkboxVariables.disabled : {}),\n      ...checkboxVariables.shape[shape],\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getCheckboxVariables.displayName = \"getCheckboxVariables\";\n    // @ts-ignore\n    getCheckboxVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getCheckboxVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.styles.ts#getCheckboxVariables\"] = { docgenInfo: getCheckboxVariables.__docgenInfo, name: \"getCheckboxVariables\", path: \"src/components/Checkbox/Checkbox.styles.ts#getCheckboxVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  CheckboxStyles,\n  GetCheckboxStyles,\n  getCheckboxStyles,\n} from './Checkbox.styles';\n\nexport type CheckboxShape = 'circle' | 'square';\n\nexport interface CheckboxProps extends AccessibilityProps {\n  theme: Theme;\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  /** Sometimes we just want the display of the checkbox  */\n  isInteractive?: boolean;\n  checkedIcon?: React.ReactNode;\n  /** @default square */\n  shape?: CheckboxShape;\n  onChange?: (e: GestureResponderEvent) => void | undefined;\n  getStyles?: ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>;\n  testID?: string;\n}\n\nconst CheckboxBase = (props: CheckboxProps) => {\n  const {\n    isChecked = false,\n    isDisabled = false,\n    isInteractive = true,\n    checkedIcon,\n    onChange = () => null,\n    shape = 'square',\n    theme,\n    getStyles,\n    testID,\n    ...accessibilityProps\n  } = props;\n\n  const { checkboxStyle, checkboxFocusBackgroundColor } = mergeStyles(\n    getCheckboxStyles,\n    getStyles,\n  )({ isChecked, isDisabled, shape }, theme);\n\n  return (\n    <TouchableHighlight\n      accessible\n      style={checkboxStyle}\n      underlayColor={checkboxFocusBackgroundColor}\n      {...(isInteractive\n        ? {\n            disabled: isDisabled,\n            onPress: onChange,\n          }\n        : {\n            disabled: true,\n          })}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          display: 'flex',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {isChecked\n          ? checkedIcon || (\n              <Icon name=\"check\" size={20} color={theme.colors.text.plain} />\n            )\n          : null}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport const Checkbox = withTheme(CheckboxBase);\nexport default Checkbox;\ntry {\n    // @ts-ignore\n    Checkbox.displayName = \"Checkbox\";\n    // @ts-ignore\n    Checkbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"Checkbox\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInteractive\": { \"defaultValue\": null, \"description\": \"Sometimes we just want the display of the checkbox\", \"name\": \"isInteractive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"CheckboxShape\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#Checkbox\"] = { docgenInfo: Checkbox.__docgenInfo, name: \"Checkbox\", path: \"src/components/Checkbox/Checkbox.tsx#Checkbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInteractive\": { \"defaultValue\": null, \"description\": \"Sometimes we just want the display of the checkbox\", \"name\": \"isInteractive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"CheckboxShape\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/Checkbox.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/Checkbox.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { TextColor, TextSize } from '../../theme/ThemeInterface';\nimport Checkbox, { CheckboxProps } from '../Checkbox/Checkbox';\nimport { Box, Spacing } from '../Layout';\nimport { Text } from '../Typography';\n\nexport interface LabeledCheckboxProps extends CheckboxProps {\n  label?: string;\n  position?: 'left' | 'right';\n  color?: TextColor;\n  size?: TextSize;\n}\n\nconst LabeledCheckboxBase = (props: LabeledCheckboxProps) => {\n  const { label, position = 'right', color, size, ...restProps } = props;\n\n  if (!label) {\n    return <Checkbox {...restProps} />;\n  }\n\n  return (\n    <Box flexDirection=\"row\" alignItems=\"center\">\n      {position === 'left' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n      <Spacing paddingHorizontal={1}>\n        <Checkbox {...restProps} />\n      </Spacing>\n      {position === 'right' && (\n        <Text size={size} color={color}>\n          {label}\n        </Text>\n      )}\n    </Box>\n  );\n};\n\nexport const LabeledCheckbox = withTheme(LabeledCheckboxBase);\nexport default LabeledCheckbox;\ntry {\n    // @ts-ignore\n    LabeledCheckbox.displayName = \"LabeledCheckbox\";\n    // @ts-ignore\n    LabeledCheckbox.__docgenInfo = { \"description\": \"\", \"displayName\": \"LabeledCheckbox\", \"props\": { \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"dark\\\" | \\\"default\\\" | \\\"muted\\\" | \\\"plain\\\" | \\\"selected\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInteractive\": { \"defaultValue\": null, \"description\": \"Sometimes we just want the display of the checkbox\", \"name\": \"isInteractive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"CheckboxShape\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"selected\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/LabeledCheckbox.tsx#LabeledCheckbox\"] = { docgenInfo: LabeledCheckbox.__docgenInfo, name: \"LabeledCheckbox\", path: \"src/components/Checkbox/LabeledCheckbox.tsx#LabeledCheckbox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"dark\\\" | \\\"default\\\" | \\\"muted\\\" | \\\"plain\\\" | \\\"selected\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInteractive\": { \"defaultValue\": null, \"description\": \"Sometimes we just want the display of the checkbox\", \"name\": \"isInteractive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"CheckboxShape\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"selected\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/LabeledCheckbox.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/LabeledCheckbox.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Checkbox, CheckboxProps } from './Checkbox';\nexport {\n  default as LabeledCheckbox,\n  LabeledCheckboxProps,\n} from './LabeledCheckbox';\ntry {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"isChecked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isChecked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInteractive\": { \"defaultValue\": null, \"description\": \"Sometimes we just want the display of the checkbox\", \"name\": \"isInteractive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"checkedIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checkedIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"shape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"shape\", \"required\": false, \"type\": { \"name\": \"CheckboxShape\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetCheckboxStyles, DeepPartial<CheckboxStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"selected\\\" | \\\"dark\\\" | \\\"default\\\" | \\\"muted\\\" | \\\"plain\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Checkbox/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Checkbox/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { Theme, withTheme } from '../../theme';\nimport { Button } from '../Button';\nimport { ButtonColor } from '../Button/Button.styles';\nimport { Spacing } from '../Layout';\nimport { Heading } from '../Typography';\nimport Dialog, { DialogProps } from './Dialog';\n\nexport interface ConfirmDialogProps\n  extends DialogProps,\n    ConfirmDialogHeaderProps,\n    ConfirmDialogFooterProps {}\n\nexport interface ConfirmDialogHeaderProps {\n  /** Title displayed in the header */\n  title?: string;\n  onRequestClose?: () => void;\n  theme: Theme;\n}\n\nconst ConfirmDialogHeader = ({\n  title,\n  theme,\n  onRequestClose,\n}: ConfirmDialogHeaderProps) => (\n  <Spacing\n    padding={2}\n    flexDirection=\"row\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\n    <Heading>{title}</Heading>\n    <TouchableOpacity onPress={onRequestClose}>\n      <Icon name=\"x\" size={24} color={theme.colors.text.default} />\n    </TouchableOpacity>\n  </Spacing>\n);\n\nexport interface ConfirmDialogFooterProps {\n  color?: ButtonColor;\n  /** Label for cancel button */\n  cancelLabel?: string;\n  /** Label for confirm button */\n  confirmLabel?: string;\n  /** Handler for confirm button */\n  onConfirm?: () => void;\n  /** Handler for cancel button */\n  onRequestClose?: () => void;\n}\n\nconst ConfirmDialogFooter = ({\n  color = 'primary',\n  onRequestClose,\n  onConfirm,\n  cancelLabel,\n  confirmLabel,\n}: ConfirmDialogFooterProps) => (\n  <Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n    <Button appearance=\"minimal\" onPress={onRequestClose} title={cancelLabel} />\n    <Spacing paddingLeft={2}>\n      <Button color={color} onPress={onConfirm} title={confirmLabel} />\n    </Spacing>\n  </Spacing>\n);\n\nconst ConfirmDialogBase = (props: ConfirmDialogProps) => {\n  const {\n    cancelLabel = 'Cancel',\n    children,\n    confirmLabel = 'Confirm',\n    footer,\n    header,\n    onRequestClose,\n    onConfirm,\n    title,\n    theme,\n    ...dialogProps\n  } = props;\n\n  return (\n    <Dialog\n      header={\n        header === null\n          ? null\n          : header || (\n              <ConfirmDialogHeader\n                theme={theme}\n                onRequestClose={onRequestClose}\n                title={title}\n              />\n            )\n      }\n      footer={\n        footer === null\n          ? null\n          : footer || (\n              <ConfirmDialogFooter\n                onRequestClose={onRequestClose}\n                onConfirm={onConfirm}\n                cancelLabel={cancelLabel}\n                confirmLabel={confirmLabel}\n              />\n            )\n      }\n      onRequestClose={onRequestClose}\n      {...dialogProps}\n    >\n      <Spacing padding={2}>{children}</Spacing>\n    </Dialog>\n  );\n};\n\nexport const ConfirmDialog = withTheme(ConfirmDialogBase);\nexport default ConfirmDialog;\ntry {\n    // @ts-ignore\n    ConfirmDialog.displayName = \"ConfirmDialog\";\n    // @ts-ignore\n    ConfirmDialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"ConfirmDialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/ConfirmDialog.tsx#ConfirmDialog\"] = { docgenInfo: ConfirmDialog.__docgenInfo, name: \"ConfirmDialog\", path: \"src/components/Dialog/ConfirmDialog.tsx#ConfirmDialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/ConfirmDialog.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Dialog/ConfirmDialog.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDialogVariables.displayName = \"getDialogVariables\";\n    // @ts-ignore\n    getDialogVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogVariables\"] = { docgenInfo: getDialogVariables.__docgenInfo, name: \"getDialogVariables\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDialogStyles.displayName = \"getDialogStyles\";\n    // @ts-ignore\n    getDialogStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogStyles\"] = { docgenInfo: getDialogStyles.__docgenInfo, name: \"getDialogStyles\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nconst DialogBase = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\n\nexport const Dialog = DialogBase;\n\nexport default Dialog;\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/Dialog.tsx#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Dialog, DialogProps } from './Dialog';\nexport { default as ConfirmDialog, ConfirmDialogProps } from './ConfirmDialog';\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/index.ts#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/index.ts#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } }, \"title\": { \"defaultValue\": null, \"description\": \"Title displayed in the header\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"cancelLabel\": { \"defaultValue\": null, \"description\": \"Label for cancel button\", \"name\": \"cancelLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"confirmLabel\": { \"defaultValue\": null, \"description\": \"Label for confirm button\", \"name\": \"confirmLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onConfirm\": { \"defaultValue\": null, \"description\": \"Handler for confirm button\", \"name\": \"onConfirm\", \"required\": false, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/Dialog/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DividerStyles {\n  dividerStyle: TextStyle;\n}\n\nexport type DividerPosition = 'horizontal' | 'vertical';\n\nexport interface DividerStylesProps {\n  size?: number;\n  color?: string;\n  position?: DividerPosition;\n}\n\nexport type GetDividerStyles = (\n  dividerStylesProps: DividerStylesProps,\n  theme: Theme,\n) => DividerStyles;\n\nexport const getDividerStyles: GetDividerStyles = (\n  { size, color, position },\n  theme,\n) => {\n  const styleMap = {\n    horizontal: {\n      backgroundColor: color || theme.colors.border.default,\n      height: size || 1,\n      width: '100%',\n    },\n    vertical: {\n      backgroundColor: color || theme.colors.border.default,\n      height: '100%',\n      width: size || 1,\n    },\n  };\n\n  return {\n    dividerStyle: position ? styleMap[position] : styleMap.horizontal,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  DividerPosition,\n  DividerStyles,\n  GetDividerStyles,\n  getDividerStyles,\n} from './Divider.styles';\n\nexport interface DividerProps {\n  size?: number;\n  color?: string;\n  position?: DividerPosition;\n  getStyles?: ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>;\n}\n\nconst DividerBase = (props: DividerProps) => {\n  const { size, color, position = 'horizontal', getStyles } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { dividerStyle } = mergeStyles(getDividerStyles, getStyles)(\n    { size, color, position },\n    theme,\n  );\n\n  return <View style={dividerStyle} />;\n};\n\nexport const Divider = DividerBase;\n\nexport default Divider;\ntry {\n    // @ts-ignore\n    Divider.displayName = \"Divider\";\n    // @ts-ignore\n    Divider.__docgenInfo = { \"description\": \"\", \"displayName\": \"Divider\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"DividerPosition\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Divider/Divider.tsx#Divider\"] = { docgenInfo: Divider.__docgenInfo, name: \"Divider\", path: \"src/components/Divider/Divider.tsx#Divider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Divider, DividerProps } from './Divider';\ntry {\n    // @ts-ignore\n    Divider.displayName = \"Divider\";\n    // @ts-ignore\n    Divider.__docgenInfo = { \"description\": \"\", \"displayName\": \"Divider\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"position\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"position\", \"required\": false, \"type\": { \"name\": \"DividerPosition\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDividerStyles, DeepPartial<DividerStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Divider/index.ts#Divider\"] = { docgenInfo: Divider.__docgenInfo, name: \"Divider\", path: \"src/components/Divider/index.ts#Divider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { FormProps } from './Form';\n\n// On the web <form> enables native behavior such as `Enter` to submit\nconst Form = ({ children, onSubmit }: FormProps) => (\n  <form onSubmit={onSubmit}>{children}</form>\n);\n\nexport default Form;\ntry {\n    // @ts-ignore\n    Formweb.displayName = \"Formweb\";\n    // @ts-ignore\n    Formweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Formweb\", \"props\": { \"onSubmit\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSubmit\", \"required\": true, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form/Form.web.tsx#Formweb\"] = { docgenInfo: Formweb.__docgenInfo, name: \"Formweb\", path: \"src/components/Form/Form.web.tsx#Formweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Box } from '../Layout';\nimport { Label, Text } from '../Typography';\n\nexport interface FormFieldProps {\n  error?: string | null;\n  label?: string | null;\n  description?: string | null;\n  children?: React.ReactNode;\n}\n\nconst FormField = (props: FormFieldProps) => {\n  const { label, error, children, description, ...passThroughProps } = props;\n\n  return (\n    <Box>\n      {label && (\n        <Box marginBottom={4}>\n          <Label>{label}</Label>\n        </Box>\n      )}\n      <Box marginBottom={4}>\n        {/*\n        // @ts-ignore: TODO: Find right way to type this */}\n        {React.cloneElement(children, passThroughProps)}\n      </Box>\n      {error && (\n        <Box marginBottom={4}>\n          <Text color=\"danger\">{error}</Text>\n        </Box>\n      )}\n      {description && <Text>{description}</Text>}\n    </Box>\n  );\n};\n\nexport default FormField;\ntry {\n    // @ts-ignore\n    FormField.displayName = \"FormField\";\n    // @ts-ignore\n    FormField.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormField\", \"props\": { \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form/FormField.tsx#FormField\"] = { docgenInfo: FormField.__docgenInfo, name: \"FormField\", path: \"src/components/Form/FormField.tsx#FormField\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as FormField, FormFieldProps } from './FormField';\nexport { default as Form, FormProps } from './Form';\ntry {\n    // @ts-ignore\n    Form.displayName = \"Form\";\n    // @ts-ignore\n    Form.__docgenInfo = { \"description\": \"\", \"displayName\": \"Form\", \"props\": { \"onSubmit\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSubmit\", \"required\": true, \"type\": { \"name\": \"() => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form/index.ts#Form\"] = { docgenInfo: Form.__docgenInfo, name: \"Form\", path: \"src/components/Form/index.ts#Form\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\nimport { getTextVariables } from '../Typography/Text.styles';\n\nexport type SizeStyles = ViewStyle & {\n  fontSize: number;\n};\n\nexport interface ListItemSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport interface TextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type ListItemSize = keyof ListItemSizes;\n\nexport interface ListItemVariables {\n  wrapper: ViewStyle;\n  base: ViewStyle;\n  disabled: ViewStyle;\n  selected: ViewStyle;\n  focusBackgroundColor: string;\n  sizes: ListItemSizes;\n  textSizes: TextSizes;\n}\n\nexport const getListItemVariables = (theme: Theme): ListItemVariables => {\n  const textSizes = getTextVariables(theme);\n\n  return {\n    base: {\n      backgroundColor: theme.colors.background.plain,\n      borderBottomWidth: 1,\n      borderColor: theme.colors.border.default,\n      justifyContent: 'center',\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n    },\n    focusBackgroundColor: theme.colors.background.tint1,\n    selected: {},\n    sizes: {\n      small: {\n        fontSize: theme.textSizes.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n    textSizes: textSizes.size,\n    wrapper: {\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  };\n};\n\nexport interface ListItemStyles {\n  imageWrapperStyle: ViewStyle;\n  wrapperStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  leftWrapperStyle: ViewStyle;\n  textWrapperStyle: ViewStyle;\n  focusBackgroundColor: string;\n  textStyle: TextStyle;\n}\n\nexport interface ListItemStylesProps {\n  size: ListItemSize;\n  isDisabled: boolean;\n  isSelected: boolean;\n}\n\nexport type GetListItemStyles = (\n  selectListStylesProps: ListItemStylesProps,\n  theme: Theme,\n) => ListItemStyles;\n\nexport const getListItemStyles: GetListItemStyles = (\n  { size, isDisabled, isSelected },\n  theme,\n) => {\n  const selectListVariables = getListItemVariables(theme);\n  const {\n    base,\n    disabled,\n    selected,\n    focusBackgroundColor,\n    sizes,\n    textSizes,\n  } = selectListVariables;\n\n  const { fontSize, ...sizeStyles } = sizes[size];\n\n  return {\n    containerStyle: {\n      ...base,\n      ...sizeStyles,\n      ...(isSelected ? selected : {}),\n      ...(isDisabled ? disabled : {}),\n    },\n    focusBackgroundColor,\n    imageWrapperStyle: {\n      marginRight: 8,\n    },\n    leftWrapperStyle: {\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n    textStyle: textSizes[size],\n    textWrapperStyle: {\n      height: '100%',\n    },\n    wrapperStyle: selectListVariables.wrapper,\n  };\n};\ntry {\n    // @ts-ignore\n    getListItemVariables.displayName = \"getListItemVariables\";\n    // @ts-ignore\n    getListItemVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getListItemVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.styles.ts#getListItemVariables\"] = { docgenInfo: getListItemVariables.__docgenInfo, name: \"getListItemVariables\", path: \"src/components/ListItem/ListItem.styles.ts#getListItemVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { AvatarProps } from '../Avatar';\nimport { Text } from '../Typography';\nimport {\n  GetListItemStyles,\n  getListItemStyles,\n  ListItemSize,\n  ListItemStyles,\n} from './ListItem.styles';\n\nexport interface ListItemProps extends AccessibilityProps {\n  size?: ListItemSize;\n  isDisabled?: boolean;\n  label: string;\n  description?: string;\n  avatarProps?: AvatarProps;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  getStyles?: ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>;\n  testID?: string;\n}\n\nconst ListItem = (props: ListItemProps) => {\n  const {\n    getStyles,\n    isDisabled = false,\n    label,\n    description,\n    size = 'medium',\n    onPress,\n    rightIcon = null,\n    leftIcon,\n    testID,\n    ...accessibilityProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const {\n    imageWrapperStyle,\n    leftWrapperStyle,\n    textWrapperStyle,\n    containerStyle,\n    textStyle,\n    focusBackgroundColor,\n    wrapperStyle,\n  } = mergeStyles(getListItemStyles, getStyles)({ size, isDisabled }, theme);\n\n  return (\n    <TouchableHighlight\n      disabled={isDisabled}\n      underlayColor={focusBackgroundColor}\n      style={containerStyle}\n      testID={testID}\n      onPress={onPress}\n      {...accessibilityProps}\n    >\n      <View style={wrapperStyle}>\n        <View style={leftWrapperStyle}>\n          <View style={imageWrapperStyle}>{leftIcon}</View>\n          <View style={textWrapperStyle}>\n            <Text getStyles={() => ({ textStyle })}>{label}</Text>\n            <Text size=\"small\">{description}</Text>\n          </View>\n        </View>\n        {rightIcon}\n      </View>\n    </TouchableHighlight>\n  );\n};\n\nexport default ListItem;\ntry {\n    // @ts-ignore\n    ListItem.displayName = \"ListItem\";\n    // @ts-ignore\n    ListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/ListItem.tsx#ListItem\"] = { docgenInfo: ListItem.__docgenInfo, name: \"ListItem\", path: \"src/components/ListItem/ListItem.tsx#ListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as ListItem, ListItemProps } from './ListItem';\ntry {\n    // @ts-ignore\n    ListItem.displayName = \"ListItem\";\n    // @ts-ignore\n    ListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"ListItem\", \"props\": { \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ListItem/index.ts#ListItem\"] = { docgenInfo: ListItem.__docgenInfo, name: \"ListItem\", path: \"src/components/ListItem/index.ts#ListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport { Box } from '../Layout';\nimport ModalContent from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nconst CloseableModalBase = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport const CloseableModal = CloseableModalBase;\n\nexport default CloseableModal;\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"useHistory\": { \"defaultValue\": null, \"description\": \"(Web) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport CloseableModal, { CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nconst FormModalBase = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n\nexport const FormModal = FormModalBase;\n\nexport default FormModal;\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"useHistory\": { \"defaultValue\": null, \"description\": \"(Web) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport ModalBase from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModal extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport default ({ useHistory = false, ...props }: HistoryModalProps) => {\n  if (useHistory) return <HistoryModal {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModalweb.displayName = \"HistoryModalweb\";\n    // @ts-ignore\n    HistoryModalweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModalweb\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"(Web) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\"] = { docgenInfo: HistoryModalweb.__docgenInfo, name: \"HistoryModalweb\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModalweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as HistoryModal, HistoryModalProps } from './HistoryModal';\ntry {\n    // @ts-ignore\n    Modal.displayName = \"Modal\";\n    // @ts-ignore\n    Modal.__docgenInfo = { \"description\": \"\", \"displayName\": \"Modal\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"(Web) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/Modal.tsx#Modal\"] = { docgenInfo: Modal.__docgenInfo, name: \"Modal\", path: \"src/components/Modal/Modal.tsx#Modal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nclass ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n\nexport default ModalBase;\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": { \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nconst ModalContentBase = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport const ModalContent = ModalContentBase;\n\nexport default ModalContent;\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\nexport { default as ModalBase, ModalBaseProps } from './ModalBase';\nexport { default as HistoryModal, HistoryModalProps } from './HistoryModal';\nexport { default as FormModal, FormModalProps } from './FormModal';\nexport {\n  default as CloseableModal,\n  CloseableModalProps,\n} from './CloseableModal';\ntry {\n    // @ts-ignore\n    Modal.displayName = \"Modal\";\n    // @ts-ignore\n    Modal.__docgenInfo = { \"description\": \"\", \"displayName\": \"Modal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"useHistory\": { \"defaultValue\": null, \"description\": \"(Web) In order to mimic similar behavior to Android's back button to close the modal on mobile web, HistoryModal will use hash or query string to determine whether it is opened or not. @default false\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isBackgroundScrollable\": { \"defaultValue\": null, \"description\": \"(Web) Whether should scroll when user initiates non-touch scroll (mouse wheel, keyboard down/up)\", \"name\": \"isBackgroundScrollable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animated\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"animationType\": { \"defaultValue\": null, \"description\": \"The `animationType` prop controls how the modal animates.\\n\\n- `slide` slides in from the bottom\\n- `fade` fades into view\\n- `none` appears without an animation\", \"name\": \"animationType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"slide\\\" | \\\"fade\\\"\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"The `transparent` prop determines whether your modal will fill the entire view.\\nSetting this to `true` will render the modal over a transparent background.\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"visible\": { \"defaultValue\": null, \"description\": \"The `visible` prop determines whether your modal is visible.\", \"name\": \"visible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"The `onRequestClose` prop allows passing a function that will be called once the modal has been dismissed.\\n_On the Android platform, this is a required function._\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onShow\": { \"defaultValue\": null, \"description\": \"The `onShow` prop allows passing a function that will be called once the modal has been shown.\", \"name\": \"onShow\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"presentationStyle\": { \"defaultValue\": null, \"description\": \"The `presentationStyle` determines the style of modal to show\", \"name\": \"presentationStyle\", \"required\": false, \"type\": { \"name\": \"\\\"fullScreen\\\" | \\\"pageSheet\\\" | \\\"formSheet\\\" | \\\"overFullScreen\\\"\" } }, \"supportedOrientations\": { \"defaultValue\": null, \"description\": \"The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\\nOn iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\", \"name\": \"supportedOrientations\", \"required\": false, \"type\": { \"name\": \"(\\\"portrait\\\" | \\\"portrait-upside-down\\\" | \\\"landscape\\\" | \\\"landscape-left\\\" | \\\"landscape-right\\\")[]\" } }, \"onDismiss\": { \"defaultValue\": null, \"description\": \"The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\", \"name\": \"onDismiss\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onOrientationChange\": { \"defaultValue\": null, \"description\": \"The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\\nThe orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\", \"name\": \"onOrientationChange\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<any>) => void\" } }, \"hardwareAccelerated\": { \"defaultValue\": null, \"description\": \"Controls whether to force hardware acceleration for the underlying window.\", \"name\": \"hardwareAccelerated\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/index.ts#Modal\"] = { docgenInfo: Modal.__docgenInfo, name: \"Modal\", path: \"src/components/Modal/index.ts#Modal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getOverlayVariables.displayName = \"getOverlayVariables\";\n    // @ts-ignore\n    getOverlayVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getOverlayVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\"] = { docgenInfo: getOverlayVariables.__docgenInfo, name: \"getOverlayVariables\", path: \"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme, withTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  theme: Theme;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nconst OverlayBase = (props: OverlayProps) => {\n  const { onPress, transparent = false, theme, getStyles } = props;\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport const Overlay = withTheme(OverlayBase);\ntry {\n    // @ts-ignore\n    Overlay.displayName = \"Overlay\";\n    // @ts-ignore\n    Overlay.__docgenInfo = { \"description\": \"\", \"displayName\": \"Overlay\", \"props\": { \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.tsx#Overlay\"] = { docgenInfo: Overlay.__docgenInfo, name: \"Overlay\", path: \"src/components/Overlay/Overlay.tsx#Overlay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Overlay';\ntry {\n    // @ts-ignore\n    Overlay.displayName = \"Overlay\";\n    // @ts-ignore\n    Overlay.__docgenInfo = { \"description\": \"\", \"displayName\": \"Overlay\", \"props\": { \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/index.ts#Overlay\"] = { docgenInfo: Overlay.__docgenInfo, name: \"Overlay\", path: \"src/components/Overlay/index.ts#Overlay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { ModalMultiMonthCalendarSelect } from '../Calendars/Month';\nimport {\n  defaultSetText,\n  ModalMultiMonthCalendarSelectProps,\n  SetText,\n} from '../Calendars/Month/ModalMultiMonthCalendarSelect';\nimport PickerButton, { GetPickerButtonStylesProp } from './PickerButton';\nimport { PickerButtonSize } from './PickerButton.styles';\n\nexport interface CalendarDatePickerProps\n  extends ModalMultiMonthCalendarSelectProps {\n  setText?: SetText;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n}\n\nconst CalendarDatePickerBase = (props: CalendarDatePickerProps) => {\n  const {\n    getStyles,\n    useHistory = false,\n    selectedStartDate = null,\n    selectedEndDate = null,\n    onValueChange,\n    useRange = false,\n    setText = defaultSetText,\n    size = 'medium',\n  } = props;\n\n  const text = setText(selectedStartDate, selectedEndDate);\n\n  return (\n    <>\n      <ModalMultiMonthCalendarSelect\n        useHistory={useHistory}\n        selectedStartDate={selectedStartDate}\n        selectedEndDate={selectedEndDate}\n        onValueChange={onValueChange}\n        useRange={useRange}\n        text={text}\n        setText={setText}\n      >\n        {({ openModal }) => (\n          <PickerButton\n            onPress={openModal}\n            getStyles={getStyles}\n            size={size}\n            title={text.title}\n          />\n        )}\n      </ModalMultiMonthCalendarSelect>\n    </>\n  );\n};\n\nexport const CalendarDatePicker = CalendarDatePickerBase;\n\nexport default CalendarDatePicker;\ntry {\n    // @ts-ignore\n    CalendarDatePicker.displayName = \"CalendarDatePicker\";\n    // @ts-ignore\n    CalendarDatePicker.__docgenInfo = { \"description\": \"\", \"displayName\": \"CalendarDatePicker\", \"props\": { \"setText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setText\", \"required\": false, \"type\": { \"name\": \"SetText\" } }, \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Label displayed when showing country selection\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"useRange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"useRange\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(selectedStartDate: Date, selectedEndDate: Date) => void\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"MultiMonthCalendarSelectText\" } }, \"showMoreText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showMoreText\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"initialStartMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialStartMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"initialEndMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"initialEndMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"startMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"startMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"endMonthDate\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"endMonthDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedStartDate\": { \"defaultValue\": null, \"description\": \"Highlights the date or start date on the calendar\", \"name\": \"selectedStartDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"selectedEndDate\": { \"defaultValue\": null, \"description\": \"Highlights the end date on the calendar. Will created a selected range\", \"name\": \"selectedEndDate\", \"required\": false, \"type\": { \"name\": \"Date\" } }, \"firstDayOfWeekIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"firstDayOfWeekIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(date: Date) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/CalendarDatePicker.tsx#CalendarDatePicker\"] = { docgenInfo: CalendarDatePicker.__docgenInfo, name: \"CalendarDatePicker\", path: \"src/components/Pickers/CalendarDatePicker.tsx#CalendarDatePicker\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { PickerProps as RNPickerProps } from 'react-native';\n\nimport { Dialog } from '../Dialog';\nimport { SelectList, SelectListItemBaseProps } from '../SelectList';\nimport PickerButton, { GetPickerButtonStylesProp } from './PickerButton';\nimport { PickerButtonSize } from './PickerButton.styles';\n\nexport interface DialogPickerProps extends RNPickerProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  /** Prop to be passed to Dialog */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactNode;\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n}\n\nconst SELECTED_INDEX_OFFSET = 3;\n\nconst DialogPickerBase = (props: DialogPickerProps) => {\n  const {\n    header,\n    getStyles,\n    useHistory = false,\n    selectedValue = null,\n    onValueChange,\n    children,\n    size = 'medium',\n  } = props;\n  const [isDialogOpen, setIsDialogOpen] = React.useState(false);\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n  const selectedIndex = data.findIndex(d => d.value === selectedValue);\n  const selectedData = selectedIndex >= 0 ? data[selectedIndex] : null;\n  const selectedLabel = selectedData ? selectedData.label : null;\n\n  return (\n    <>\n      <PickerButton\n        onPress={() => setIsDialogOpen(true)}\n        getStyles={getStyles}\n        size={size}\n        title={selectedLabel}\n      />\n      <Dialog\n        header={header}\n        isVisible={isDialogOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsDialogOpen(false)}\n      >\n        <SelectList\n          initialScrollIndex={selectedIndex - SELECTED_INDEX_OFFSET}\n          selectedValue={selectedValue}\n          onValueChange={(value, index) => {\n            if (onValueChange) onValueChange(value, index);\n            setIsDialogOpen(false);\n          }}\n        >\n          {children}\n        </SelectList>\n      </Dialog>\n    </>\n  );\n};\n\nexport const DialogPicker = DialogPickerBase;\n\nexport default DialogPicker;\ntry {\n    // @ts-ignore\n    DialogPicker.displayName = \"DialogPicker\";\n    // @ts-ignore\n    DialogPicker.__docgenInfo = { \"description\": \"\", \"displayName\": \"DialogPicker\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Dialog\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"header\": { \"defaultValue\": null, \"description\": \"Label displayed when showing country selection\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"Callback for when an item is selected. This is called with the\\nfollowing parameters:\\n- itemValue: the value prop of the item that was selected\\n- itemPosition: the index of the selected item in this picker\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(itemValue: any, itemPosition: number) => void\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"Value matching value of one of the items.\\nCan be a string or an integer.\", \"name\": \"selectedValue\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"testId\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testId\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"itemStyle\": { \"defaultValue\": null, \"description\": \"Style to apply to each of the item labels.\\n@platform ios\", \"name\": \"itemStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"box-none\\\" | \\\"none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"enabled\": { \"defaultValue\": null, \"description\": \"If set to false, the picker will be disabled, i.e. the user will not be able to make a\\nselection.\\n@platform android\", \"name\": \"enabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"mode\": { \"defaultValue\": null, \"description\": \"On Android, specifies how to display the selection items when the user taps on the picker:\\n\\n   - 'dialog': Show a modal dialog. This is the default.\\n   - 'dropdown': Shows a dropdown anchored to the picker view\\n@platform android\", \"name\": \"mode\", \"required\": false, \"type\": { \"name\": \"\\\"dialog\\\" | \\\"dropdown\\\"\" } }, \"prompt\": { \"defaultValue\": null, \"description\": \"Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\\n@platform android\", \"name\": \"prompt\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/DialogPicker.tsx#DialogPicker\"] = { docgenInfo: DialogPicker.__docgenInfo, name: \"DialogPicker\", path: \"src/components/Pickers/DialogPicker.tsx#DialogPicker\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { PickerProps as RNPickerProps } from 'react-native';\n\nimport { CloseableModal } from '../Modal';\nimport { SelectList, SelectListItemBaseProps } from '../SelectList';\nimport PickerButton, { GetPickerButtonStylesProp } from './PickerButton';\nimport { PickerButtonSize } from './PickerButton.styles';\n\nexport interface ModalPickerProps extends RNPickerProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  /** Prop to be passed to modal */\n  useHistory?: boolean;\n  /** Label displayed when showing country selection */\n  header?: React.ReactNode;\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n}\n\nconst SELECTED_INDEX_OFFSET = 3;\n\n// REVIEW: When the window height is larger than the select list, and initial scroll index is at the bottom half, there is unscrollable blank space\n// it is a rare use case that can be solved by using ref to `scrollToIndex`\nconst ModalPickerBase = (props: ModalPickerProps) => {\n  const {\n    header,\n    getStyles,\n    useHistory = false,\n    selectedValue = null,\n    onValueChange,\n    children,\n    size = 'medium',\n  } = props;\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n  const selectedIndex = data.findIndex(d => d.value === selectedValue);\n  const selectedData = selectedIndex >= 0 ? data[selectedIndex] : null;\n  const selectedLabel = selectedData ? selectedData.label : null;\n\n  return (\n    <>\n      <PickerButton\n        onPress={() => setIsModalOpen(true)}\n        getStyles={getStyles}\n        size={size}\n        title={selectedLabel}\n      />\n      <CloseableModal\n        visible={isModalOpen}\n        useHistory={useHistory}\n        onRequestClose={() => setIsModalOpen(false)}\n        onClose={() => setIsModalOpen(false)}\n      >\n        {header}\n        <SelectList\n          initialScrollIndex={selectedIndex - SELECTED_INDEX_OFFSET}\n          initialNumToRender={30}\n          selectedValue={selectedValue}\n          onValueChange={(value, index) => {\n            if (onValueChange) onValueChange(value, index);\n            setIsModalOpen(false);\n          }}\n        >\n          {children}\n        </SelectList>\n      </CloseableModal>\n    </>\n  );\n};\n\nexport const ModalPicker = ModalPickerBase;\n\nexport default ModalPicker;\ntry {\n    // @ts-ignore\n    ModalPicker.displayName = \"ModalPicker\";\n    // @ts-ignore\n    ModalPicker.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalPicker\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"header\": { \"defaultValue\": null, \"description\": \"Label displayed when showing country selection\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"Callback for when an item is selected. This is called with the\\nfollowing parameters:\\n- itemValue: the value prop of the item that was selected\\n- itemPosition: the index of the selected item in this picker\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(itemValue: any, itemPosition: number) => void\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"Value matching value of one of the items.\\nCan be a string or an integer.\", \"name\": \"selectedValue\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"testId\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testId\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"itemStyle\": { \"defaultValue\": null, \"description\": \"Style to apply to each of the item labels.\\n@platform ios\", \"name\": \"itemStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"box-none\\\" | \\\"none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"enabled\": { \"defaultValue\": null, \"description\": \"If set to false, the picker will be disabled, i.e. the user will not be able to make a\\nselection.\\n@platform android\", \"name\": \"enabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"mode\": { \"defaultValue\": null, \"description\": \"On Android, specifies how to display the selection items when the user taps on the picker:\\n\\n   - 'dialog': Show a modal dialog. This is the default.\\n   - 'dropdown': Shows a dropdown anchored to the picker view\\n@platform android\", \"name\": \"mode\", \"required\": false, \"type\": { \"name\": \"\\\"dialog\\\" | \\\"dropdown\\\"\" } }, \"prompt\": { \"defaultValue\": null, \"description\": \"Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\\n@platform android\", \"name\": \"prompt\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/ModalPicker.tsx#ModalPicker\"] = { docgenInfo: ModalPicker.__docgenInfo, name: \"ModalPicker\", path: \"src/components/Pickers/ModalPicker.tsx#ModalPicker\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { Picker as RNPicker, PickerProps as RNPickerProps } from 'react-native';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetPickerButtonStylesProp } from './PickerButton';\nimport { getPickerButtonStyles, PickerButtonSize } from './PickerButton.styles';\nimport PickerButtonWrapper from './PickerButtonWrapper';\n\nexport interface NativePickerProps extends RNPickerProps {\n  size?: PickerButtonSize;\n  innerRef?: React.Ref<RNPicker>;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: GetPickerButtonStylesProp;\n}\n\nconst NativePickerBase = (props: NativePickerProps) => {\n  const { size = 'medium', getStyles, innerRef, ...pickerProps } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper getStyles={getStyles}>\n      <RNPicker\n        ref={innerRef}\n        itemStyle={itemStyle}\n        style={pickerStyle}\n        {...pickerProps}\n      />\n    </PickerButtonWrapper>\n  );\n};\n\nexport const NativePicker = React.forwardRef<RNPicker, RNPickerProps>(\n  (props, ref) => {\n    return <NativePickerBase {...props} innerRef={ref} />;\n  },\n);\n\nexport default NativePicker;\ntry {\n    // @ts-ignore\n    NativePicker.displayName = \"NativePicker\";\n    // @ts-ignore\n    NativePicker.__docgenInfo = { \"description\": \"\", \"displayName\": \"NativePicker\", \"props\": { \"onValueChange\": { \"defaultValue\": null, \"description\": \"Callback for when an item is selected. This is called with the\\nfollowing parameters:\\n- itemValue: the value prop of the item that was selected\\n- itemPosition: the index of the selected item in this picker\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(itemValue: any, itemPosition: number) => void\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"Value matching value of one of the items.\\nCan be a string or an integer.\", \"name\": \"selectedValue\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"testId\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testId\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"itemStyle\": { \"defaultValue\": null, \"description\": \"Style to apply to each of the item labels.\\n@platform ios\", \"name\": \"itemStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"box-none\\\" | \\\"none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"key\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"enabled\": { \"defaultValue\": null, \"description\": \"If set to false, the picker will be disabled, i.e. the user will not be able to make a\\nselection.\\n@platform android\", \"name\": \"enabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"mode\": { \"defaultValue\": null, \"description\": \"On Android, specifies how to display the selection items when the user taps on the picker:\\n\\n   - 'dialog': Show a modal dialog. This is the default.\\n   - 'dropdown': Shows a dropdown anchored to the picker view\\n@platform android\", \"name\": \"mode\", \"required\": false, \"type\": { \"name\": \"\\\"dialog\\\" | \\\"dropdown\\\"\" } }, \"prompt\": { \"defaultValue\": null, \"description\": \"Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\\n@platform android\", \"name\": \"prompt\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<Picker>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/NativePicker.tsx#NativePicker\"] = { docgenInfo: NativePicker.__docgenInfo, name: \"NativePicker\", path: \"src/components/Pickers/NativePicker.tsx#NativePicker\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"onValueChange\": { \"defaultValue\": null, \"description\": \"Callback for when an item is selected. This is called with the\\nfollowing parameters:\\n- itemValue: the value prop of the item that was selected\\n- itemPosition: the index of the selected item in this picker\", \"name\": \"onValueChange\", \"required\": false, \"type\": { \"name\": \"(itemValue: any, itemPosition: number) => void\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"Value matching value of one of the items.\\nCan be a string or an integer.\", \"name\": \"selectedValue\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"testId\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testId\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"itemStyle\": { \"defaultValue\": null, \"description\": \"Style to apply to each of the item labels.\\n@platform ios\", \"name\": \"itemStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"box-none\\\" | \\\"none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"This is a special performance property exposed by RCTView and is useful for scrolling content when there are many subviews,\\nmost of which are offscreen. For this property to be effective, it must be applied to a view that contains many subviews that extend outside its bound.\\nThe subviews must also have overflow: hidden, as should the containing view (or one of its superviews).\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"key\\\" | \\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"enabled\": { \"defaultValue\": null, \"description\": \"If set to false, the picker will be disabled, i.e. the user will not be able to make a\\nselection.\\n@platform android\", \"name\": \"enabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"mode\": { \"defaultValue\": null, \"description\": \"On Android, specifies how to display the selection items when the user taps on the picker:\\n\\n   - 'dialog': Show a modal dialog. This is the default.\\n   - 'dropdown': Shows a dropdown anchored to the picker view\\n@platform android\", \"name\": \"mode\", \"required\": false, \"type\": { \"name\": \"\\\"dialog\\\" | \\\"dropdown\\\"\" } }, \"prompt\": { \"defaultValue\": null, \"description\": \"Prompt string for this picker, used on Android in dialog mode as the title of the dialog.\\n@platform android\", \"name\": \"prompt\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<Picker>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/NativePicker.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/Pickers/NativePicker.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Picker as RNPicker, PickerItemProps } from 'react-native';\n\nconst NativePickerItem = RNPicker.Item;\n\n// tslint:disable-next-line\nexport interface NativePickerItemProps extends PickerItemProps {}\n\nexport default NativePickerItem;\ntry {\n    // @ts-ignore\n    PickerItem.displayName = \"PickerItem\";\n    // @ts-ignore\n    PickerItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"PickerItem\", \"props\": { \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": false, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/NativePickerItem.tsx#PickerItem\"] = { docgenInfo: PickerItem.__docgenInfo, name: \"PickerItem\", path: \"src/components/Pickers/NativePickerItem.tsx#PickerItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Platform, TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface PickerButtonSizes {\n  small: ViewStyle;\n  medium: ViewStyle;\n  large: ViewStyle;\n}\n\nexport type PickerButtonSize = keyof PickerButtonSizes;\n\nexport interface PickerButtonTextSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\n\nexport type PickerButtonTextSize = keyof PickerButtonTextSizes;\n\nexport interface PickerButtonVariables {\n  base: ViewStyle;\n  disabled: ViewStyle;\n  focus: ViewStyle;\n  invalid: ViewStyle;\n  placeholderTextColor: string;\n  sizes: PickerButtonSizes;\n  textSizes: PickerButtonTextSizes;\n}\n\nexport const getPickerButtonVariables = (\n  theme: Theme,\n): PickerButtonVariables => {\n  return {\n    base: {\n      borderColor: theme.colors.border.default,\n      borderWidth: 1,\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.disabled,\n    },\n    focus: {},\n    invalid: {\n      borderColor: theme.colors.border.danger,\n    },\n    placeholderTextColor: theme.colors.text.muted,\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: 40,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: 40,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: 40,\n      },\n    },\n    textSizes: {\n      small: {\n        fontSize: theme.textSizes.small,\n      },\n\n      medium: {\n        fontSize: theme.textSizes.medium,\n      },\n\n      large: {\n        fontSize: theme.textSizes.large,\n      },\n    },\n  };\n};\n\nexport interface PickerButtonStyles {\n  containerStyle: ViewStyle;\n  rightContainerStyle: ViewStyle;\n  pickerStyle: ViewStyle;\n  itemStyle: any;\n}\n\nexport interface PickerButtonStylesProps {\n  size: PickerButtonSize;\n}\nexport type GetPickerButtonStyles = (\n  pickerStylesProps: PickerButtonStylesProps,\n  theme: Theme,\n) => PickerButtonStyles;\n\nexport const getPickerButtonStyles: GetPickerButtonStyles = (\n  pickerStylesProps,\n  theme,\n) => {\n  const pickerVariables = getPickerButtonVariables(theme);\n  const { base, sizes, textSizes } = pickerVariables;\n  const { size } = pickerStylesProps;\n\n  const controlSizeStyles = sizes[size];\n  const textSizeStyles = textSizes[size];\n\n  return {\n    containerStyle: {\n      backgroundColor: theme.colors.background.plain,\n      position: 'relative',\n    },\n    itemStyle: {\n      ...textSizeStyles,\n    },\n    pickerStyle: {\n      backgroundColor: 'transparent',\n      ...base,\n      ...controlSizeStyles,\n      ...(Platform.OS === 'web' && {\n        appearance: 'none',\n      }),\n    },\n    rightContainerStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      paddingHorizontal: 8,\n      position: 'absolute',\n      right: 0,\n      zIndex: -1,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getPickerButtonVariables.displayName = \"getPickerButtonVariables\";\n    // @ts-ignore\n    getPickerButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getPickerButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/PickerButton.styles.ts#getPickerButtonVariables\"] = { docgenInfo: getPickerButtonVariables.__docgenInfo, name: \"getPickerButtonVariables\", path: \"src/components/Pickers/PickerButton.styles.ts#getPickerButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableOpacity,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Text } from '../Typography';\nimport {\n  GetPickerButtonStyles,\n  getPickerButtonStyles,\n  PickerButtonSize,\n} from './PickerButton.styles';\nimport PickerButtonWrapper from './PickerButtonWrapper';\n\nexport type GetPickerButtonStylesProp = ReplaceReturnType<\n  GetPickerButtonStyles,\n  DeepPartial<PickerButtonStyles>\n>;\n\nexport interface PickerButtonStyles extends AccessibilityProps {\n  title?: string | null;\n  onPress?: (event: GestureResponderEvent) => void;\n  size?: PickerButtonSize;\n  getStyles?: GetPickerButtonStylesProp;\n}\n\nconst PickerButtonBase = (props: PickerButtonStyles) => {\n  const {\n    getStyles,\n    onPress,\n    size = 'medium',\n    title,\n    ...accessibilityProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { pickerStyle, itemStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <PickerButtonWrapper getStyles={getStyles}>\n      <TouchableOpacity\n        style={[{ justifyContent: 'center' }, pickerStyle]}\n        onPress={onPress}\n        {...accessibilityProps}\n      >\n        <Text style={itemStyle}>{title}</Text>\n      </TouchableOpacity>\n    </PickerButtonWrapper>\n  );\n};\n\nexport const PickerButton = PickerButtonBase;\n\nexport default PickerButton;\ntry {\n    // @ts-ignore\n    PickerButton.displayName = \"PickerButton\";\n    // @ts-ignore\n    PickerButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"PickerButton\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>>\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/PickerButton.tsx#PickerButton\"] = { docgenInfo: PickerButton.__docgenInfo, name: \"PickerButton\", path: \"src/components/Pickers/PickerButton.tsx#PickerButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Icon } from '../../icons';\nimport { ThemeContext } from '../../theme';\nimport { mergeStyles } from '../../utils/mergeStyles';\nimport { GetPickerButtonStylesProp } from './PickerButton';\nimport { getPickerButtonStyles, PickerButtonSize } from './PickerButton.styles';\n\nexport interface PickerButtonWrapperProps {\n  getStyles?: GetPickerButtonStylesProp;\n  size?: PickerButtonSize;\n  children: React.ReactNode;\n}\n\nconst PickerButtonWrapperBase = (props: PickerButtonWrapperProps) => {\n  const { getStyles, children, size = 'medium' } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const { containerStyle, rightContainerStyle } = mergeStyles(\n    getPickerButtonStyles,\n    getStyles,\n  )({ size }, theme);\n\n  return (\n    <View style={containerStyle}>\n      {children}\n      <View style={rightContainerStyle}>\n        <Icon name=\"chevron-down\" size={32} color={theme.colors.text.default} />\n      </View>\n    </View>\n  );\n};\n\nexport const PickerButtonWrapper = PickerButtonWrapperBase;\n\nexport default PickerButtonWrapper;\ntry {\n    // @ts-ignore\n    PickerButtonWrapper.displayName = \"PickerButtonWrapper\";\n    // @ts-ignore\n    PickerButtonWrapper.__docgenInfo = { \"description\": \"\", \"displayName\": \"PickerButtonWrapper\", \"props\": { \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetPickerButtonStyles, DeepPartial<PickerButtonStyles>>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/PickerButtonWrapper.tsx#PickerButtonWrapper\"] = { docgenInfo: PickerButtonWrapper.__docgenInfo, name: \"PickerButtonWrapper\", path: \"src/components/Pickers/PickerButtonWrapper.tsx#PickerButtonWrapper\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { SelectListItem } from '../SelectList';\n\nexport const PickerItem = SelectListItem;\n\nexport default PickerItem;\ntry {\n    // @ts-ignore\n    PickerItem.displayName = \"PickerItem\";\n    // @ts-ignore\n    PickerItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"PickerItem\", \"props\": { \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"none\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"header\\\" | \\\"link\\\" | \\\"summary\\\" | \\\"image\\\" | \\\"text\\\" | \\\"none\\\" | \\\"search\\\" | \\\"adjustable\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/PickerItem.tsx#PickerItem\"] = { docgenInfo: PickerItem.__docgenInfo, name: \"PickerItem\", path: \"src/components/Pickers/PickerItem.tsx#PickerItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    MemoExoticComponent.displayName = \"MemoExoticComponent\";\n    // @ts-ignore\n    MemoExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"MemoExoticComponent\", \"props\": { \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"none\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"header\\\" | \\\"link\\\" | \\\"summary\\\" | \\\"image\\\" | \\\"text\\\" | \\\"none\\\" | \\\"search\\\" | \\\"adjustable\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Pickers/PickerItem.tsx#MemoExoticComponent\"] = { docgenInfo: MemoExoticComponent.__docgenInfo, name: \"MemoExoticComponent\", path: \"src/components/Pickers/PickerItem.tsx#MemoExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { State } from 'react-powerplug';\nimport ModalPicker from './ModalPicker';\nimport DialogPicker from './DialogPicker';\nimport NativePicker from './NativePicker';\nimport CalendarDatePicker from './CalendarDatePicker';\nimport PickerItem from './PickerItem';\nimport NativePickerItem from './NativePickerItem';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"pickers\"}}>{`Pickers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Paramount provides a set of common picker elements for modern applications`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"nativepicker\"}}>{`NativePicker`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <NativePicker\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      size=\\\"large\\\"\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <NativePickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <NativePickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <NativePickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <NativePickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <NativePickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <NativePickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <NativePickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <NativePickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <NativePickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <NativePickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <NativePickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <NativePickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <NativePickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <NativePickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <NativePickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <NativePickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <NativePickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <NativePickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <NativePickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </NativePicker>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,ModalPicker,DialogPicker,NativePicker,CalendarDatePicker,PickerItem,NativePickerItem}}>\n  <State initial={{ value: 'js' }}>\n    {({ state, setState }) => (\n      <NativePicker\n        selectedValue={state.value}\n        onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\n        size=\"large\"\n        getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {},\n        })}\n      >\n        <NativePickerItem label=\"C\" value=\"c\" />\n        <NativePickerItem label=\"C#\" value=\"c#\" />\n        <NativePickerItem label=\"C++\" value=\"c++\" />\n        <NativePickerItem label=\"CSS\" value=\"css\" />\n        <NativePickerItem label=\"Elixir\" value=\"elixir\" />\n        <NativePickerItem label=\"Elm\" value=\"elm\" />\n        <NativePickerItem label=\"Erlang\" value=\"erlang\" />\n        <NativePickerItem label=\"Go\" value=\"go\" />\n        <NativePickerItem label=\"Haskell\" value=\"haskell\" />\n        <NativePickerItem label=\"HTML\" value=\"html\" />\n        <NativePickerItem label=\"Java\" value=\"java\" />\n        <NativePickerItem label=\"JavaScript\" value=\"js\" />\n        <NativePickerItem label=\"Lua\" value=\"lua\" />\n        <NativePickerItem label=\"Python\" value=\"python\" />\n        <NativePickerItem label=\"R\" value=\"r\" />\n        <NativePickerItem label=\"Ruby\" value=\"ruby\" />\n        <NativePickerItem label=\"Rust\" value=\"rust\" />\n        <NativePickerItem label=\"Switft\" value=\"swift\" />\n        <NativePickerItem label=\"Typescript\" value=\"typescript\" />\n      </NativePicker>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dialogpicker\"}}>{`DialogPicker`}</MDXTag>\n<Playground __position={1} __code={'<State initial={{ value: \\'js\\' }}>\\n  {({ state, setState }) => (\\n    <DialogPicker\\n      useHistory={false}\\n      header={null}\\n      size=\\\"large\\\"\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <PickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <PickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <PickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <PickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <PickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <PickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <PickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <PickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <PickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <PickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <PickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <PickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <PickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <PickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <PickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <PickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <PickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <PickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <PickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </DialogPicker>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,ModalPicker,DialogPicker,NativePicker,CalendarDatePicker,PickerItem,NativePickerItem}}>\n  <State initial={{ value: 'js' }}>\n    {({ state, setState }) => (\n      <DialogPicker\n        useHistory={false}\n        header={null}\n        size=\"large\"\n        selectedValue={state.value}\n        onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\n        getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {},\n        })}\n      >\n        <PickerItem label=\"C\" value=\"c\" />\n        <PickerItem label=\"C#\" value=\"c#\" />\n        <PickerItem label=\"C++\" value=\"c++\" />\n        <PickerItem label=\"CSS\" value=\"css\" />\n        <PickerItem label=\"Elixir\" value=\"elixir\" />\n        <PickerItem label=\"Elm\" value=\"elm\" />\n        <PickerItem label=\"Erlang\" value=\"erlang\" />\n        <PickerItem label=\"Go\" value=\"go\" />\n        <PickerItem label=\"Haskell\" value=\"haskell\" />\n        <PickerItem label=\"HTML\" value=\"html\" />\n        <PickerItem label=\"Java\" value=\"java\" />\n        <PickerItem label=\"JavaScript\" value=\"js\" />\n        <PickerItem label=\"Lua\" value=\"lua\" />\n        <PickerItem label=\"Python\" value=\"python\" />\n        <PickerItem label=\"R\" value=\"r\" />\n        <PickerItem label=\"Ruby\" value=\"ruby\" />\n        <PickerItem label=\"Rust\" value=\"rust\" />\n        <PickerItem label=\"Switft\" value=\"swift\" />\n        <PickerItem label=\"Typescript\" value=\"typescript\" />\n      </DialogPicker>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"modalpicker\"}}>{`ModalPicker`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage-1\"}}>{`Usage`}</MDXTag>\n<Playground __position={2} __code={'<State initial={{ value: \\'css\\' }}>\\n  {({ state, setState }) => (\\n    <ModalPicker\\n      useHistory={false}\\n      header={null}\\n      size=\\\"large\\\"\\n      selectedValue={state.value}\\n      onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\\n      getStyles={(props, theme) => ({\\n        pickerStyle: {},\\n        itemStyle: {},\\n      })}\\n    >\\n      <PickerItem label=\\\"C\\\" value=\\\"c\\\" />\\n      <PickerItem label=\\\"C#\\\" value=\\\"c#\\\" />\\n      <PickerItem label=\\\"C++\\\" value=\\\"c++\\\" />\\n      <PickerItem label=\\\"CSS\\\" value=\\\"css\\\" />\\n      <PickerItem label=\\\"Elixir\\\" value=\\\"elixir\\\" />\\n      <PickerItem label=\\\"Elm\\\" value=\\\"elm\\\" />\\n      <PickerItem label=\\\"Erlang\\\" value=\\\"erlang\\\" />\\n      <PickerItem label=\\\"Go\\\" value=\\\"go\\\" />\\n      <PickerItem label=\\\"Haskell\\\" value=\\\"haskell\\\" />\\n      <PickerItem label=\\\"HTML\\\" value=\\\"html\\\" />\\n      <PickerItem label=\\\"Java\\\" value=\\\"java\\\" />\\n      <PickerItem label=\\\"JavaScript\\\" value=\\\"js\\\" />\\n      <PickerItem label=\\\"Lua\\\" value=\\\"lua\\\" />\\n      <PickerItem label=\\\"Python\\\" value=\\\"python\\\" />\\n      <PickerItem label=\\\"R\\\" value=\\\"r\\\" />\\n      <PickerItem label=\\\"Ruby\\\" value=\\\"ruby\\\" />\\n      <PickerItem label=\\\"Rust\\\" value=\\\"rust\\\" />\\n      <PickerItem label=\\\"Switft\\\" value=\\\"swift\\\" />\\n      <PickerItem label=\\\"Typescript\\\" value=\\\"typescript\\\" />\\n    </ModalPicker>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,ModalPicker,DialogPicker,NativePicker,CalendarDatePicker,PickerItem,NativePickerItem}}>\n  <State initial={{ value: 'css' }}>\n    {({ state, setState }) => (\n      <ModalPicker\n        useHistory={false}\n        header={null}\n        size=\"large\"\n        selectedValue={state.value}\n        onValueChange={(itemValue, itemIndex) => setState({ value: itemValue })}\n        getStyles={(props, theme) => ({\n          pickerStyle: {},\n          itemStyle: {},\n        })}\n      >\n        <PickerItem label=\"C\" value=\"c\" />\n        <PickerItem label=\"C#\" value=\"c#\" />\n        <PickerItem label=\"C++\" value=\"c++\" />\n        <PickerItem label=\"CSS\" value=\"css\" />\n        <PickerItem label=\"Elixir\" value=\"elixir\" />\n        <PickerItem label=\"Elm\" value=\"elm\" />\n        <PickerItem label=\"Erlang\" value=\"erlang\" />\n        <PickerItem label=\"Go\" value=\"go\" />\n        <PickerItem label=\"Haskell\" value=\"haskell\" />\n        <PickerItem label=\"HTML\" value=\"html\" />\n        <PickerItem label=\"Java\" value=\"java\" />\n        <PickerItem label=\"JavaScript\" value=\"js\" />\n        <PickerItem label=\"Lua\" value=\"lua\" />\n        <PickerItem label=\"Python\" value=\"python\" />\n        <PickerItem label=\"R\" value=\"r\" />\n        <PickerItem label=\"Ruby\" value=\"ruby\" />\n        <PickerItem label=\"Rust\" value=\"rust\" />\n        <PickerItem label=\"Switft\" value=\"swift\" />\n        <PickerItem label=\"Typescript\" value=\"typescript\" />\n      </ModalPicker>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"calendardatepicker\"}}>{`CalendarDatePicker`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Composes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ModalMultiMonthCalendarSelect`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage-2\"}}>{`Usage`}</MDXTag>\n<Playground __position={3} __code={'<State\\n  initial={{\\n    selectedStartDate: null,\\n    selectedEndDate: null,\\n  }}\\n>\\n  {({ state: { selectedStartDate, selectedEndDate }, setState }) => (\\n    <CalendarDatePicker\\n      useRange\\n      selectedStartDate={selectedStartDate}\\n      selectedEndDate={selectedEndDate}\\n      onValueChange={(startDate, endDate) =>\\n        setState({\\n          selectedStartDate: startDate,\\n          selectedEndDate: endDate,\\n        })\\n      }\\n      // ... MultiMonthCalendar Props\\n    />\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,ModalPicker,DialogPicker,NativePicker,CalendarDatePicker,PickerItem,NativePickerItem}}>\n  <State\n    initial={{\n      selectedStartDate: null,\n      selectedEndDate: null,\n    }}\n  >\n    {({ state: { selectedStartDate, selectedEndDate }, setState }) => (\n      <CalendarDatePicker\n        useRange\n        selectedStartDate={selectedStartDate}\n        selectedEndDate={selectedEndDate}\n        onValueChange={(startDate, endDate) =>\n          setState({\n            selectedStartDate: startDate,\n            selectedEndDate: endDate,\n          })\n        }\n        // ... MultiMonthCalendar Props\n      />\n    )}\n  </State>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import * as React from 'react';\nimport { FlatList, FlatListProps } from 'react-native';\nimport { Omit } from 'ts-essentials';\n\nimport { ThemeContext } from '../../theme';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListProps\n  extends Omit<\n    Omit<FlatListProps<SelectListItemBaseProps>, 'data'>,\n    'renderItem'\n  > {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n  selectedValue: string | string[];\n  innerRef?: React.Ref<FlatList<SelectListItemBaseProps>>;\n  isMulti?: boolean;\n  onValueChange: (\n    itemValue: string | string[],\n    itemIndex: number,\n  ) => void | undefined;\n}\n\nconst SelectListBase = (props: SelectListProps): any => {\n  const {\n    selectedValue,\n    onValueChange,\n    isMulti,\n    children,\n    innerRef,\n    ...flatListProps\n  } = props;\n  const theme = React.useContext(ThemeContext);\n\n  const handleOnPress = (\n    itemValue: string,\n    itemIndex: number,\n    isSelected: boolean,\n  ) => {\n    if (isMulti && Array.isArray(selectedValue)) {\n      if (isSelected) {\n        onValueChange(\n          selectedValue.filter(val => val !== itemValue),\n          itemIndex,\n        );\n      } else {\n        onValueChange(selectedValue.concat(itemValue), itemIndex);\n      }\n    } else {\n      onValueChange(itemValue, itemIndex);\n    }\n  };\n\n  const childrenArray = React.Children.toArray(children);\n  const data = childrenArray.map(child => child.props);\n\n  return (\n    <FlatList\n      ref={innerRef}\n      keyExtractor={item => item.value}\n      getItemLayout={(_, index) => ({\n        index,\n        length: theme.controlHeights.medium,\n        offset: theme.controlHeights.medium * index,\n      })}\n      data={data}\n      renderItem={({ item, index }) => {\n        const selectListItem = childrenArray[index];\n\n        const isSelected =\n          isMulti && Array.isArray(selectedValue)\n            ? selectedValue.some(selVal => selVal === item.value)\n            : selectedValue === item.value;\n\n        return React.cloneElement(selectListItem, {\n          index,\n          isSelected,\n          onSelect: handleOnPress,\n        });\n      }}\n      {...flatListProps}\n    />\n  );\n};\n\nexport const SelectList = React.forwardRef<\n  FlatList<SelectListItemBaseProps>,\n  SelectListProps\n>((props, ref) => {\n  return <SelectListBase {...props} innerRef={ref} />;\n});\n\nexport default SelectList;\ntry {\n    // @ts-ignore\n    SelectList.displayName = \"SelectList\";\n    // @ts-ignore\n    SelectList.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectList\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } }, \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#SelectList\"] = { docgenInfo: SelectList.__docgenInfo, name: \"SelectList\", path: \"src/components/SelectList/SelectList.tsx#SelectList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } }, \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectList.tsx#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/SelectList/SelectList.tsx#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withTheme } from '../../theme';\nimport { FormField, FormFieldProps } from '../Form';\nimport SelectList, { SelectListProps } from './SelectList';\nimport { SelectListItemBaseProps } from './SelectListItem';\n\nexport interface SelectListFieldProps extends FormFieldProps, SelectListProps {\n  children: Array<React.ReactElement<SelectListItemBaseProps>>;\n}\n\nconst SelectListFieldBase = (props: SelectListFieldProps) => {\n  const { label, error, description, ...passThroughProps } = props;\n\n  return (\n    <FormField label={label} error={error} description={description}>\n      <SelectList {...passThroughProps} />\n    </FormField>\n  );\n};\n\nexport const SelectListField = withTheme(SelectListFieldBase);\nexport default SelectListField;\ntry {\n    // @ts-ignore\n    SelectListField.displayName = \"SelectListField\";\n    // @ts-ignore\n    SelectListField.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectListField\", \"props\": { \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListField.tsx#SelectListField\"] = { docgenInfo: SelectListField.__docgenInfo, name: \"SelectListField\", path: \"src/components/SelectList/SelectListField.tsx#SelectListField\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListField.tsx#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/SelectListField.tsx#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { Checkbox } from '../Checkbox';\nimport { ListItem, ListItemProps } from '../ListItem';\n\nexport interface SelectListItemBaseProps {\n  index?: number;\n  isSelected?: boolean;\n  onSelect?: (value: string, index: number, isSelected: boolean) => void;\n  value: string;\n  label: string;\n}\n\nexport interface SelectListItemProps\n  extends SelectListItemBaseProps,\n    ListItemProps {\n  isDisabled?: boolean;\n}\n\nconst SelectListItemBase = (props: SelectListItemProps) => {\n  const {\n    index = 0,\n    isDisabled = false,\n    isSelected = false,\n    label,\n    onSelect = () => null,\n    size = 'medium',\n    value,\n    ...listItemProps\n  } = props;\n\n  return (\n    <ListItem\n      onPress={e => {\n        e.preventDefault();\n        onSelect(value, index, isSelected);\n      }}\n      label={label}\n      rightIcon={\n        <Checkbox isInteractive={false} shape=\"circle\" isChecked={isSelected} />\n      }\n      {...listItemProps}\n    />\n  );\n};\n\nexport const SelectListItem = React.memo(SelectListItemBase);\n\nexport default SelectListItem;\ntry {\n    // @ts-ignore\n    SelectListItem.displayName = \"SelectListItem\";\n    // @ts-ignore\n    SelectListItem.__docgenInfo = { \"description\": \"\", \"displayName\": \"SelectListItem\", \"props\": { \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"none\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"header\\\" | \\\"link\\\" | \\\"summary\\\" | \\\"image\\\" | \\\"text\\\" | \\\"none\\\" | \\\"search\\\" | \\\"adjustable\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#SelectListItem\"] = { docgenInfo: SelectListItem.__docgenInfo, name: \"SelectListItem\", path: \"src/components/SelectList/SelectListItem.tsx#SelectListItem\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    MemoExoticComponent.displayName = \"MemoExoticComponent\";\n    // @ts-ignore\n    MemoExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"MemoExoticComponent\", \"props\": { \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"none\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"button\\\" | \\\"header\\\" | \\\"link\\\" | \\\"summary\\\" | \\\"image\\\" | \\\"text\\\" | \\\"none\\\" | \\\"search\\\" | \\\"adjustable\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/SelectListItem.tsx#MemoExoticComponent\"] = { docgenInfo: MemoExoticComponent.__docgenInfo, name: \"MemoExoticComponent\", path: \"src/components/SelectList/SelectListItem.tsx#MemoExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as SelectList, SelectListProps } from './SelectList';\nexport {\n  default as SelectListItem,\n  SelectListItemProps,\n  SelectListItemBaseProps,\n} from './SelectListItem';\nexport {\n  default as SelectListField,\n  SelectListFieldProps,\n} from './SelectListField';\ntry {\n    // @ts-ignore\n    ForwardRefExoticComponent.displayName = \"ForwardRefExoticComponent\";\n    // @ts-ignore\n    ForwardRefExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ForwardRefExoticComponent\", \"props\": { \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } }, \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"ref\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ref\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"key\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"key\", \"required\": false, \"type\": { \"name\": \"ReactText\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/index.ts#ForwardRefExoticComponent\"] = { docgenInfo: ForwardRefExoticComponent.__docgenInfo, name: \"ForwardRefExoticComponent\", path: \"src/components/SelectList/index.ts#ForwardRefExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    MemoExoticComponent.displayName = \"MemoExoticComponent\";\n    // @ts-ignore\n    MemoExoticComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"MemoExoticComponent\", \"props\": { \"isDisabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"isSelected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isSelected\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSelect\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSelect\", \"required\": false, \"type\": { \"name\": \"(value: string, index: number, isSelected: boolean) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"avatarProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"avatarProps\", \"required\": false, \"type\": { \"name\": \"AvatarProps\" } }, \"leftIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"leftIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"rightIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightIcon\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetListItemStyles, DeepPartial<ListItemStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/index.ts#MemoExoticComponent\"] = { docgenInfo: MemoExoticComponent.__docgenInfo, name: \"MemoExoticComponent\", path: \"src/components/SelectList/index.ts#MemoExoticComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    __class.displayName = \"__class\";\n    // @ts-ignore\n    __class.__docgenInfo = { \"description\": \"\", \"displayName\": \"__class\", \"props\": { \"ItemSeparatorComponent\": { \"defaultValue\": null, \"description\": \"Rendered in between each item, but not at the top or bottom\", \"name\": \"ItemSeparatorComponent\", \"required\": false, \"type\": { \"name\": \"ComponentType<any>\" } }, \"ListEmptyComponent\": { \"defaultValue\": null, \"description\": \"Rendered when the list is empty.\", \"name\": \"ListEmptyComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListFooterComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very end of the list.\", \"name\": \"ListFooterComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"ListHeaderComponent\": { \"defaultValue\": null, \"description\": \"Rendered at the very beginning of the list.\", \"name\": \"ListHeaderComponent\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"columnWrapperStyle\": { \"defaultValue\": null, \"description\": \"Optional custom style for multi-item rows generated when numColumns > 1\", \"name\": \"columnWrapperStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"keyboardShouldPersistTaps\": { \"defaultValue\": null, \"description\": \"When false tapping outside of the focused text input when the keyboard\\nis up dismisses the keyboard. When true the scroll view will not catch\\ntaps and the keyboard will not dismiss automatically. The default value\\nis false.\", \"name\": \"keyboardShouldPersistTaps\", \"required\": false, \"type\": { \"name\": \"boolean | \\\"always\\\" | \\\"never\\\" | \\\"handled\\\"\" } }, \"extraData\": { \"defaultValue\": null, \"description\": \"A marker property for telling the list to re-render (since it implements PureComponent).\\nIf any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,\\nstick it here and treat it immutably.\", \"name\": \"extraData\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getItemLayout\": { \"defaultValue\": null, \"description\": \"`getItemLayout` is an optional optimization that lets us skip measurement of dynamic\\ncontent if you know the height of items a priori. getItemLayout is the most efficient,\\nand is easy to use if you have fixed height items, for example:\\n```\\n     * getItemLayout={(data, index) => (\\n     *   {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\\n     * )}\\n     * ```\\nRemember to include separator length (height or width) in your offset calculation if you specify\\n`ItemSeparatorComponent`.\", \"name\": \"getItemLayout\", \"required\": false, \"type\": { \"name\": \"(data: SelectListItemBaseProps[], index: number) => { length: number; offset: number; index: number; }\" } }, \"horizontal\": { \"defaultValue\": null, \"description\": \"If true, renders items next to each other horizontally instead of stacked vertically.\", \"name\": \"horizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"initialNumToRender\": { \"defaultValue\": null, \"description\": \"How many items to render in the initial batch\", \"name\": \"initialNumToRender\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"initialScrollIndex\": { \"defaultValue\": null, \"description\": \"Instead of starting at the top with the first item, start at initialScrollIndex\", \"name\": \"initialScrollIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"keyExtractor\": { \"defaultValue\": null, \"description\": \"Used to extract a unique key for a given item at the specified index. Key is used for caching\\nand as the react key to track item re-ordering. The default extractor checks `item.key`, then\\nfalls back to using the index, like React does.\", \"name\": \"keyExtractor\", \"required\": false, \"type\": { \"name\": \"(item: SelectListItemBaseProps, index: number) => string\" } }, \"legacyImplementation\": { \"defaultValue\": null, \"description\": \"Uses legacy MetroListView instead of default VirtualizedSectionList\", \"name\": \"legacyImplementation\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"numColumns\": { \"defaultValue\": null, \"description\": \"Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a `flexWrap` layout.\\nItems should all be the same height - masonry layouts are not supported.\", \"name\": \"numColumns\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onEndReached\": { \"defaultValue\": null, \"description\": \"Called once when the scroll position gets within onEndReachedThreshold of the rendered content.\", \"name\": \"onEndReached\", \"required\": false, \"type\": { \"name\": \"(info: { distanceFromEnd: number; }) => void\" } }, \"onEndReachedThreshold\": { \"defaultValue\": null, \"description\": \"How far from the end (in units of visible length of the list) the bottom edge of the\\nlist must be from the end of the content to trigger the `onEndReached` callback.\\nThus a value of 0.5 will trigger `onEndReached` when the end of the content is\\nwithin half the visible length of the list.\", \"name\": \"onEndReachedThreshold\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onRefresh\": { \"defaultValue\": null, \"description\": \"If provided, a standard RefreshControl will be added for \\\"Pull to Refresh\\\" functionality.\\nMake sure to also set the refreshing prop correctly.\", \"name\": \"onRefresh\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onViewableItemsChanged\": { \"defaultValue\": null, \"description\": \"Called when the viewability of rows changes, as defined by the `viewablePercentThreshold` prop.\", \"name\": \"onViewableItemsChanged\", \"required\": false, \"type\": { \"name\": \"(info: { viewableItems: ViewToken[]; changed: ViewToken[]; }) => void\" } }, \"refreshing\": { \"defaultValue\": null, \"description\": \"Set this true while waiting for new data from a refresh.\", \"name\": \"refreshing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"viewabilityConfig\": { \"defaultValue\": null, \"description\": \"See `ViewabilityHelper` for flow type and further documentation.\", \"name\": \"viewabilityConfig\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"removeClippedSubviews\": { \"defaultValue\": null, \"description\": \"Note: may have bugs (missing content) in some circumstances - use at your own risk.\\n\\nThis may improve scroll performance for large lists.\", \"name\": \"removeClippedSubviews\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"`debug` will turn on extra logging and visual overlays to aid with debugging both usage and\\nimplementation, but with a significant perf hit.\", \"name\": \"debug\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disableVirtualization\": { \"defaultValue\": null, \"description\": \"DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\\nunmounts react instances that are outside of the render window. You should only need to disable\\nthis for debugging purposes.\", \"name\": \"disableVirtualization\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getItem\": { \"defaultValue\": null, \"description\": \"A generic accessor for extracting an item from any sort of data blob.\", \"name\": \"getItem\", \"required\": false, \"type\": { \"name\": \"(data: any, index: number) => SelectListItemBaseProps\" } }, \"getItemCount\": { \"defaultValue\": null, \"description\": \"Determines how many items are in the data blob.\", \"name\": \"getItemCount\", \"required\": false, \"type\": { \"name\": \"(data: any) => number\" } }, \"inverted\": { \"defaultValue\": null, \"description\": \"Reverses the direction of scroll. Uses scale transforms of -1.\", \"name\": \"inverted\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"listKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"listKey\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"maxToRenderPerBatch\": { \"defaultValue\": null, \"description\": \"The maximum number of items to render in each incremental render batch. The more rendered at\\nonce, the better the fill rate, but responsiveness my suffer because rendering content may\\ninterfere with responding to button taps or other interactions.\", \"name\": \"maxToRenderPerBatch\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onLayout\": { \"defaultValue\": null, \"description\": \"Invoked on mount and layout changes with\\n\\n{nativeEvent: { layout: {x, y, width, height}}}.\", \"name\": \"onLayout\", \"required\": false, \"type\": { \"name\": \"(event: LayoutChangeEvent) => void\" } }, \"onScrollToIndexFailed\": { \"defaultValue\": null, \"description\": \"Used to handle failures when scrolling to an index that has not been measured yet.\\nRecommended action is to either compute your own offset and `scrollTo` it, or scroll as far\\nas possible and then try again after more items have been rendered.\", \"name\": \"onScrollToIndexFailed\", \"required\": false, \"type\": { \"name\": \"(info: { index: number; highestMeasuredFrameIndex: number; averageItemLength: number; }) => void\" } }, \"progressViewOffset\": { \"defaultValue\": null, \"description\": \"Set this when offset is needed for the loading indicator to show correctly.\\n@platform android\", \"name\": \"progressViewOffset\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"renderScrollComponent\": { \"defaultValue\": null, \"description\": \"Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\", \"name\": \"renderScrollComponent\", \"required\": false, \"type\": { \"name\": \"(props: ScrollViewProps) => ReactElement<ScrollViewProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"updateCellsBatchingPeriod\": { \"defaultValue\": null, \"description\": \"Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\\nscreen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\", \"name\": \"updateCellsBatchingPeriod\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"viewabilityConfigCallbackPairs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"viewabilityConfigCallbackPairs\", \"required\": false, \"type\": { \"name\": \"ViewabilityConfigCallbackPair[]\" } }, \"windowSize\": { \"defaultValue\": null, \"description\": \"Determines the maximum number of items rendered outside of the visible area, in units of\\nvisible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\\nrender the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\\nthis number will reduce memory consumption and may improve performance, but will increase the\\nchance that fast scrolling may reveal momentary blank areas of unrendered content.\", \"name\": \"windowSize\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"contentContainerStyle\": { \"defaultValue\": null, \"description\": \"These styles will be applied to the scroll view content container which\\nwraps all of the child views. Example:\\n\\n   return (\\n     <ScrollView contentContainerStyle={styles.contentContainer}>\\n     </ScrollView>\\n   );\\n   ...\\n   const styles = StyleSheet.create({\\n     contentContainer: {\\n       paddingVertical: 20\\n     }\\n   });\", \"name\": \"contentContainerStyle\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"invertStickyHeaders\": { \"defaultValue\": null, \"description\": \"If sticky headers should stick at the bottom instead of the top of the\\nScrollView. This is usually used with inverted ScrollViews.\", \"name\": \"invertStickyHeaders\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"keyboardDismissMode\": { \"defaultValue\": null, \"description\": \"Determines whether the keyboard gets dismissed in response to a drag.\\n   - 'none' (the default) drags do not dismiss the keyboard.\\n   - 'onDrag' the keyboard is dismissed when a drag begins.\\n   - 'interactive' the keyboard is dismissed interactively with the drag\\n     and moves in synchrony with the touch; dragging upwards cancels the\\n     dismissal.\", \"name\": \"keyboardDismissMode\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"interactive\\\" | \\\"on-drag\\\"\" } }, \"onContentSizeChange\": { \"defaultValue\": null, \"description\": \"Called when scrollable content view of the ScrollView changes.\\nHandler function is passed the content width and content height as parameters: (contentWidth, contentHeight)\\nIt's implemented using onLayout handler attached to the content container which this ScrollView renders.\", \"name\": \"onContentSizeChange\", \"required\": false, \"type\": { \"name\": \"(w: number, h: number) => void\" } }, \"onScroll\": { \"defaultValue\": null, \"description\": \"Fires at most once per frame during scrolling.\\nThe frequency of the events can be contolled using the scrollEventThrottle prop.\", \"name\": \"onScroll\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollBeginDrag\": { \"defaultValue\": null, \"description\": \"Fires if a user initiates a scroll gesture.\", \"name\": \"onScrollBeginDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onScrollEndDrag\": { \"defaultValue\": null, \"description\": \"Fires when a user has finished scrolling.\", \"name\": \"onScrollEndDrag\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollEnd\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has finished moving\", \"name\": \"onMomentumScrollEnd\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"onMomentumScrollBegin\": { \"defaultValue\": null, \"description\": \"Fires when scroll view has begun moving\", \"name\": \"onMomentumScrollBegin\", \"required\": false, \"type\": { \"name\": \"(event: NativeSyntheticEvent<NativeScrollEvent>) => void\" } }, \"pagingEnabled\": { \"defaultValue\": null, \"description\": \"When true the scroll view stops on multiples of the scroll view's size\\nwhen scrolling. This can be used for horizontal pagination. The default\\nvalue is false.\", \"name\": \"pagingEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEnabled\": { \"defaultValue\": null, \"description\": \"When false, the content does not scroll. The default value is true\", \"name\": \"scrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsHorizontalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a horizontal scroll indicator.\", \"name\": \"showsHorizontalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showsVerticalScrollIndicator\": { \"defaultValue\": null, \"description\": \"When true, shows a vertical scroll indicator.\", \"name\": \"showsVerticalScrollIndicator\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Style\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"StyleProp<ViewStyle>\" } }, \"refreshControl\": { \"defaultValue\": null, \"description\": \"A RefreshControl component, used to provide pull-to-refresh\\nfunctionality for the ScrollView.\", \"name\": \"refreshControl\", \"required\": false, \"type\": { \"name\": \"ReactElement<RefreshControlProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"snapToAlignment\": { \"defaultValue\": null, \"description\": \"When `snapToInterval` is set, `snapToAlignment` will define the relationship of the the snapping to the scroll view.\\n      - `start` (the default) will align the snap at the left (horizontal) or top (vertical)\\n      - `center` will align the snap in the center\\n      - `end` will align the snap at the right (horizontal) or bottom (vertical)\", \"name\": \"snapToAlignment\", \"required\": false, \"type\": { \"name\": \"\\\"start\\\" | \\\"center\\\" | \\\"end\\\"\" } }, \"snapToInterval\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at multiples of the value of `snapToInterval`.\\nThis can be used for paginating through children that have lengths smaller than the scroll view.\\nUsed in combination with `snapToAlignment` and `decelerationRate=\\\"fast\\\"`. Overrides less\\nconfigurable `pagingEnabled` prop.\", \"name\": \"snapToInterval\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"snapToOffsets\": { \"defaultValue\": null, \"description\": \"When set, causes the scroll view to stop at the defined offsets. This can be used for\\npaginating through variously sized children that have lengths smaller than the scroll view.\\nTypically used in combination with `decelerationRate=\\\"fast\\\"`. Overrides less configurable\\n`pagingEnabled` and `snapToInterval` props.\", \"name\": \"snapToOffsets\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"snapToStart\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the beginning of the list counts as a\\nsnap offset. Set `snapToStart` to false to disable this behavior and allow the list to scroll\\nfreely between its start and the first `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToStart\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"snapToEnd\": { \"defaultValue\": null, \"description\": \"Use in conjuction with `snapToOffsets`. By default, the end of the list counts as a snap\\noffset. Set `snapToEnd` to false to disable this behavior and allow the list to scroll freely\\nbetween its end and the last `snapToOffsets` offset. The default value is true.\", \"name\": \"snapToEnd\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hitSlop\": { \"defaultValue\": null, \"description\": \"This defines how far a touch event can start away from the view.\\nTypical interface guidelines recommend touch targets that are at least\\n30 - 40 points/density-independent pixels. If a Touchable view has\\na height of 20 the touchable height can be extended to 40 with\\nhitSlop={{top: 10, bottom: 10, left: 0, right: 0}}\\nNOTE The touch area never extends past the parent view bounds and\\nthe Z-index of sibling views always takes precedence if a touch\\nhits two overlapping views.\", \"name\": \"hitSlop\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"pointerEvents\": { \"defaultValue\": null, \"description\": \"In the absence of auto property, none is much like CSS's none value. box-none is as if you had applied the CSS class:\\n\\n.box-none {\\n   pointer-events: none;\\n}\\n.box-none * {\\n   pointer-events: all;\\n}\\n\\nbox-only is the equivalent of\\n\\n.box-only {\\n   pointer-events: all;\\n}\\n.box-only * {\\n   pointer-events: none;\\n}\\n\\nBut since pointerEvents does not affect layout/appearance, and we are already deviating from the spec by adding additional modes,\\nwe opt to not include pointerEvents on style. On some platforms, we would need to implement it as a className anyways. Using style or not is an implementation detail of the platform.\", \"name\": \"pointerEvents\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"box-none\\\" | \\\"box-only\\\" | \\\"auto\\\"\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"Used to locate this view in end-to-end tests.\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"nativeID\": { \"defaultValue\": null, \"description\": \"Used to reference react managed views from native code.\", \"name\": \"nativeID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"collapsable\": { \"defaultValue\": null, \"description\": \"Views that are only used to layout their children or otherwise don't draw anything\\nmay be automatically removed from the native hierarchy as an optimization.\\nSet this property to false to disable this optimization and ensure that this View exists in the native view hierarchy.\", \"name\": \"collapsable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"needsOffscreenAlphaCompositing\": { \"defaultValue\": null, \"description\": \"Whether this view needs to rendered offscreen and composited with an alpha in order to preserve 100% correct colors and blending behavior.\\nThe default (false) falls back to drawing the component and its children\\nwith an alpha applied to the paint used to draw each element instead of rendering the full component offscreen and compositing it back with an alpha value.\\nThis default may be noticeable and undesired in the case where the View you are setting an opacity on\\nhas multiple overlapping elements (e.g. multiple overlapping Views, or text and a background).\\n\\nRendering offscreen to preserve correct alpha behavior is extremely expensive\\nand hard to debug for non-native developers, which is why it is not turned on by default.\\nIf you do need to enable this property for an animation,\\nconsider combining it with renderToHardwareTextureAndroid if the view contents are static (i.e. it doesn't need to be redrawn each frame).\\nIf that property is enabled, this View will be rendered off-screen once,\\nsaved in a hardware texture, and then composited onto the screen with an alpha each frame without having to switch rendering targets on the GPU.\", \"name\": \"needsOffscreenAlphaCompositing\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"renderToHardwareTextureAndroid\": { \"defaultValue\": null, \"description\": \"Whether this view should render itself (and all of its children) into a single hardware texture on the GPU.\\n\\nOn Android, this is useful for animations and interactions that only modify opacity, rotation, translation, and/or scale:\\nin those cases, the view doesn't have to be redrawn and display lists don't need to be re-executed. The texture can just be\\nre-used and re-composited with different parameters. The downside is that this can use up limited video memory, so this prop should be set back to false at the end of the interaction/animation.\", \"name\": \"renderToHardwareTextureAndroid\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityViewIsModal\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.\\n@platform ios\", \"name\": \"accessibilityViewIsModal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityActions\": { \"defaultValue\": null, \"description\": \"Provides an array of custom actions available for accessibility.\\n@platform ios\", \"name\": \"accessibilityActions\", \"required\": false, \"type\": { \"name\": \"string[]\" } }, \"onAccessibilityAction\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function\\nwhen the user performs an accessibility custom action.\\n@platform ios\", \"name\": \"onAccessibilityAction\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"shouldRasterizeIOS\": { \"defaultValue\": null, \"description\": \"Whether this view should be rendered as a bitmap before compositing.\\n\\nOn iOS, this is useful for animations and interactions that do not modify this component's dimensions nor its children;\\nfor example, when translating the position of a static view, rasterization allows the renderer to reuse a cached bitmap of a static view\\nand quickly composite it during each frame.\\n\\nRasterization incurs an off-screen drawing pass and the bitmap consumes memory.\\nTest and measure when using this property.\", \"name\": \"shouldRasterizeIOS\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onStartShouldSetResponder\": { \"defaultValue\": null, \"description\": \"A view can become the touch responder by implementing the correct negotiation methods.\\nThere are two methods to ask the view if it wants to become responder:\\nDoes this view want to become responder on the start of a touch?\", \"name\": \"onStartShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponder\": { \"defaultValue\": null, \"description\": \"Called for every touch move on the View when it is not the responder: does this view want to \\\"claim\\\" touch responsiveness?\", \"name\": \"onMoveShouldSetResponder\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderEnd\": { \"defaultValue\": null, \"description\": \"If the View returns true and attempts to become the responder, one of the following will happen:\", \"name\": \"onResponderEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderGrant\": { \"defaultValue\": null, \"description\": \"The View is now responding for touch events.\\nThis is the time to highlight and show the user what is happening\", \"name\": \"onResponderGrant\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderReject\": { \"defaultValue\": null, \"description\": \"Something else is the responder right now and will not release it\", \"name\": \"onResponderReject\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderMove\": { \"defaultValue\": null, \"description\": \"If the view is responding, the following handlers can be called:\\nThe user is moving their finger\", \"name\": \"onResponderMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderRelease\": { \"defaultValue\": null, \"description\": \"Fired at the end of the touch, ie \\\"touchUp\\\"\", \"name\": \"onResponderRelease\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onResponderStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onResponderTerminationRequest\": { \"defaultValue\": null, \"description\": \"Something else wants to become responder.\\nShould this view release the responder? Returning true allows release\", \"name\": \"onResponderTerminationRequest\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onResponderTerminate\": { \"defaultValue\": null, \"description\": \"The responder has been taken from the View.\\nMight be taken by other views after a call to onResponderTerminationRequest,\\nor might be taken by the OS without asking (happens with control center/ notification center on iOS)\", \"name\": \"onResponderTerminate\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onStartShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onStartShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onMoveShouldSetResponderCapture\": { \"defaultValue\": null, \"description\": \"onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,\\nwhere the deepest node is called first.\\nThat means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.\\nThis is desirable in most cases, because it makes sure all controls and buttons are usable.\\n\\nHowever, sometimes a parent will want to make sure that it becomes responder.\\nThis can be handled by using the capture phase.\\nBefore the responder system bubbles up from the deepest component,\\nit will do a capture phase, firing on*ShouldSetResponderCapture.\\nSo if a parent View wants to prevent the child from becoming responder on a touch start,\\nit should have a onStartShouldSetResponderCapture handler which returns true.\", \"name\": \"onMoveShouldSetResponderCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => boolean\" } }, \"onTouchStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchStart\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchMove\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchMove\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEnd\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchCancel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchCancel\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"onTouchEndCapture\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTouchEndCapture\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceHorizontal\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces horizontally when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is true when `horizontal={true}` and false otherwise.\", \"name\": \"alwaysBounceHorizontal\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"alwaysBounceVertical\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces vertically when it reaches the end\\neven if the content is smaller than the scroll view itself. The default\\nvalue is false when `horizontal={true}` and true otherwise.\", \"name\": \"alwaysBounceVertical\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"automaticallyAdjustContentInsets\": { \"defaultValue\": null, \"description\": \"Controls whether iOS should automatically adjust the content inset for scroll views that are placed behind a navigation bar or tab bar/ toolbar.\\nThe default value is true.\", \"name\": \"automaticallyAdjustContentInsets\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bounces\": { \"defaultValue\": null, \"description\": \"When true the scroll view bounces when it reaches the end of the\\ncontent if the content is larger then the scroll view along the axis of\\nthe scroll direction. When false it disables all bouncing even if\\nthe `alwaysBounce*` props are true. The default value is true.\", \"name\": \"bounces\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"bouncesZoom\": { \"defaultValue\": null, \"description\": \"When true gestures can drive zoom past min/max and the zoom will animate\\nto the min/max value at gesture end otherwise the zoom will not exceed\\nthe limits.\", \"name\": \"bouncesZoom\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"canCancelContentTouches\": { \"defaultValue\": null, \"description\": \"When false once tracking starts won't try to drag if the touch moves.\\nThe default value is true.\", \"name\": \"canCancelContentTouches\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"centerContent\": { \"defaultValue\": null, \"description\": \"When true the scroll view automatically centers the content when the\\ncontent is smaller than the scroll view bounds; when the content is\\nlarger than the scroll view this property has no effect. The default\\nvalue is false.\", \"name\": \"centerContent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"contentInset\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view content is inset from the edges of the scroll view.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"contentInset\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"contentOffset\": { \"defaultValue\": null, \"description\": \"Used to manually set the starting scroll offset.\\nThe default value is {x: 0, y: 0}\", \"name\": \"contentOffset\", \"required\": false, \"type\": { \"name\": \"PointPropType\" } }, \"contentInsetAdjustmentBehavior\": { \"defaultValue\": null, \"description\": \"This property specifies how the safe area insets are used to modify the content area of the scroll view.\\nThe default value of this property must be 'automatic'. But the default value is 'never' until RN@0.51.\", \"name\": \"contentInsetAdjustmentBehavior\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"automatic\\\" | \\\"scrollableAxes\\\"\" } }, \"decelerationRate\": { \"defaultValue\": null, \"description\": \"A floating-point number that determines how quickly the scroll view\\ndecelerates after the user lifts their finger. Reasonable choices include\\n   - Normal: 0.998 (the default)\\n   - Fast: 0.9\", \"name\": \"decelerationRate\", \"required\": false, \"type\": { \"name\": \"number | \\\"fast\\\" | \\\"normal\\\"\" } }, \"directionalLockEnabled\": { \"defaultValue\": null, \"description\": \"When true the ScrollView will try to lock to only vertical or horizontal\\nscrolling while dragging.  The default value is false.\", \"name\": \"directionalLockEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"indicatorStyle\": { \"defaultValue\": null, \"description\": \"The style of the scroll indicators.\\n- default (the default), same as black.\\n- black, scroll indicator is black. This style is good against\\n   a white content background.\\n- white, scroll indicator is white. This style is good against\\n   a black content background.\", \"name\": \"indicatorStyle\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"black\\\" | \\\"white\\\"\" } }, \"maximumZoomScale\": { \"defaultValue\": null, \"description\": \"The maximum allowed zoom scale. The default value is 1.0.\", \"name\": \"maximumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"minimumZoomScale\": { \"defaultValue\": null, \"description\": \"The minimum allowed zoom scale. The default value is 1.0.\", \"name\": \"minimumZoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onScrollAnimationEnd\": { \"defaultValue\": null, \"description\": \"Called when a scrolling animation ends.\", \"name\": \"onScrollAnimationEnd\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"pinchGestureEnabled\": { \"defaultValue\": null, \"description\": \"When true, ScrollView allows use of pinch gestures to zoom in and out.\\nThe default value is true.\", \"name\": \"pinchGestureEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"scrollEventThrottle\": { \"defaultValue\": null, \"description\": \"This controls how often the scroll event will be fired while scrolling (in events per seconds).\\nA higher number yields better accuracy for code that is tracking the scroll position,\\nbut can lead to scroll performance problems due to the volume of information being send over the bridge.\\nThe default value is zero, which means the scroll event will be sent only once each time the view is scrolled.\", \"name\": \"scrollEventThrottle\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"scrollIndicatorInsets\": { \"defaultValue\": null, \"description\": \"The amount by which the scroll view indicators are inset from the edges of the scroll view.\\nThis should normally be set to the same value as the contentInset.\\nDefaults to {0, 0, 0, 0}.\", \"name\": \"scrollIndicatorInsets\", \"required\": false, \"type\": { \"name\": \"Insets\" } }, \"scrollsToTop\": { \"defaultValue\": null, \"description\": \"When true the scroll view scrolls to top when the status bar is tapped.\\nThe default value is true.\", \"name\": \"scrollsToTop\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"stickyHeaderIndices\": { \"defaultValue\": null, \"description\": \"An array of child indices determining which children get docked to the\\ntop of the screen when scrolling. For example passing\\n`stickyHeaderIndices={[0]}` will cause the first child to be fixed to the\\ntop of the scroll view. This property is not supported in conjunction\\nwith `horizontal={true}`.\", \"name\": \"stickyHeaderIndices\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"zoomScale\": { \"defaultValue\": null, \"description\": \"The current scale of the scroll view content. The default value is 1.0.\", \"name\": \"zoomScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"endFillColor\": { \"defaultValue\": null, \"description\": \"Sometimes a scrollview takes up more space than its content fills.\\nWhen this is the case, this prop will fill the rest of the\\nscrollview with a color to avoid setting a background and creating\\nunnecessary overdraw. This is an advanced optimization that is not\\nneeded in the general case.\", \"name\": \"endFillColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"scrollPerfTag\": { \"defaultValue\": null, \"description\": \"Tag used to log scroll performance on this scroll view. Will force\\nmomentum events to be turned on (see sendMomentumEvents). This doesn't do\\nanything out of the box and you need to implement a custom native\\nFpsListener for it to be useful.\\n@platform android\", \"name\": \"scrollPerfTag\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"overScrollMode\": { \"defaultValue\": null, \"description\": \"Used to override default value of overScroll mode.\\n\\n   Possible values:\\n     - 'auto' - Default value, allow a user to over-scroll this view only if the content is large enough to meaningfully scroll.\\n     - 'always' - Always allow a user to over-scroll this view.\\n     - 'never' - Never allow a user to over-scroll this view.\", \"name\": \"overScrollMode\", \"required\": false, \"type\": { \"name\": \"\\\"always\\\" | \\\"never\\\" | \\\"auto\\\"\" } }, \"nestedScrollEnabled\": { \"defaultValue\": null, \"description\": \"Enables nested scrolling for Android API level 21+. Nested scrolling is supported by default on iOS.\", \"name\": \"nestedScrollEnabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"selectedValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedValue\", \"required\": true, \"type\": { \"name\": \"string | string[]\" } }, \"innerRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"innerRef\", \"required\": false, \"type\": { \"name\": \"Ref<FlatList<SelectListItemBaseProps>>\" } }, \"isMulti\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isMulti\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onValueChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onValueChange\", \"required\": true, \"type\": { \"name\": \"(itemValue: string | string[], itemIndex: number) => void\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"error\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"error\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SelectList/index.ts#__class\"] = { docgenInfo: __class.__docgenInfo, name: \"__class\", path: \"src/components/SelectList/index.ts#__class\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIconName\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\ntry {\n    // @ts-ignore\n    icons.displayName = \"icons\";\n    // @ts-ignore\n    icons.__docgenInfo = { \"description\": \"\", \"displayName\": \"icons\", \"props\": { \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"FeatherIconName\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/index.ts#icons\"] = { docgenInfo: icons.__docgenInfo, name: \"icons\", path: \"src/icons/index.ts#icons\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}