{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Helpers/CounterState.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Svg/Svg.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Star.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Rating/Rating.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Typography/Text.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/palette.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/defaultTheme.ts","/home/travis/build/WeTrustPlatform/paramount/src/theme/Theme.tsx","/home/travis/build/WeTrustPlatform/paramount/src/utils/mergeStyles.ts"],"names":["CounterState","props","children","_props$initial","initial","_React$useState","React","useState","_React$useState2","Object","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","count","setCount","handleIncrementBy","useCallback","value","handleDecrementBy","handleIncrement","handleDecrement","handleSet","decrement","decrementBy","increment","incrementBy","set","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","__source","fileName","_jsxFileName","lineNumber","id","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Rating","___WEBPACK_IMPORTED_MODULE_5__","_ref2","rating","___WEBPACK_IMPORTED_MODULE_6__","size","onChange","of","parentName","className","isMDXComponent","getRatingStyles","theme","_ref$size","_ref$color","color","starSize","controlHeights","containerStyle","flexDirection","touchableStyle","paddingRight","controlPaddings","starColor","getTextColor","colors","text","prepare","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","clean","objectWithoutProperties","transform","push","concat","length","join","styleProp","cleanedProps","styles","StyleSheet","Symbol","iterator","assign","apply","toConsumableArray","esm_extends","Circle","createElement","ClipPath","Defs","Ellipse","G","x","y","rest","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Text","TSpan","TextPath","Use","Mask","Pattern","Star","_props$size","_props$isFilled","isFilled","useTheme","coercedSize","String","finalColor","fills","subtle","yellow","backgroundColor","react","Svg_web_Svg","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Svg_web_Polygon","points","_props$value","_props$maxRating","maxRating","getStyles","_props$onChange","_mergeStyles","mergeStyles","View","Rating_jsxFileName","Array","map","_","index","currentValue","isWithinRating","isLast","TouchableOpacity","key","objectSpread","onPress","Star_Star","getFontWeight","fontWeights","textColors","textColor","getTextSize","textSizes","getTextStyles","_ref$align","align","weight","_ref$isItalic","isItalic","sizeStyle","textStyle","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fontFamilies","textAlign","textTransform","palette","lightest","light","base","dark","darkest","controlBorderRadius","small","medium","large","background","content","overlay","greyLight","greyDefault","greyDark","primaryLight","primaryDefault","primaryDark","secondaryLight","secondaryDefault","secondaryDark","dangerLight","dangerDefault","dangerDark","infoLight","infoDefault","infoDark","successLight","successDefault","successDark","warningLight","warningDefault","warningDark","border","default","primary","secondary","danger","info","success","warning","button","disabled","disabledText","defaultText","primaryText","secondaryText","dangerText","link","muted","white","selected","elevations","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","defaultTheme","solid","neutral","blue","red","orange","green","teal","purple","Platform","OS","heading","mono","bold","normal","headingSizes","xxxlarge","letterSpacing","lineHeight","xxlarge","xlarge","paragraphSizes","xsmall","containerShapes","circle","borderRadius","pill","rounded","roundedBottom","borderBottomLeftRadius","borderBottomRightRadius","roundedLeft","borderTopLeftRadius","roundedRight","borderTopRightRadius","roundedTop","square","ThemeContext","createContext","createTheme","deepMerge","ThemeProvider","react_default","a","Provider","useContext","__webpack_require__","d","__webpack_exports__","deepmerge__WEBPACK_IMPORTED_MODULE_0__","deepmerge__WEBPACK_IMPORTED_MODULE_0___default","n","getDefaultStyles","getOverridingStyles","getThemeStyles","merge","all"],"mappings":"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","file":"static/js/28.d6da81a6.js","sourcesContent":["import React from 'react';\n\nexport interface CounterStateRenderProps {\n  count: number;\n  decrement: () => void;\n  decrementBy: (count: number) => void;\n  increment: () => void;\n  incrementBy: (count: number) => void;\n  set: (count: number) => void;\n}\n\nexport interface CounterStateProps {\n  initial?: number;\n  children: (props: CounterStateRenderProps) => JSX.Element;\n}\n\nexport const CounterState = (props: CounterStateProps) => {\n  const { children, initial = 0 } = props;\n  const [count, setCount] = React.useState(initial);\n\n  const handleIncrementBy = React.useCallback(\n    value => {\n      setCount(count + value);\n    },\n    [count],\n  );\n\n  const handleDecrementBy = React.useCallback(\n    value => {\n      setCount(count - value);\n    },\n    [count],\n  );\n\n  const handleIncrement = React.useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleDecrement = React.useCallback(() => {\n    setCount(count - 1);\n  }, [count]);\n\n  const handleSet = React.useCallback(\n    value => {\n      setCount(value);\n    },\n    [count],\n  );\n\n  return children({\n    count,\n    decrement: handleDecrement,\n    decrementBy: handleDecrementBy,\n    increment: handleIncrement,\n    incrementBy: handleIncrementBy,\n    set: handleSet,\n  });\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { CounterState, Rating } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rating\"\n    }}>{`Rating`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<CounterState initial={3}>\\n  {({ count: rating, set }) => (\\n    <Rating value={rating} size=\\\"small\\\" onChange={value => set(value)} />\\n  )}\\n</CounterState>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      CounterState,\n      Rating\n    }} mdxType=\"Playground\">\n  <CounterState initial={3} mdxType=\"CounterState\">\n    {({\n          count: rating,\n          set\n        }) => <Rating value={rating} size=\"small\" onChange={value => set(value)} mdxType=\"Rating\" />}\n  </CounterState>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Rating} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"customization\"\n    }}>{`Customization`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`getStyles`}</inlineCode>{` prop`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`RatingStyles {\n  touchableStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  starColor: string;\n  starSize: number;\n}\n\ngetStyles={(RatingProps, Theme) => RatingStyles}\n`}</code></pre>\n    <p>{`Markup`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<View containerStyle>\n  <TouchableOpacity touchableStyle>\n    <Star color={starColor} size={starSize} />\n  </TouchableOpacity>\n  // ...repeat\n</View>\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/Theme';\nimport { getTextColor } from '../Typography/Text.styles';\nimport { RatingProps } from './Rating';\n\nexport type GetRatingStyles = (\n  progressStylesProps: RatingProps,\n  theme: Theme,\n) => RatingStyles;\n\nexport interface RatingStyles {\n  touchableStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  starColor: string;\n  starSize: number;\n}\n\nexport const getRatingStyles: GetRatingStyles = (\n  { size = 'medium', color = 'primary' },\n  theme,\n) => {\n  const starSize = theme.controlHeights[size];\n  const padding = theme.controlPaddings[size];\n\n  return {\n    containerStyle: {\n      flexDirection: 'row',\n    },\n    touchableStyle: {\n      paddingRight: padding,\n    },\n\n    starColor: getTextColor(theme.colors.text)(color),\n    starSize,\n  };\n};\n","// PORTED IMPLEMENTATION FROM https://github.com/react-native-community/react-native-svg/blob/master/index.web.js\nimport * as React from 'react';\nimport {\n  CircleProps,\n  ClipPathProps,\n  DefinitionProps,\n  EllipseProps,\n  GProps,\n  ImageProps,\n  LinearGradientProps,\n  LineProps,\n  MaskProps,\n  PathProps,\n  PatternProps,\n  PolygonProps,\n  PolylineProps,\n  RadialGradientProps,\n  RectProps,\n  StopProps,\n  SvgProps,\n  SymbolProps,\n  TextPathProps,\n  TextProps,\n  TSpanProps,\n  UseProps,\n} from 'react-native-svg';\n// @ts-ignore\nimport { createElement, StyleSheet } from 'react-native-web';\n\n// Kept in separate file, to avoid name collision with Symbol element\n// @ts-ignore\nconst resolve = (styleProp, cleanedProps) => {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      // @ts-ignore\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n};\n\nexport const prepare = (props: any) => {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    ...clean\n  } = props;\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  const styles: StyleSheet = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nexport const Circle = (props: CircleProps) => {\n  return createElement('circle', prepare(props));\n};\n\nexport const ClipPath = (props: ClipPathProps) => {\n  return createElement('clipPath', prepare(props));\n};\n\nexport const Defs = (props: DefinitionProps) => {\n  return createElement('defs', prepare(props));\n};\n\nexport const Ellipse = (props: EllipseProps) => {\n  return createElement('ellipse', prepare(props));\n};\n\nexport const G = (props: GProps) => {\n  const { x, y, ...rest } = props;\n\n  if ((x || y) && !rest.translate) {\n    rest.translate = `${x || 0}, ${y || 0}`;\n  }\n\n  return createElement('g', prepare(rest));\n};\n\nexport const Image = (props: ImageProps) => {\n  return createElement('image', prepare(props));\n};\n\nexport const Line = (props: LineProps) => {\n  return createElement('line', prepare(props));\n};\n\nexport const LinearGradient = (props: LinearGradientProps) => {\n  return createElement('linearGradient', prepare(props));\n};\n\nexport const Path = (props: PathProps) => {\n  return createElement('path', prepare(props));\n};\n\nexport const Polygon = (props: PolygonProps) => {\n  return createElement('polygon', prepare(props));\n};\n\nexport const Polyline = (props: PolylineProps) => {\n  return createElement('polyline', prepare(props));\n};\n\nexport const RadialGradient = (props: RadialGradientProps) => {\n  return createElement('radialGradient', prepare(props));\n};\n\nexport const Rect = (props: RectProps) => {\n  return createElement('rect', prepare(props));\n};\n\nexport const Stop = (props: StopProps) => {\n  return createElement('stop', prepare(props));\n};\n\nexport const Svg = (props: SvgProps) => {\n  return createElement('svg', prepare(props));\n};\n\nexport const Symbol = (props: SymbolProps) => {\n  return createElement('symbol', prepare(props));\n};\n\nexport const Text = (props: TextProps) => {\n  return createElement('text', prepare(props));\n};\n\nexport const TSpan = (props: TSpanProps) => {\n  return createElement('tspan', prepare(props));\n};\n\nexport const TextPath = (props: TextPathProps) => {\n  return createElement('textPath', prepare(props));\n};\n\nexport const Use = (props: UseProps) => {\n  return createElement('use', prepare(props));\n};\n\nexport const Mask = (props: MaskProps) => {\n  return createElement('mask', prepare(props));\n};\n\nexport const Pattern = (props: PatternProps) => {\n  return createElement('pattern', prepare(props));\n};\n\nexport default Svg;\n","import * as React from 'react';\n\nimport { useTheme } from '../../theme';\nimport { Polygon, Svg } from '../Svg';\n\nexport interface StarProps {\n  size?: number;\n  isFilled?: boolean;\n  color?: string;\n}\n\nexport const Star = (props: StarProps) => {\n  const { size = 24, color, isFilled = false } = props;\n  const theme = useTheme();\n\n  const coercedSize = String(size);\n\n  const finalColor = color || theme.fills.subtle.yellow.backgroundColor;\n\n  return (\n    <Svg\n      width={coercedSize}\n      height={coercedSize}\n      viewBox={`0 0 24 24`}\n      fill={isFilled ? finalColor : 'none'}\n      stroke={finalColor}\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <Polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n    </Svg>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { ControlSize, TextColor, useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetRatingStyles,\n  getRatingStyles,\n  RatingStyles,\n} from './Rating.styles';\nimport { Star } from './Star';\n\nexport interface RatingProps {\n  /**\n   * Rating value\n   * @default 0\n   */\n  value?: number;\n\n  /**\n   * Maximum rating from 0.\n   * @default 5\n   */\n  maxRating?: number;\n\n  /**\n   * The size of the rating star.\n   * @default \"medium\"\n   */\n  size?: ControlSize;\n\n  /**\n   * Called when a rating star is pressed\n   */\n  onChange?: (value: number) => void;\n\n  /**\n   * Color of the rating stars\n   */\n  color?: TextColor;\n\n  /** Callback to get element styles. */\n  getStyles?: ReplaceReturnType<GetRatingStyles, DeepPartial<RatingStyles>>;\n}\n\nexport const Rating = (props: RatingProps) => {\n  const {\n    value = 0,\n    maxRating = 5,\n    getStyles,\n    onChange = () => undefined,\n  } = props;\n  const theme = useTheme();\n\n  const { containerStyle, starColor, starSize, touchableStyle } = mergeStyles(\n    getRatingStyles,\n    getStyles,\n    theme.components.getRatingStyles,\n  )(props, theme);\n\n  return (\n    <View style={containerStyle}>\n      {new Array(maxRating).fill(0).map((_, index) => {\n        const currentValue = index + 1;\n        const isWithinRating = currentValue <= value;\n        const isLast = currentValue === maxRating;\n\n        return (\n          <TouchableOpacity\n            key={currentValue}\n            style={{\n              ...touchableStyle,\n              ...(isLast ? { paddingRight: 0 } : {}),\n            }}\n            onPress={() => onChange(currentValue)}\n          >\n            <Star color={starColor} size={starSize} isFilled={isWithinRating} />\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n","import { TextStyle } from 'react-native';\n\nimport {\n  FontWeight,\n  FontWeights,\n  RNFontWeight,\n  TextColor,\n  TextColors,\n  TextSize,\n  TextSizes,\n  Theme,\n} from '../../theme/Theme';\nimport { TextProps } from './Text';\n\nexport interface TextStyles {\n  textStyle: TextStyle;\n}\n\nexport type GetTextStyles = (props: TextProps, theme: Theme) => TextStyles;\n\nexport const getFontWeight = (fontWeights: FontWeights) => (\n  fontWeight?: FontWeight,\n): RNFontWeight | undefined => {\n  if (!fontWeight) return;\n  // @ts-ignore\n  const presetFontWeight = fontWeights[fontWeight] as RNFontWeight | undefined;\n\n  // @ts-ignore\n  return presetFontWeight || fontWeight;\n};\n\nexport const getTextColor = (textColors: TextColors) => (\n  textColor: TextColor,\n) => {\n  // @ts-ignore\n  const presetColor = textColors[textColor] as string | undefined;\n\n  return presetColor || textColor;\n};\n\nexport const getTextSize = (textSizes: TextSizes) => (\n  size: TextSize,\n): TextStyle => {\n  // @ts-ignore\n  const presetTextSize = textSizes[size] as TextStyle;\n\n  return presetTextSize || { fontSize: size };\n};\n\nexport const getTextStyles: GetTextStyles = (\n  {\n    color = 'default',\n    size = 'medium',\n    align = 'left',\n    weight,\n    isItalic = false,\n    transform,\n  },\n  theme,\n) => {\n  const sizeStyle = getTextSize(theme.textSizes)(size);\n\n  return {\n    textStyle: {\n      ...sizeStyle,\n      color: getTextColor(theme.colors.text)(color),\n      fontFamily: theme.fontFamilies.text,\n      fontWeight:\n        getFontWeight(theme.fontWeights)(weight) || sizeStyle.fontWeight,\n      textAlign: align,\n      ...(isItalic && {\n        fontStyle: 'italic',\n      }),\n      ...(transform && {\n        textTransform: transform,\n      }),\n    },\n  };\n};\n","// tslint:disable object-literal-sort-keys\n\nexport interface ColorPalette {\n  base: string;\n  dark: string;\n  darkest: string;\n  light: string;\n  lightest: string;\n}\n\nexport interface Palette {\n  neutral: ColorPalette;\n  blue: ColorPalette;\n  red: ColorPalette;\n  orange: ColorPalette;\n  yellow: ColorPalette;\n  green: ColorPalette;\n  teal: ColorPalette;\n  purple: ColorPalette;\n}\n\nexport default {\n  neutral: {\n    lightest: '#fafafa',\n    light: '#eeeeee',\n    base: '#cccccc',\n    dark: '#a7a7a7',\n    darkest: '#7e7e7e',\n  },\n\n  blue: {\n    lightest: '#e5f5ff',\n    light: '#ceecff',\n    base: '#1ca5F7',\n    dark: '#59a9de',\n    darkest: '#33495f',\n  },\n\n  red: {\n    lightest: '#f9e1de',\n    light: '#f9aa9f',\n    base: '#d26557',\n    dark: '#bb584e',\n    darkest: '#b74033',\n  },\n\n  orange: {\n    lightest: '#fce8cf',\n    light: '#f2c58a',\n    base: '#f3b058',\n    dark: '#ec8e30',\n    darkest: '#b26500',\n  },\n\n  yellow: {\n    lightest: '#fef8e7',\n    light: '#fbe6a2',\n    base: '#f7d154',\n    dark: '#d1b047',\n    darkest: '#7e6514',\n  },\n\n  green: {\n    lightest: '#eafff3',\n    light: '#c2edd5',\n    base: '#54bf84',\n    dark: '#42a46e',\n    darkest: '#16a054',\n  },\n\n  teal: {\n    lightest: '#d6fcf7',\n    light: '#c0f9f2',\n    base: '#67c6bb',\n    dark: '#3fa296',\n    darkest: '#1b877a',\n  },\n\n  purple: {\n    lightest: '#f8f7fc',\n    light: '#eae7f8',\n    base: '#735dd0',\n    dark: '#37248f',\n    darkest: '#37248f',\n  },\n};\n","import { Platform } from 'react-native';\n\nimport palette from './palette';\nimport {\n  Colors,\n  ContainerShapes,\n  ControlSizes,\n  Elevations,\n  Fills,\n  FontFamilies,\n  FontWeights,\n  HeadingSizes,\n  ParagraphSizes,\n  TextSizes,\n  Theme,\n} from './Theme';\n\n// tslint:disable object-literal-sort-keys\n\nconst controlPaddings: ControlSizes = {\n  small: 8,\n\n  medium: 16,\n\n  large: 24,\n};\n\nconst controlHeights: ControlSizes = {\n  small: 40,\n\n  medium: 48,\n\n  large: 56,\n};\n\nconst controlBorderRadius: ControlSizes = {\n  small: 4,\n\n  medium: 4,\n\n  large: 4,\n};\n\nconst colors: Colors = {\n  background: {\n    base: 'white',\n    content: 'white',\n    overlay: 'rgba(0,0,0,0.3)',\n\n    greyLight: palette.neutral.lightest,\n    greyDefault: '#F5F6F7',\n    greyDark: palette.neutral.light,\n\n    primaryLight: palette.teal.lightest,\n    primaryDefault: palette.teal.base,\n    primaryDark: palette.teal.dark,\n\n    secondaryLight: palette.orange.lightest,\n    secondaryDefault: palette.orange.base,\n    secondaryDark: palette.orange.dark,\n\n    dangerLight: palette.red.lightest,\n    dangerDefault: palette.red.base,\n    dangerDark: palette.red.dark,\n\n    infoLight: palette.blue.lightest,\n    infoDefault: palette.blue.base,\n    infoDark: palette.blue.dark,\n\n    successLight: palette.green.lightest,\n    successDefault: palette.green.base,\n    successDark: palette.green.dark,\n\n    warningLight: palette.orange.lightest,\n    warningDefault: palette.orange.base,\n    warningDark: palette.orange.dark,\n  },\n\n  border: {\n    default: palette.neutral.light,\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n\n  button: {\n    disabled: palette.neutral.light,\n    disabledText: palette.neutral.darkest,\n\n    default: palette.neutral.lightest,\n    defaultText: palette.neutral.darkest,\n\n    primary: palette.teal.base,\n    primaryText: 'white',\n\n    secondary: palette.orange.base,\n    secondaryText: 'white',\n\n    danger: palette.red.base,\n    dangerText: 'white',\n  },\n\n  text: {\n    link: palette.neutral.darkest,\n    default: palette.neutral.darkest,\n    muted: palette.neutral.dark,\n    white: 'white',\n    selected: 'white',\n\n    primary: palette.teal.darkest,\n    secondary: palette.orange.darkest,\n\n    danger: palette.red.darkest,\n    info: palette.blue.darkest,\n    success: palette.green.darkest,\n    warning: palette.orange.darkest,\n  },\n};\n\nconst elevations: Elevations = [\n  {\n    elevation: 0,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  {\n    elevation: 1,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 2,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 2, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  {\n    elevation: 3,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n  },\n  {\n    elevation: 4,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 4, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n  },\n  {\n    elevation: 5,\n    shadowColor: palette.neutral.dark,\n    shadowOffset: { width: 5, height: 5 },\n    shadowOpacity: 0.35,\n    shadowRadius: 8,\n  },\n];\n\nconst fills: Fills = {\n  solid: {\n    neutral: {\n      backgroundColor: palette.neutral.base,\n      color: 'white',\n    },\n\n    blue: {\n      backgroundColor: palette.blue.base,\n      color: 'white',\n    },\n\n    red: {\n      backgroundColor: palette.red.base,\n      color: 'white',\n    },\n\n    orange: {\n      backgroundColor: palette.orange.base,\n      color: 'white',\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.base,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.base,\n      color: 'white',\n    },\n\n    teal: {\n      backgroundColor: palette.teal.base,\n      color: 'white',\n    },\n\n    purple: {\n      backgroundColor: palette.purple.base,\n      color: 'white',\n    },\n  },\n\n  subtle: {\n    neutral: {\n      backgroundColor: palette.neutral.light,\n      color: palette.neutral.darkest,\n    },\n\n    blue: {\n      backgroundColor: palette.blue.light,\n      color: palette.blue.darkest,\n    },\n\n    red: {\n      backgroundColor: palette.red.light,\n      color: palette.red.darkest,\n    },\n\n    orange: {\n      backgroundColor: palette.orange.light,\n      color: palette.orange.darkest,\n    },\n\n    yellow: {\n      backgroundColor: palette.yellow.light,\n      color: palette.yellow.darkest,\n    },\n\n    green: {\n      backgroundColor: palette.green.light,\n      color: palette.green.darkest,\n    },\n\n    teal: {\n      backgroundColor: palette.teal.light,\n      color: palette.teal.darkest,\n    },\n\n    purple: {\n      backgroundColor: palette.purple.light,\n      color: palette.purple.darkest,\n    },\n  },\n};\n\n// Use system font on the Web\nconst fontFamilies: FontFamilies =\n  Platform.OS === 'web'\n    ? {\n        heading: `\"SF UI Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        mono: `\"SF Mono\", \"Monaco\", \"Inconsolata\", \"Fira Mono\", \"Droid Sans Mono\", \"Source Code Pro\", monospace`,\n        text: `\"SF UI Text\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      }\n    : {\n        heading: 'System',\n        mono: 'System',\n        text: 'System',\n      };\n\nconst fontWeights: FontWeights = {\n  bold: 'bold',\n  light: '300',\n  normal: 'normal',\n};\n\nconst headingSizes: HeadingSizes = {\n  xxxlarge: {\n    fontSize: 35,\n    letterSpacing: -0.2,\n    lineHeight: 40,\n  },\n\n  xxlarge: {\n    fontSize: 29,\n    letterSpacing: -0.2,\n    lineHeight: 32,\n  },\n\n  xlarge: {\n    fontSize: 24,\n    letterSpacing: -0.07,\n    lineHeight: 28,\n  },\n\n  large: {\n    fontSize: 20,\n    letterSpacing: -0.07,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n\n  small: {\n    fontSize: 14,\n    letterSpacing: -0.05,\n    lineHeight: 20,\n  },\n};\n\nconst paragraphSizes: ParagraphSizes = {\n  small: {\n    fontSize: 14,\n    lineHeight: 24,\n  },\n\n  medium: {\n    fontSize: 16,\n    lineHeight: 21,\n  },\n\n  large: {\n    fontSize: 18,\n    lineHeight: 18,\n  },\n};\n\nconst textSizes: TextSizes = {\n  large: {\n    fontSize: 20,\n  },\n  medium: {\n    fontSize: 16,\n  },\n  small: {\n    fontSize: 14,\n  },\n  xsmall: {\n    fontSize: 12,\n  },\n};\n\nconst containerShapes: ContainerShapes = {\n  circle: {\n    borderRadius: 999,\n  },\n  pill: {\n    borderRadius: 999,\n  },\n  rounded: {\n    borderRadius: controlBorderRadius.medium,\n  },\n  roundedBottom: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderBottomRightRadius: controlBorderRadius.medium,\n  },\n  roundedLeft: {\n    borderBottomLeftRadius: controlBorderRadius.medium,\n    borderTopLeftRadius: controlBorderRadius.medium,\n  },\n  roundedRight: {\n    borderBottomRightRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  roundedTop: {\n    borderTopLeftRadius: controlBorderRadius.medium,\n    borderTopRightRadius: controlBorderRadius.medium,\n  },\n  square: {\n    borderRadius: 0,\n  },\n};\n\nexport const defaultTheme: Theme = {\n  colors,\n  fills,\n\n  fontFamilies,\n  fontWeights,\n\n  headingSizes,\n  paragraphSizes,\n  textSizes,\n\n  elevations,\n\n  controlBorderRadius,\n  controlHeights,\n  controlPaddings,\n\n  containerShapes,\n\n  components: {},\n};\n","import deepMerge from 'deepmerge';\nimport React from 'react';\nimport { TextStyle, ViewStyle } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { GetAlertStyles } from '../components/Alert/Alert.styles';\nimport { GetAvatarStyles } from '../components/Avatar/Avatar.styles';\nimport { GetBadgeStyles } from '../components/Badge/Badge.styles';\nimport { GetButtonStyles } from '../components/Button/Button.styles';\nimport { GetCheckboxStyles } from '../components/Checkbox/Checkbox.styles';\nimport { GetCollapsibleStyles } from '../components/Collapsible/Collapsible.styles';\nimport { GetCounterStyles } from '../components/Counter/Counter.styles';\nimport { GetDialogStyles } from '../components/Dialog/Dialog.styles';\nimport { GetDividerStyles } from '../components/Divider/Divider.styles';\nimport { GetDrawerStyles } from '../components/Drawer/Drawer.styles';\nimport { GetFormFieldStyles } from '../components/Form/FormField.styles';\nimport { GetTextInputStyles } from '../components/Inputs/TextInput.styles';\nimport { GetColumnStyles } from '../components/Layout/Column.styles';\nimport { GetContainerStyles } from '../components/Layout/Container.styles';\nimport { GetRowStyles } from '../components/Layout/Row.styles';\nimport { GetListItemStyles } from '../components/ListItem/ListItem.styles';\nimport { GetOverlayStyles } from '../components/Overlay/Overlay.styles';\nimport { GetPickerButtonStyles } from '../components/Pickers/PickerButton.styles';\nimport { GetPopoverStyles } from '../components/Popover/Popover.styles';\nimport { GetPositionerStyles } from '../components/Positioner/Positioner.styles';\nimport { GetProgressBarStyles } from '../components/ProgressBar/ProgressBar.styles';\nimport { GetRatingStyles } from '../components/Rating/Rating.styles';\nimport { GetSliderStyles } from '../components/Slider/Slider.styles';\nimport { GetSwitchStyles } from '../components/Switch/Switch.styles';\nimport { GetTabStyles } from '../components/Tabs/Tab.styles';\nimport { GetTabsStyles } from '../components/Tabs/Tabs.styles';\nimport { GetToastStyles } from '../components/Toast/Toast.styles';\nimport { GetHeadingStyles } from '../components/Typography/Heading.styles';\nimport { GetLabelStyles } from '../components/Typography/Label.styles';\nimport { GetParagraphStyles } from '../components/Typography/Paragraph.styles';\nimport { GetTextStyles } from '../components/Typography/Text.styles';\nimport { GetWheelPickerStyles } from '../components/WheelPicker/WheelPicker.styles';\nimport { defaultTheme } from './defaultTheme';\n\nexport interface TextSizes {\n  xsmall: TextStyle;\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n}\nexport type TextSize = keyof TextSizes | number;\n\nexport interface HeadingSizes {\n  xxxlarge: TextStyle;\n  xxlarge: TextStyle;\n  xlarge: TextStyle;\n  large: TextStyle;\n  medium: TextStyle;\n  small: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type HeadingSize = keyof HeadingSizes | number;\n\nexport interface ParagraphSizes {\n  small: TextStyle;\n  medium: TextStyle;\n  large: TextStyle;\n\n  [size: string]: TextStyle | undefined;\n}\n\nexport type ParagraphSize = keyof ParagraphSizes | number;\n\nexport interface FontFamilies {\n  heading: string;\n  mono: string;\n  text: string;\n}\nexport type FontFamily = keyof FontFamilies;\n\nexport type RNFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface FontWeights {\n  light?: RNFontWeight;\n  normal?: RNFontWeight;\n  bold?: RNFontWeight;\n}\n\nexport type FontWeight = keyof FontWeights | RNFontWeight;\n\nexport interface TextColors {\n  muted: string;\n  default: string;\n\n  link: string;\n  white: string;\n  selected: string;\n\n  primary: string;\n  secondary: string;\n\n  danger: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\nexport type TextColor = keyof TextColors | string;\n\nexport interface ButtonColors {\n  danger: string;\n  default: string;\n  disabled: string;\n  primary: string;\n  secondary: string;\n}\n\nexport interface ButtonColorsWithText extends ButtonColors {\n  dangerText: string;\n  defaultText: string;\n  disabledText: string;\n  primaryText: string;\n  secondaryText: string;\n}\n\nexport type ButtonColor = keyof ButtonColors | string;\n\nexport interface BorderColors {\n  danger: string;\n  default: string;\n  info: string;\n  primary: string;\n  secondary: string;\n  success: string;\n  warning: string;\n}\n\nexport type BorderColor = keyof BorderColors | string;\n\nexport interface BackgroundColors {\n  content: string;\n  base: string;\n  overlay: string;\n\n  greyLight: string;\n  greyDefault: string;\n  greyDark: string;\n\n  primaryLight: string;\n  primaryDefault: string;\n  primaryDark: string;\n\n  secondaryLight: string;\n  secondaryDefault: string;\n  secondaryDark: string;\n\n  dangerLight: string;\n  dangerDefault: string;\n  dangerDark: string;\n\n  infoLight: string;\n  infoDefault: string;\n  infoDark: string;\n\n  successLight: string;\n  successDefault: string;\n  successDark: string;\n\n  warningLight: string;\n  warningDefault: string;\n  warningDark: string;\n}\n\nexport type BackgroundColor = keyof BackgroundColors | string;\n\nexport interface Colors {\n  background: BackgroundColors;\n  border: BorderColors;\n  button: ButtonColorsWithText;\n  text: TextColors;\n}\n\nexport type Elevations = ViewStyle[];\nexport type Elevation = ViewStyle;\n\nexport interface ControlSizes {\n  small: number;\n  medium: number;\n  large: number;\n}\n\nexport type ControlSize = keyof ControlSizes;\n\nexport interface FillColorProps {\n  backgroundColor: string;\n  color: string;\n}\n\nexport interface FillColors {\n  neutral: FillColorProps;\n  blue: FillColorProps;\n  red: FillColorProps;\n  orange: FillColorProps;\n  yellow: FillColorProps;\n  green: FillColorProps;\n  teal: FillColorProps;\n  purple: FillColorProps;\n}\n\nexport type FillColor = keyof FillColors;\n\nexport interface Fills {\n  subtle: FillColors;\n  solid: FillColors;\n}\n\nexport interface ContainerShapes {\n  circle: ViewStyle;\n  pill: ViewStyle;\n  rounded: ViewStyle;\n  roundedBottom: ViewStyle;\n  roundedLeft: ViewStyle;\n  roundedRight: ViewStyle;\n  roundedTop: ViewStyle;\n  square: ViewStyle;\n}\n\nexport type ContainerShape = keyof ContainerShapes;\n\nexport interface Theme {\n  // Colors\n  colors: Colors;\n  fills: Fills;\n\n  // Typography\n  fontFamilies: FontFamilies;\n  fontWeights: FontWeights;\n\n  headingSizes: HeadingSizes;\n  paragraphSizes: ParagraphSizes;\n  textSizes: TextSizes;\n\n  // Elevations\n  elevations: Elevations;\n\n  // Controls - Buttons, Controls etc.\n  controlPaddings: ControlSizes;\n  controlHeights: ControlSizes;\n  controlBorderRadius: ControlSizes;\n\n  // Containers\n  containerShapes: ContainerShapes;\n\n  components: {\n    getAlertStyles?: GetAlertStyles;\n    getAvatarStyles?: GetAvatarStyles;\n    getBadgeStyles?: GetBadgeStyles;\n    getButtonStyles?: GetButtonStyles;\n    getCheckboxStyles?: GetCheckboxStyles;\n    getCollapsibleStyles?: GetCollapsibleStyles;\n    getCounterStyles?: GetCounterStyles;\n    getDialogStyles?: GetDialogStyles;\n    getDividerStyles?: GetDividerStyles;\n    getDrawerStyles?: GetDrawerStyles;\n    getFormFieldStyles?: GetFormFieldStyles;\n    getColumnStyles?: GetColumnStyles;\n    getContainerStyles?: GetContainerStyles;\n    getRowStyles?: GetRowStyles;\n    getTextInputStyles?: GetTextInputStyles;\n    getLabelStyles?: GetLabelStyles;\n    getListItemStyles?: GetListItemStyles;\n    getOverlayStyles?: GetOverlayStyles;\n    getPickerButtonStyles?: GetPickerButtonStyles;\n    getPopoverStyles?: GetPopoverStyles;\n    getPositionerStyles?: GetPositionerStyles;\n    getProgressBarStyles?: GetProgressBarStyles;\n    getRatingStyles?: GetRatingStyles;\n    getWheelPickerStyles?: GetWheelPickerStyles;\n    getSliderStyles?: GetSliderStyles;\n    getSwitchStyles?: GetSwitchStyles;\n    getTabStyles?: GetTabStyles;\n    getTabsStyles?: GetTabsStyles;\n    getToastStyles?: GetToastStyles;\n    getHeadingStyles?: GetHeadingStyles;\n    getTextStyles?: GetTextStyles;\n    getParagraphStyles?: GetParagraphStyles;\n  };\n}\n\nexport const ThemeContext = React.createContext(defaultTheme);\n\nexport interface ThemeProviderProps {\n  children?: React.ReactNode;\n  value?: DeepPartial<Theme>;\n}\n\nexport const createTheme = (theme?: DeepPartial<Theme>): Theme => {\n  return theme\n    ? deepMerge<Theme>(defaultTheme, theme as Partial<Theme>)\n    : defaultTheme;\n};\n\nexport const ThemeProvider = (props: ThemeProviderProps) => {\n  const { children, value = defaultTheme } = props;\n\n  const theme = createTheme(value);\n\n  return (\n    <ThemeContext.Provider value={theme}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return React.useContext(ThemeContext);\n};\n","import merge from 'deepmerge';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { Theme } from '../theme';\n\nexport type GetStyles<TStyles = any, TStyleProps = any> = (\n  props: TStyleProps,\n  theme: Theme,\n) => TStyles;\n\nexport type ArgumentTypes<T> = T extends (...args: infer U) => infer R\n  ? U\n  : never;\nexport type ReplaceReturnType<T, TNewReturn> = (\n  ...a: ArgumentTypes<T>\n) => TNewReturn;\n\nexport const mergeStyles = <TStyles = any, TStyleProps = any>(\n  getDefaultStyles: GetStyles<TStyles, TStyleProps>,\n  getOverridingStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n  getThemeStyles?: GetStyles<DeepPartial<TStyles>, TStyleProps>,\n) => (props: TStyleProps, theme: Theme): TStyles => {\n  const defaultStyles = getDefaultStyles(props, theme);\n\n  const styles: Array<Partial<TStyles>> = [defaultStyles];\n\n  if (getThemeStyles) {\n    styles.push(getThemeStyles(props, theme) as Partial<TStyles>);\n  }\n\n  if (getOverridingStyles) {\n    styles.push(getOverridingStyles(props, theme) as Partial<TStyles>);\n  }\n\n  return merge.all<TStyles>(styles);\n};\n"],"sourceRoot":""}