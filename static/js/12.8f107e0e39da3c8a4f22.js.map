{"version":3,"sources":["webpack:///./src/components/Button/BackButton.tsx","webpack:///./src/components/Button/Button.styles.ts","webpack:///./src/components/Button/Button.tsx","webpack:///./src/components/Button/index.ts","webpack:///./src/components/Dialog/Dialog.mdx","webpack:///./src/components/Dialog/Dialog.styles.ts","webpack:///./src/components/Dialog/Dialog.tsx","webpack:///./src/components/Dialog/index.ts","webpack:///./src/components/Loading/LoadingDots.tsx","webpack:///./src/components/Loading/index.ts","webpack:///./src/components/Modal/CloseableModal.tsx","webpack:///./src/components/Modal/FormModal.tsx","webpack:///./src/components/Modal/HistoryModal.web.tsx","webpack:///./src/components/Modal/Modal.tsx","webpack:///./src/components/Modal/ModalBase.web.tsx","webpack:///./src/components/Modal/ModalContent.tsx","webpack:///./src/components/Modal/index.ts","webpack:///./src/components/Overlay/Overlay.styles.ts","webpack:///./src/components/Overlay/Overlay.tsx","webpack:///./src/components/Overlay/index.ts","webpack:///./src/icons/Icon.web.tsx","webpack:///./src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","defaultValue","required","type","fills","fontFamilies","fontWeights","headingSizes","paragraphSizes","elevations","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","getButtonStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","value","accessibilityLabel","accessibilityStates","accessibilityHint","accessibilityComponentType","accessibilityLiveRegion","importantForAccessibility","accessibilityElementsHidden","accessibilityTraits","onAccessibilityTap","onMagicTap","accessibilityIgnoresInvertColors","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react","_interopRequireDefault","_tag","_reactPowerplug","_docz","_","MDXContent","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","MDXTag","id","Playground","__position","__code","__scope","Toggle","TouchableOpacity","Dialog","Box","Heading","initial","_ref","on","toggle","header","padding","footer","console","log","isVisible","onRequestClose","useHistory","modalContainerStyle","containerStyle","bodyStyle","PropsTable","of","Component","getDialogVariables","body","maxHeight","container","elevation","maxWidth","minWidth","position","zIndex","modalContainer","width","getDialogStyles","dialogVariables","_Modal","_Overlay","_Dialog","children","_props$onRequestClose","Modal","visible","transparent","Overlay","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","dots","map","o","marginLeft","marginRight","opacity","defaultProps","_LoadingDots","_ModalContent","CloseableModal","rightSide","onClose","modalProps","ModalContent","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","overlayVariables","overlayStyle","_props$transparent","getOverlayStyles","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","Iconweb","_Icon"],"mappings":"wYAAAA,EAAAC,EAAAC,EAAA,kCAEAC,EAAAD,EAAA,wBACAE,EAAAF,EAAA,wBACAG,EAAAH,EAAA,sCAEaI,EAAa,SAACC,GACzB,IAAMC,GAAQ,EAAAJ,EAAAK,YAEd,OACET,EAAAU,cAACL,EAAAM,QAAD,EAAAC,EAAAC,SAAA,CACEC,WAAW,UACXC,UAAQ,EACRC,WACEhB,EAAAU,cAACP,EAAAc,KAAD,CAAMC,KAAK,aAAaC,KAAM,GAAIC,MAAOZ,EAAMa,OAAOC,KAAKT,UAE7DM,KAAK,SACDZ,oBAIV,IAEID,EAAWiB,YAAc,aAEzBjB,EAAWkB,aAAe,CAAEC,YAAe,GAAIF,YAAe,aAAchB,MAAS,IAE9C,qBAA5BmB,0BAEPA,wBAAwB,mDAAqD,CAAEC,WAAYrB,EAAWkB,aAAcN,KAAM,aAAcU,KAAM,oDAEtJ,MAAOC,yXCqBMC,EAAqB,SAACtB,GACjC,MAAO,CACLuB,YAAa,CACXC,QAAS,CACPnB,QAAS,CACPoB,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCf,MAAOZ,EAAMa,OAAOC,KAAKT,QAEzBuB,WAAY5B,EAAMa,OAAOa,WAAWG,aAGtCC,OAAQ,CACNL,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCf,MAAOZ,EAAMa,OAAOC,KAAKgB,OAEzBF,WAAY5B,EAAMa,OAAOa,WAAWG,aAEtCE,QAAS,CACPN,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCf,MAAOZ,EAAMa,OAAOC,KAAKiB,QAEzBH,WAAY5B,EAAMa,OAAOa,WAAWG,aAEtCG,UAAW,CACTP,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCf,MAAOZ,EAAMa,OAAOC,KAAKkB,UACrBhC,EAAMa,OAAOC,KAAKkB,UAClBhC,EAAMa,OAAOC,KAAKT,QAEtBuB,WAAY5B,EAAMa,OAAOa,WAAWG,cAGxCE,QAAS,CACP1B,QAAS,CACPoB,gBAAiBzB,EAAMa,OAAOa,WAAWO,UACzCC,YAAalC,EAAMa,OAAOsB,OAAO9B,QACjCO,MAAOZ,EAAMa,OAAOC,KAAKT,QAEzBuB,WAAY5B,EAAMa,OAAOa,WAAWG,YACpCO,uBAAwBpC,EAAMa,OAAOa,WAAWW,SAGlDP,OAAQ,CACNL,gBAAiBzB,EAAMa,OAAOa,WAAWY,cACzCJ,YAAalC,EAAMa,OAAOsB,OAAOL,OACjClB,MAAO,QAEPgB,WAAY5B,EAAMa,OAAOa,WAAWa,WACpCH,uBAAwBpC,EAAMa,OAAOa,WAAWc,aAGlDT,QAAS,CACPN,gBAAiBzB,EAAMa,OAAOa,WAAWe,eACzCP,YAAalC,EAAMa,OAAOsB,OAAOJ,QACjCnB,MAAO,QAEPgB,WAAY5B,EAAMa,OAAOa,WAAWgB,YACpCN,uBAAwBpC,EAAMa,OAAOa,WAAWiB,cAGlDX,UAAW,CACTP,gBAAiBzB,EAAMa,OAAOa,WAAWkB,iBACzCV,YAAalC,EAAMa,OAAOsB,OAAOH,UACjCpB,MAAO,QAEPgB,WAAY5B,EAAMa,OAAOa,WAAWmB,cACpCT,uBAAwBpC,EAAMa,OAAOa,WAAWoB,iBAIpDC,QAAS,CACP1C,QAAS,CACPoB,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCO,YAAalC,EAAMa,OAAOC,KAAKT,QAC/B2C,YAAa,EACbpC,MAAOZ,EAAMa,OAAOC,KAAKT,QAEzBuB,WAAY5B,EAAMa,OAAOa,WAAWG,aAGtCC,OAAQ,CACNL,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCO,YAAalC,EAAMa,OAAOsB,OAAOL,OACjCkB,YAAa,EACbpC,MAAOZ,EAAMa,OAAOC,KAAKgB,OAEzBF,WAAY5B,EAAMa,OAAOa,WAAWc,aAGtCT,QAAS,CACPN,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCO,YAAalC,EAAMa,OAAOsB,OAAOJ,QACjCiB,YAAa,EACbpC,MAAOZ,EAAMa,OAAOC,KAAKiB,QAEzBH,WAAY5B,EAAMa,OAAOa,WAAWiB,cAGtCX,UAAW,CACTP,gBAAiBzB,EAAMa,OAAOa,WAAWC,MACzCO,YAAalC,EAAMa,OAAOsB,OAAOH,UACjCgB,YAAa,EACbpC,MAAOZ,EAAMa,OAAOC,KAAKkB,UAEzBJ,WAAY5B,EAAMa,OAAOa,WAAWoB,kBAI1CG,SAAU,CACRxB,gBAAiBzB,EAAMa,OAAOa,WAAWwB,SAEzCtC,MAAOZ,EAAMa,OAAOC,KAAKqC,OAE3BC,MAAO,CACLC,MAAO,CACLC,aAActD,EAAMuD,oBAAoBF,MACxCG,SAAUxD,EAAMyD,UAAUJ,MAAMG,UAAY,GAC5CE,OAAQ1D,EAAM2D,eAAeN,MAC7BO,YAAa5D,EAAM6D,gBAAgBR,MACnCS,aAAc9D,EAAM6D,gBAAgBR,OAGtCU,OAAQ,CACNT,aAActD,EAAMuD,oBAAoBQ,OACxCP,SAAUxD,EAAMyD,UAAUM,OAAOP,UAAY,GAC7CE,OAAQ1D,EAAM2D,eAAeI,OAC7BH,YAAa5D,EAAM6D,gBAAgBE,OACnCD,aAAc9D,EAAM6D,gBAAgBE,QAGtCC,MAAO,CACLV,aAActD,EAAMuD,oBAAoBS,MACxCR,SAAUxD,EAAMyD,UAAUO,MAAMR,UAAY,GAC5CE,OAAQ1D,EAAM2D,eAAeK,MAC7BJ,YAAa5D,EAAM6D,gBAAgBG,MACnCF,aAAc9D,EAAM6D,gBAAgBG,mDAyBI,SAACC,EAAkBjE,GAAU,IAEzEM,EAME2D,EANF3D,WACAM,EAKEqD,EALFrD,MACAD,EAIEsD,EAJFtD,KACAuD,EAGED,EAHFC,WACAC,EAEEF,EAFFE,UACA5D,EACE0D,EADF1D,SAPyE6D,EAUnB9C,EACtDtB,GADMuB,EAVmE6C,EAUnE7C,YAAa6B,EAVsDgB,EAUtDhB,MAAOH,EAV+CmB,EAU/CnB,SAAaoB,GAVkC,EAAAC,EAAAjE,SAAA+D,EAAA,oCAAAG,EAmBvEhD,EAAYjB,GAAYM,GAJnB4D,EAfkED,EAezE3D,MACAgB,EAhByE2C,EAgBzE3C,WACAQ,EAjByEmC,EAiBzEnC,uBACGqC,GAlBsE,EAAAH,EAAAjE,SAAAkE,EAAA,iDAAAG,EAqBtCtB,EAAMzC,GAAnC6C,EArBmEkB,EAqBnElB,SAAamB,GArBsD,EAAAL,EAAAjE,SAAAqE,EAAA,cAsB5DE,EAAqD3B,EAA5DrC,MAAmCiE,GAtBgC,EAAAP,EAAAjE,SAsBP4C,EAtBO,WAwB3E,MAAO,CACLwB,aAAW,EAAAK,EAAAzE,SAAA,GACL6D,GAAU,EAAAY,EAAAzE,SAAA,GAELwE,EACAF,IAHK,EAAAG,EAAAzE,SAAA,GAMLsE,EACAN,EACAI,EACCN,EAAY,CAAE1C,gBAAiBW,GAA2B,IAEhE7B,EACA,CACEwE,UAAW,aACXC,cAAe,MACfC,SAAU,QAEZ,IAENrD,aACAsD,UAAW,CACTC,WAAY,SACZvE,MAAOsD,EAAaU,EAA0BJ,EAC9CY,QAAS,OACT5B,WACA6B,WAAY,MACZC,eAAgB,SAChBC,UAAW,YAIjB,IAEIjE,EAAmBP,YAAc,qBAEjCO,EAAmBN,aAAe,CAAEC,YAAe,GAAIF,YAAe,qBAAsBhB,MAAS,CAAEc,OAAU,CAAE2E,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,SAAU+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAciF,MAAS,CAAEH,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,UAAakF,aAAgB,CAAEJ,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBmF,YAAe,CAAEL,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,cAAe+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBoF,aAAgB,CAAEN,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBqF,eAAkB,CAAEP,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAAsB+C,UAAa,CAAE+B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,cAAiBsF,WAAc,CAAER,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,aAAc+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBmD,gBAAmB,CAAE2B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,kBAAmB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBiD,eAAkB,CAAE6B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoB6C,oBAAuB,CAAEiC,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,sBAAuB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAE3gD,qBAA5BQ,0BAEPA,wBAAwB,6DAA+D,CAAEC,WAAYG,EAAmBN,aAAcN,KAAM,qBAAsBU,KAAM,8DAEhL,MAAOC,uZCvRP7B,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAQAE,EAAAF,EAAA,wBACAwG,EAAAxG,EAAA,8BACAyG,EAAAzG,EAAA,oCACA0G,EAAA1G,EAAA,qCACA2G,EAAA3G,EAAA,wCACAG,EAAAH,EAAA,4CAsFaS,EAAS,SAACJ,GAAuB,IAAAuG,EAoBxCvG,EAlBFO,kBAF0C,IAAAgG,EAE7B,UAF6BA,EAG1CC,EAiBExG,EAjBFwG,MAH0CC,EAoBxCzG,EAhBFa,aAJ0C,IAAA4F,EAIlC,UAJkCA,EAK1CC,EAeE1G,EAfF0G,UACAC,EAcE3G,EAdF2G,UACAlG,EAaET,EAbFS,WACAmG,EAYE5G,EAZF4G,YAR0CC,GAoBxC7G,EAXF8G,SAWE9G,EAVFmE,mBAV0C,IAAA0C,KAAAE,EAoBxC/G,EATFQ,gBAX0C,IAAAuG,KAAAC,EAoBxChH,EARFoE,iBAZ0C,IAAA4C,KAAAC,EAoBxCjH,EAPFkH,eAb0C,IAAAD,EAahC,aAbgCA,EAAAE,EAoBxCnH,EAJFY,YAhB0C,IAAAuG,EAgBnC,SAhBmCA,EAiB1CC,EAGEpH,EAHFoH,OAEGC,GAnBuC,EAAA9C,EAAAjE,SAoBxCN,EApBwC,4JAsBtCC,GAAQ,EAAAJ,EAAAK,YAtB8BoH,GAwBG,EAAAnB,EAAAoB,aAC7CC,kBACAd,EAF6C,CAI7C,CACEnG,aACAM,QACAsD,aACA3D,WACA4D,YACAxD,QAEFX,GAZMyE,EAxBoC4C,EAwBpC5C,YAAaS,EAxBuBmC,EAwBvBnC,UAAWtD,EAxBYyF,EAwBZzF,WAehC,OACEpC,EAAAU,cAAC+F,EAAAuB,oBAAD,EAAApH,EAAAC,SAAA,CACEoH,YAAU,EACVC,kBAAkB,SAClBC,cAAe/F,EACfqB,YAAaiB,IAAcC,GAC3B8C,QAASA,EACTW,MAAOnD,EACP0C,OAAQA,GACJC,GAEJ5H,EAAAU,cAAC+F,EAAA4B,KAAD,CACED,MAAO,CACLzC,WAAY,SACZH,cAAe,MACftB,OAAQ,OACR4B,eAAgB,WAGjB9E,EACDhB,EAAAU,cAACiG,EAAA2B,QAAD,CACElE,YAAapD,EAAa,EAAI,EAC9BsD,aAAc4C,EAAY,EAAI,GAE7BvC,EACCwC,GAAenH,EAAAU,cAACkG,EAAA2B,YAAD,CAAanH,MAAOsE,EAAUtE,QAC3C2F,EACF/G,EAAAU,cAACmG,EAAA2B,KAAD,CACEvB,UAAW,iBAAO,CAChBvB,eAGDqB,GAED,MAELG,gBAKT,IAEIvG,EAAOY,YAAc,SAErBZ,EAAOa,aAAe,CAAEC,YAAe,GAAIF,YAAe,SAAUhB,MAAS,CAAEwG,MAAS,CAAEf,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,WAAcE,MAAS,CAAE4E,aAAgB,CAAEyC,MAAO,aAAiBhH,YAAe,4BAA6BP,KAAQ,QAAS+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,mDAA8DJ,WAAc,CAAEkF,aAAgB,CAAEyC,MAAO,aAAiBhH,YAAe,gCAAiCP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,sCAA+CC,KAAQ,CAAE6E,aAAgB,CAAEyC,MAAO,YAAgBhH,YAAe,0BAA2BP,KAAQ,OAAQ+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,iCAA0CyD,UAAa,CAAEqB,aAAgB,CAAEyC,MAAO,SAAWhH,YAAe,qFAAsFP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAemG,SAAY,CAAErB,aAAgB,CAAEyC,MAAO,SAAWhH,YAAe,+CAAgDP,KAAQ,WAAY+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAewD,WAAc,CAAEsB,aAAgB,CAAEyC,MAAO,SAAWhH,YAAe,iFAAkFP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAeH,SAAY,CAAEiF,aAAgB,CAAEyC,MAAO,SAAWhH,YAAe,oDAAqDP,KAAQ,WAAY+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAeuG,QAAW,CAAEzB,aAAgB,CAAEyC,MAAO,YAAchH,YAAe,uBAAwBP,KAAQ,UAAW+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,2CAA8CF,WAAc,CAAEgF,aAAgB,CAAEyC,MAAO,aAAehH,YAAe,gCAAiCP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAAiBgG,UAAa,CAAElB,aAAgB,CAAEyC,MAAO,aAAehH,YAAe,+BAAgCP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAAiBiG,YAAe,CAAEnB,aAAgB,CAAEyC,MAAO,aAAehH,YAAe,iCAAkCP,KAAQ,cAAe+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAAiB+F,UAAa,CAAEjB,aAAgB,KAAMvE,YAAe,+BAAgCP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,kEAAqEyG,OAAU,CAAE3B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,SAAU+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,WAAc+G,WAAc,CAAEjC,aAAgB,KAAMvE,YAAe,0HAA2HP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAewH,mBAAsB,CAAE1C,aAAgB,KAAMvE,YAAe,6NAA8NP,KAAQ,qBAAsB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,WAAcgH,kBAAqB,CAAElC,aAAgB,KAAMvE,YAAe,iIAAkIP,KAAQ,oBAAqB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,sBAAyByH,oBAAuB,CAAE3C,aAAgB,KAAMvE,YAAe,yIAA0IP,KAAQ,sBAAuB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,yBAA4B0H,kBAAqB,CAAE5C,aAAgB,KAAMvE,YAAe,uLAAwLP,KAAQ,oBAAqB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,WAAc2H,2BAA8B,CAAE7C,aAAgB,KAAMvE,YAAe,4gBAA6gBP,KAAQ,6BAA8B+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,wEAAmF4H,wBAA2B,CAAE9C,aAAgB,KAAMvE,YAAe,gRAAiRP,KAAQ,0BAA2B+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,oCAA6C6H,0BAA6B,CAAE/C,aAAgB,KAAMvE,YAAe,8oBAA+oBP,KAAQ,4BAA6B+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,kDAA6D8H,4BAA+B,CAAEhD,aAAgB,KAAMvE,YAAe,6JAA8JP,KAAQ,8BAA+B+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAe+H,oBAAuB,CAAEjD,aAAgB,KAAMvE,YAAe,gNAAiNP,KAAQ,sBAAuB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,mPAAwRgI,mBAAsB,CAAElD,aAAgB,KAAMvE,YAAe,0IAA2IP,KAAQ,qBAAsB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,eAAkBiI,WAAc,CAAEnD,aAAgB,KAAMvE,YAAe,6HAA8HP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,eAAkBkI,iCAAoC,CAAEpD,aAAgB,KAAMvE,YAAe,gHAAiHP,KAAQ,mCAAoC+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAEvzP,qBAA5BQ,0BAEPA,wBAAwB,2CAA6C,CAAEC,WAAYhB,EAAOa,aAAcN,KAAM,SAAUU,KAAM,4CAEtI,MAAOC,0GC9LP,IAAAxB,EAAAH,EAAA,sCAAAmJ,OAAAC,KAAAjJ,GAAAkJ,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAvJ,EAAAmJ,QACA,IAAAK,EAAA3J,EAAA,0CAAAmJ,OAAAC,KAAAO,GAAAN,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAC,EAAAL,qmBCAEM,EAAAC,EAAA7J,EAAA,kCACA8J,EAAA9J,EAAA,4CACA+J,EAAA/J,EAAA,8DACFuG,EAAAvG,EAAA,iDACAgK,EAAAhK,EAAA,uCACAC,EAAAD,EAAA,wBACAiK,EAAAjK,EAAA,oCACAG,EAAAH,EAAA,oCACAyG,EAAAzG,EAAA,oCACA2G,EAAA3G,EAAA,wCAKqBkK,cACnB,SAAAA,EAAY7J,GAAO,IAAA8J,EAAA,SAAAC,EAAAzJ,SAAA0J,KAAAH,IACjBC,GAAA,EAAAG,EAAA3J,SAAA0J,MAAA,EAAAE,EAAA5J,SAAAuJ,GAAAM,KAAAH,KAAMhK,KACDoK,OAAS,KAFGN,2EAIV,IAAAO,EAC0BL,KAAKhK,MAA9BsK,EADDD,EACCC,WAAetK,GADhB,EAAAuE,EAAAjE,SAAA+J,EAAA,gBAGP,OAAOd,EAAAjJ,QAAAH,cAACsJ,EAAAc,OAAD,CACE5J,KAAK,UAEL2J,WAAYA,GAEzBf,EAAAjJ,QAAAH,cAACsJ,EAAAc,OAAD,CAAQ5J,KAAK,KAAK2J,WAAYA,EAAYtK,MAAO,CAACwK,GAAK,WAAvD,UACAjB,EAAAjJ,QAAAH,cAACsJ,EAAAc,OAAD,CAAQ5J,KAAK,IAAI2J,WAAYA,GAA7B,gHACAf,EAAAjJ,QAAAH,cAACsJ,EAAAc,OAAD,CAAQ5J,KAAK,KAAK2J,WAAYA,EAAYtK,MAAO,CAACwK,GAAK,UAAvD,SACAjB,EAAAjJ,QAAAH,cAACwJ,EAAAc,WAAD,CAAYC,WAAY,EAAGC,OAAQ,+zCAAs1CC,QAAS,CAAC5K,MAAOgK,KAAOA,KAAKhK,MAAQA,EAAM6K,gBAAOC,oCAAiBpK,YAAKqK,gBAAO3K,gBAAO4K,UAAIjD,kBAAQE,YAAKgD,oBAC99C1B,EAAAjJ,QAAAH,cAACuJ,EAAAmB,OAAD,CAAQK,SAAS,GACd,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,OAAP,OACC9B,EAAAjJ,QAAAH,cAACiG,EAAA4E,IAAD,KACEzB,EAAAjJ,QAAAH,cAACyJ,EAAAmB,OAAD,CACEO,OACE/B,EAAAjJ,QAAAH,cAACiG,EAAA2B,QAAD,CACEwD,QAAS,EACTtG,cAAc,MACdM,eAAe,gBACfH,WAAW,UAEXmE,EAAAjJ,QAAAH,cAACmG,EAAA2E,QAAD,cACA1B,EAAAjJ,QAAAH,cAAC+F,EAAA4E,iBAAD,CAAkB5D,QAASmE,GACzB9B,EAAAjJ,QAAAH,cAACP,EAAAc,KAAD,CAAMC,KAAK,IAAIC,KAAM,OAI3B4K,OACEjC,EAAAjJ,QAAAH,cAACiG,EAAA2B,QAAD,CAASwD,QAAS,EAAGtG,cAAc,MAAMM,eAAe,YACtDgE,EAAAjJ,QAAAH,cAACL,EAAAM,OAAD,CAAQG,WAAW,UAAU2G,QAASmE,EAAQ7E,MAAM,WACpD+C,EAAAjJ,QAAAH,cAACiG,EAAA2B,QAAD,CAASlE,YAAa,GACpB0F,EAAAjJ,QAAAH,cAACL,EAAAM,OAAD,CACES,MAAM,UACNqG,QAAS,kBAAMuE,QAAQC,IAAI,mBAC3BlF,MAAM,aAKdmF,UAAWP,EACXQ,eAAgBP,EAChBQ,YAAY,EACZnF,UAAW,SAAC1G,EAAOC,GAAR,MAAmB,CAC5B6L,oBAAqB,GACrBC,eAAgB,GAChBC,UAAW,MAGbzC,EAAAjJ,QAAAH,cAACiG,EAAA4E,IAAD,CAAKrH,OAAQ,MACX4F,EAAAjJ,QAAAH,cAACmG,EAAA2B,KAAD,wCAGJsB,EAAAjJ,QAAAH,cAACL,EAAAM,OAAD,CAAQ8G,QAASmE,EAAQ7E,MAAM,oBAKvC+C,EAAAjJ,QAAAH,cAACsJ,EAAAc,OAAD,CAAQ5J,KAAK,KAAK2J,WAAYA,EAAYtK,MAAO,CAACwK,GAAK,iBAAvD,gBACAjB,EAAAjJ,QAAAH,cAACwJ,EAAAsC,WAAD,CAAYC,GAAInB,mBAjEwBtL,UAAM0M,gLCLvC,IAAMC,EAAqB,SAACnM,GACjC,MAAO,CACLoM,KAAM,CACJC,UAAW,KAEbC,UAAW,CACT7K,gBAAiB,QACjB8K,UAAW,EACXC,SAAU,IACVC,SAAU,IACVC,SAAU,WACVC,OAAQ,GAEVC,eAAgB,CACdzH,WAAY,SACZC,QAAS,OACT1B,OAAQ,OACR4B,eAAgB,SAChBuH,MAAO,iCAYN,IAAMC,EAAmC,SAAA9M,GAC9C,IAAM+M,EA9BC,CACLX,KAAM,CACJC,UAAW,KAEbC,UAAW,CACT7K,gBAAiB,QACjB8K,UAAW,EACXC,SAAU,IACVC,SAAU,IACVC,SAAU,WACVC,OAAQ,GAEVC,eAAgB,CACdzH,WAAY,SACZC,QAAS,OACT1B,OAAQ,OACR4B,eAAgB,SAChBuH,MAAO,SAeX,MAAO,CACLd,UAAWgB,EAAgBX,KAC3BN,eAAgBiB,EAAgBT,UAChCT,oBAAqBkB,EAAgBH,qCAGzC,IAEIT,EAAmBpL,YAAc,qBAEjCoL,EAAmBnL,aAAe,CAAEC,YAAe,GAAIF,YAAe,qBAAsBhB,MAAS,CAAEc,OAAU,CAAE2E,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,SAAU+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAciF,MAAS,CAAEH,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,UAAakF,aAAgB,CAAEJ,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBmF,YAAe,CAAEL,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,cAAe+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBoF,aAAgB,CAAEN,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBqF,eAAkB,CAAEP,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAAsB+C,UAAa,CAAE+B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,cAAiBsF,WAAc,CAAER,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,aAAc+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBmD,gBAAmB,CAAE2B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,kBAAmB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBiD,eAAkB,CAAE6B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoB6C,oBAAuB,CAAEiC,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,sBAAuB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAE3gD,qBAA5BQ,0BAEPA,wBAAwB,6DAA+D,CAAEC,WAAYgL,EAAmBnL,aAAcN,KAAM,qBAAsBU,KAAM,8DAEhL,MAAOC,IAA2C,IAE9CyL,EAAgB/L,YAAc,kBAE9B+L,EAAgB9L,aAAe,CAAEC,YAAe,GAAIF,YAAe,kBAAmBhB,MAAS,CAAEc,OAAU,CAAE2E,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,SAAU+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAciF,MAAS,CAAEH,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,UAAakF,aAAgB,CAAEJ,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBmF,YAAe,CAAEL,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,cAAe+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBoF,aAAgB,CAAEN,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBqF,eAAkB,CAAEP,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAAsB+C,UAAa,CAAE+B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,cAAiBsF,WAAc,CAAER,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,aAAc+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBmD,gBAAmB,CAAE2B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,kBAAmB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBiD,eAAkB,CAAE6B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoB6C,oBAAuB,CAAEiC,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,sBAAuB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAErgD,qBAA5BQ,0BAEPA,wBAAwB,0DAA4D,CAAEC,WAAY2L,EAAgB9L,aAAcN,KAAM,kBAAmBU,KAAM,2DAEvK,MAAOC,uMCrEP,IAAA7B,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAGAE,EAAAF,EAAA,wBACAwG,EAAAxG,EAAA,8BACAsN,EAAAtN,EAAA,mCACAuN,EAAAvN,EAAA,qCACAwN,EAAAxN,EAAA,4CA0BaoL,EAAS,SAAC/K,GAAuB,IAE1CoN,EAOEpN,EAPFoN,SACA5B,EAMExL,EANFwL,OACAF,EAKEtL,EALFsL,OACAK,EAIE3L,EAJF2L,UAL0C0B,EASxCrN,EAHF4L,sBAN0C,IAAAyB,EAMzB,kBAAM,MANmBA,EAO1C3G,EAEE1G,EAFF0G,UACAmF,EACE7L,EADF6L,WAEI5L,GAAQ,EAAAJ,EAAAK,YAV8BoH,GAYe,EAAAnB,EAAAoB,aACzDwF,kBACArG,EAFyD,CAGzDzG,GAHM6L,EAZoCxE,EAYpCwE,oBAAqBC,EAZezE,EAYfyE,eAAgBC,EAZD1E,EAYC0E,UAK7C,OACEvM,EAAAU,cAAC8M,EAAAK,MAAD,CACEzB,WAAYA,EACZ0B,QAAS5B,EACT6B,aAAW,EACX5B,eAAgBA,GAEhBnM,EAAAU,cAAC+F,EAAA4B,KAAD,CAAMD,MAAOiE,GACXrM,EAAAU,cAAC+F,EAAA4B,KAAD,CAAMD,MAAOkE,GACVT,EACD7L,EAAAU,cAAC+F,EAAA4B,KAAD,CAAMD,MAAOmE,GAAYoB,GACxB5B,GAEH/L,EAAAU,cAAC+M,EAAAO,QAAD,CAASvG,QAAS0E,kBAK1B,IAEIb,EAAO/J,YAAc,SAErB+J,EAAO9J,aAAe,CAAEC,YAAe,GAAIF,YAAe,SAAUhB,MAAS,CAAE6L,WAAc,CAAEpG,aAAgB,KAAMvE,YAAe,6BAA8BP,KAAQ,aAAc+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAegL,UAAa,CAAElG,aAAgB,KAAMvE,YAAe,wBAAyBP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAeiL,eAAkB,CAAEnG,aAAgB,KAAMvE,YAAe,yGAA0GP,KAAQ,iBAAkB+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,eAAkB2K,OAAU,CAAE7F,aAAgB,KAAMvE,YAAe,uGAAwGP,KAAQ,SAAU+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAAiB6K,OAAU,CAAE/F,aAAgB,KAAMvE,YAAe,uGAAwGP,KAAQ,SAAU+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,cAAiB+F,UAAa,CAAEjB,aAAgB,KAAMvE,YAAe,+BAAgCP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,oEAE/pC,qBAA5BQ,0BAEPA,wBAAwB,2CAA6C,CAAEC,WAAY2J,EAAO9J,aAAcN,KAAM,SAAUU,KAAM,4CAEtI,MAAOC,0GC/EP,IAAA6L,EAAAxN,EAAA,sCAAAmJ,OAAAC,KAAAoE,GAAAnE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA8D,EAAAlE,2mBCAAxJ,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAaaqI,cAeX,SAAAA,EAAYhI,GAAyB,IAAA8J,EAAA,SAAAC,EAAAzJ,SAAA0J,KAAAhC,IACnC8B,GAAA,EAAAG,EAAA3J,SAAA0J,MAAA,EAAAE,EAAA5J,SAAA0H,GAAAmC,KAAAH,KAAMhK,KAPD0N,oBAM8B,EAGnC5D,EAAK4D,eAAiB,CACpBC,aAAc7D,EAAK8D,iBACnBC,eAAe,EACfC,cAAe,GANkBhE,mFAanC,IAFA,IAAMiE,EAAY,GAETC,EAAI,EAAGA,EAAIhE,KAAKhK,MAAMiO,aAAcD,IAAK,CAChD,IAAME,EAAM,IAAIC,WAASC,MAAMpE,KAAKhK,MAAMqO,YAC1CN,EAAUO,KAAKJ,GAGjB,OAAOH,8CAIP/D,KAAKuE,YAAYC,KAAKxE,KAAtBA,CAA4B,kDAI5BA,KAAK0D,eAAeG,eAAgB,sCAGnBY,GACjB,GAAKzE,KAAK0D,eAAeG,cAAzB,CAGA,GAAIY,GAAYzE,KAAK0D,eAAeC,aAAae,OAAQ,CACvDD,EAAW,EACX,IAAME,EAAM3E,KAAKhK,MAAMqO,WACvBrE,KAAK0D,eAAeI,cAClB9D,KAAK0D,eAAeI,gBAAkBa,EAAM,EAAIA,EAGpD,IAAMC,EAAUH,EAAW,EAE3BN,WAASU,OAAO7E,KAAK0D,eAAeC,aAAac,GAAW,CAC1DK,SAAU9E,KAAKhK,MAAM8O,SACrBC,QAAS/E,KAAK0D,eAAeI,gBAC5BkB,MAAMhF,KAAKuE,YAAYC,KAAKxE,KAAM4E,sCAGvB,IAAAvE,EACUL,KAAKhK,MAArBY,EADMyJ,EACNzJ,KAAMC,EADAwJ,EACAxJ,MAERoO,EAAOjF,KAAK0D,eAAeC,aAAauB,IAAI,SAACC,EAAGnB,GAAJ,OAChDvO,EAAAU,cAAC+F,EAAAiI,SAASrG,KAAV,CACEmB,IAAK+E,EACLnG,MAAO,CACLnG,gBAAiBb,EACjB0C,aAAc,MACdI,OAAQ/C,EACRwO,WAAY,EACZC,YAAa,EACbC,QAASH,EACTrC,MAAOlM,OAKb,OACEnB,EAAAU,cAAC+F,EAAA4B,KAAD,CACED,MAAO,CACLzC,WAAY,SACZH,cAAe,MACfM,eAAgB,WAGjB0J,UAzFwBxP,EAAM0M,2BAA1BnE,EACGuH,aAAe,CAC3B1O,MAAO,OACPiO,SAAU,IACVT,WAAY,EACZJ,aAAc,EACdrN,KAAM,IAwFV,IAEIoH,EAAYhH,YAAc,cAE1BgH,EAAY/G,aAAe,CAAEC,YAAe,2EAA4EF,YAAe,cAAehB,MAAS,CAAEiO,aAAgB,CAAExI,aAAgB,CAAEyC,MAAO,KAAOhH,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAcmO,SAAY,CAAErJ,aAAgB,CAAEyC,MAAO,OAAShH,YAAe,GAAIP,KAAQ,WAAY+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAc0N,WAAc,CAAE5I,aAAgB,CAAEyC,MAAO,KAAOhH,YAAe,GAAIP,KAAQ,aAAc+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAcE,MAAS,CAAE4E,aAAgB,CAAEyC,MAAO,QAAUhH,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAcC,KAAQ,CAAE6E,aAAgB,CAAEyC,MAAO,MAAQhH,YAAe,GAAIP,KAAQ,OAAQ+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,aAEnxB,qBAA5BQ,0BAEPA,wBAAwB,sDAAwD,CAAEC,WAAY4G,EAAY/G,aAAcN,KAAM,cAAeU,KAAM,uDAE3J,MAAOC,2GCtHP,IAAAkO,EAAA7P,EAAA,4CAAAmJ,OAAAC,KAAAyG,GAAAxG,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAmG,EAAAvG,8WCAAxJ,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAEAiK,EAAAjK,EAAA,mCACAC,EAAAD,EAAA,wBACAE,EAAAF,EAAA,wBACAyG,EAAAzG,EAAA,oCACA8P,EAAA9P,EAAA,2CAQa+P,EAAiB,SAAC1P,GAA+B,IACpDoN,EAAgDpN,EAAhDoN,SAAUuC,EAAsC3P,EAAtC2P,UAAWC,EAA2B5P,EAA3B4P,QAAYC,GADmB,EAAAtL,EAAAjE,SACJN,EADI,oCAGtDC,GAAQ,EAAAJ,EAAAK,YAEd,OACET,EAAAU,cAACyJ,EAAA0D,MAAUuC,EACTpQ,EAAAU,cAACsP,EAAAK,aAAD,KACErQ,EAAAU,cAACiG,EAAA4E,IAAD,CAAK/F,cAAc,MAAMM,eAAe,iBACtC9F,EAAAU,cAAC+F,EAAA4E,iBAAD,CACEjD,MAAO,CAAEiF,MAAO,GAAInJ,OAAQ,GAAI4B,eAAgB,UAChD2B,QAAS,SAAA6I,GACPA,EAAMC,iBACNJ,MAGFnQ,EAAAU,cAAC+F,EAAA4B,KAAD,CAAMD,MAAO,CAAEoI,kBAAmB,IAChCxQ,EAAAU,cAACP,EAAAc,KAAD,CAAMG,MAAOZ,EAAMa,OAAOC,KAAKT,QAASM,KAAM,GAAID,KAAK,QAG1DgP,GAEFvC,wBAKT,IAEIsC,EAAe1O,YAAc,iBAE7B0O,EAAezO,aAAe,CAAEC,YAAe,GAAIF,YAAe,iBAAkBhB,MAAS,CAAE4P,QAAW,CAAEnK,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,UAAW+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,eAAkBgP,UAAa,CAAElK,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,gBAEzS,qBAA5BQ,0BAEPA,wBAAwB,0DAA4D,CAAEC,WAAYsO,EAAezO,aAAcN,KAAM,iBAAkBU,KAAM,2DAErK,MAAOC,4ZCpDP7B,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAEA2G,EAAA3G,EAAA,wCACAuQ,EAAAvQ,EAAA,6CAOawQ,EAAY,SAACnQ,GAA0B,IAEhDoN,EAKEpN,EALFoN,SACAwC,EAIE5P,EAJF4P,QACAQ,EAGEpQ,EAHFoQ,QAJgDC,EAO9CrQ,EAFFsQ,iBALgD,IAAAD,EAKpC,QALoCA,EAM7CE,GAN6C,EAAAhM,EAAAjE,SAO9CN,EAP8C,8CASlD,OACEP,EAAAU,cAAC+P,EAAAR,gBAAD,EAAArP,EAAAC,SAAA,CACEsP,QAASA,EACTD,UACElQ,EAAAU,cAAC+F,EAAA4E,iBAAD,CACE5D,QAAS,SAAA6I,GACPA,EAAMC,iBACNI,MAGF3Q,EAAAU,cAAC+F,EAAA4B,KAAD,CACED,MAAO,CACLzC,WAAY,SACZC,QAAS,OACT1B,OAAQ,OACR4B,eAAgB,SAChB0K,kBAAmB,KAGrBxQ,EAAAU,cAACmG,EAAA2B,KAAD,CAAMuI,QAAM,GAAEF,MAIhBC,GAEHnD,kBAIP,IAEI+C,EAAUnP,YAAc,YAExBmP,EAAUlP,aAAe,CAAEC,YAAe,GAAIF,YAAe,YAAahB,MAAS,CAAEoQ,QAAW,CAAE3K,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,UAAW+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,eAAkB2P,UAAa,CAAE7K,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,aAE/R,qBAA5BQ,0BAEPA,wBAAwB,gDAAkD,CAAEC,WAAY+O,EAAUlP,aAAcN,KAAM,YAAaU,KAAM,iDAEjJ,MAAOC,o3BC3DP7B,EAAAC,EAAAC,EAAA,kCAGA8Q,EAAA9Q,EAAA,4CAEI+Q,EAAU,EASRC,mNACGD,UAAYA,IAEZE,mBAAqB,SAACC,GAAqC,IACxDtD,EAAYzD,EAAK9J,MAAjBuN,QAEJsD,EAActD,UAAYA,IACxBA,EACFzD,EAAKgH,uBAELhH,EAAKiH,2BAKJC,qBAAuB,WAC5BlH,EAAKmH,uBAGAH,qBAAuB,WAGzBI,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMtH,EAAK4G,UAG1BQ,QAAQG,WAAR,EAAAC,EAAAhR,SAAA,GAEO4Q,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAAhR,SAAA,GACC4Q,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAAjR,SAAA,GAEFwJ,EAAK4G,SAAU,MAGpB,IAKJc,OAAOC,iBAAiB,WAAY3H,EAAK4H,gBAAgB,MAIpDA,eAAiB,SAAC3B,GAAyB,IAAA1F,EACZP,EAAK9J,MAAjCuN,EADwClD,EACxCkD,QAAS3B,EAD+BvB,EAC/BuB,eAGbmE,EAAMoB,OACLpB,EAAMoB,MAAMC,OACZrB,EAAMoB,MAAMC,MAAMtH,EAAK4G,WAC1B9E,IAEA9B,EAAKmH,oBACLrF,MAOC2B,GACDwC,EAAMoB,OACNpB,EAAMoB,MAAMC,OACZrB,EAAMoB,MAAMC,MAAMtH,EAAK4G,UAEvBQ,QAAQS,IAAI,MAKTC,gBAAkB,WAAM,IACrBhG,EAAmB9B,EAAK9J,MAAxB4L,gBAGLsF,QAAQC,OACPD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMtH,EAAK4G,WAC3B9E,IAGA9B,EAAKmH,oBACLrF,IACAsF,QAAQS,IAAI,OAKTZ,qBAAuB,WAE1BG,QAAQC,OACRD,QAAQC,MAAMC,OACdF,QAAQC,MAAMC,MAAMtH,EAAK4G,WAEzB5G,EAAKmH,oBACLC,QAAQS,IAAI,OAITV,kBAAoB,WACzBC,QAAQW,cAAR,EAAAP,EAAAhR,SAAA,GAEO4Q,QAAQC,MAFf,CAGIC,OAAK,EAAAE,EAAAhR,SAAA,GACC4Q,QAAQC,OAASD,QAAQC,MAAMC,OADhC,EAAAG,EAAAjR,SAAA,GAEFwJ,EAAK4G,SAAU,MAGpB,IAGFc,OAAOM,oBAAoB,WAAYhI,EAAK4H,gBAAgB,+EAG9C,IACH7B,GADG,EAAAxP,EAAAC,SAAA,GACY0J,KAAKhK,OAE/B,OAAOP,EAAAU,cAACsQ,EAAAsB,WAAD,EAAA1R,EAAAC,SAAA,GAAeuP,EAAf,CAA2BjE,eAAgB5B,KAAK4H,0BArH5BnS,EAAMuS,eAyHxBC,EAAe,SAAA9G,GAGH,IAAA+G,EAAA/G,EAFvBU,kBAEuB,IAAAqG,KADpBlS,GACoB,EAAAuE,EAAAjE,SAAA6K,EAAA,gBACvB,OAAIU,EAAmBpM,EAAAU,cAACwQ,EAAqB3Q,GAEtCP,EAAAU,cAACsQ,EAAAsB,UAAc/R,qBAExB,IAEIiS,EAAajR,YAAc,eAE3BiR,EAAahR,aAAe,CAAEC,YAAe,GAAIF,YAAe,eAAgBhB,MAAS,IAElD,qBAA5BmB,0BAEPA,wBAAwB,0DAA4D,CAAEC,WAAY6Q,EAAahR,aAAcN,KAAM,eAAgBU,KAAM,2DAEjK,MAAOC,0GCzJP,IAAA6Q,EAAAxS,EAAA,+CAAAmJ,OAAAC,KAAAoJ,GAAAnJ,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA8I,EAAAlJ,ymBCAAmJ,EAAA5I,EAAA7J,EAAA,uCACAF,EAAAC,EAAAC,EAAA,kCACA0S,EAAA3S,EAAAC,EAAA,sCAOaoS,cAUX,SAAAA,EAAY/R,GAAuB,IAAA8J,EAAA,SAAAC,EAAAzJ,SAAA0J,KAAA+H,IACjCjI,GAAA,EAAAG,EAAA3J,SAAA0J,MAAA,EAAAE,EAAA5J,SAAAyR,GAAA5H,KAAAH,KAAMhK,KAVDsS,QAS4B,EAAAxI,EAR5ByI,eAQ4B,EAAAzI,EAP5B0I,eAO4B,EAAA1I,EAL5B2I,cAAwB,EAKI3I,EAJ5B4I,QAA2CjT,EAAMkT,YAIrB7I,EAuC5B8I,WAAa,WAClBC,SAASxG,KAAKxE,MAAMiL,SAAW,SAC/BD,SAASxG,KAAKxE,MAAMlE,OAAS,SAzCImG,EA4C5BiJ,aAAe,WACpBF,SAASxG,KAAKxE,MAAMiL,SAAW,GAC/BD,SAASxG,KAAKxE,MAAMlE,OAAS,IA9CImG,EAiD5BkJ,cAAgB,WAAM,IACnBpH,EAAmB9B,EAAK9J,MAAxB4L,eAEJ9B,EAAK4I,QAAQO,UAAYnJ,EAAK0I,YAChC1I,EAAK0I,WAAY,EAAAJ,EAAA9R,SAAgBwJ,EAAK4I,QAAQO,QAAS,CACrDC,aAAcpJ,EAAK4I,QAAQO,QAC3BE,aAAc,WACRvH,GAAkB9B,EAAK9J,MAAMuN,UAAYzD,EAAK2I,cAChD7G,OAKN9B,EAAK0I,UAAUY,aA9DgBtJ,EAkE5BuJ,gBAAkB,WACnBvJ,EAAK0I,YACP1I,EAAK0I,UAAUc,aACfxJ,EAAK0I,UAAY,OAnEnB1I,EAAKwI,GAAK,KACVxI,EAAKyI,UAAY,KACjBzI,EAAK0I,UAAY,KAJgB1I,sFAQjCE,KAAKsI,GAAKO,SAAS1S,cAAc,OACjC6J,KAAKuI,UAAYM,SAASU,qBAAqB,QAAQ,GACvDvJ,KAAKuI,UAAUiB,YAAYxJ,KAAKsI,IAChCtI,KAAKyJ,2DAGqB,IAAApJ,EAC0BL,KAAKhK,MAAjDuN,EADkBlD,EAClBkD,QADkBmG,EAAArJ,EACTsJ,8BADS,IAAAD,KAGtBnG,GACFvD,KAAKgJ,gBACAW,GACH3J,KAAK4I,eAGP5I,KAAKqJ,kBACAM,GACH3J,KAAK+I,+DAML/I,KAAKuI,WAAavI,KAAKsI,IACzBtI,KAAKuI,UAAUqB,YAAY5J,KAAKsI,IAGlCtI,KAAKyI,cAAe,EACpBzI,KAAKqJ,mDAqCmC,IAAAQ,EACyB7J,KAAKhK,MAA9DwN,EADgCqG,EAChCrG,YAAaD,EADmBsG,EACnBtG,QADmBuG,EAAAD,EACVF,8BADU,IAAAG,KAGxC,OAAKvG,GAAYvD,KAAKsI,GAEfD,EAAS0B,aACdtU,EAAAU,cAAA,OACE6T,UAAW,EACXC,IAAKjK,KAAK0I,QACV7K,MAAO,CACLnG,gBAAiB8L,EAAc,cAAgB,QAC/C0G,OAAQ,EACRC,KAAM,EACNrB,SAAU,OACVnG,SAAUgH,EAAyB,WAAa,QAChDS,MAAO,EACPC,IAAK,EACLzH,OAAQ,MAGT5C,KAAKhK,MAAMoN,UAEdpD,KAAKsI,IAnB0B,YAtFN7S,EAAMuS,6BA6GrC,IAEID,EAAU/Q,YAAc,YAExB+Q,EAAU9Q,aAAe,CAAEC,YAAe,GAAIF,YAAe,YAAahB,MAAS,IAE5C,qBAA5BmB,0BAEPA,wBAAwB,oDAAsD,CAAEC,WAAY2Q,EAAU9Q,aAAcN,KAAM,YAAaU,KAAM,qDAErJ,MAAOC,kNChIP,IAAA7B,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAMamQ,EAAe,SAAC9P,GAA6B,IAChDoN,EAAapN,EAAboN,SAER,OACE3N,EAAAU,cAAC+F,EAAA4B,KAAD,CACED,MAAO,CACLlE,OAAQ,OACRyL,WAAY,OACZC,YAAa,OACb5C,SAAU,MAGXW,qBAIP,IAEI0C,EAAa9O,YAAc,eAE3B8O,EAAa7O,aAAe,CAAEC,YAAe,GAAIF,YAAe,eAAgBhB,MAAS,IAElD,qBAA5BmB,0BAEPA,wBAAwB,sDAAwD,CAAEC,WAAY0O,EAAa7O,aAAcN,KAAM,eAAgBU,KAAM,uDAE7J,MAAOC,gUCjCP,IAAAmP,EAAA9Q,EAAA,4CAAAmJ,OAAAC,KAAA0H,GAAAzH,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAAwL,UAAAC,eAAApK,KAAAqK,EAAAvL,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAoH,EAAAxH,SACA,IAAAkJ,EAAAxS,EAAA,+CAAAmJ,OAAAC,KAAAoJ,GAAAnJ,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAAwL,UAAAC,eAAApK,KAAAqK,EAAAvL,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA8I,EAAAlJ,SACA,IAAAwL,EAAA9U,EAAA,wCAAAmJ,OAAAC,KAAA0L,GAAAzL,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAAwL,UAAAC,eAAApK,KAAAqK,EAAAvL,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAAoL,EAAAxL,SACA,IAAAiH,EAAAvQ,EAAA,6CAAAmJ,OAAAC,KAAAmH,GAAAlH,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,IAAAH,OAAAwL,UAAAC,eAAApK,KAAAqK,EAAAvL,IAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA6G,EAAAjH,SACA,IAAAgE,EAAAtN,EAAA,iVCIa+U,EAAsB,SAACzU,GAClC,MAAO,CACLqC,QAAS,CACP4R,OAAQ,EACRS,OAAQ,OACRhR,OAAQ,OACRwQ,KAAM,EACNxH,SAAU,WACVyH,MAAO,EACPC,IAAK,EACLvH,MAAO,qDAkBqC,SAAA3B,EAAkBlL,GAAU,IAAzBuN,EAAyBrC,EAAzBqC,YAC7CoH,EA5BC,CACLtS,QAAS,CACP4R,OAAQ,EACRS,OAAQ,OACRhR,OAAQ,OACRwQ,KAAM,EACNxH,SAAU,WACVyH,MAAO,EACPC,IAAK,EACLvH,MAAO,SAqBX,MAAO,CACL+H,cAAY,EAAA9P,EAAAzE,SAAA,GACPsU,EAAiBtS,QADV,CAEVZ,gBAAiB8L,EACb,cACAvN,EAAMa,OAAOa,WAAWW,YAIlC,IAEIoS,EAAoB1T,YAAc,sBAElC0T,EAAoBzT,aAAe,CAAEC,YAAe,GAAIF,YAAe,sBAAuBhB,MAAS,CAAEc,OAAU,CAAE2E,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,SAAU+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,WAAciF,MAAS,CAAEH,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,QAAS+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,UAAakF,aAAgB,CAAEJ,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBmF,YAAe,CAAEL,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,cAAe+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBoF,aAAgB,CAAEN,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,eAAgB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBqF,eAAkB,CAAEP,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAAsB+C,UAAa,CAAE+B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,cAAiBsF,WAAc,CAAER,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,aAAc+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,gBAAmBmD,gBAAmB,CAAE2B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,kBAAmB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoBiD,eAAkB,CAAE6B,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,iBAAkB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,iBAAoB6C,oBAAuB,CAAEiC,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,sBAAuB+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,mBAE7gD,qBAA5BQ,0BAEPA,wBAAwB,gEAAkE,CAAEC,WAAYsT,EAAoBzT,aAAcN,KAAM,sBAAuBU,KAAM,iEAErL,MAAOC,0MC1DP,IAAA7B,EAAAC,EAAAC,EAAA,kCACAuG,EAAAvG,EAAA,iDAGAE,EAAAF,EAAA,wBACAwG,EAAAxG,EAAA,8BACAuN,EAAAvN,EAAA,8CAYa8N,EAAU,SAACzN,GAAwB,IACtCkH,EAA4ClH,EAA5CkH,QADsC4N,EACM9U,EAAnCwN,mBAD6B,IAAAsH,KACRpO,EAAc1G,EAAd0G,UAChCzG,GAAQ,EAAAJ,EAAAK,YAEN2U,GAAiB,EAAA1O,EAAAoB,aAAYwN,mBAAkBrO,EAA9B,CACvB,CAAE8G,eACFvN,GAFM4U,aAKR,OACEpV,EAAAU,cAAC+F,EAAA8O,yBAAD,CACE9N,QAAS,SAAA6I,GACPA,EAAMC,iBACN9I,MAGFzH,EAAAU,cAAC+F,EAAA4B,KAAD,CAAMD,MAAOgN,kBAInB,IAEIpH,EAAQzM,YAAc,UAEtByM,EAAQxM,aAAe,CAAEC,YAAe,GAAIF,YAAe,UAAWhB,MAAS,CAAEkH,QAAW,CAAEzB,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,UAAW+E,UAAY,EAAMC,KAAQ,CAAEhF,KAAQ,eAAkB6M,YAAe,CAAE/H,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,cAAe+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,YAAe+F,UAAa,CAAEjB,aAAgB,KAAMvE,YAAe,GAAIP,KAAQ,YAAa+E,UAAY,EAAOC,KAAQ,CAAEhF,KAAQ,sEAEha,qBAA5BQ,0BAEPA,wBAAwB,8CAAgD,CAAEC,WAAYqM,EAAQxM,aAAcN,KAAM,UAAWU,KAAM,+CAE3I,MAAOC,2GChDP,IAAA4L,EAAAvN,EAAA,wCAAAmJ,OAAAC,KAAAmE,GAAAlE,QAAA,SAAAC,GAAA,YAAAA,GAAA,eAAAA,GAAAH,OAAAI,eAAAC,EAAAF,EAAA,CAAAG,YAAA,EAAAC,IAAA,kBAAA6D,EAAAjE,iMCAA,IAAAxJ,EAAAC,EAAAC,EAAA,kCACAsV,EAAAvV,EAAAC,EAAA,yDAae,SAAAwL,GAAsC,IAAnCxK,EAAmCwK,EAAnCxK,KAAME,EAA6BsK,EAA7BtK,MAAOD,EAAsBuK,EAAtBvK,KAEvBsU,EAAUD,EAAO,KAAAE,OAXzB,SAAyBxU,GACvB,IAIMyU,EAASzU,EAAK0U,QAAQ,UAJV,SAACC,GACjB,OAAOA,EAAQ,GAAGC,gBAIpB,OAAOH,EAAOI,OAAO,GAAGD,cAAgBH,EAAOK,MAAM,GAKxBC,CAAgB/U,KAE7C,OAAOlB,EAAAU,cAAC+U,EAAD,CAASrU,MAAOA,EAAOD,KAAMA,KAEtC,IAEI+U,QAAQ3U,YAAc,UAEtB2U,QAAQ1U,aAAe,CAAEC,YAAe,GAAIF,YAAe,UAAWhB,MAAS,IAExC,qBAA5BmB,0BAEPA,wBAAwB,kCAAoC,CAAEC,WAAYuU,QAAQ1U,aAAcN,KAAM,UAAWU,KAAM,mCAE/H,MAAOC,yPC9BP,IAAAsU,EAAApM,EAAA7J,EAAA","file":"static/js/12.7752f4d6.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\ntry {\n    // @ts-ignore\n    BackButton.displayName = \"BackButton\";\n    // @ts-ignore\n    BackButton.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackButton\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/BackButton.tsx#BackButton\"] = { docgenInfo: BackButton.__docgenInfo, name: \"BackButton\", path: \"src/components/Button/BackButton.tsx#BackButton\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getButtonVariables.displayName = \"getButtonVariables\";\n    // @ts-ignore\n    getButtonVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getButtonVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.styles.ts#getButtonVariables\"] = { docgenInfo: getButtonVariables.__docgenInfo, name: \"getButtonVariables\", path: \"src/components/Button/Button.styles.ts#getButtonVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": { value: \"\\\"default\\\"\" }, \"description\": \"The intent of the button.\", \"name\": \"color\", \"required\": false, \"type\": { \"name\": \"\\\"default\\\" | \\\"danger\\\" | \\\"primary\\\" | \\\"secondary\\\"\" } }, \"appearance\": { \"defaultValue\": { value: \"\\\"primary\\\"\" }, \"description\": \"The appearance of the button.\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"\\\"primary\\\" | \\\"minimal\\\" | \\\"outline\\\"\" } }, \"size\": { \"defaultValue\": { value: \"\\\"medium\\\"\" }, \"description\": \"The size of the button.\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"\\\"small\\\" | \\\"medium\\\" | \\\"large\\\"\" } }, \"isLoading\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, show a loading spinner before the title. This also disables the button.\", \"name\": \"isLoading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isActive\": { \"defaultValue\": { value: \"false\" }, \"description\": \"Forcefully set the active state of a button.\", \"name\": \"isActive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isDisabled\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button is disabled. isLoading also sets the button to disabled.\", \"name\": \"isDisabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isInline\": { \"defaultValue\": { value: \"false\" }, \"description\": \"When true, the button will not stretch full width\", \"name\": \"isInline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onPress\": { \"defaultValue\": { value: \"() => {}\" }, \"description\": \"Button press handler\", \"name\": \"onPress\", \"required\": false, \"type\": { \"name\": \"(event: GestureResponderEvent) => void\" } }, \"iconBefore\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon before the text.\", \"name\": \"iconBefore\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconAfter\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon after the text.\", \"name\": \"iconAfter\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"iconLoading\": { \"defaultValue\": { value: \"undefined\" }, \"description\": \"Sets an icon at loading state.\", \"name\": \"iconLoading\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>\" } }, \"testID\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"testID\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessible\": { \"defaultValue\": null, \"description\": \"When true, indicates that the view is an accessibility element.\\nBy default, all the touchable elements are accessible.\", \"name\": \"accessible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityLabel\": { \"defaultValue\": null, \"description\": \"Overrides the text that's read by the screen reader when the user interacts with the element. By default, the\\nlabel is constructed by traversing all the children and accumulating all the Text nodes separated by space.\", \"name\": \"accessibilityLabel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityRole\": { \"defaultValue\": null, \"description\": \"Accessibility Role tells a person using either VoiceOver on iOS or TalkBack on Android the type of element that is focused on.\", \"name\": \"accessibilityRole\", \"required\": false, \"type\": { \"name\": \"AccessibilityRole\" } }, \"accessibilityStates\": { \"defaultValue\": null, \"description\": \"Accessibility State tells a person using either VoiceOver on iOS or TalkBack on Android the state of the element currently focused on.\", \"name\": \"accessibilityStates\", \"required\": false, \"type\": { \"name\": \"AccessibilityState[]\" } }, \"accessibilityHint\": { \"defaultValue\": null, \"description\": \"An accessibility hint helps users understand what will happen when they perform an action on the accessibility element when that result is not obvious from the accessibility label.\", \"name\": \"accessibilityHint\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"accessibilityComponentType\": { \"defaultValue\": null, \"description\": \"In some cases, we also want to alert the end user of the type of selected component (i.e., that it is a \\u201Cbutton\\u201D).\\nIf we were using native buttons, this would work automatically. Since we are using javascript, we need to\\nprovide a bit more context for TalkBack. To do so, you must specify the \\u2018accessibilityComponentType\\u2019 property\\nfor any UI component. For instances, we support \\u2018button\\u2019, \\u2018radiobutton_checked\\u2019 and \\u2018radiobutton_unchecked\\u2019 and so on.\\n@platform android\", \"name\": \"accessibilityComponentType\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"radiobutton_checked\\\" | \\\"radiobutton_unchecked\\\"\" } }, \"accessibilityLiveRegion\": { \"defaultValue\": null, \"description\": \"Indicates to accessibility services whether the user should be notified when this view changes.\\nWorks for Android API >= 19 only.\\nSee http://developer.android.com/reference/android/view/View.html#attr_android:accessibilityLiveRegion for references.\\n@platform android\", \"name\": \"accessibilityLiveRegion\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"polite\\\" | \\\"assertive\\\"\" } }, \"importantForAccessibility\": { \"defaultValue\": null, \"description\": \"Controls how view is important for accessibility which is if it fires accessibility events\\nand if it is reported to accessibility services that query the screen.\\nWorks for Android only. See http://developer.android.com/reference/android/R.attr.html#importantForAccessibility for references.\\n\\nPossible values:\\n      'auto' - The system determines whether the view is important for accessibility - default (recommended).\\n      'yes' - The view is important for accessibility.\\n      'no' - The view is not important for accessibility.\\n      'no-hide-descendants' - The view is not important for accessibility, nor are any of its descendant views.\", \"name\": \"importantForAccessibility\", \"required\": false, \"type\": { \"name\": \"\\\"auto\\\" | \\\"yes\\\" | \\\"no\\\" | \\\"no-hide-descendants\\\"\" } }, \"accessibilityElementsHidden\": { \"defaultValue\": null, \"description\": \"A Boolean value indicating whether the accessibility elements contained within this accessibility element\\nare hidden to the screen reader.\\n@platform ios\", \"name\": \"accessibilityElementsHidden\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"accessibilityTraits\": { \"defaultValue\": null, \"description\": \"Accessibility traits tell a person using VoiceOver what kind of element they have selected.\\nIs this element a label? A button? A header? These questions are answered by accessibilityTraits.\\n@platform ios\", \"name\": \"accessibilityTraits\", \"required\": false, \"type\": { \"name\": \"\\\"none\\\" | \\\"button\\\" | \\\"link\\\" | \\\"search\\\" | \\\"image\\\" | \\\"text\\\" | \\\"adjustable\\\" | \\\"header\\\" | \\\"summary\\\" | \\\"selected\\\" | \\\"disabled\\\" | \\\"plays\\\" | \\\"key\\\" | \\\"frequentUpdates\\\" | \\\"startsMedia\\\" | \\\"allowsDirectInteraction\\\" | \\\"pageTurn\\\" | AccessibilityTrait[]\" } }, \"onAccessibilityTap\": { \"defaultValue\": null, \"description\": \"When `accessible` is true, the system will try to invoke this function when the user performs accessibility tap gesture.\\n@platform ios\", \"name\": \"onAccessibilityTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"onMagicTap\": { \"defaultValue\": null, \"description\": \"When accessible is true, the system will invoke this function when the user performs the magic tap gesture.\\n@platform ios\", \"name\": \"onMagicTap\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"accessibilityIgnoresInvertColors\": { \"defaultValue\": null, \"description\": \"https://facebook.github.io/react-native/docs/accessibility#accessibilityignoresinvertcolorsios\\n@platform ios\", \"name\": \"accessibilityIgnoresInvertColors\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Button';\nexport * from './BackButton';\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Toggle } from 'react-powerplug';\nimport { TouchableOpacity } from 'react-native';\nimport { Playground, PropsTable } from 'docz';\nimport { Icon } from '../../icons';\nimport { Dialog } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text, Heading } from '../Typography';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"dialog\"}}>{`Dialog`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <Dialog\\n        header={\\n          <Spacing\\n            padding={2}\\n            flexDirection=\\\"row\\\"\\n            justifyContent=\\\"space-between\\\"\\n            alignItems=\\\"center\\\"\\n          >\\n            <Heading>Title</Heading>\\n            <TouchableOpacity onPress={toggle}>\\n              <Icon name=\\\"x\\\" size={24} />\\n            </TouchableOpacity>\\n          </Spacing>\\n        }\\n        footer={\\n          <Spacing padding={2} flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n            <Button appearance=\\\"minimal\\\" onPress={toggle} title=\\\"Cancel\\\" />\\n            <Spacing paddingLeft={2}>\\n              <Button\\n                color=\\\"primary\\\"\\n                onPress={() => console.log(\\'Button clicked\\')}\\n                title=\\\"Accept\\\"\\n              />\\n            </Spacing>\\n          </Spacing>\\n        }\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        useHistory={false}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the dialog</Text>\\n        </Box>\\n      </Dialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{props: this ? this.props : props,Toggle,TouchableOpacity,Icon,Dialog,Button,Box,Spacing,Text,Heading}}>\n  <Toggle initial={false}>\n    {({ on, toggle }) => (\n      <Box>\n        <Dialog\n          header={\n            <Spacing\n              padding={2}\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Heading>Title</Heading>\n              <TouchableOpacity onPress={toggle}>\n                <Icon name=\"x\" size={24} />\n              </TouchableOpacity>\n            </Spacing>\n          }\n          footer={\n            <Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\">\n              <Button appearance=\"minimal\" onPress={toggle} title=\"Cancel\" />\n              <Spacing paddingLeft={2}>\n                <Button\n                  color=\"primary\"\n                  onPress={() => console.log('Button clicked')}\n                  title=\"Accept\"\n                />\n              </Spacing>\n            </Spacing>\n          }\n          isVisible={on}\n          onRequestClose={toggle}\n          useHistory={false}\n          getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {},\n          })}\n        >\n          <Box height={1800}>\n            <Text>Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle} title=\"Open dialog\" />\n      </Box>\n    )}\n  </Toggle>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"dialog-props\"}}>{`Dialog Props`}</MDXTag>\n<PropsTable of={Dialog} />\n           </MDXTag>\n  }\n}\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\ntry {\n    // @ts-ignore\n    getDialogVariables.displayName = \"getDialogVariables\";\n    // @ts-ignore\n    getDialogVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogVariables\"] = { docgenInfo: getDialogVariables.__docgenInfo, name: \"getDialogVariables\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getDialogStyles.displayName = \"getDialogStyles\";\n    // @ts-ignore\n    getDialogStyles.__docgenInfo = { \"description\": \"\", \"displayName\": \"getDialogStyles\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.styles.ts#getDialogStyles\"] = { docgenInfo: getDialogStyles.__docgenInfo, name: \"getDialogStyles\", path: \"src/components/Dialog/Dialog.styles.ts#getDialogStyles\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\ntry {\n    // @ts-ignore\n    Dialog.displayName = \"Dialog\";\n    // @ts-ignore\n    Dialog.__docgenInfo = { \"description\": \"\", \"displayName\": \"Dialog\", \"props\": { \"useHistory\": { \"defaultValue\": null, \"description\": \"Prop to be passed to Modal\", \"name\": \"useHistory\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"isVisible\": { \"defaultValue\": null, \"description\": \"To show dialog or not\", \"name\": \"isVisible\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onRequestClose\": { \"defaultValue\": null, \"description\": \"Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true)\", \"name\": \"onRequestClose\", \"required\": false, \"type\": { \"name\": \"() => void\" } }, \"header\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"header\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"footer\": { \"defaultValue\": null, \"description\": \"In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value\", \"name\": \"footer\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"Inline styles for components\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Dialog/Dialog.tsx#Dialog\"] = { docgenInfo: Dialog.__docgenInfo, name: \"Dialog\", path: \"src/components/Dialog/Dialog.tsx#Dialog\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Dialog';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    LoadingDots.displayName = \"LoadingDots\";\n    // @ts-ignore\n    LoadingDots.__docgenInfo = { \"description\": \"Ported from https://github.com/adorableio/react-native-animated-ellipsis\", \"displayName\": \"LoadingDots\", \"props\": { \"numberOfDots\": { \"defaultValue\": { value: \"3\" }, \"description\": \"\", \"name\": \"numberOfDots\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"300\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minOpacity\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"minOpacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": { value: \"#aaa\" }, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"size\": { \"defaultValue\": { value: \"10\" }, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Loading/LoadingDots.tsx#LoadingDots\"] = { docgenInfo: LoadingDots.__docgenInfo, name: \"LoadingDots\", path: \"src/components/Loading/LoadingDots.tsx#LoadingDots\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\ntry {\n    // @ts-ignore\n    CloseableModal.displayName = \"CloseableModal\";\n    // @ts-ignore\n    CloseableModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"CloseableModal\", \"props\": { \"onClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClose\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"rightSide\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rightSide\", \"required\": false, \"type\": { \"name\": \"ReactNode\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/CloseableModal.tsx#CloseableModal\"] = { docgenInfo: CloseableModal.__docgenInfo, name: \"CloseableModal\", path: \"src/components/Modal/CloseableModal.tsx#CloseableModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\ntry {\n    // @ts-ignore\n    FormModal.displayName = \"FormModal\";\n    // @ts-ignore\n    FormModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormModal\", \"props\": { \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"clearText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clearText\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/FormModal.tsx#FormModal\"] = { docgenInfo: FormModal.__docgenInfo, name: \"FormModal\", path: \"src/components/Modal/FormModal.tsx#FormModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\ntry {\n    // @ts-ignore\n    HistoryModal.displayName = \"HistoryModal\";\n    // @ts-ignore\n    HistoryModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"HistoryModal\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/HistoryModal.web.tsx#HistoryModal\"] = { docgenInfo: HistoryModal.__docgenInfo, name: \"HistoryModal\", path: \"src/components/Modal/HistoryModal.web.tsx#HistoryModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ModalBase.displayName = \"ModalBase\";\n    // @ts-ignore\n    ModalBase.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalBase\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalBase.web.tsx#ModalBase\"] = { docgenInfo: ModalBase.__docgenInfo, name: \"ModalBase\", path: \"src/components/Modal/ModalBase.web.tsx#ModalBase\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\ntry {\n    // @ts-ignore\n    ModalContent.displayName = \"ModalContent\";\n    // @ts-ignore\n    ModalContent.__docgenInfo = { \"description\": \"\", \"displayName\": \"ModalContent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Modal/ModalContent.tsx#ModalContent\"] = { docgenInfo: ModalContent.__docgenInfo, name: \"ModalContent\", path: \"src/components/Modal/ModalContent.tsx#ModalContent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\ntry {\n    // @ts-ignore\n    getOverlayVariables.displayName = \"getOverlayVariables\";\n    // @ts-ignore\n    getOverlayVariables.__docgenInfo = { \"description\": \"\", \"displayName\": \"getOverlayVariables\", \"props\": { \"colors\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"colors\", \"required\": true, \"type\": { \"name\": \"Colors\" } }, \"fills\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fills\", \"required\": true, \"type\": { \"name\": \"Fills\" } }, \"fontFamilies\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontFamilies\", \"required\": true, \"type\": { \"name\": \"FontFamilies\" } }, \"fontWeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fontWeights\", \"required\": true, \"type\": { \"name\": \"FontWeights\" } }, \"headingSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"headingSizes\", \"required\": true, \"type\": { \"name\": \"HeadingSizes\" } }, \"paragraphSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"paragraphSizes\", \"required\": true, \"type\": { \"name\": \"ParagraphSizes\" } }, \"textSizes\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"textSizes\", \"required\": true, \"type\": { \"name\": \"TextSizes\" } }, \"elevations\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"elevations\", \"required\": true, \"type\": { \"name\": \"ViewStyle[]\" } }, \"controlPaddings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlPaddings\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlHeights\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlHeights\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } }, \"controlBorderRadius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"controlBorderRadius\", \"required\": true, \"type\": { \"name\": \"ControlSizes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\"] = { docgenInfo: getOverlayVariables.__docgenInfo, name: \"getOverlayVariables\", path: \"src/components/Overlay/Overlay.styles.ts#getOverlayVariables\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\ntry {\n    // @ts-ignore\n    Overlay.displayName = \"Overlay\";\n    // @ts-ignore\n    Overlay.__docgenInfo = { \"description\": \"\", \"displayName\": \"Overlay\", \"props\": { \"onPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onPress\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"transparent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transparent\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"getStyles\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getStyles\", \"required\": false, \"type\": { \"name\": \"ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Overlay/Overlay.tsx#Overlay\"] = { docgenInfo: Overlay.__docgenInfo, name: \"Overlay\", path: \"src/components/Overlay/Overlay.tsx#Overlay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\ntry {\n    // @ts-ignore\n    Iconweb.displayName = \"Iconweb\";\n    // @ts-ignore\n    Iconweb.__docgenInfo = { \"description\": \"\", \"displayName\": \"Iconweb\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/icons/Icon.web.tsx#Iconweb\"] = { docgenInfo: Iconweb.__docgenInfo, name: \"Iconweb\", path: \"src/icons/Icon.web.tsx#Iconweb\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export { default as Icon } from './Icon';\n"],"sourceRoot":""}