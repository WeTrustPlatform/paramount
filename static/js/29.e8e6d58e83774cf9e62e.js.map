{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Spacing/Spacing.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Box/Box.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Layout/Visible.tsx"],"names":["getSpacing","size","theme","spacing","Spacing","props","_props$size","_props$orientation","orientation","style","viewProps","Object","objectWithoutProperties","useTheme","react","View","esm_extends","height","width","getStyle","dlv","__source","fileName","lineNumber","propToFn","backgroundColor","color","colors","background","elevation","elevations","shape","containerShapes","space","padding","spaceBottom","paddingBottom","spaceEnd","paddingEnd","spaceHorizontal","paddingHorizontal","spaceLeft","paddingLeft","spaceRight","paddingRight","spaceStart","paddingStart","spaceTop","paddingTop","spaceVertical","paddingVertical","Box","children","testID","viewStyles","transformedStyles","pureStyles","prop","styleFn","push","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_WeTrustPlatform_paramount_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","_jsxFileName","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Visible","LayoutProvider","Text","___WEBPACK_IMPORTED_MODULE_7__","___WEBPACK_IMPORTED_MODULE_6__","large","xlarge","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_8__","align","medium","xsmall","small","of","isMDXComponent","config","currentScreenSize","visibles","combineConfig","currentScreenSizeIndex","ASC_ORDER_SCREEN_SIZES","indexOf","find","val","index","isVisible","useLayout","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/29.30264936.js","sourcesContent":["import dlv from 'dlv';\nimport * as React from 'react';\nimport { View, ViewProps, ViewStyle } from 'react-native';\n\nimport { SpacingSize, Theme, useTheme } from '../../theme';\nimport { getStyle, OverrideStyle, Style } from '../../utils/Overrides';\n\ntype SpacingOrientation = 'horizontal' | 'vertical';\n\nexport interface SpacingProps extends Omit<ViewProps, 'style'> {\n  /**\n   * Size of the Spacing.\n   * @default \"medium\"\n   */\n  size?: SpacingSize | number;\n\n  /**\n   * Orientation of spacing.\n   * @default \"vertical\"\n   */\n  orientation?: SpacingOrientation;\n\n  /**\n   * Style callback or ViewStyle object\n   */\n  style?: Style<SpacingProps, ViewStyle>;\n}\n\nexport type SpacingOverride = OverrideStyle<SpacingProps, ViewStyle>;\n\nexport const getSpacing = (size: SpacingSize | number, theme: Theme) =>\n  typeof size === 'number' ? size : theme.spacing[size];\n\nexport const Spacing = (props: SpacingProps) => {\n  const {\n    size = 'medium',\n    orientation = 'vertical',\n    style,\n    ...viewProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <View\n      style={[\n        orientation === 'vertical'\n          ? { height: getSpacing(size, theme) }\n          : { width: getSpacing(size, theme) },\n        getStyle(props, style),\n        getStyle(props, dlv(theme, 'overrides.Spacing.style')),\n      ]}\n      {...viewProps}\n    />\n  );\n};\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport {\n  BackgroundColor,\n  ContainerShape,\n  SpacingSize,\n  Theme,\n  useTheme,\n} from '../../theme';\nimport { getSpacing } from '../Spacing';\n\nexport interface BoxProps extends ViewStyle {\n  children?: React.ReactNode;\n  testID?: string;\n\n  shape?: ContainerShape;\n  backgroundColor?: BackgroundColor;\n\n  space?: SpacingSize | number;\n  spaceBottom?: SpacingSize | number;\n  spaceEnd?: SpacingSize | number;\n  spaceHorizontal?: SpacingSize | number;\n  spaceLeft?: SpacingSize | number;\n  spaceRight?: SpacingSize | number;\n  spaceStart?: SpacingSize | number;\n  spaceTop?: SpacingSize | number;\n  spaceVertical?: SpacingSize | number;\n}\n\ntype BoxProp = keyof Omit<Omit<BoxProps, 'children'>, 'testID'>;\n\nconst propToFn: Partial<\n  {\n    [key in BoxProp]: (\n      prop: NonNullable<BoxProps[key]>,\n      theme: Theme,\n    ) => ViewStyle;\n  }\n> = {\n  backgroundColor: (color: BackgroundColor | string, theme: Theme) => {\n    // @ts-ignore\n    if (theme.colors.background[color]) {\n      // @ts-ignore\n      return { backgroundColor: theme.colors.background[color] };\n    }\n\n    return { backgroundColor: color };\n  },\n  elevation: (elevation: number, theme: Theme) => theme.elevations[elevation],\n\n  shape: (shape: ContainerShape, theme: Theme) => theme.containerShapes[shape],\n\n  space: (size: SpacingSize | number, theme: Theme) => ({\n    padding: getSpacing(size, theme),\n  }),\n  spaceBottom: (size: SpacingSize | number, theme: Theme) => ({\n    paddingBottom: getSpacing(size, theme),\n  }),\n  spaceEnd: (size: SpacingSize | number, theme: Theme) => ({\n    paddingEnd: getSpacing(size, theme),\n  }),\n  spaceHorizontal: (size: SpacingSize | number, theme: Theme) => ({\n    paddingHorizontal: getSpacing(size, theme),\n  }),\n  spaceLeft: (size: SpacingSize | number, theme: Theme) => ({\n    paddingLeft: getSpacing(size, theme),\n  }),\n  spaceRight: (size: SpacingSize | number, theme: Theme) => ({\n    paddingRight: getSpacing(size, theme),\n  }),\n  spaceStart: (size: SpacingSize | number, theme: Theme) => ({\n    paddingStart: getSpacing(size, theme),\n  }),\n  spaceTop: (size: SpacingSize | number, theme: Theme) => ({\n    paddingTop: getSpacing(size, theme),\n  }),\n  spaceVertical: (size: SpacingSize | number, theme: Theme) => ({\n    paddingVertical: getSpacing(size, theme),\n  }),\n};\n\nexport const Box = (props: BoxProps) => {\n  const { children, testID, ...viewStyles } = props;\n  const theme = useTheme();\n  const transformedStyles = [];\n  const pureStyles: ViewStyle = {};\n\n  for (const prop in viewStyles) {\n    if (prop) {\n      const styleFn = propToFn[prop as BoxProp];\n\n      if (styleFn) {\n        // @ts-ignore\n        const style = styleFn(viewStyles[prop as BoxProp], theme);\n\n        transformedStyles.push(style);\n      } else {\n        // @ts-ignore\n        pureStyles[prop as keyof ViewStyle] = viewStyles[prop as BoxProp];\n      }\n    }\n  }\n\n  return (\n    <View testID={testID} style={[pureStyles, transformedStyles]}>\n      {children}\n    </View>\n  );\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Box, Visible, LayoutProvider, Text } from '..';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"visible\"\n    }}>{`Visible`}</h1>\n    <p>{`Renders children when the current screen size matches defined sizes`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <p>{`Resize the window to see different blocks appearing responsively`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Visible large xlarge>\\n    <Box backgroundColor=\\\"#67c6bb\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Large and greater\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible medium>\\n    <Box backgroundColor=\\\"#1ca5F7\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Medium\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible xsmall small>\\n    <Box backgroundColor=\\\"#d26557\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Small and lower\\n      </Text>\\n    </Box>\\n  </Visible>\\n</LayoutProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Box,\n      Visible,\n      LayoutProvider,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Visible large xlarge mdxType=\"Visible\">\n      <Box backgroundColor=\"#67c6bb\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Large and greater\n        </Text>\n      </Box>\n    </Visible>\n    <Visible medium mdxType=\"Visible\">\n      <Box backgroundColor=\"#1ca5F7\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Medium\n        </Text>\n      </Box>\n    </Visible>\n    <Visible xsmall small mdxType=\"Visible\">\n      <Box backgroundColor=\"#d26557\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Small and lower\n        </Text>\n      </Box>\n    </Visible>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Visible} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import * as React from 'react';\n\nimport { ASC_ORDER_SCREEN_SIZES, ScreenSize, useLayout } from './LayoutContext';\n\nexport interface VisibleConfig {\n  /**\n   * When true, render children only when the screen size is xsmall\n   */\n  xsmall?: boolean;\n\n  /**\n   * When true, render children only when the screen size is small\n   */\n  small?: boolean;\n\n  /**\n   * When true, render children only when the screen size is medium\n   */\n  medium?: boolean;\n\n  /**\n   * When true, render children only when the screen size is large\n   */\n  large?: boolean;\n\n  /**\n   * When true, render children only when the screen size is xlarge\n   */\n  xlarge?: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children?: React.ReactNode;\n}\n\nconst combineConfig = (config: VisibleConfig) => {\n  const { xsmall, small, medium, large, xlarge } = config;\n\n  return [xsmall, small, medium, large, xlarge];\n};\n\nconst isVisible = (config: VisibleConfig, currentScreenSize: ScreenSize) => {\n  const visibles = combineConfig(config);\n  const currentScreenSizeIndex = ASC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  return !!visibles.find(\n    (val, index) => index === currentScreenSizeIndex && !!val,\n  );\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentScreenSize } = useLayout();\n\n  if (isVisible(config, currentScreenSize)) return <>{children}</>;\n\n  return <></>;\n};\n"],"sourceRoot":""}