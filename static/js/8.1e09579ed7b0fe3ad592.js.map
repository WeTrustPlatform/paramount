{"version":3,"sources":["/home/travis/build/WeTrustPlatform/paramount/src/components/Button/BackButton.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/Button.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Button/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.mdx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/Dialog.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Dialog/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/LoadingDots.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Loading/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/CloseableModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/FormModal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/HistoryModal.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/Modal.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalBase.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/ModalContent.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Modal/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.styles.ts","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/Overlay.tsx","/home/travis/build/WeTrustPlatform/paramount/src/components/Overlay/index.ts","/home/travis/build/WeTrustPlatform/paramount/src/icons/Icon.web.tsx","/home/travis/build/WeTrustPlatform/paramount/src/icons/index.ts"],"names":["React","_interopRequireWildcard","__webpack_require__","_icons","_theme","_Button","BackButton","props","theme","useTheme","createElement","Button","_extends2","default","appearance","isInline","iconBefore","Icon","name","size","color","colors","text","getButtonVariables","appearances","minimal","backgroundColor","background","white","focusColor","greyDefault","danger","primary","secondary","greyLight","borderColor","border","loadingBackgroundColor","overlay","dangerDefault","dangerDark","dangerLight","primaryDefault","primaryDark","primaryLight","secondaryDefault","secondaryDark","secondaryLight","outline","borderWidth","disabled","greyDark","muted","sizes","small","borderRadius","controlBorderRadius","fontSize","textSizes","height","controlHeights","paddingLeft","controlPaddings","paddingRight","medium","large","getButtonStyles","buttonStyleProps","isDisabled","isLoading","_getButtonVariables","baseStyles","_objectWithoutProperties2","_appearances$appearan","textColor","buttonStyle","_sizes$size","shapeStyles","disabledButtonTextColor","disabledButtonStyles","_objectSpread2","alignSelf","flexDirection","flexWrap","textStyle","alignItems","display","fontWeight","justifyContent","textAlign","_reactNative","_mergeStyles2","_Layout","_Loading","_Typography","_props$appearance","title","_props$color","getStyles","iconAfter","iconLoading","_props$isDisabled","isActive","_props$isInline","_props$isLoading","_props$onPress","onPress","_props$size","testID","accessibilityProps","_mergeStyles","mergeStyles","TouchableHighlight","accessible","accessibilityRole","underlayColor","style","View","Spacing","LoadingDots","Text","Object","keys","forEach","key","defineProperty","exports","enumerable","get","_BackButton","_react2","_interopRequireDefault","_reactPowerplug","_docz","_","layoutProps","MDXLayout","MDXContent","_ref","components","mdx","mdxType","id","Playground","__position","__code","__scope","this","Toggle","TouchableOpacity","Props","Dialog","Box","Heading","initial","_ref2","on","toggle","header","padding","footer","console","log","isVisible","onRequestClose","useHistory","modalContainerStyle","containerStyle","bodyStyle","of","isMDXComponent","getDialogVariables","body","maxHeight","container","elevation","maxWidth","minWidth","position","zIndex","modalContainer","width","getDialogStyles","dialogVariables","_Modal","_Overlay","_Dialog","children","_props$onRequestClose","Modal","visible","transparent","Overlay","_this","_classCallCheck2","_possibleConstructorReturn2","_getPrototypeOf2","call","animationState","dotOpacities","initializeDots","shouldAnimate","targetOpacity","opacities","i","numberOfDots","dot","Animated","Value","minOpacity","push","animateDots","bind","whichDot","length","min","nextDot","timing","duration","toValue","start","_this$props","dots","map","o","marginLeft","marginRight","opacity","Component","defaultProps","_LoadingDots","_ModalContent","CloseableModal","rightSide","onClose","modalProps","ModalContent","event","preventDefault","paddingHorizontal","_CloseableModal","FormModal","onClear","_props$clearText","clearText","closeableModalProps","isBold","_ModalBase","modalId","HistoryModalBase","componentDidUpdate","previousProps","updateBrowserHistory","handleManuallyClosed","componentWillUnmount","clearBrowserState","history","state","modal","pushState","_objectSpread4","_defineProperty2","window","addEventListener","handlePopstate","go","handleEscapeKey","replaceState","removeEventListener","ModalBase","PureComponent","HistoryModal","_ref$useHistory","_HistoryModal","_focusTrap","ReactDOM","el","modalRoot","focusTrap","isUnmounting","content","createRef","freezeBody","document","overflow","unfreezeBody","activateFocus","current","initialFocus","onDeactivate","activate","deactivateFocus","deactivate","getElementsByTagName","appendChild","forceUpdate","_this$props$isBackgro","isBackgroundScrollable","removeChild","_this$props2","_this$props2$isBackgr","createPortal","tabIndex","ref","bottom","left","right","top","prototype","hasOwnProperty","_exportNames","_FormModal","getOverlayVariables","cursor","getOverlayStyles","overlayVariables","overlayStyle","_props$transparent","TouchableWithoutFeedback","Feather","IconTag","concat","result","replace","matches","toUpperCase","charAt","slice","convertToPascal","_Icon"],"mappings":"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","file":"static/js/8.9866a6c1.js","sourcesContent":["import * as React from 'react';\n\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Button, ButtonProps } from './Button';\n\nexport const BackButton = (props: ButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <Button\n      appearance=\"minimal\"\n      isInline\n      iconBefore={\n        <Icon name=\"arrow-left\" size={24} color={theme.colors.text.default} />\n      }\n      size=\"small\"\n      {...props}\n    />\n  );\n};\n","import { TextStyle, ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport type ButtonColorProps = ViewStyle & {\n  color: string;\n  focusColor: string;\n  loadingBackgroundColor?: string;\n};\n\nexport interface ButtonColors {\n  default: ButtonColorProps;\n  danger: ButtonColorProps;\n  primary: ButtonColorProps;\n  secondary: ButtonColorProps;\n}\n\nexport type ButtonColor = keyof ButtonColors;\n\nexport interface ButtonAppearances {\n  minimal: ButtonColors;\n  primary: ButtonColors;\n  outline: ButtonColors;\n}\n\nexport type ButtonAppearance = keyof ButtonAppearances;\n\nexport type SizeStyles = ViewStyle & {\n  borderRadius: number;\n  fontSize: number;\n  height: number;\n  paddingLeft: number;\n  paddingRight: number;\n};\n\nexport interface ButtonSizes {\n  small: SizeStyles;\n  medium: SizeStyles;\n  large: SizeStyles;\n}\n\nexport type ButtonSize = keyof ButtonSizes;\n\nexport interface ButtonVariables {\n  appearances: ButtonAppearances;\n  disabled: {\n    backgroundColor: string;\n    color: string;\n  };\n  sizes: ButtonSizes;\n}\n\nexport const getButtonVariables = (theme: Theme): ButtonVariables => {\n  return {\n    appearances: {\n      minimal: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          color: theme.colors.text.secondary\n            ? theme.colors.text.secondary\n            : theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n      },\n      primary: {\n        default: {\n          backgroundColor: theme.colors.background.greyLight,\n          borderColor: theme.colors.border.default,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n          loadingBackgroundColor: theme.colors.background.overlay,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.dangerDefault,\n          borderColor: theme.colors.border.danger,\n          color: 'white',\n\n          focusColor: theme.colors.background.dangerDark,\n          loadingBackgroundColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.primaryDefault,\n          borderColor: theme.colors.border.primary,\n          color: 'white',\n\n          focusColor: theme.colors.background.primaryDark,\n          loadingBackgroundColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.secondaryDefault,\n          borderColor: theme.colors.border.secondary,\n          color: 'white',\n\n          focusColor: theme.colors.background.secondaryDark,\n          loadingBackgroundColor: theme.colors.background.secondaryLight,\n        },\n      },\n\n      outline: {\n        default: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.text.default,\n          borderWidth: 3,\n          color: theme.colors.text.default,\n\n          focusColor: theme.colors.background.greyDefault,\n        },\n\n        danger: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.danger,\n          borderWidth: 3,\n          color: theme.colors.text.danger,\n\n          focusColor: theme.colors.background.dangerLight,\n        },\n\n        primary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.primary,\n          borderWidth: 3,\n          color: theme.colors.text.primary,\n\n          focusColor: theme.colors.background.primaryLight,\n        },\n\n        secondary: {\n          backgroundColor: theme.colors.background.white,\n          borderColor: theme.colors.border.secondary,\n          borderWidth: 3,\n          color: theme.colors.text.secondary,\n\n          focusColor: theme.colors.background.secondaryLight,\n        },\n      },\n    },\n    disabled: {\n      backgroundColor: theme.colors.background.greyDark,\n\n      color: theme.colors.text.muted,\n    },\n    sizes: {\n      small: {\n        borderRadius: theme.controlBorderRadius.small,\n        fontSize: theme.textSizes.small.fontSize || 14,\n        height: theme.controlHeights.small,\n        paddingLeft: theme.controlPaddings.small,\n        paddingRight: theme.controlPaddings.small,\n      },\n\n      medium: {\n        borderRadius: theme.controlBorderRadius.medium,\n        fontSize: theme.textSizes.medium.fontSize || 16,\n        height: theme.controlHeights.medium,\n        paddingLeft: theme.controlPaddings.medium,\n        paddingRight: theme.controlPaddings.medium,\n      },\n\n      large: {\n        borderRadius: theme.controlBorderRadius.large,\n        fontSize: theme.textSizes.large.fontSize || 20,\n        height: theme.controlHeights.large,\n        paddingLeft: theme.controlPaddings.large,\n        paddingRight: theme.controlPaddings.large,\n      },\n    },\n  };\n};\n\nexport interface ButtonStyles {\n  buttonStyle: ViewStyle;\n  textStyle: TextStyle;\n  focusColor: string;\n}\n\nexport interface ButtonStylesProps {\n  appearance: ButtonAppearance;\n  color: ButtonColor;\n  size: ButtonSize;\n  isDisabled: boolean;\n  isLoading: boolean;\n  isInline: boolean;\n}\nexport type GetButtonStyles = (\n  buttonStylesProps: ButtonStylesProps,\n  theme: Theme,\n) => ButtonStyles;\n\nexport const getButtonStyles: GetButtonStyles = (buttonStyleProps, theme) => {\n  const {\n    appearance,\n    color,\n    size,\n    isDisabled,\n    isLoading,\n    isInline,\n  } = buttonStyleProps;\n\n  const { appearances, sizes, disabled, ...baseStyles } = getButtonVariables(\n    theme,\n  );\n\n  const {\n    color: textColor,\n    focusColor,\n    loadingBackgroundColor,\n    ...buttonStyle\n  } = appearances[appearance][color];\n\n  const { fontSize, ...shapeStyles } = sizes[size];\n  const { color: disabledButtonTextColor, ...disabledButtonStyles } = disabled;\n\n  return {\n    buttonStyle: {\n      ...(isDisabled\n        ? {\n            ...disabledButtonStyles,\n            ...shapeStyles,\n          }\n        : {\n            ...shapeStyles,\n            ...baseStyles,\n            ...buttonStyle,\n            ...(isLoading ? { backgroundColor: loadingBackgroundColor } : {}),\n          }),\n      ...(isInline\n        ? {\n            alignSelf: 'flex-start',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n          }\n        : {}),\n    },\n    focusColor,\n    textStyle: {\n      alignItems: 'center',\n      color: isDisabled ? disabledButtonTextColor : textColor,\n      display: 'flex',\n      fontSize,\n      fontWeight: '600',\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  AccessibilityProps,\n  GestureResponderEvent,\n  TouchableHighlight,\n  View,\n} from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Spacing } from '../Layout';\nimport { LoadingDots } from '../Loading';\nimport { Text } from '../Typography';\nimport {\n  ButtonAppearance,\n  ButtonColor,\n  ButtonSize,\n  ButtonStyles,\n  GetButtonStyles,\n  getButtonStyles,\n} from './Button.styles';\n\nexport interface ButtonProps extends AccessibilityProps {\n  title?: string;\n\n  /**\n   * The intent of the button.\n   * @default \"default\"\n   */\n  color?: ButtonColor;\n\n  /**\n   * The appearance of the button.\n   * @default \"primary\"\n   */\n  appearance?: ButtonAppearance;\n\n  /**\n   * The size of the button.\n   * @default \"medium\"\n   */\n  size?: ButtonSize;\n\n  /**\n   * When true, show a loading spinner before the title. This also disables the button.\n   * @default false\n   */\n  isLoading?: boolean;\n\n  /**\n   * Forcefully set the active state of a button.\n   * @default false\n   */\n  isActive?: boolean;\n\n  /**\n   * When true, the button is disabled. isLoading also sets the button to disabled.\n   * @default false\n   */\n  isDisabled?: boolean;\n\n  /**\n   * When true, the button will not stretch full width\n   * @default false\n   */\n  isInline?: boolean;\n\n  /**\n   * Button press handler\n   * @default () => {}\n   */\n  onPress?: (event: GestureResponderEvent) => void;\n\n  /**\n   * Sets an icon before the text.\n   * @default undefined\n   */\n  iconBefore?: React.ReactNode;\n\n  /**\n   * Sets an icon after the text.\n   * @default undefined\n   */\n  iconAfter?: React.ReactNode;\n\n  /**\n   * Sets an icon at loading state.\n   * @default undefined\n   */\n  iconLoading?: React.ReactNode;\n\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetButtonStyles, DeepPartial<ButtonStyles>>;\n\n  testID?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const {\n    appearance = 'primary',\n    title,\n    color = 'default',\n    getStyles,\n    iconAfter,\n    iconBefore,\n    iconLoading,\n    isActive = false,\n    isDisabled = false,\n    isInline = false,\n    isLoading = false,\n    onPress = () => {\n      return;\n    },\n    size = 'medium',\n    testID,\n\n    ...accessibilityProps\n  } = props;\n\n  const theme = useTheme();\n\n  const { buttonStyle, textStyle, focusColor } = mergeStyles(\n    getButtonStyles,\n    getStyles,\n  )(\n    {\n      appearance,\n      color,\n      isDisabled,\n      isInline,\n      isLoading,\n      size,\n    },\n    theme,\n  );\n\n  return (\n    <TouchableHighlight\n      accessible\n      accessibilityRole=\"button\"\n      underlayColor={focusColor}\n      disabled={!!(isDisabled || isLoading)}\n      onPress={onPress}\n      style={buttonStyle}\n      testID={testID}\n      {...accessibilityProps}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        {iconBefore}\n        <Spacing\n          paddingLeft={iconBefore ? 1 : 0}\n          paddingRight={iconAfter ? 1 : 0}\n        >\n          {isLoading ? (\n            iconLoading || <LoadingDots color={textStyle.color} />\n          ) : title ? (\n            <Text\n              getStyles={() => ({\n                textStyle,\n              })}\n            >\n              {title}\n            </Text>\n          ) : null}\n        </Spacing>\n        {iconAfter}\n      </View>\n    </TouchableHighlight>\n  );\n};\n","export * from './Button';\nexport * from './BackButton';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Toggle } from 'react-powerplug';\nimport { TouchableOpacity } from 'react-native';\nimport { Playground, Props } from 'docz';\nimport { Icon } from '../../icons';\nimport { Dialog } from '.';\nimport { Button } from '../Button';\nimport { Box, Spacing } from '../Layout';\nimport { Text, Heading } from '../Typography';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dialog\"\n    }}>{`Dialog`}</h1>\n    <p>{`Dialog has no predefined styling and handlers. The content, header and footer is completely in your control.`}</p>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <Playground __position={0} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Box>\\n      <Dialog\\n        header={\\n          <Spacing\\n            padding={2}\\n            flexDirection=\\\"row\\\"\\n            justifyContent=\\\"space-between\\\"\\n            alignItems=\\\"center\\\"\\n          >\\n            <Heading>Title</Heading>\\n            <TouchableOpacity onPress={toggle}>\\n              <Icon name=\\\"x\\\" size={24} />\\n            </TouchableOpacity>\\n          </Spacing>\\n        }\\n        footer={\\n          <Spacing padding={2} flexDirection=\\\"row\\\" justifyContent=\\\"flex-end\\\">\\n            <Button appearance=\\\"minimal\\\" onPress={toggle} title=\\\"Cancel\\\" />\\n            <Spacing paddingLeft={2}>\\n              <Button\\n                color=\\\"primary\\\"\\n                onPress={() => console.log(\\'Button clicked\\')}\\n                title=\\\"Accept\\\"\\n              />\\n            </Spacing>\\n          </Spacing>\\n        }\\n        isVisible={on}\\n        onRequestClose={toggle}\\n        useHistory={false}\\n        getStyles={(props, theme) => ({\\n          modalContainerStyle: {},\\n          containerStyle: {},\\n          bodyStyle: {},\\n        })}\\n      >\\n        <Box height={1800}>\\n          <Text>Put any content in the dialog</Text>\\n        </Box>\\n      </Dialog>\\n      <Button onPress={toggle} title=\\\"Open dialog\\\" />\\n    </Box>\\n  )}\\n</Toggle>'} __scope={{\n      props: this ? this.props : props,\n      Toggle,\n      TouchableOpacity,\n      Playground,\n      Props,\n      Icon,\n      Dialog,\n      Button,\n      Box,\n      Spacing,\n      Text,\n      Heading\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Box mdxType=\"Box\">\n        <Dialog header={<Spacing padding={2} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mdxType=\"Spacing\">\n              <Heading mdxType=\"Heading\">Title</Heading>\n              <TouchableOpacity onPress={toggle} mdxType=\"TouchableOpacity\">\n                <Icon name=\"x\" size={24} mdxType=\"Icon\" />\n              </TouchableOpacity>\n            </Spacing>} footer={<Spacing padding={2} flexDirection=\"row\" justifyContent=\"flex-end\" mdxType=\"Spacing\">\n              <Button appearance=\"minimal\" onPress={toggle} title=\"Cancel\" mdxType=\"Button\" />\n              <Spacing paddingLeft={2} mdxType=\"Spacing\">\n                <Button color=\"primary\" onPress={() => console.log('Button clicked')} title=\"Accept\" mdxType=\"Button\" />\n              </Spacing>\n            </Spacing>} isVisible={on} onRequestClose={toggle} useHistory={false} getStyles={(props, theme) => ({\n            modalContainerStyle: {},\n            containerStyle: {},\n            bodyStyle: {}\n          })} mdxType=\"Dialog\">\n          <Box height={1800} mdxType=\"Box\">\n            <Text mdxType=\"Text\">Put any content in the dialog</Text>\n          </Box>\n        </Dialog>\n        <Button onPress={toggle} title=\"Open dialog\" mdxType=\"Button\" />\n      </Box>}\n  </Toggle>\n    </Playground>\n    <h3 {...{\n      \"id\": \"dialog-props\"\n    }}>{`Dialog Props`}</h3>\n    <Props of={Dialog} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface DialogVariables {\n  body: ViewStyle;\n  container: ViewStyle;\n  modalContainer: ViewStyle;\n}\n\nexport const getDialogVariables = (theme: Theme): DialogVariables => {\n  return {\n    body: {\n      maxHeight: 400,\n    },\n    container: {\n      backgroundColor: 'white',\n      elevation: 1,\n      maxWidth: 600,\n      minWidth: 280,\n      position: 'relative',\n      zIndex: 1,\n    },\n    modalContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      height: '100%',\n      justifyContent: 'center',\n      width: '100%',\n    },\n  };\n};\n\nexport interface DialogStyles {\n  bodyStyle: ViewStyle;\n  containerStyle: ViewStyle;\n  modalContainerStyle: ViewStyle;\n}\nexport type GetDialogStyles = (theme: Theme) => DialogStyles;\n\nexport const getDialogStyles: GetDialogStyles = theme => {\n  const dialogVariables = getDialogVariables(theme);\n\n  return {\n    bodyStyle: dialogVariables.body,\n    containerStyle: dialogVariables.container,\n    modalContainerStyle: dialogVariables.modalContainer,\n  };\n};\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport { Modal } from '../Modal';\nimport { Overlay } from '../Overlay';\nimport {\n  DialogStyles,\n  GetDialogStyles,\n  getDialogStyles,\n} from './Dialog.styles';\n\n// TODO: Import from react-native when react-native-web implementation is ready\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  /** Prop to be passed to Modal */\n  useHistory?: boolean;\n  /** To show dialog or not */\n  isVisible?: boolean;\n  /** Called when clicking on overlay or pressing Esc, or using back button (requires useHistory to be true) */\n  onRequestClose?: () => void;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  header?: React.ReactNode;\n  /** In ConfirmDialog, you can pass null to render nothing. If it is undefined, it will use default value */\n  footer?: React.ReactNode;\n  /**\n   * Inline styles for components\n   */\n  getStyles?: ReplaceReturnType<GetDialogStyles, DeepPartial<DialogStyles>>;\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const {\n    children,\n    footer,\n    header,\n    isVisible,\n    onRequestClose = () => null,\n    getStyles,\n    useHistory,\n  } = props;\n  const theme = useTheme();\n\n  const { modalContainerStyle, containerStyle, bodyStyle } = mergeStyles(\n    getDialogStyles,\n    getStyles,\n  )(theme);\n\n  return (\n    <Modal\n      useHistory={useHistory}\n      visible={isVisible}\n      transparent\n      onRequestClose={onRequestClose}\n    >\n      <View style={modalContainerStyle}>\n        <View style={containerStyle}>\n          {header}\n          <View style={bodyStyle}>{children}</View>\n          {footer}\n        </View>\n        <Overlay onPress={onRequestClose} />\n      </View>\n    </Modal>\n  );\n};\n","export * from './Dialog';\n","import * as React from 'react';\nimport { Animated, View } from 'react-native';\n\nexport interface LoadingDotsProps {\n  numberOfDots: number;\n  duration: number;\n  minOpacity: number;\n  color: string;\n  size: number;\n}\n\n/**\n * Ported from https://github.com/adorableio/react-native-animated-ellipsis\n */\nexport class LoadingDots extends React.Component<LoadingDotsProps> {\n  public static defaultProps = {\n    color: '#aaa',\n    duration: 300,\n    minOpacity: 0,\n    numberOfDots: 3,\n    size: 10,\n  };\n\n  public animationState: {\n    dotOpacities: any[];\n    shouldAnimate: boolean;\n    targetOpacity: number;\n  };\n\n  constructor(props: LoadingDotsProps) {\n    super(props);\n\n    this.animationState = {\n      dotOpacities: this.initializeDots(),\n      shouldAnimate: true,\n      targetOpacity: 1,\n    };\n  }\n\n  public initializeDots() {\n    const opacities = [];\n\n    for (let i = 0; i < this.props.numberOfDots; i++) {\n      const dot = new Animated.Value(this.props.minOpacity);\n      opacities.push(dot);\n    }\n\n    return opacities;\n  }\n\n  public componentDidMount() {\n    this.animateDots.bind(this)(0);\n  }\n\n  public componentWillUnmount() {\n    this.animationState.shouldAnimate = false;\n  }\n\n  public animateDots(whichDot: number) {\n    if (!this.animationState.shouldAnimate) return;\n\n    // Swap fade direction when we hit end of list\n    if (whichDot >= this.animationState.dotOpacities.length) {\n      whichDot = 0;\n      const min = this.props.minOpacity;\n      this.animationState.targetOpacity =\n        this.animationState.targetOpacity === min ? 1 : min;\n    }\n\n    const nextDot = whichDot + 1;\n\n    Animated.timing(this.animationState.dotOpacities[whichDot], {\n      duration: this.props.duration,\n      toValue: this.animationState.targetOpacity,\n    }).start(this.animateDots.bind(this, nextDot));\n  }\n\n  public render() {\n    const { size, color } = this.props;\n\n    const dots = this.animationState.dotOpacities.map((o, i) => (\n      <Animated.View\n        key={i}\n        style={{\n          backgroundColor: color,\n          borderRadius: '50%',\n          height: size,\n          marginLeft: 3,\n          marginRight: 3,\n          opacity: o,\n          width: size,\n        }}\n      />\n    ));\n\n    return (\n      <View\n        style={{\n          alignItems: 'center',\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}\n      >\n        {dots}\n      </View>\n    );\n  }\n}\n","export * from './LoadingDots';\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Modal, ModalProps } from '.';\nimport { Icon } from '../../icons';\nimport { useTheme } from '../../theme';\nimport { Box } from '../Layout';\nimport { ModalContent } from './ModalContent';\n\nexport interface CloseableModalProps extends ModalProps {\n  onClose: () => void;\n  children: React.ReactNode;\n  rightSide?: React.ReactNode;\n}\n\nexport const CloseableModal = (props: CloseableModalProps) => {\n  const { children, rightSide, onClose, ...modalProps } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Modal {...modalProps}>\n      <ModalContent>\n        <Box flexDirection=\"row\" justifyContent=\"space-between\">\n          <TouchableOpacity\n            style={{ width: 56, height: 60, justifyContent: 'center' }}\n            onPress={event => {\n              event.preventDefault();\n              onClose();\n            }}\n          >\n            <View style={{ paddingHorizontal: 8 }}>\n              <Icon color={theme.colors.text.default} size={40} name=\"x\" />\n            </View>\n          </TouchableOpacity>\n          {rightSide}\n        </Box>\n        {children}\n      </ModalContent>\n    </Modal>\n  );\n};\n","import * as React from 'react';\nimport { TouchableOpacity, View } from 'react-native';\n\nimport { Text } from '../Typography';\nimport { CloseableModal, CloseableModalProps } from './CloseableModal';\n\nexport interface FormModalProps extends CloseableModalProps {\n  onClear: () => void;\n  clearText?: string;\n}\n\nexport const FormModal = (props: FormModalProps) => {\n  const {\n    children,\n    onClose,\n    onClear,\n    clearText = 'Clear',\n    ...closeableModalProps\n  } = props;\n\n  return (\n    <CloseableModal\n      onClose={onClose}\n      rightSide={\n        <TouchableOpacity\n          onPress={event => {\n            event.preventDefault();\n            onClear();\n          }}\n        >\n          <View\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              height: '100%',\n              justifyContent: 'center',\n              paddingHorizontal: 16,\n            }}\n          >\n            <Text isBold>{clearText}</Text>\n          </View>\n        </TouchableOpacity>\n      }\n      {...closeableModalProps}\n    >\n      {children}\n    </CloseableModal>\n  );\n};\n","import * as React from 'react';\n\nimport { HistoryModalProps } from './HistoryModal';\nimport { ModalBase } from './ModalBase';\n\nlet modalId = 0;\n\n/**\n * There are 3 ways a user may close the modal on the browser\n * 1. Back button press\n * 2. Escape key\n * 3. Manually closed from within the modal (e.g. Close button)\n * Each of them should properly restore the page user was at\n */\nclass HistoryModalBase extends React.PureComponent<HistoryModalProps> {\n  public modalId = ++modalId;\n\n  public componentDidUpdate = (previousProps: HistoryModalProps) => {\n    const { visible } = this.props;\n\n    if (previousProps.visible !== visible) {\n      if (visible) {\n        this.updateBrowserHistory();\n      } else {\n        this.handleManuallyClosed();\n      }\n    }\n  };\n\n  public componentWillUnmount = () => {\n    this.clearBrowserState();\n  };\n\n  public updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    if (\n      !history.state ||\n      !history.state.modal ||\n      !history.state.modal[this.modalId]\n    ) {\n      // Push to history so that the page is not lost on browser back button press\n      history.pushState(\n        {\n          ...history.state,\n          modal: {\n            ...(history.state && history.state.modal),\n            [this.modalId]: true,\n          },\n        },\n        '',\n      );\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopstate, false);\n  };\n\n  /** Back button press */\n  public handlePopstate = (event: PopStateEvent) => {\n    const { visible, onRequestClose } = this.props;\n    // Close the modal if the history state no longer contains our modal name\n    if (\n      (!event.state ||\n        !event.state.modal ||\n        !event.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      this.clearBrowserState();\n      onRequestClose();\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry in the history but the modal is closed, fix the history by removing the uppy history entry\n    // This occurs when another entry is added into the history state while the modal is open, and then the modal gets manually closed\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (\n      !visible &&\n      event.state &&\n      event.state.modal &&\n      event.state.modal[this.modalId]\n    ) {\n      history.go(-1);\n    }\n  };\n\n  /** Escape key */\n  public handleEscapeKey = () => {\n    const { onRequestClose } = this.props;\n\n    if (\n      (history.state ||\n        history.state.modal ||\n        history.state.modal[this.modalId]) &&\n      onRequestClose\n    ) {\n      /** Clear state, so that when a falsy `visible` prop gets passed, it can check whether the state still exists in `handleManuallyClosed` */\n      this.clearBrowserState();\n      onRequestClose();\n      history.go(-1);\n    }\n  };\n\n  /** Manual */\n  public handleManuallyClosed = () => {\n    if (\n      history.state &&\n      history.state.modal &&\n      history.state.modal[this.modalId]\n    ) {\n      this.clearBrowserState();\n      history.go(-1);\n    }\n  };\n\n  public clearBrowserState = () => {\n    history.replaceState(\n      {\n        ...history.state,\n        modal: {\n          ...(history.state && history.state.modal),\n          [this.modalId]: false,\n        },\n      },\n      '',\n    );\n\n    window.removeEventListener('popstate', this.handlePopstate, false);\n  };\n\n  public render() {\n    const { ...modalProps } = this.props;\n\n    return <ModalBase {...modalProps} onRequestClose={this.handleEscapeKey} />;\n  }\n}\n\nexport const HistoryModal = ({\n  useHistory = false,\n  ...props\n}: HistoryModalProps) => {\n  if (useHistory) return <HistoryModalBase {...props} />;\n\n  return <ModalBase {...props} />;\n};\n","export * from './HistoryModal';\n","import createFocusTrap, { FocusTrap } from 'focus-trap';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ModalBaseProps } from './ModalBase';\n\n// Temporary usage until it is integrated\n// https://github.com/necolas/react-native-web/issues/1020\n\nexport class ModalBase extends React.PureComponent<ModalBaseProps> {\n  public el: HTMLDivElement | null;\n  public modalRoot: HTMLBodyElement | null;\n  public focusTrap: FocusTrap | null;\n  /** Solves the scenario where it is unmounting, we should deactivate focus but not trigger `onRequestClose()` */\n  public isUnmounting: boolean = false;\n  public content: React.RefObject<HTMLDivElement> = React.createRef<\n    HTMLDivElement\n  >();\n\n  constructor(props: ModalBaseProps) {\n    super(props);\n    this.el = null;\n    this.modalRoot = null;\n    this.focusTrap = null;\n  }\n\n  public componentDidMount() {\n    this.el = document.createElement('div');\n    this.modalRoot = document.getElementsByTagName('body')[0];\n    this.modalRoot.appendChild(this.el);\n    this.forceUpdate();\n  }\n\n  public componentDidUpdate() {\n    const { visible, isBackgroundScrollable = false } = this.props;\n\n    if (visible) {\n      this.activateFocus();\n      if (!isBackgroundScrollable) {\n        this.freezeBody();\n      }\n    } else {\n      this.deactivateFocus();\n      if (!isBackgroundScrollable) {\n        this.unfreezeBody();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.modalRoot && this.el) {\n      this.modalRoot.removeChild(this.el);\n    }\n\n    this.isUnmounting = true;\n    this.deactivateFocus();\n  }\n\n  public freezeBody = () => {\n    document.body.style.overflow = 'hidden';\n    document.body.style.height = '100vh';\n  };\n\n  public unfreezeBody = () => {\n    document.body.style.overflow = '';\n    document.body.style.height = '';\n  };\n\n  public activateFocus = () => {\n    const { onRequestClose } = this.props;\n\n    if (this.content.current && !this.focusTrap) {\n      this.focusTrap = createFocusTrap(this.content.current, {\n        initialFocus: this.content.current,\n        onDeactivate: () => {\n          if (onRequestClose && this.props.visible && !this.isUnmounting) {\n            onRequestClose();\n          }\n        },\n      });\n\n      this.focusTrap.activate();\n    }\n  };\n\n  public deactivateFocus = () => {\n    if (this.focusTrap) {\n      this.focusTrap.deactivate();\n      this.focusTrap = null;\n    }\n  };\n\n  public render(): React.ReactPortal | null {\n    const { transparent, visible, isBackgroundScrollable = false } = this.props;\n\n    if (!visible || !this.el) return null;\n\n    return ReactDOM.createPortal(\n      <div\n        tabIndex={-1}\n        ref={this.content}\n        style={{\n          backgroundColor: transparent ? 'transparent' : 'white',\n          bottom: 0,\n          left: 0,\n          overflow: 'auto',\n          position: isBackgroundScrollable ? 'absolute' : 'fixed',\n          right: 0,\n          top: 0,\n          zIndex: 1000,\n        }}\n      >\n        {this.props.children}\n      </div>,\n      this.el,\n    );\n  }\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nexport interface ModalContentProps {\n  children: React.ReactNode;\n}\n\nexport const ModalContent = (props: ModalContentProps) => {\n  const { children } = props;\n\n  return (\n    <View\n      style={{\n        height: '100%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: 960,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","export * from './ModalBase';\nexport * from './HistoryModal';\nexport * from './FormModal';\nexport * from './CloseableModal';\nexport {\n  HistoryModal as Modal,\n  HistoryModalProps as ModalProps,\n} from './Modal';\n","import { ViewStyle } from 'react-native';\n\nimport { Theme } from '../../theme/ThemeInterface';\n\nexport interface OverlayVariables {\n  overlay: ViewStyle & { cursor?: string };\n}\n\nexport const getOverlayVariables = (theme: Theme): OverlayVariables => {\n  return {\n    overlay: {\n      bottom: 0,\n      cursor: 'auto',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: '100%',\n    },\n  };\n};\n\nexport interface OverlayStyles {\n  overlayStyle: ViewStyle;\n}\n\nexport interface OverlayStylesProps {\n  transparent: boolean;\n}\n\nexport type GetOverlayStyles = (\n  { transparent }: OverlayStylesProps,\n  theme: Theme,\n) => OverlayStyles;\n\nexport const getOverlayStyles: GetOverlayStyles = ({ transparent }, theme) => {\n  const overlayVariables = getOverlayVariables(theme);\n\n  return {\n    overlayStyle: {\n      ...overlayVariables.overlay,\n      backgroundColor: transparent\n        ? 'transparent'\n        : theme.colors.background.overlay,\n    },\n  };\n};\n","import * as React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\nimport { DeepPartial } from 'ts-essentials';\n\nimport { useTheme } from '../../theme';\nimport { mergeStyles, ReplaceReturnType } from '../../utils/mergeStyles';\nimport {\n  GetOverlayStyles,\n  getOverlayStyles,\n  OverlayStyles,\n} from './Overlay.styles';\n\ninterface OverlayProps {\n  onPress: () => void;\n  transparent?: boolean;\n  getStyles?: ReplaceReturnType<GetOverlayStyles, DeepPartial<OverlayStyles>>;\n}\n\nexport const Overlay = (props: OverlayProps) => {\n  const { onPress, transparent = false, getStyles } = props;\n  const theme = useTheme();\n\n  const { overlayStyle } = mergeStyles(getOverlayStyles, getStyles)(\n    { transparent },\n    theme,\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={event => {\n        event.preventDefault();\n        onPress();\n      }}\n    >\n      <View style={overlayStyle} />\n    </TouchableWithoutFeedback>\n  );\n};\n","export * from './Overlay';\n","import * as React from 'react';\nimport * as Feather from 'react-icons/fi';\n\nimport { IconProps } from './Icon';\n\nfunction convertToPascal(name: string) {\n  const converter = (matches: string, ...args: any[]) => {\n    return matches[1].toUpperCase();\n  };\n\n  const result = name.replace(/(\\-\\w)/g, converter);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nexport default ({ name, color, size }: IconProps) => {\n  // @ts-ignore\n  const IconTag = Feather[`Fi${convertToPascal(name)}`];\n\n  return <IconTag color={color} size={size} />;\n};\n","export { default as Icon } from './Icon';\n"],"sourceRoot":""}