{"version":3,"sources":["webpack:///../docs/Layout.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","children","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"icAOO,IAAMA,EAAe,CAC1B,KAAQ,SACR,MAAS,S,iMAGX,IAKMC,EAAc,CAClBD,gBAGIE,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAEZ,YAAC,IAAD,KAAiBA,IAER,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,UADR,UAGA,sGAAqF,0BAAYC,WAAW,KAAvB,WAArF,KAA8I,0BAAYA,WAAW,KAAvB,kBAA9I,KAA8M,0BAAYA,WAAW,KAAvB,aAA9M,+BAAmS,mBAAGA,WAAW,KAAQ,CACrT,KAAQ,WADuR,aAAnS,KAGA,iBAAQ,CACN,GAAM,SADR,SAGA,yCAAwB,0BAAYA,WAAW,KAAvB,kBAAxB,6CAAgI,mBAAGA,WAAW,KAAQ,CAClJ,KAAQ,aADoH,8BAGhI,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,2BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8EAIL,iBAAQ,CACN,GAAM,SADR,SAGA,6DAA4C,0BAAYA,WAAW,KAAvB,aAA5C,oEACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iDAIL,iBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oMAYL,iBAAQ,CACN,GAAM,yBADR,yBAGA,qBAAG,0BAAYA,WAAW,KAAvB,WAAH,KAA4D,0BAAYA,WAAW,KAAvB,kBAA5D,KAA4H,0BAAYA,WAAW,KAAvB,cAC5H,iBAAQ,CACN,GAAM,WADR,WAGA,uHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2S,wLA6BTJ,EAAWK,gBAAiB","file":"component---docs-layout-mdx-77d6f120606d9fbd24ed.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Playground, Props } from 'docz';\nimport { LayoutProvider, useLayout, Text } from '../src';\nexport const _frontmatter = {\n  \"name\": \"Layout\",\n  \"order\": 85\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\n\nconst MDXLayout = ({\n  children\n}) => <LayoutProvider>{children}</LayoutProvider>;\n\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h1>\n    <p>{`Paramount provides building blocks to create responsive layout via components `}<inlineCode parentName=\"p\">{`Visible`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Row and Column`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Container`}</inlineCode>{` and convenience functions (`}<a parentName=\"p\" {...{\n        \"href\": \"#usage\"\n      }}>{`see Usage`}</a>{`)`}</p>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`Make sure to use `}<inlineCode parentName=\"p\">{`LayoutProvider`}</inlineCode>{` at the top-level component. For options, `}<a parentName=\"p\" {...{\n        \"href\": \"#options\"\n      }}>{`see Configuration Options`}</a></p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`debug`}</inlineCode>{` prop to see the layout`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<LayoutProvider value={{ layout: options }}>{children}</LayoutProvider>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Paramount exposes a convenience hook `}<inlineCode parentName=\"p\">{`useLayout`}</inlineCode>{` that you can import to make use of utility functions for layout`}</p>\n    <h3 {...{\n      \"id\": \"currentscreensize\"\n    }}>{`currentScreenSize`}</h3>\n    <p>{`Retrieves the current screen size`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const { currentScreenSize } = useLayout();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getresponsivevalue\"\n    }}>{`getResponsiveValue`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const { getResponsiveValue } = useLayout();\nconst color = getResponsiveValue({\n  xsmall: 'red',\n  large: 'blue',\n});\nconst number = getResponsiveValue({\n  xsmall: 0,\n  large: 1,\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"responsive-components\"\n    }}>{`Responsive Components`}</h3>\n    <p><inlineCode parentName=\"p\">{`Visible`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Row and Column`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Container`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`These are all the available configuration options, as well as the default layout configuration`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export const defaultLayout: Layout = {\n  breakpoints: {\n    small: 480,\n\n    medium: 768,\n\n    large: 992,\n\n    xlarge: 1200,\n  },\n  containerSizes: {\n    small: 540,\n\n    medium: 720,\n\n    large: 960,\n\n    xlarge: 1200,\n  },\n  gridColumnCount: 12,\n  gutterWidth: 32,\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}