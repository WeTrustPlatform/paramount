{"version":3,"sources":["webpack:///../src/components/Collapsible/Collapsible.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Collapsible","Box","Toggle","title","initialIsOpen","marginVertical","justifyContent","alignItems","height","backgroundColor","initial","on","toggle","isOpen","onOpen","onClose","of","parentName","isMDXComponent"],"mappings":"oeAUO,IAAMA,EAAe,Q,4NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,6DACA,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mNAA4NC,QAAS,CACtQJ,QACAH,kBACAQ,eACAC,UACAC,gBACAC,QACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAaS,MAAM,SAASC,eAAe,EAAOV,QAAQ,eACxD,YAAC,IAAD,CAAKW,eAAgB,GAAIC,eAAe,SAASC,WAAW,SAASC,OAAQ,IAAKC,gBAAgB,UAAUf,QAAQ,UAGpH,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gaAAuaC,QAAS,CACjdJ,QACAH,kBACAQ,eACAC,UACAC,gBACAC,QACAC,YACCR,QAAQ,cACb,YAAC,IAAD,CAAQgB,SAAS,EAAOhB,QAAQ,WAC7B,gBACKiB,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,YAAC,IAAD,CAAaT,MAAOQ,EAAK,oBAAsB,mBAAoBE,OAAQF,EAAIG,OAAQF,EAAQG,QAASH,EAAQlB,QAAQ,eAC9H,YAAC,IAAD,CAAKW,eAAgB,GAAIC,eAAe,SAASC,WAAW,SAASC,OAAQ,IAAKC,gBAAgB,UAAUf,QAAQ,aAIxH,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOsB,GAAIhB,IAAaN,QAAQ,UAChC,iBAAQ,CACN,GAAM,aADR,aAGA,uBAAK,sBAAMuB,WAAW,OAAU,CAC5B,UAAa,gBADZ,iL,mNAcT1B,EAAW2B,gBAAiB","file":"component---src-components-collapsible-collapsible-mdx-438960f21100ef723eee.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Collapsible } from './Collapsible';\nimport { Box } from '../Box';\nimport { Toggle } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"collapsible\"\n    }}>{`Collapsible`}</h1>\n    <p>{`Component to reveal and hide content`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"uncontrolled\"\n    }}>{`Uncontrolled`}</h3>\n    <Playground __position={0} __code={'<Collapsible title=\\\"Toggle\\\" initialIsOpen={false}>\\n  <Box\\n    marginVertical={16}\\n    justifyContent=\\\"center\\\"\\n    alignItems=\\\"center\\\"\\n    height={300}\\n    backgroundColor=\\\"#67c6bb\\\"\\n  />\\n</Collapsible>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Collapsible,\n      Box,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Collapsible title=\"Toggle\" initialIsOpen={false} mdxType=\"Collapsible\">\n    <Box marginVertical={16} justifyContent=\"center\" alignItems=\"center\" height={300} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />\n  </Collapsible>\n    </Playground>\n    <h3 {...{\n      \"id\": \"controlled\"\n    }}>{`Controlled`}</h3>\n    <Playground __position={1} __code={'<Toggle initial={false}>\\n  {({ on, toggle }) => (\\n    <Collapsible\\n      title={on ? \\'Close collapsible\\' : \\'Open collapsible\\'}\\n      isOpen={on}\\n      onOpen={toggle}\\n      onClose={toggle}\\n    >\\n      <Box\\n        marginVertical={16}\\n        justifyContent=\\\"center\\\"\\n        alignItems=\\\"center\\\"\\n        height={300}\\n        backgroundColor=\\\"#67c6bb\\\"\\n      />\\n    </Collapsible>\\n  )}\\n</Toggle>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Collapsible,\n      Box,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle initial={false} mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <Collapsible title={on ? 'Close collapsible' : 'Open collapsible'} isOpen={on} onOpen={toggle} onClose={toggle} mdxType=\"Collapsible\">\n        <Box marginVertical={16} justifyContent=\"center\" alignItems=\"center\" height={300} backgroundColor=\"#67c6bb\" mdxType=\"Box\" />\n      </Collapsible>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Collapsible} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"overrides\"\n    }}>{`Overrides`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface CollapsibleOverrides {\n  Touchable: TouchableProps;\n  Title: TitleProps;\n  IconOpen: IconProps;\n  IconClose: IconProps;\n  Content: ContentProps;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}