{"version":3,"sources":["webpack:///../src/components/ProgressBar/ProgressBar.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","ProgressBar","Box","Counter","State","initial","value","state","setState","percent","size","onValueChange","min","max","step","of","isMDXComponent"],"mappings":"8eAWO,IAAMA,EAAe,Q,4NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qUAAwUC,QAAS,CAClXJ,QACAH,kBACAQ,eACAC,UACAC,gBACAC,QACAC,YACAC,WACCT,QAAQ,cACb,YAAC,IAAD,CAAOU,QAAS,CACVC,MAAO,GACNX,QAAQ,UACZ,gBACKY,EADL,EACKA,MACAC,EAFL,EAEKA,SAFL,OAGS,YAAC,IAAD,CAAKb,QAAQ,OACnB,YAAC,IAAD,CAAac,QAASF,EAAMD,MAAOI,KAAK,QAAQf,QAAQ,gBACxD,YAAC,IAAD,CAASW,MAAOC,EAAMD,MAAOK,cAAe,SAAAL,GAAK,OAAIE,EAAS,CAC1DF,WACEM,IAAK,EAAGC,IAAK,IAAKC,KAAM,GAAInB,QAAQ,iBAI9C,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOoB,GAAId,IAAaN,QAAQ,W,mNAKpCH,EAAWwB,gBAAiB","file":"component---src-components-progress-bar-progress-bar-mdx-5f8d71fdcac59433dd1d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { ProgressBar } from './ProgressBar';\nimport { Box } from '../Box';\nimport { Counter } from '../Counter';\nimport { State } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: 0 }}>\\n  {({ state, setState }) => (\\n    <Box>\\n      <ProgressBar percent={state.value} size=\\\"large\\\" />\\n      <Counter\\n        value={state.value}\\n        onValueChange={value => setState({ value })}\\n        min={0}\\n        max={100}\\n        step={10}\\n      />\\n    </Box>\\n  )}\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ProgressBar,\n      Box,\n      Counter,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Box mdxType=\"Box\">\n        <ProgressBar percent={state.value} size=\"large\" mdxType=\"ProgressBar\" />\n        <Counter value={state.value} onValueChange={value => setState({\n            value\n          })} min={0} max={100} step={10} mdxType=\"Counter\" />\n      </Box>}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ProgressBar} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}