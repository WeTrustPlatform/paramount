{"version":3,"sources":["webpack:///../src/components/Inputs/TextInput.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","TextInput","Box","Icon","State","initial","value","state","setState","placeholder","size","onValueChange","isInvalid","isClearable","onClear","console","log","of","isMDXComponent"],"mappings":"6eAWO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,aADR,aAGA,gDAA+B,0BAAYC,WAAW,KAAvB,cAC/B,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iXAAsXC,QAAS,CAChaL,QACAH,kBACAS,eACAC,UACAC,cACAC,QACAC,SACAC,WACCV,QAAQ,cACb,YAAC,IAAD,CAAOW,QAAS,CACVC,MAAO,IACNZ,QAAQ,UACZ,gBACKa,EADL,EACKA,MACAC,EAFL,EAEKA,SAFL,OAGS,YAAC,IAAD,CAAWF,MAAOC,EAAMD,MAAOG,YAAY,cAAcC,KAAK,QAAQC,cAAe,SAAAL,GAAK,OAAIE,EAAS,CAC3GF,WACEM,WAAW,EAAOC,aAAW,EAACC,QAAS,kBAAMC,QAAQC,IAAI,aAC7DtB,QAAQ,kBAGZ,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOuB,GAAIhB,IAAWP,QAAQ,W,4MAKlCH,EAAW2B,gBAAiB","file":"component---src-components-inputs-text-input-mdx-1f58f1c9a121a4dbfe14.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { TextInput } from './TextInput';\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport { State } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`Composes React Native's `}<inlineCode parentName=\"p\">{`TextInput`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'\\' }}>\\n  {({ state, setState }) => (\\n    <TextInput\\n      value={state.value}\\n      placeholder=\\\"Placeholder\\\"\\n      size=\\\"large\\\"\\n      onValueChange={value => setState({ value })}\\n      isInvalid={false}\\n      isClearable\\n      onClear={() => console.log(\\'Cleared!\\')} // Only triggered with `isClearable`\\n    />\\n  )}\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      TextInput,\n      Box,\n      Icon,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: ''\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <TextInput value={state.value} placeholder=\"Placeholder\" size=\"large\" onValueChange={value => setState({\n          value\n        })} isInvalid={false} isClearable onClear={() => console.log('Cleared!')} // Only triggered with `isClearable`\n        mdxType=\"TextInput\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={TextInput} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}