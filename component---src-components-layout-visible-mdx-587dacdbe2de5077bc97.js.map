{"version":3,"sources":["webpack:///../src/components/Layout/Visible.tsx","webpack:///../src/components/Layout/Visible.mdx"],"names":["Visible","props","children","config","currentScreenSize","visibles","xsmall","small","medium","large","xlarge","combineConfig","currentScreenSizeIndex","ASC_ORDER_SCREEN_SIZES","indexOf","find","val","index","isVisible","useLayout","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","Props","LayoutProvider","Box","Text","backgroundColor","height","align","color","of","isMDXComponent"],"mappings":"yzBAqCA,IAiBaA,EAAU,SAACC,GAAwB,IACtCC,EAAwBD,EAAxBC,SAGR,OAfgB,SAACC,EAAuBC,GACxC,IAAMC,EAPc,SAACF,GAGrB,MAAO,CAF0CA,EAAzCG,OAAyCH,EAAjCI,MAAiCJ,EAA1BK,OAA0BL,EAAlBM,MAAkBN,EAAXO,QAMrBC,CAAcR,GACzBS,EAAyBC,IAAuBC,QACpDV,GAGF,QAASC,EAASU,MAChB,SAACC,EAAKC,GAAN,OAAgBA,IAAUL,KAA4BI,KAQpDE,C,oIAJ0C,CACdjB,EADc,cAEhBkB,cAAtBf,mBAEyC,8BAAGF,GAE7C,qC,ygBCjDF,IAAMkB,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGxB,E,oIACF,mBACD,OAAO,YAACqB,EAAD,KAAeD,EAAiBpB,EAAhC,CAAuCwB,WAAYA,EAAYC,QAAQ,cAK5E,iBAAQ,CACN,GAAM,WADR,WAGA,4FACA,iCAAgB,0BAAYC,WAAW,KAAvB,UAAhB,mBACA,yFACA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ikBAAolBC,QAAS,CAC9nB7B,QACAsB,kBACAQ,eACAC,UACAhC,UACAiC,mBACAC,QACAC,UACCT,QAAQ,cACb,YAACO,EAAA,EAAD,CAAgBP,QAAQ,kBACtB,YAAC,EAAD,CAASjB,OAAK,EAACC,QAAM,EAACgB,QAAQ,WAC5B,YAACQ,EAAA,EAAD,CAAKE,gBAAgB,UAAUC,OAAQ,GAAIX,QAAQ,OACjD,YAACS,EAAA,EAAD,CAAMG,MAAM,SAASC,MAAM,QAAQb,QAAQ,QAA3C,uBAKJ,YAAC,EAAD,CAASlB,QAAM,EAACkB,QAAQ,WACtB,YAACQ,EAAA,EAAD,CAAKE,gBAAgB,UAAUC,OAAQ,GAAIX,QAAQ,OACjD,YAACS,EAAA,EAAD,CAAMG,MAAM,SAASC,MAAM,QAAQb,QAAQ,QAA3C,YAKJ,YAAC,EAAD,CAASpB,QAAM,EAACC,OAAK,EAACmB,QAAQ,WAC5B,YAACQ,EAAA,EAAD,CAAKE,gBAAgB,UAAUC,OAAQ,GAAIX,QAAQ,OACjD,YAACS,EAAA,EAAD,CAAMG,MAAM,SAASC,MAAM,QAAQb,QAAQ,QAA3C,uBAOJ,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOc,GAAIxC,EAAS0B,QAAQ,W,0MAKhCF,EAAWiB,gBAAiB","file":"component---src-components-layout-visible-mdx-587dacdbe2de5077bc97.js","sourcesContent":["import React from 'react';\n\nimport { ScreenSize } from '../../theme';\n\nimport { ASC_ORDER_SCREEN_SIZES, useLayout } from './LayoutProvider';\n\nexport interface VisibleConfig {\n  /**\n   * When true, render children only when the screen size is xsmall\n   */\n  xsmall?: boolean;\n\n  /**\n   * When true, render children only when the screen size is small\n   */\n  small?: boolean;\n\n  /**\n   * When true, render children only when the screen size is medium\n   */\n  medium?: boolean;\n\n  /**\n   * When true, render children only when the screen size is large\n   */\n  large?: boolean;\n\n  /**\n   * When true, render children only when the screen size is xlarge\n   */\n  xlarge?: boolean;\n}\n\nexport interface VisibleProps extends VisibleConfig {\n  children?: React.ReactNode;\n}\n\nconst combineConfig = (config: VisibleConfig) => {\n  const { xsmall, small, medium, large, xlarge } = config;\n\n  return [xsmall, small, medium, large, xlarge];\n};\n\nconst isVisible = (config: VisibleConfig, currentScreenSize: ScreenSize) => {\n  const visibles = combineConfig(config);\n  const currentScreenSizeIndex = ASC_ORDER_SCREEN_SIZES.indexOf(\n    currentScreenSize,\n  );\n\n  return !!visibles.find(\n    (val, index) => index === currentScreenSizeIndex && !!val,\n  );\n};\n\nexport const Visible = (props: VisibleProps) => {\n  const { children, ...config } = props;\n  const { currentScreenSize } = useLayout();\n\n  if (isVisible(config, currentScreenSize)) return <>{children}</>;\n\n  return <></>;\n};\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/WeTrustPlatform/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Visible } from './Visible';\nimport { LayoutProvider } from './LayoutProvider';\nimport { Box } from '../Box';\nimport { Text } from '../Typography';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"visible\"\n    }}>{`Visible`}</h1>\n    <p>{`Renders children when the current screen size matches defined sizes`}</p>\n    <p>{`Refer to `}<inlineCode parentName=\"p\">{`Layout`}</inlineCode>{` docs for setup`}</p>\n    <p>{`Resize the window to see different blocks appearing responsively`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<LayoutProvider>\\n  <Visible large xlarge>\\n    <Box backgroundColor=\\\"#67c6bb\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Large and greater\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible medium>\\n    <Box backgroundColor=\\\"#1ca5F7\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Medium\\n      </Text>\\n    </Box>\\n  </Visible>\\n  <Visible xsmall small>\\n    <Box backgroundColor=\\\"#d26557\\\" height={48}>\\n      <Text align=\\\"center\\\" color=\\\"white\\\">\\n        Small and lower\\n      </Text>\\n    </Box>\\n  </Visible>\\n</LayoutProvider>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Visible,\n      LayoutProvider,\n      Box,\n      Text\n    }} mdxType=\"Playground\">\n  <LayoutProvider mdxType=\"LayoutProvider\">\n    <Visible large xlarge mdxType=\"Visible\">\n      <Box backgroundColor=\"#67c6bb\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Large and greater\n        </Text>\n      </Box>\n    </Visible>\n    <Visible medium mdxType=\"Visible\">\n      <Box backgroundColor=\"#1ca5F7\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Medium\n        </Text>\n      </Box>\n    </Visible>\n    <Visible xsmall small mdxType=\"Visible\">\n      <Box backgroundColor=\"#d26557\" height={48} mdxType=\"Box\">\n        <Text align=\"center\" color=\"white\" mdxType=\"Text\">\n          Small and lower\n        </Text>\n      </Box>\n    </Visible>\n  </LayoutProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Visible} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}