{"version":3,"sources":["webpack:///../src/components/Drawer/Drawer.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Drawer","Box","Button","Text","Toggle","on","toggle","onPress","title","space","isVisible","onRequestClose","width","height","backgroundColor","position","of","isMDXComponent"],"mappings":"qfAYO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,UADR,UAGA,6DACA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+xCAA80CC,QAAS,CACx3CJ,QACAH,kBACAQ,eACAC,UACAC,WACAC,QACAC,WACAC,SACAC,YACCV,QAAQ,cACb,YAAC,IAAD,CAAQA,QAAQ,WACb,gBACKW,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,gCACN,YAAC,IAAD,CAAQC,QAASD,EAAQE,MAAM,qBAAqBd,QAAQ,WAC5D,YAAC,IAAD,CAAQe,MAAM,MAAMC,UAAWL,EAAIM,eAAgBL,EAAQZ,QAAQ,UACjE,YAAC,IAAD,CAAKkB,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQpB,QAAQ,aAIxE,YAAC,IAAD,CAAQA,QAAQ,WACb,gBACKW,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,gCACN,YAAC,IAAD,CAAQC,QAASD,EAAQE,MAAM,kBAAkBd,QAAQ,WACzD,YAAC,IAAD,CAAQe,MAAM,MAAMM,SAAS,MAAML,UAAWL,EAAIM,eAAgBL,EAAQZ,QAAQ,UAChF,YAAC,IAAD,CAAKkB,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQpB,QAAQ,aAIxE,YAAC,IAAD,CAAQA,QAAQ,WACb,gBACKW,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,gCACN,YAAC,IAAD,CAAQC,QAASD,EAAQE,MAAM,mBAAmBd,QAAQ,WAC1D,YAAC,IAAD,CAAQe,MAAM,MAAMM,SAAS,OAAOL,UAAWL,EAAIM,eAAgBL,EAAQZ,QAAQ,UACjF,YAAC,IAAD,CAAKkB,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQpB,QAAQ,aAIxE,YAAC,IAAD,CAAQA,QAAQ,WACb,gBACKW,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,gCACN,YAAC,IAAD,CAAQC,QAASD,EAAQE,MAAM,oBAAoBd,QAAQ,WAC3D,YAAC,IAAD,CAAQe,MAAM,MAAMM,SAAS,QAAQL,UAAWL,EAAIM,eAAgBL,EAAQZ,QAAQ,UAClF,YAAC,IAAD,CAAKkB,MAAM,OAAOC,OAAO,OAAOC,gBAAgB,QAAQpB,QAAQ,cAKtE,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOsB,GAAIhB,IAAQN,QAAQ,W,yMAK/BH,EAAW0B,gBAAiB","file":"component---src-components-drawer-drawer-mdx-903d54e8a1289845d59d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Drawer } from './Drawer';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Text } from '../Typography';\nimport { Toggle } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"drawer\"\n    }}>{`Drawer`}</h1>\n    <p>{`Slides a panel from defined position`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open bottom drawer\\\" />\\n      <Drawer space=\\\"30%\\\" isVisible={on} onRequestClose={toggle}>\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open top drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"top\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open left drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"left\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>\\n<Toggle>\\n  {({ on, toggle }) => (\\n    <>\\n      <Button onPress={toggle} title=\\\"Open right drawer\\\" />\\n      <Drawer\\n        space=\\\"30%\\\"\\n        position=\\\"right\\\"\\n        isVisible={on}\\n        onRequestClose={toggle}\\n      >\\n        <Box width=\\\"100%\\\" height=\\\"100%\\\" backgroundColor=\\\"white\\\" />\\n      </Drawer>\\n    </>\\n  )}\\n</Toggle>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Drawer,\n      Box,\n      Button,\n      Text,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open bottom drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open top drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"top\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open left drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"left\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n  <Toggle mdxType=\"Toggle\">\n    {({\n          on,\n          toggle\n        }) => <>\n        <Button onPress={toggle} title=\"Open right drawer\" mdxType=\"Button\" />\n        <Drawer space=\"30%\" position=\"right\" isVisible={on} onRequestClose={toggle} mdxType=\"Drawer\">\n          <Box width=\"100%\" height=\"100%\" backgroundColor=\"white\" mdxType=\"Box\" />\n        </Drawer>\n      </>}\n  </Toggle>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Drawer} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}