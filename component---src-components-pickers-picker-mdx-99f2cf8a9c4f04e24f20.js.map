{"version":3,"sources":["webpack:///../src/components/Pickers/Picker.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Picker","State","initial","value","state","setState","onValueChange","tab","data","Array","fill","map","v","i","of","isMDXComponent"],"mappings":"meASO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,UADR,UAGA,mEAAkD,0BAAYC,WAAW,KAAvB,OAAlD,sDAAwJ,0BAAYA,WAAW,KAAvB,YAAxJ,QAAqN,0BAAYA,WAAW,KAAvB,WAArN,gBACA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4RAA+RC,QAAS,CACzUL,QACAH,kBACAS,eACAC,UACAC,WACAC,WACCR,QAAQ,cACb,YAAC,IAAD,CAAOS,QAAS,CACVC,MAAO,SACNV,QAAQ,UACZ,gBACKW,EADL,EACKA,MACAC,EAFL,EAEKA,SAFL,OAGS,YAAC,IAAD,CAAQF,MAAOC,EAAMD,MAAOG,cAAe,SAAAC,GAAG,OAAIF,EAAS,CAC/DF,MAAOI,KACLC,KAAM,IAAIC,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC5CV,MAAO,QAAOU,EAAI,OACfpB,QAAQ,eAGjB,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOqB,GAAId,IAAQP,QAAQ,W,0MAK/BH,EAAWyB,gBAAiB","file":"component---src-components-pickers-picker-mdx-99f2cf8a9c4f04e24f20.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Picker } from './Picker';\nimport { State } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"picker\"\n    }}>{`Picker`}</h1>\n    <p>{`You can use a custom component in place of `}<inlineCode parentName=\"p\">{`Tab`}</inlineCode>{` component, though keep in mind you need to manage `}<inlineCode parentName=\"p\">{`isActive`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onPress`}</inlineCode>{` by yourself`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: \\'Tab 1\\' }}>\\n  {({ state, setState }) => (\\n    <Picker\\n      value={state.value}\\n      onValueChange={tab => setState({ value: tab })}\\n      data={new Array(4).fill(0).map((v, i) => ({\\n        value: `Tab ${i + 1}`,\\n      }))}\\n    />\\n  )}\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Picker,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 'Tab 1'\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Picker value={state.value} onValueChange={tab => setState({\n          value: tab\n        })} data={new Array(4).fill(0).map((v, i) => ({\n          value: `Tab ${i + 1}`\n        }))} mdxType=\"Picker\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Picker} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}