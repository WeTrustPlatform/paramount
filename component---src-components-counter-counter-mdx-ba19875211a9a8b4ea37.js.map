{"version":3,"sources":["webpack:///../src/components/Counter/Counter.mdx","webpack:///../src/components/Helpers/State.tsx","webpack:///../src/components/Counter/Counter.tsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Counter","State","initial","value","state","setState","onValueChange","of","isMDXComponent","children","React","useState","useCallback","newState","step","max","min","overrides","theme","useTheme","isDecrementDisabled","isIncrementDisabled","handleIncrement","handleDecrement","getOverrides","StyledRoot","dlv","Root","rootProps","StyledTouchable","isDisabled","onPress","Decrement","decrementProps","Increment","incrementProps","StyledCount","Count","countProps","StyledIconPlus","IconPlus","iconPlusProps","StyledIconMinus","IconMinus","iconMinusProps","style","viewProps","display","flexDirection","alignItems","textProps","align","paddingHorizontal","minWidth","getStyle","touchableProps","borderColor","colors","border","primary","borderRadius","borderWidth","height","justifyContent","width","default","disabled","undefined","StyledIcon","name","iconProps","size","color","text","muted"],"mappings":"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","file":"component---src-components-counter-counter-mdx-ba19875211a9a8b4ea37.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/WeTrustPlatform/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Counter } from './Counter';\nimport { State } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"counter\"\n    }}>{`Counter`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<State initial={{ value: 0 }}>\\n  {({ state, setState }) => (\\n    <Counter\\n      value={state.value}\\n      onValueChange={value => setState({ value })}\\n    />\\n  )}\\n</State>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Counter,\n      State\n    }} mdxType=\"Playground\">\n  <State initial={{\n        value: 0\n      }} mdxType=\"State\">\n    {({\n          state,\n          setState\n        }) => <Counter value={state.value} onValueChange={value => setState({\n          value\n        })} mdxType=\"Counter\" />}\n  </State>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Counter} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\n\nexport interface StateRenderProps<TState = any> {\n  state: TState;\n  setState: (state: TState) => void;\n}\n\nexport interface StateProps<TState = any> {\n  initial?: TState;\n  children: (props: StateRenderProps) => JSX.Element;\n}\n\nexport const State = (props: StateProps) => {\n  const { children, initial = false } = props;\n  const [state, setState] = React.useState(initial);\n\n  const handleState = React.useCallback(newState => {\n    setState(newState);\n  }, []);\n\n  return children({ state, setState: handleState });\n};\n","import dlv from 'dlv';\nimport React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\n\nimport { useTheme } from '../../theme';\nimport { getOverrides, getStyle, WithOverrides } from '../../utils/Overrides';\nimport { Icon, IconProps } from '../Icon';\nimport { Text, TextProps } from '../Typography';\n\ninterface CounterBaseProps {\n  /**\n   * Count to be displayed.\n   */\n  value?: number;\n\n  /**\n   * Minimum value for the counter. Upon reaching the limit, it will disable decrement button.\n   */\n  min?: number;\n\n  /**\n   * Maximum value for the counter. Upon reaching the limit, it will disable increment button.\n   */\n  max?: number;\n\n  /**\n   * Interval between counts\n   */\n  step?: number;\n\n  /**\n   * Called when either buttons are pressed.\n   */\n  onValueChange?: (value: number) => void;\n}\n\nexport interface CounterOverrides {\n  Root: RootProps;\n  Increment: TouchableProps;\n  Decrement: TouchableProps;\n  Count: CountProps;\n  IconPlus: CounterIconProps;\n  IconMinus: CounterIconProps;\n}\n\nexport interface CounterProps\n  extends WithOverrides<CounterBaseProps, CounterOverrides> {}\n\nexport const Counter = (props: CounterProps) => {\n  const {\n    value = 0,\n    step = 1,\n    max,\n    min,\n    onValueChange = () => {\n      return;\n    },\n    overrides = {},\n  } = props;\n  const theme = useTheme();\n\n  const isDecrementDisabled = min === value;\n  const isIncrementDisabled = max === value;\n\n  const handleIncrement = React.useCallback(() => {\n    onValueChange(value + step);\n  }, [onValueChange, step, value]);\n\n  const handleDecrement = React.useCallback(() => {\n    onValueChange(value - step);\n  }, [onValueChange, step, value]);\n\n  const [Root, rootProps] = getOverrides(\n    StyledRoot,\n    props,\n    {},\n    dlv(theme, 'overrides.Counter.Root'),\n    overrides.Root,\n  );\n  const [Decrement, decrementProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      isDisabled: isDecrementDisabled,\n      onPress: handleDecrement,\n    },\n    dlv(theme, 'overrides.Counter.Decrement'),\n    overrides.Decrement,\n  );\n  const [Increment, incrementProps] = getOverrides(\n    StyledTouchable,\n    props,\n    {\n      isDisabled: isIncrementDisabled,\n      onPress: handleIncrement,\n    },\n    dlv(theme, 'overrides.Counter.Increment'),\n    overrides.Increment,\n  );\n  const [Count, countProps] = getOverrides(\n    StyledCount,\n    props,\n    { value },\n    dlv(theme, 'overrides.Counter.Count'),\n    overrides.Count,\n  );\n  const [IconPlus, iconPlusProps] = getOverrides(\n    StyledIconPlus,\n    props,\n    { isDisabled: isIncrementDisabled },\n    dlv(theme, 'overrides.Counter.IconPlus'),\n    overrides.IconPlus,\n  );\n  const [IconMinus, iconMinusProps] = getOverrides(\n    StyledIconMinus,\n    props,\n    { isDisabled: isDecrementDisabled },\n    dlv(theme, 'overrides.Counter.IconMinus'),\n    overrides.IconMinus,\n  );\n\n  return (\n    <Root {...rootProps}>\n      <Decrement {...decrementProps}>\n        <IconMinus {...iconMinusProps} />\n      </Decrement>\n      <Count {...countProps} />\n      <Increment {...incrementProps}>\n        <IconPlus {...iconPlusProps} />\n      </Increment>\n    </Root>\n  );\n};\n\ninterface PropsWithChildren {\n  children?: React.ReactNode;\n}\n\ninterface RootProps extends ViewProps, PropsWithChildren {}\n\nconst StyledRoot = (props: RootProps) => {\n  const { children, style, ...viewProps } = props;\n\n  return (\n    <View\n      style={[\n        {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n        },\n        style,\n      ]}\n      {...viewProps}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface CountProps extends TextProps {\n  value: number;\n}\n\nconst StyledCount = (props: CountProps) => {\n  const { value, style, ...textProps } = props;\n\n  return (\n    <Text\n      align=\"center\"\n      style={[{ paddingHorizontal: 16, minWidth: 56 }, getStyle(props, style)]}\n      {...textProps}\n    >\n      {value}\n    </Text>\n  );\n};\n\ninterface TouchableProps extends TouchableOpacityProps, PropsWithChildren {\n  isDisabled: boolean;\n}\n\nconst StyledTouchable = (props: TouchableProps) => {\n  const {\n    children,\n    style,\n    isDisabled = false,\n    onPress,\n    ...touchableProps\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          alignItems: 'center',\n          borderColor: theme.colors.border.primary,\n          borderRadius: 999,\n          borderWidth: 1,\n          display: 'flex',\n          height: 40,\n          justifyContent: 'center',\n          width: 40,\n          ...(isDisabled && { borderColor: theme.colors.border.default }),\n        },\n        style,\n      ]}\n      disabled={isDisabled}\n      onPress={!isDisabled ? onPress : undefined}\n      {...touchableProps}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface StyledIconProps extends IconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIcon = (props: StyledIconProps) => {\n  const { isDisabled, name, ...iconProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Icon\n      name={name}\n      size=\"xsmall\"\n      color={isDisabled ? theme.colors.text.muted : theme.colors.text.primary}\n      {...iconProps}\n    />\n  );\n};\n\ninterface CounterIconProps {\n  isDisabled: boolean;\n}\n\nconst StyledIconPlus = (props: CounterIconProps) => (\n  <StyledIcon name=\"plus\" {...props} />\n);\nconst StyledIconMinus = (props: CounterIconProps) => (\n  <StyledIcon name=\"minus\" {...props} />\n);\n"],"sourceRoot":""}