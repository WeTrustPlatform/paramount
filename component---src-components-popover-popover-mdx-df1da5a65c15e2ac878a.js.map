{"version":3,"sources":["webpack:///../src/components/Popover/Popover.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Popover","Box","Text","Button","Toggle","height","on","toggle","isVisible","position","content","width","appearance","color","onPress","title","of","isMDXComponent"],"mappings":"qfAYO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,WADR,WAGA,iCAAgB,0BAAYC,WAAW,KAAvB,eAChB,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ivBAA4vBC,QAAS,CACtyBL,QACAH,kBACAS,eACAC,UACAC,YACAC,QACAC,SACAC,WACAC,YACCX,QAAQ,cACb,YAAC,IAAD,CAAKY,OAAQ,IAAKZ,QAAQ,OACxB,YAAC,IAAD,CAAQA,QAAQ,WACb,gBACKa,EADL,EACKA,GACAC,EAFL,EAEKA,OAFL,OAGS,YAAC,IAAD,CAASC,UAAWF,EAAIG,SAAS,SAASC,QAAS,YAAC,IAAD,CAAKC,MAAO,IAAKN,OAAQ,IAAKZ,QAAQ,OAC3F,YAAC,IAAD,CAAMA,QAAQ,QAAd,sKAKA,YAAC,IAAD,CAAQmB,WAAW,UAAUC,MAAM,SAASC,QAASP,EAAQQ,MAAM,gBAAgBtB,QAAQ,YACrFA,QAAQ,WAClB,YAAC,IAAD,CAAQqB,QAASP,EAAQQ,MAAM,eAAetB,QAAQ,iBAK5D,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOuB,GAAIhB,IAASP,QAAQ,W,2MAKhCH,EAAW2B,gBAAiB","file":"component---src-components-popover-popover-mdx-df1da5a65c15e2ac878a.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paramount/paramount/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Popover } from './Popover';\nimport { Box } from '../Box';\nimport { Text } from '../Typography';\nimport { Button } from '../Button';\nimport { Toggle } from '../Helpers';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"popover\"\n    }}>{`Popover`}</h1>\n    <p>{`Composes `}<inlineCode parentName=\"p\">{`Positioner`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={0} __code={'<Box height={250}>\\n  <Toggle>\\n    {({ on, toggle }) => (\\n      <Popover\\n        isVisible={on}\\n        position=\\\"bottom\\\"\\n        content={\\n          <Box width={200} height={200}>\\n            <Text>\\n              Due to variety and complexity involved in detecting touch\\n              outside of the component on the web and in native, managing its\\n              open and closed state is in your control\\n            </Text>\\n            <Button\\n              appearance=\\\"outline\\\"\\n              color=\\\"danger\\\"\\n              onPress={toggle}\\n              title=\\\"Close popover\\\"\\n            />\\n          </Box>\\n        }\\n      >\\n        <Button onPress={toggle} title=\\\"Open popover\\\" />\\n      </Popover>\\n    )}\\n  </Toggle>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Popover,\n      Box,\n      Text,\n      Button,\n      Toggle\n    }} mdxType=\"Playground\">\n  <Box height={250} mdxType=\"Box\">\n    <Toggle mdxType=\"Toggle\">\n      {({\n            on,\n            toggle\n          }) => <Popover isVisible={on} position=\"bottom\" content={<Box width={200} height={200} mdxType=\"Box\">\n              <Text mdxType=\"Text\">\n                Due to variety and complexity involved in detecting touch\n                outside of the component on the web and in native, managing its\n                open and closed state is in your control\n              </Text>\n              <Button appearance=\"outline\" color=\"danger\" onPress={toggle} title=\"Close popover\" mdxType=\"Button\" />\n            </Box>} mdxType=\"Popover\">\n          <Button onPress={toggle} title=\"Open popover\" mdxType=\"Button\" />\n        </Popover>}\n    </Toggle>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Popover} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}